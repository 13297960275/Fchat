{"version":3,"sources":["webpack://fonlineconsultation/./node_modules/recorder-core/src/engine/beta-amr-engine.js","webpack://fonlineconsultation/./node_modules/recorder-core/src/extensions/waveview.js","webpack://fonlineconsultation/./node_modules/recorder-core/src/engine/mp3.js","webpack://fonlineconsultation/./node_modules/recorder-core/src/app-support/app.js","webpack://fonlineconsultation/./node_modules/recorder-core/src/app-support/app-ios-weixin-support.js","webpack://fonlineconsultation/./node_modules/recorder-core/src/app-support/app-native-support.js","webpack://fonlineconsultation/./node_modules/recorder-core/src/engine/beta-amr.js","webpack://fonlineconsultation/./node_modules/recorder-core/src/engine/wav.js","webpack://fonlineconsultation/./node_modules/recorder-core/src/engine/mp3-engine.js","webpack://fonlineconsultation/./node_modules/recorder-core/src/recorder-core.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT,sCAAsC;AACtC;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,eAAe,sFAAsF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gHAAgH;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,2BAA2B,qCAAqC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW;AACpC,qBAAqB;AACrB;AACA,+BAA+B,iEAAiE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,+BAA+B,iEAAiE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mCAAmC,UAAU;AAC7C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qIAAqI;AACrI,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qEAAqE,cAAc;AACnF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,mCAAmC,gCAAgC;AACnE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+CAA+C,yCAAyC;AACxF;AACA,kDAAkD;AAClD;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uCAAuC,uCAAuC;AAC9E,aAAa;AACb;AACA,uCAAuC,gEAAgE;AACvG,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB,wDAAwD,iCAAiC;AACzF,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,mBAAmB,YAAY,mBAAmB;AAClD;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,kCAAkC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,MAAM;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,+BAA+B;AAC/B,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iDAAiD,aAAa;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA,kDAAkD,aAAa;AAC/D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kDAAkD,oBAAoB;AACtE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yCAAyC,6DAA6D;AACtG,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kDAAkD,oBAAoB;AACtE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC;AAC1E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8CAA8C,aAAa;AAC3D;AACA,yCAAyC,kCAAkC;AAC3E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,sDAAsD,0BAA0B;AAChF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,8BAA8B,4CAA4C;AAC1E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kDAAkD,6BAA6B;AAC/E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA,8CAA8C,6BAA6B;AAC3E;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,SAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mCAAmC,YAAY;AAC/C;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,kCAAkC;AAClC,aAAa;AACb,kCAAkC;AAClC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA,iBAAiB;AACjB,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uDAAuD,IAAI;AAC3D;AACA,SAAS;AACT;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gCAAgC;AACnF;AACA,gFAAgF,gCAAgC;AAChH;AACA,qBAAqB;AACrB,wFAAwF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,gCAAgC;AACvF,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iBAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mDAAmD,oBAAoB;AACvE,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB;AACnB,uBAAuB;AACvB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,uDAAuD;AACvD,iBAAiB;AACjB;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF,iBAAiB;AACjB;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF,iBAAiB;AACjB;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,2EAA2E;AAC3E,iBAAiB,0BAA0B;AAC3C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc,cAAc,cAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uDAAuD;AACvD;AACA;AACA,uDAAuD;AACvD;AACA;AACA,uDAAuD;AACvD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,wDAAwD;AACxD;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA,4DAA4D;AAC5D;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,yBAAyB;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,aAAa;AACb;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA,oEAAoE;AACpE;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA,oEAAoE;AACpE;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA,oEAAoE;AACpE;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzaAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,kCAAkC;AAClC,iBAAiB;AACjB,kKAAkK;AAClK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gHAAgH;AACjI;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,gDAAgD;AAChD;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,yFAAyF;AACtG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,aAAa;AACb;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,aAAa;AACb;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,qEAAqE;AACriBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,aAAa;AACb;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,aAAa;AACb;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE,aAAa;AACb;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,iBAAiB;AACjB;AACA,iEAAiE;AACjE;AACA,oEAAoE;AACpE;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF,iBAAiB;AACjB;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbqBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjiBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA,4CAA4C;AAC5C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yHAAyH;AACzH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbyBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,iCAAiC;AACjC;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,iCAAiC;AACjC;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrkEAAkE;AAClE;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,wCAAwC;AACxC;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,I;;;;;;;ACnsvBD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,kCAAkC;AAC1E,uDAAuD,wBAAwB,+CAA+C,oBAAoB;;AAElJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,oBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,CAAC,I;;;;;;;AC3JD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,GAAG,uBAAuB;AAC1B;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oCAAoC;AAC7D,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oCAAoC;AAC7D,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,iBAAiB,UAAU,eAAe;AAC1C,aAAa,mBAAmB,0CAA0C;;AAE1E;AACA,kGAAkG,uBAAuB;;AAEzH;AACA;AACA,iDAAiD;AACjD,IAAI,QAAQ;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA,EAAE,SAAS;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,GAAG,YAAY;AACxB;AACA;AACA,eAAe,uBAAuB;AACtC,aAAa,OAAO,mBAAmB;AACvC,kBAAkB;AAClB;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;AAIA,CAAC,I;;;;;;;ACvaD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAwC;AAC5C,EAAE,mCAAO;AACT;AACA,GAAG;AAAA,oGAAC;AACJ;AACA,IAAI,KAAwB;AAC5B;AACA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;AACA,kGAAkG;;;AAGlG;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,oEAAoE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,wEAAwE;;AAE7E;AACA,MAAM,sEAAsE;AAC5E;AACA,OAAO,6EAA6E;AACpF,OAAO,iEAAiE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,KAAK,mDAAmD;;AAExD;AACA,MAAM,kEAAkE;AACxE,cAAc,yEAAyE,yBAAyB;AAChH;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,6BAA6B;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,4CAA4C;AAC7E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,CAAC,G;;;;;;;AC1nBD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,+BAA+B,gEAAgE;AAC/F,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,sBAAsB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6DAA6D;AAChF,GAAG;AACH;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC,I;;;;;;;ACnXD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,+GAA+G;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B,iBAAiB;AACjB,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA,CAAC,I;;;;;;;AC/GD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD,GAAG;AACH;;AAEA,CAAC,I;;;;;;;AChDD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH,gBAAgB,OAAO;AACvB;AACA;AACA;;;AAGA,+BAA+B,iBAAiB;AAChD;AACA,CAAC,I;;;;;;;ACnFD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA,KAAK;AACL,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,wDAAwD;AACxD;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,eAAe;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,cAAc;AACtC;AACA;;AAEA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,kCAAkC;AACzD,4CAA4C,gCAAgC;AAC5E;AACA;AACA;AACA;AACA;AACA,gDAAgD,gCAAgC;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;;AAEA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA,8BAA8B,uBAAuB;AACrD;AACA;;AAEA;AACA;AACA,kCAAkC,uBAAuB;AACzD;AACA;AACA;AACA;;AAEA,qBAAqB,0BAA0B;AAC/C;AACA;;AAEA,cAAc,uBAAuB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA,2BAA2B,YAAY;AACvC,oCAAoC,YAAY;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wCAAwC,eAAe;AACvD;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;;AAEA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,eAAe;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;;AAEA;;AAEA,gDAAgD;AAChD;AACA;;AAEA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,yDAAyD;AACzD;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AACliCAAiC;AACjC;AACA,wDAAwD;AACxD;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,UAAU;AACjC;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,0CAA0C;AACrE;AACA,4DAA4D;AAC5D;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB,uBAAuB;AAC/C;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;;AAEA,wBAAwB,QAAQ;AAChC,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iDAAiD,OAAO;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,0BAA0B,mBAAmB;AAC7C;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,sCAAsC;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sCAAsC;AAC7D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iBAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,wDAAwD;AACxD;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,uBAAuB;AACpD;AACA;AACA,6BAA6B,sBAAsB;AACnD;AACA;AACA,6BAA6B,uBAAuB;AACpD;AACA;AACA,6BAA6B,sBAAsB;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,kBAAkB;AACzC;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA,uBAAuB,WAAW;AAClC;AACA,uBAAuB,qBAAqB;AAC5C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;;AAEA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;;AAEA,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,0BAA0B;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,wBAAwB;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,+BAA+B,OAAO;AACtC,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,yBAAyB;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,aAAa;AACrD,8CAA8C,aAAa;AAC3D,kDAAkD,YAAY;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,YAAY;AACtE,4DAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,aAAa;AACzD,8CAA8C,aAAa;AAC3D;;AAEA,sEAAsE;AACtE,0CAA0C,aAAa;AACvD;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,wDAAwD;AACxD;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,qBAAqB;AAChD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,WAAW;AAC1C;AACA,mDAAmD,oBAAoB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA,oCAAoC,YAAY;AAChD,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,EAAE;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjyBAAyB,uBAAuB;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;;AAEA,4BAA4B,YAAY;AACxC;AACA;;AAEA,kDAAkD,0BAA0B;AAC5E;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;;AAEA;AACA,+CAA+C,uBAAuB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,kBAAkB;AACtC;AACA,wBAAwB,uBAAuB;AAC/C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,wDAAwD;AACxD;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjiBAAiB,OAAO;AACxkBAAkB,uBAAuB;AACzC,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,aAAa;AACb,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA,gDAAgD;AAChD;AACA,mDAAmD;AACnD;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB;AACjB,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mCAAmC;AACjE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,kBAAkB;;AAE1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;;AAEA;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA,wBAAwB,kBAAkB;AAC1C,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,uBAAuB;AAC/C;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,QAAQ;AAC5B,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;;AAEA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA,uBAAuB,2BAA2B;AAClD;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,wDAAwD;AACxD;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;;;AAGA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;;AAEA;AACA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,sBAAsB;AAC9C,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,sBAAsB;AAC9C,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,0BAA0B;AAClD,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;;AAEA;AACA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA,+BAA+B,8BAA8B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,OAAO;AAClC;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,gCAAgC;AAChC,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,wBAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,wBAAwB;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,YAAY;AAC5C,iCAAiC,iBAAiB;AAClD;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,iBAAiB;AAC9C;;AAEA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA,wCAAwC,YAAY;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;;AAEA,wBAAwB;AACxB,iCAAiC;AACjC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB,WAAW;AAClC;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;;AAEA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,WAAW;AAClC,iCAAiC,kBAAkB;AACnD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU,GAAG;AACtD;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACraAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,yBAAyB;AAChD;;AAEA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,yBAAyB;AAChD;;AAEA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzuCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD,+BAA+B,iBAAiB;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;;AAEA;AACA;;AAEA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;;AAEA;;AAEA,2DAA2D;AAC3D;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;;AAEA;AACA,uBAAuB,eAAe;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,CAAC,I;;;;;;;AC51bD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAwC;AAC5C,EAAE,mCAAO;AACT;AACA,GAAG;AAAA,oGAAC;AACJ;AACA,IAAI,KAAwB;AAC5B;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+GAA+G;;AAE/G;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,yCAAyC;AACzC;;AAEA;AACA;AACA,eAAe,OAAO,KAAK;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,gBAAgB;AAChB;AACA,EAAE;AACF;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI,6BAA6B;AACjC;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,6BAA6B;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,aAAa;AACb;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA,IAAI,KAAK;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA,8BAA8B;AAC9B;AACA,kBAAkB;AAClB,iBAAiB;;AAEjB,mBAAmB;AACnB,oBAAoB;AACpB,kBAAkB;AAClB,qBAAqB;;AAErB,qDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,0BAA0B;;;AAG1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C,yBAAyB;AACzB;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,IAAI,4CAA4C;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,gCAAgC,EAAE;AACnF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE;;AAElE;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,G","file":"fonlineconsultation.umd.1.js","sourcesContent":["/*\r\nResorder使用的 AMR格式解码编码器\r\nhttps://github.com/xiangyuecn/Recorder\r\n\r\n由此源码改动而来\r\nhttps://raw.githubusercontent.com/BenzLeung/benz-amr-recorder/462c6b91a67f7d9f42d0579fb5906fad9edb2c9d/src/amrnb.js\r\n*/\r\n(function () {\r\n\"use strict\";\r\n\r\n    var AMR = {\r\n        decode: (function (amr,True,False) {\r\n\t\t\tvar This=this;\r\n            if (String.fromCharCode.apply(null, amr.subarray(0, this.AMR_HEADER.length)) !== this.AMR_HEADER) {\r\n\t\t\t\tFalse(\"非AMR音频数据\");\r\n                return;\r\n            }\r\n            var decoder = this.Decoder_Interface_init();\r\n\t\t\t\r\n            var out = new Int16Array(Math.floor(amr.length / 6 * this.PCM_BUFFER_COUNT));\r\n            var buf = Module._malloc(this.AMR_BUFFER_COUNT);\r\n            var decodeInBuffer = new Uint8Array(Module.HEAPU8.buffer, buf, this.AMR_BUFFER_COUNT);\r\n            buf = Module._malloc(this.PCM_BUFFER_COUNT * 2);\r\n            var decodeOutBuffer = new Int16Array(Module.HEAPU8.buffer, buf, this.PCM_BUFFER_COUNT);\r\n            var inOffset = 6;\r\n            var outOffset = 0;\r\n\t\t\t\r\n\tvar run=function(){\r\n\t\tvar runLen=0;\r\n            while (inOffset + 1 < amr.length && outOffset + 1 < out.length) {\r\n                var size = This.SIZES[amr[inOffset] >> 3 & 15];\r\n                if (inOffset + size + 1 > amr.length) {\r\n                    break\r\n                }\r\n                decodeInBuffer.set(amr.subarray(inOffset, inOffset + size + 1));\r\n                This.Decoder_Interface_Decode(decoder, decodeInBuffer.byteOffset, decodeOutBuffer.byteOffset, 0);\r\n                if (outOffset + This.PCM_BUFFER_COUNT > out.length) {\r\n                    var newOut = new Int16Array(out.length * 2);\r\n                    newOut.set(out.subarray(0, outOffset));\r\n                    out = newOut\r\n                }\r\n                out.set(decodeOutBuffer, outOffset);\r\n                outOffset += This.PCM_BUFFER_COUNT;\r\n                inOffset += size + 1;\r\n\t\t\t\t\r\n\t\t\t\trunLen+=size+1;\r\n\t\t\t\tif(runLen>20000){\r\n\t\t\t\t\tsetTimeout(run);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n            }\r\n            Module._free(decodeInBuffer.byteOffset);\r\n            Module._free(decodeOutBuffer.byteOffset);\r\n            This.Decoder_Interface_exit(decoder);\r\n            True(out.subarray(0, outOffset));\r\n\t};\r\n\trun();\r\n\t\t\r\n        }),\r\n        encode: (function (pcm,True) {//pcm : 8000hz Int16Array\r\n\t\t\tvar This=this;\r\n            var mode = 7;//this.Mode.MR122 Mode 7 - AMR 12.2 - Encodes at 12.2kbit/s\r\n            var encoder = this.Encoder_Interface_init();\r\n\t\t\t\r\n            var buf = Module._malloc(this.PCM_BUFFER_COUNT * 2);\r\n            var encodeInBuffer = new Int16Array(Module.HEAPU8.buffer, buf, this.PCM_BUFFER_COUNT);\r\n            buf = Module._malloc(this.AMR_BUFFER_COUNT);\r\n            var encodeOutBuffer = new Uint8Array(Module.HEAPU8.buffer, buf, this.AMR_BUFFER_COUNT);\r\n\t\t\t\r\n            var blockSize = this.SIZES[mode] + 1;\r\n            var out = new Uint8Array(Math.ceil(pcm.length / this.PCM_BUFFER_COUNT * blockSize) + this.AMR_HEADER.length);\r\n            //out.set((new TextEncoder(\"utf-8\")).encode(this.AMR_HEADER));\r\n\t\t\t//fix 低版本没有TextEncoder\r\n\t\t\tfor(var ih=0;ih<this.AMR_HEADER.length;ih++){\r\n\t\t\t\tout[ih]=this.AMR_HEADER.charCodeAt(ih);\r\n\t\t\t};\r\n            var inOffset = 0;\r\n            var outOffset = this.AMR_HEADER.length;\r\n\t\t\t\r\n\tvar run=function(){\r\n\t\tvar runLen=0;\r\n            while (inOffset + This.PCM_BUFFER_COUNT < pcm.length && outOffset + blockSize < out.length) {\r\n                encodeInBuffer.set(pcm.subarray(inOffset, inOffset + This.PCM_BUFFER_COUNT));\r\n                var n = This.Encoder_Interface_Encode(encoder, mode, encodeInBuffer.byteOffset, encodeOutBuffer.byteOffset, 0);\r\n                if (n != blockSize) {\r\n                    console.error([n, blockSize]);\r\n                    break\r\n                }\r\n                out.set(encodeOutBuffer.subarray(0, n), outOffset);\r\n                inOffset += This.PCM_BUFFER_COUNT;\r\n                outOffset += n;\r\n\t\t\t\t\r\n\t\t\t\trunLen+=This.PCM_BUFFER_COUNT;\r\n\t\t\t\tif(runLen>40000){\r\n\t\t\t\t\tsetTimeout(run);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n            }\r\n            Module._free(encodeInBuffer.byteOffset);\r\n            Module._free(encodeOutBuffer.byteOffset);\r\n            This.Encoder_Interface_exit(encoder);\r\n            True(out.subarray(0, outOffset));\r\n\t};\r\n\trun();\r\n\t\t\r\n        }),\r\n        Decoder_Interface_init: (function () {\r\n            console.warn(\"Decoder_Interface_init not initialized.\");\r\n            return 0\r\n        }),\r\n        Decoder_Interface_exit: (function (state) {\r\n            console.warn(\"Decoder_Interface_exit not initialized.\")\r\n        }),\r\n        Decoder_Interface_Decode: (function (state, inBuffer, outBuffer, bfi) {\r\n            console.warn(\"Decoder_Interface_Decode not initialized.\")\r\n        }),\r\n        Encoder_Interface_init: (function (dtx) {\r\n            console.warn(\"Encoder_Interface_init not initialized.\");\r\n            return 0\r\n        }),\r\n        Encoder_Interface_exit: (function (state) {\r\n            console.warn(\"Encoder_Interface_exit not initialized.\")\r\n        }),\r\n        Encoder_Interface_Encode: (function (state, mode, speech, out, forceSpeech) {\r\n            console.warn(\"Encoder_Interface_Encode not initialized.\")\r\n        }),\r\n        Mode: {MR475: 0, MR515: 1, MR59: 2, MR67: 3, MR74: 4, MR795: 5, MR102: 6, MR122: 7, MRDTX: 8},\r\n        SIZES: [12, 13, 15, 17, 19, 20, 26, 31, 5, 6, 5, 5, 0, 0, 0, 0],\r\n        AMR_BUFFER_COUNT: 32,\r\n        PCM_BUFFER_COUNT: 160,\r\n        AMR_HEADER: \"#!AMR\\n\",\r\n        WAV_HEADER_SIZE: 44\r\n    };\r\n    var Module = {\r\n        canvas: {}, print: (function (text) {\r\n            console.log(text)\r\n        }), _main: (function () {\r\n            AMR.Decoder_Interface_init = Module._Decoder_Interface_init;\r\n            AMR.Decoder_Interface_exit = Module._Decoder_Interface_exit;\r\n            AMR.Decoder_Interface_Decode = Module._Decoder_Interface_Decode;\r\n            AMR.Encoder_Interface_init = Module._Encoder_Interface_init;\r\n            AMR.Encoder_Interface_exit = Module._Encoder_Interface_exit;\r\n            AMR.Encoder_Interface_Encode = Module._Encoder_Interface_Encode;\r\n            return 0\r\n        })\r\n    };\r\n    var Module;\r\n    if (!Module) Module = (typeof Module !== \"undefined\" ? Module : null) || {};\r\n    var moduleOverrides = {};\r\n    for (var key in Module) {\r\n        if (Module.hasOwnProperty(key)) {\r\n            moduleOverrides[key] = Module[key]\r\n        }\r\n    }\r\n    var ENVIRONMENT_IS_WEB = typeof window === \"object\";\r\n    var ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\r\n    var ENVIRONMENT_IS_NODE = false;/*typeof process === \"object\" && typeof require === \"function\" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;*/\r\n    var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\r\n    if (ENVIRONMENT_IS_SHELL) {\r\n        if (!Module[\"print\"]) Module[\"print\"] = print;\r\n        if (typeof printErr != \"undefined\") Module[\"printErr\"] = printErr;\r\n        if (typeof read != \"undefined\") {\r\n            Module[\"read\"] = read\r\n        } else {\r\n            Module[\"read\"] = function read() {\r\n                throw\"no read() available (jsc?)\"\r\n            }\r\n        }\r\n        Module[\"readBinary\"] = function readBinary(f) {\r\n            if (typeof readbuffer === \"function\") {\r\n                return new Uint8Array(readbuffer(f))\r\n            }\r\n            var data = read(f, \"binary\");\r\n            assert(typeof data === \"object\");\r\n            return data\r\n        };\r\n        if (typeof scriptArgs != \"undefined\") {\r\n            Module[\"arguments\"] = scriptArgs\r\n        } else if (typeof arguments != \"undefined\") {\r\n            Module[\"arguments\"] = arguments\r\n        }\r\n    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n        Module[\"read\"] = function read(url) {\r\n            var xhr = new XMLHttpRequest;\r\n            xhr.open(\"GET\", url, false);\r\n            xhr.send(null);\r\n            return xhr.responseText\r\n        };\r\n        if (typeof arguments != \"undefined\") {\r\n            Module[\"arguments\"] = arguments\r\n        }\r\n        if (typeof console !== \"undefined\") {\r\n            if (!Module[\"print\"]) Module[\"print\"] = function print(x) {\r\n                console.log(x)\r\n            };\r\n            if (!Module[\"printErr\"]) Module[\"printErr\"] = function printErr(x) {\r\n                console.log(x)\r\n            }\r\n        } else {\r\n            var TRY_USE_DUMP = false;\r\n            if (!Module[\"print\"]) Module[\"print\"] = TRY_USE_DUMP && typeof dump !== \"undefined\" ? (function (x) {\r\n                dump(x)\r\n            }) : (function (x) {\r\n            })\r\n        }\r\n        if (ENVIRONMENT_IS_WORKER) {\r\n            Module[\"load\"] = importScripts\r\n        }\r\n        if (typeof Module[\"setWindowTitle\"] === \"undefined\") {\r\n            Module[\"setWindowTitle\"] = (function (title) {\r\n                document.title = title\r\n            })\r\n        }\r\n    } else {\r\n        throw\"Unknown runtime environment. Where are we?\"\r\n    }\r\n\r\n    function globalEval(x) {\r\n        eval.call(null, x)\r\n    }\r\n\r\n    if (!Module[\"load\"] && Module[\"read\"]) {\r\n        Module[\"load\"] = function load(f) {\r\n            globalEval(Module[\"read\"](f))\r\n        }\r\n    }\r\n    if (!Module[\"print\"]) {\r\n        Module[\"print\"] = (function () {\r\n        })\r\n    }\r\n    if (!Module[\"printErr\"]) {\r\n        Module[\"printErr\"] = Module[\"print\"]\r\n    }\r\n    if (!Module[\"arguments\"]) {\r\n        Module[\"arguments\"] = []\r\n    }\r\n    if (!Module[\"thisProgram\"]) {\r\n        Module[\"thisProgram\"] = \"./this.program\"\r\n    }\r\n    Module.print = Module[\"print\"];\r\n    Module.printErr = Module[\"printErr\"];\r\n    Module[\"preRun\"] = [];\r\n    Module[\"postRun\"] = [];\r\n    for (var key in moduleOverrides) {\r\n        if (moduleOverrides.hasOwnProperty(key)) {\r\n            Module[key] = moduleOverrides[key]\r\n        }\r\n    }\r\n    var Runtime = {\r\n        setTempRet0: (function (value) {\r\n            tempRet0 = value\r\n        }), getTempRet0: (function () {\r\n            return tempRet0\r\n        }), stackSave: (function () {\r\n            return STACKTOP\r\n        }), stackRestore: (function (stackTop) {\r\n            STACKTOP = stackTop\r\n        }), getNativeTypeSize: (function (type) {\r\n            switch (type) {\r\n                case\"i1\":\r\n                case\"i8\":\r\n                    return 1;\r\n                case\"i16\":\r\n                    return 2;\r\n                case\"i32\":\r\n                    return 4;\r\n                case\"i64\":\r\n                    return 8;\r\n                case\"float\":\r\n                    return 4;\r\n                case\"double\":\r\n                    return 8;\r\n                default: {\r\n                    if (type[type.length - 1] === \"*\") {\r\n                        return Runtime.QUANTUM_SIZE\r\n                    } else if (type[0] === \"i\") {\r\n                        var bits = parseInt(type.substr(1));\r\n                        assert(bits % 8 === 0);\r\n                        return bits / 8\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                }\r\n            }\r\n        }), getNativeFieldSize: (function (type) {\r\n            return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE)\r\n        }), STACK_ALIGN: 16, prepVararg: (function (ptr, type) {\r\n            if (type === \"double\" || type === \"i64\") {\r\n                if (ptr & 7) {\r\n                    assert((ptr & 7) === 4);\r\n                    ptr += 4\r\n                }\r\n            } else {\r\n                assert((ptr & 3) === 0)\r\n            }\r\n            return ptr\r\n        }), getAlignSize: (function (type, size, vararg) {\r\n            if (!vararg && (type == \"i64\" || type == \"double\")) return 8;\r\n            if (!type) return Math.min(size, 8);\r\n            return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE)\r\n        }), dynCall: (function (sig, ptr, args) {\r\n            if (args && args.length) {\r\n                if (!args.splice) args = Array.prototype.slice.call(args);\r\n                args.splice(0, 0, ptr);\r\n                return Module[\"dynCall_\" + sig].apply(null, args)\r\n            } else {\r\n                return Module[\"dynCall_\" + sig].call(null, ptr)\r\n            }\r\n        }), functionPointers: [], addFunction: (function (func) {\r\n            for (var i = 0; i < Runtime.functionPointers.length; i++) {\r\n                if (!Runtime.functionPointers[i]) {\r\n                    Runtime.functionPointers[i] = func;\r\n                    return 2 * (1 + i)\r\n                }\r\n            }\r\n            throw\"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.\"\r\n        }), removeFunction: (function (index) {\r\n            Runtime.functionPointers[(index - 2) / 2] = null\r\n        }), warnOnce: (function (text) {\r\n            if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};\r\n            if (!Runtime.warnOnce.shown[text]) {\r\n                Runtime.warnOnce.shown[text] = 1;\r\n                Module.printErr(text)\r\n            }\r\n        }), funcWrappers: {}, getFuncWrapper: (function (func, sig) {\r\n            assert(sig);\r\n            if (!Runtime.funcWrappers[sig]) {\r\n                Runtime.funcWrappers[sig] = {}\r\n            }\r\n            var sigCache = Runtime.funcWrappers[sig];\r\n            if (!sigCache[func]) {\r\n                sigCache[func] = function dynCall_wrapper() {\r\n                    return Runtime.dynCall(sig, func, arguments)\r\n                }\r\n            }\r\n            return sigCache[func]\r\n        }), getCompilerSetting: (function (name) {\r\n            throw\"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work\"\r\n        }), stackAlloc: (function (size) {\r\n            var ret = STACKTOP;\r\n            STACKTOP = STACKTOP + size | 0;\r\n            STACKTOP = STACKTOP + 15 & -16;\r\n            return ret\r\n        }), staticAlloc: (function (size) {\r\n            var ret = STATICTOP;\r\n            STATICTOP = STATICTOP + size | 0;\r\n            STATICTOP = STATICTOP + 15 & -16;\r\n            return ret\r\n        }), dynamicAlloc: (function (size) {\r\n            var ret = DYNAMICTOP;\r\n            DYNAMICTOP = DYNAMICTOP + size | 0;\r\n            DYNAMICTOP = DYNAMICTOP + 15 & -16;\r\n            if (DYNAMICTOP >= TOTAL_MEMORY) {\r\n                var success = enlargeMemory();\r\n                if (!success) {\r\n                    DYNAMICTOP = ret;\r\n                    return 0\r\n                }\r\n            }\r\n            return ret\r\n        }), alignMemory: (function (size, quantum) {\r\n            var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);\r\n            return ret\r\n        }), makeBigInt: (function (low, high, unsigned) {\r\n            var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * +4294967296 : +(low >>> 0) + +(high | 0) * +4294967296;\r\n            return ret\r\n        }), GLOBAL_BASE: 8, QUANTUM_SIZE: 4, __dummy__: 0\r\n    };\r\n    Module[\"Runtime\"] = Runtime;\r\n    var __THREW__ = 0;\r\n    var ABORT = false;\r\n    var EXITSTATUS = 0;\r\n    var undef = 0;\r\n    var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS,\r\n        tempBigIntP, tempBigIntD, tempDouble, tempFloat;\r\n    var tempI64, tempI64b;\r\n    var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;\r\n\r\n    function assert(condition, text) {\r\n        if (!condition) {\r\n            abort(\"Assertion failed: \" + text)\r\n        }\r\n    }\r\n\r\n    var globalScope = this;\r\n\r\n    function setValue(ptr, value, type, noSafe) {\r\n        type = type || \"i8\";\r\n        if (type.charAt(type.length - 1) === \"*\") type = \"i32\";\r\n        switch (type) {\r\n            case\"i1\":\r\n                HEAP8[ptr >> 0] = value;\r\n                break;\r\n            case\"i8\":\r\n                HEAP8[ptr >> 0] = value;\r\n                break;\r\n            case\"i16\":\r\n                HEAP16[ptr >> 1] = value;\r\n                break;\r\n            case\"i32\":\r\n                HEAP32[ptr >> 2] = value;\r\n                break;\r\n            case\"i64\":\r\n                tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\r\n                break;\r\n            case\"float\":\r\n                HEAPF32[ptr >> 2] = value;\r\n                break;\r\n            case\"double\":\r\n                HEAPF64[ptr >> 3] = value;\r\n                break;\r\n            default:\r\n                abort(\"invalid type for setValue: \" + type)\r\n        }\r\n    }\r\n\r\n    Module[\"setValue\"] = setValue;\r\n\r\n    function getValue(ptr, type, noSafe) {\r\n        type = type || \"i8\";\r\n        if (type.charAt(type.length - 1) === \"*\") type = \"i32\";\r\n        switch (type) {\r\n            case\"i1\":\r\n                return HEAP8[ptr >> 0];\r\n            case\"i8\":\r\n                return HEAP8[ptr >> 0];\r\n            case\"i16\":\r\n                return HEAP16[ptr >> 1];\r\n            case\"i32\":\r\n                return HEAP32[ptr >> 2];\r\n            case\"i64\":\r\n                return HEAP32[ptr >> 2];\r\n            case\"float\":\r\n                return HEAPF32[ptr >> 2];\r\n            case\"double\":\r\n                return HEAPF64[ptr >> 3];\r\n            default:\r\n                abort(\"invalid type for setValue: \" + type)\r\n        }\r\n        return null\r\n    }\r\n\r\n    Module[\"getValue\"] = getValue;\r\n    var ALLOC_NORMAL = 0;\r\n    var ALLOC_STACK = 1;\r\n    var ALLOC_STATIC = 2;\r\n    var ALLOC_DYNAMIC = 3;\r\n    var ALLOC_NONE = 4;\r\n    Module[\"ALLOC_NORMAL\"] = ALLOC_NORMAL;\r\n    Module[\"ALLOC_STACK\"] = ALLOC_STACK;\r\n    Module[\"ALLOC_STATIC\"] = ALLOC_STATIC;\r\n    Module[\"ALLOC_DYNAMIC\"] = ALLOC_DYNAMIC;\r\n    Module[\"ALLOC_NONE\"] = ALLOC_NONE;\r\n\r\n    function allocate(slab, types, allocator, ptr) {\r\n        var zeroinit, size;\r\n        if (typeof slab === \"number\") {\r\n            zeroinit = true;\r\n            size = slab\r\n        } else {\r\n            zeroinit = false;\r\n            size = slab.length\r\n        }\r\n        var singleType = typeof types === \"string\" ? types : null;\r\n        var ret;\r\n        if (allocator == ALLOC_NONE) {\r\n            ret = ptr\r\n        } else {\r\n            ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length))\r\n        }\r\n        if (zeroinit) {\r\n            var ptr = ret, stop;\r\n            assert((ret & 3) == 0);\r\n            stop = ret + (size & ~3);\r\n            for (; ptr < stop; ptr += 4) {\r\n                HEAP32[ptr >> 2] = 0\r\n            }\r\n            stop = ret + size;\r\n            while (ptr < stop) {\r\n                HEAP8[ptr++ >> 0] = 0\r\n            }\r\n            return ret\r\n        }\r\n        if (singleType === \"i8\") {\r\n            if (slab.subarray || slab.slice) {\r\n                HEAPU8.set(slab, ret)\r\n            } else {\r\n                HEAPU8.set(new Uint8Array(slab), ret)\r\n            }\r\n            return ret\r\n        }\r\n        var i = 0, type, typeSize, previousType;\r\n        while (i < size) {\r\n            var curr = slab[i];\r\n            if (typeof curr === \"function\") {\r\n                curr = Runtime.getFunctionIndex(curr)\r\n            }\r\n            type = singleType || types[i];\r\n            if (type === 0) {\r\n                i++;\r\n                continue\r\n            }\r\n            if (type == \"i64\") type = \"i32\";\r\n            setValue(ret + i, curr, type);\r\n            if (previousType !== type) {\r\n                typeSize = Runtime.getNativeTypeSize(type);\r\n                previousType = type\r\n            }\r\n            i += typeSize\r\n        }\r\n        return ret\r\n    }\r\n\r\n    Module[\"allocate\"] = allocate;\r\n\r\n    function getMemory(size) {\r\n        if (!staticSealed) return Runtime.staticAlloc(size);\r\n        if (typeof _sbrk !== \"undefined\" && !_sbrk.called || !runtimeInitialized) return Runtime.dynamicAlloc(size);\r\n        return _malloc(size)\r\n    }\r\n\r\n    Module[\"getMemory\"] = getMemory;\r\n\r\n    function Pointer_stringify(ptr, length) {\r\n        if (length === 0 || !ptr) return \"\";\r\n        var hasUtf = 0;\r\n        var t;\r\n        var i = 0;\r\n        while (1) {\r\n            t = HEAPU8[ptr + i >> 0];\r\n            hasUtf |= t;\r\n            if (t == 0 && !length) break;\r\n            i++;\r\n            if (length && i == length) break\r\n        }\r\n        if (!length) length = i;\r\n        var ret = \"\";\r\n        if (hasUtf < 128) {\r\n            var MAX_CHUNK = 1024;\r\n            var curr;\r\n            while (length > 0) {\r\n                curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));\r\n                ret = ret ? ret + curr : curr;\r\n                ptr += MAX_CHUNK;\r\n                length -= MAX_CHUNK\r\n            }\r\n            return ret\r\n        }\r\n        return Module[\"UTF8ToString\"](ptr)\r\n    }\r\n\r\n    Module[\"Pointer_stringify\"] = Pointer_stringify;\r\n\r\n    function AsciiToString(ptr) {\r\n        var str = \"\";\r\n        while (1) {\r\n            var ch = HEAP8[ptr++ >> 0];\r\n            if (!ch) return str;\r\n            str += String.fromCharCode(ch)\r\n        }\r\n    }\r\n\r\n    Module[\"AsciiToString\"] = AsciiToString;\r\n\r\n    function stringToAscii(str, outPtr) {\r\n        return writeAsciiToMemory(str, outPtr, false)\r\n    }\r\n\r\n    Module[\"stringToAscii\"] = stringToAscii;\r\n\r\n    function UTF8ArrayToString(u8Array, idx) {\r\n        var u0, u1, u2, u3, u4, u5;\r\n        var str = \"\";\r\n        while (1) {\r\n            u0 = u8Array[idx++];\r\n            if (!u0) return str;\r\n            if (!(u0 & 128)) {\r\n                str += String.fromCharCode(u0);\r\n                continue\r\n            }\r\n            u1 = u8Array[idx++] & 63;\r\n            if ((u0 & 224) == 192) {\r\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\r\n                continue\r\n            }\r\n            u2 = u8Array[idx++] & 63;\r\n            if ((u0 & 240) == 224) {\r\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2\r\n            } else {\r\n                u3 = u8Array[idx++] & 63;\r\n                if ((u0 & 248) == 240) {\r\n                    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3\r\n                } else {\r\n                    u4 = u8Array[idx++] & 63;\r\n                    if ((u0 & 252) == 248) {\r\n                        u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4\r\n                    } else {\r\n                        u5 = u8Array[idx++] & 63;\r\n                        u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5\r\n                    }\r\n                }\r\n            }\r\n            if (u0 < 65536) {\r\n                str += String.fromCharCode(u0)\r\n            } else {\r\n                var ch = u0 - 65536;\r\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\r\n            }\r\n        }\r\n    }\r\n\r\n    Module[\"UTF8ArrayToString\"] = UTF8ArrayToString;\r\n\r\n    function UTF8ToString(ptr) {\r\n        return UTF8ArrayToString(HEAPU8, ptr)\r\n    }\r\n\r\n    Module[\"UTF8ToString\"] = UTF8ToString;\r\n\r\n    function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\r\n        if (!(maxBytesToWrite > 0)) return 0;\r\n        var startIdx = outIdx;\r\n        var endIdx = outIdx + maxBytesToWrite - 1;\r\n        for (var i = 0; i < str.length; ++i) {\r\n            var u = str.charCodeAt(i);\r\n            if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\r\n            if (u <= 127) {\r\n                if (outIdx >= endIdx) break;\r\n                outU8Array[outIdx++] = u\r\n            } else if (u <= 2047) {\r\n                if (outIdx + 1 >= endIdx) break;\r\n                outU8Array[outIdx++] = 192 | u >> 6;\r\n                outU8Array[outIdx++] = 128 | u & 63\r\n            } else if (u <= 65535) {\r\n                if (outIdx + 2 >= endIdx) break;\r\n                outU8Array[outIdx++] = 224 | u >> 12;\r\n                outU8Array[outIdx++] = 128 | u >> 6 & 63;\r\n                outU8Array[outIdx++] = 128 | u & 63\r\n            } else if (u <= 2097151) {\r\n                if (outIdx + 3 >= endIdx) break;\r\n                outU8Array[outIdx++] = 240 | u >> 18;\r\n                outU8Array[outIdx++] = 128 | u >> 12 & 63;\r\n                outU8Array[outIdx++] = 128 | u >> 6 & 63;\r\n                outU8Array[outIdx++] = 128 | u & 63\r\n            } else if (u <= 67108863) {\r\n                if (outIdx + 4 >= endIdx) break;\r\n                outU8Array[outIdx++] = 248 | u >> 24;\r\n                outU8Array[outIdx++] = 128 | u >> 18 & 63;\r\n                outU8Array[outIdx++] = 128 | u >> 12 & 63;\r\n                outU8Array[outIdx++] = 128 | u >> 6 & 63;\r\n                outU8Array[outIdx++] = 128 | u & 63\r\n            } else {\r\n                if (outIdx + 5 >= endIdx) break;\r\n                outU8Array[outIdx++] = 252 | u >> 30;\r\n                outU8Array[outIdx++] = 128 | u >> 24 & 63;\r\n                outU8Array[outIdx++] = 128 | u >> 18 & 63;\r\n                outU8Array[outIdx++] = 128 | u >> 12 & 63;\r\n                outU8Array[outIdx++] = 128 | u >> 6 & 63;\r\n                outU8Array[outIdx++] = 128 | u & 63\r\n            }\r\n        }\r\n        outU8Array[outIdx] = 0;\r\n        return outIdx - startIdx\r\n    }\r\n\r\n    Module[\"stringToUTF8Array\"] = stringToUTF8Array;\r\n\r\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n        return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite)\r\n    }\r\n\r\n    Module[\"stringToUTF8\"] = stringToUTF8;\r\n\r\n    function lengthBytesUTF8(str) {\r\n        var len = 0;\r\n        for (var i = 0; i < str.length; ++i) {\r\n            var u = str.charCodeAt(i);\r\n            if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\r\n            if (u <= 127) {\r\n                ++len\r\n            } else if (u <= 2047) {\r\n                len += 2\r\n            } else if (u <= 65535) {\r\n                len += 3\r\n            } else if (u <= 2097151) {\r\n                len += 4\r\n            } else if (u <= 67108863) {\r\n                len += 5\r\n            } else {\r\n                len += 6\r\n            }\r\n        }\r\n        return len\r\n    }\r\n\r\n    Module[\"lengthBytesUTF8\"] = lengthBytesUTF8;\r\n\r\n    function UTF16ToString(ptr) {\r\n        var i = 0;\r\n        var str = \"\";\r\n        while (1) {\r\n            var codeUnit = HEAP16[ptr + i * 2 >> 1];\r\n            if (codeUnit == 0) return str;\r\n            ++i;\r\n            str += String.fromCharCode(codeUnit)\r\n        }\r\n    }\r\n\r\n    Module[\"UTF16ToString\"] = UTF16ToString;\r\n\r\n    function stringToUTF16(str, outPtr, maxBytesToWrite) {\r\n        if (maxBytesToWrite === undefined) {\r\n            maxBytesToWrite = 2147483647\r\n        }\r\n        if (maxBytesToWrite < 2) return 0;\r\n        maxBytesToWrite -= 2;\r\n        var startPtr = outPtr;\r\n        var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\r\n        for (var i = 0; i < numCharsToWrite; ++i) {\r\n            var codeUnit = str.charCodeAt(i);\r\n            HEAP16[outPtr >> 1] = codeUnit;\r\n            outPtr += 2\r\n        }\r\n        HEAP16[outPtr >> 1] = 0;\r\n        return outPtr - startPtr\r\n    }\r\n\r\n    Module[\"stringToUTF16\"] = stringToUTF16;\r\n\r\n    function lengthBytesUTF16(str) {\r\n        return str.length * 2\r\n    }\r\n\r\n    Module[\"lengthBytesUTF16\"] = lengthBytesUTF16;\r\n\r\n    function UTF32ToString(ptr) {\r\n        var i = 0;\r\n        var str = \"\";\r\n        while (1) {\r\n            var utf32 = HEAP32[ptr + i * 4 >> 2];\r\n            if (utf32 == 0) return str;\r\n            ++i;\r\n            if (utf32 >= 65536) {\r\n                var ch = utf32 - 65536;\r\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\r\n            } else {\r\n                str += String.fromCharCode(utf32)\r\n            }\r\n        }\r\n    }\r\n\r\n    Module[\"UTF32ToString\"] = UTF32ToString;\r\n\r\n    function stringToUTF32(str, outPtr, maxBytesToWrite) {\r\n        if (maxBytesToWrite === undefined) {\r\n            maxBytesToWrite = 2147483647\r\n        }\r\n        if (maxBytesToWrite < 4) return 0;\r\n        var startPtr = outPtr;\r\n        var endPtr = startPtr + maxBytesToWrite - 4;\r\n        for (var i = 0; i < str.length; ++i) {\r\n            var codeUnit = str.charCodeAt(i);\r\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\r\n                var trailSurrogate = str.charCodeAt(++i);\r\n                codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023\r\n            }\r\n            HEAP32[outPtr >> 2] = codeUnit;\r\n            outPtr += 4;\r\n            if (outPtr + 4 > endPtr) break\r\n        }\r\n        HEAP32[outPtr >> 2] = 0;\r\n        return outPtr - startPtr\r\n    }\r\n\r\n    Module[\"stringToUTF32\"] = stringToUTF32;\r\n\r\n    function lengthBytesUTF32(str) {\r\n        var len = 0;\r\n        for (var i = 0; i < str.length; ++i) {\r\n            var codeUnit = str.charCodeAt(i);\r\n            if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\r\n            len += 4\r\n        }\r\n        return len\r\n    }\r\n\r\n    Module[\"lengthBytesUTF32\"] = lengthBytesUTF32;\r\n\r\n    function demangle(func) {\r\n        var hasLibcxxabi = !!Module[\"___cxa_demangle\"];\r\n        if (hasLibcxxabi) {\r\n            try {\r\n                var buf = _malloc(func.length);\r\n                writeStringToMemory(func.substr(1), buf);\r\n                var status = _malloc(4);\r\n                var ret = Module[\"___cxa_demangle\"](buf, 0, 0, status);\r\n                if (getValue(status, \"i32\") === 0 && ret) {\r\n                    return Pointer_stringify(ret)\r\n                }\r\n            } catch (e) {\r\n            } finally {\r\n                if (buf) _free(buf);\r\n                if (status) _free(status);\r\n                if (ret) _free(ret)\r\n            }\r\n        }\r\n        var i = 3;\r\n        var basicTypes = {\r\n            \"v\": \"void\",\r\n            \"b\": \"bool\",\r\n            \"c\": \"char\",\r\n            \"s\": \"short\",\r\n            \"i\": \"int\",\r\n            \"l\": \"long\",\r\n            \"f\": \"float\",\r\n            \"d\": \"double\",\r\n            \"w\": \"wchar_t\",\r\n            \"a\": \"signed char\",\r\n            \"h\": \"unsigned char\",\r\n            \"t\": \"unsigned short\",\r\n            \"j\": \"unsigned int\",\r\n            \"m\": \"unsigned long\",\r\n            \"x\": \"long long\",\r\n            \"y\": \"unsigned long long\",\r\n            \"z\": \"...\"\r\n        };\r\n        var subs = [];\r\n        var first = true;\r\n\r\n        function dump(x) {\r\n            if (x) Module.print(x);\r\n            Module.print(func);\r\n            var pre = \"\";\r\n            for (var a = 0; a < i; a++) pre += \" \";\r\n            Module.print(pre + \"^\")\r\n        }\r\n\r\n        function parseNested() {\r\n            i++;\r\n            if (func[i] === \"K\") i++;\r\n            var parts = [];\r\n            while (func[i] !== \"E\") {\r\n                if (func[i] === \"S\") {\r\n                    i++;\r\n                    var next = func.indexOf(\"_\", i);\r\n                    var num = func.substring(i, next) || 0;\r\n                    parts.push(subs[num] || \"?\");\r\n                    i = next + 1;\r\n                    continue\r\n                }\r\n                if (func[i] === \"C\") {\r\n                    parts.push(parts[parts.length - 1]);\r\n                    i += 2;\r\n                    continue\r\n                }\r\n                var size = parseInt(func.substr(i));\r\n                var pre = size.toString().length;\r\n                if (!size || !pre) {\r\n                    i--;\r\n                    break\r\n                }\r\n                var curr = func.substr(i + pre, size);\r\n                parts.push(curr);\r\n                subs.push(curr);\r\n                i += pre + size\r\n            }\r\n            i++;\r\n            return parts\r\n        }\r\n\r\n        function parse(rawList, limit, allowVoid) {\r\n            limit = limit || Infinity;\r\n            var ret = \"\", list = [];\r\n\r\n            function flushList() {\r\n                return \"(\" + list.join(\", \") + \")\"\r\n            }\r\n\r\n            var name;\r\n            if (func[i] === \"N\") {\r\n                name = parseNested().join(\"::\");\r\n                limit--;\r\n                if (limit === 0) return rawList ? [name] : name\r\n            } else {\r\n                if (func[i] === \"K\" || first && func[i] === \"L\") i++;\r\n                var size = parseInt(func.substr(i));\r\n                if (size) {\r\n                    var pre = size.toString().length;\r\n                    name = func.substr(i + pre, size);\r\n                    i += pre + size\r\n                }\r\n            }\r\n            first = false;\r\n            if (func[i] === \"I\") {\r\n                i++;\r\n                var iList = parse(true);\r\n                var iRet = parse(true, 1, true);\r\n                ret += iRet[0] + \" \" + name + \"<\" + iList.join(\", \") + \">\"\r\n            } else {\r\n                ret = name\r\n            }\r\n            paramLoop:while (i < func.length && limit-- > 0) {\r\n                var c = func[i++];\r\n                if (c in basicTypes) {\r\n                    list.push(basicTypes[c])\r\n                } else {\r\n                    switch (c) {\r\n                        case\"P\":\r\n                            list.push(parse(true, 1, true)[0] + \"*\");\r\n                            break;\r\n                        case\"R\":\r\n                            list.push(parse(true, 1, true)[0] + \"&\");\r\n                            break;\r\n                        case\"L\": {\r\n                            i++;\r\n                            var end = func.indexOf(\"E\", i);\r\n                            var size = end - i;\r\n                            list.push(func.substr(i, size));\r\n                            i += size + 2;\r\n                            break\r\n                        }\r\n                            ;\r\n                        case\"A\": {\r\n                            var size = parseInt(func.substr(i));\r\n                            i += size.toString().length;\r\n                            if (func[i] !== \"_\") throw\"?\";\r\n                            i++;\r\n                            list.push(parse(true, 1, true)[0] + \" [\" + size + \"]\");\r\n                            break\r\n                        }\r\n                            ;\r\n                        case\"E\":\r\n                            break paramLoop;\r\n                        default:\r\n                            ret += \"?\" + c;\r\n                            break paramLoop\r\n                    }\r\n                }\r\n            }\r\n            if (!allowVoid && list.length === 1 && list[0] === \"void\") list = [];\r\n            if (rawList) {\r\n                if (ret) {\r\n                    list.push(ret + \"?\")\r\n                }\r\n                return list\r\n            } else {\r\n                return ret + flushList()\r\n            }\r\n        }\r\n\r\n        var parsed = func;\r\n        try {\r\n            if (func == \"Object._main\" || func == \"_main\") {\r\n                return \"main()\"\r\n            }\r\n            if (typeof func === \"number\") func = Pointer_stringify(func);\r\n            if (func[0] !== \"_\") return func;\r\n            if (func[1] !== \"_\") return func;\r\n            if (func[2] !== \"Z\") return func;\r\n            switch (func[3]) {\r\n                case\"n\":\r\n                    return \"operator new()\";\r\n                case\"d\":\r\n                    return \"operator delete()\"\r\n            }\r\n            parsed = parse()\r\n        } catch (e) {\r\n            parsed += \"?\"\r\n        }\r\n        if (parsed.indexOf(\"?\") >= 0 && !hasLibcxxabi) {\r\n            Runtime.warnOnce(\"warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling\")\r\n        }\r\n        return parsed\r\n    }\r\n\r\n    function demangleAll(text) {\r\n        return text.replace(/__Z[\\w\\d_]+/g, (function (x) {\r\n            var y = demangle(x);\r\n            return x === y ? x : x + \" [\" + y + \"]\"\r\n        }))\r\n    }\r\n\r\n    function jsStackTrace() {\r\n        var err = new Error;\r\n        if (!err.stack) {\r\n            try {\r\n                throw new Error(0)\r\n            } catch (e) {\r\n                err = e\r\n            }\r\n            if (!err.stack) {\r\n                return \"(no stack trace available)\"\r\n            }\r\n        }\r\n        return err.stack.toString()\r\n    }\r\n\r\n    function stackTrace() {\r\n        return demangleAll(jsStackTrace())\r\n    }\r\n\r\n    Module[\"stackTrace\"] = stackTrace;\r\n    var PAGE_SIZE = 4096;\r\n\r\n    function alignMemoryPage(x) {\r\n        if (x % 4096 > 0) {\r\n            x += 4096 - x % 4096\r\n        }\r\n        return x\r\n    }\r\n\r\n    var HEAP;\r\n    var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\r\n    var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false;\r\n    var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0;\r\n    var DYNAMIC_BASE = 0, DYNAMICTOP = 0;\r\n\r\n    function enlargeMemory() {\r\n        abort(\"Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value \" + TOTAL_MEMORY + \", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.\")\r\n    }\r\n\r\n    var TOTAL_STACK = Module[\"TOTAL_STACK\"] || 65536;\r\n    var TOTAL_MEMORY = Module[\"TOTAL_MEMORY\"] || 524288;\r\n    var totalMemory = 64 * 1024;\r\n    while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {\r\n        if (totalMemory < 16 * 1024 * 1024) {\r\n            totalMemory *= 2\r\n        } else {\r\n            totalMemory += 16 * 1024 * 1024\r\n        }\r\n    }\r\n    if (totalMemory !== TOTAL_MEMORY) {\r\n        Module.printErr(\"increasing TOTAL_MEMORY to \" + totalMemory + \" to be compliant with the asm.js spec (and given that TOTAL_STACK=\" + TOTAL_STACK + \")\");\r\n        TOTAL_MEMORY = totalMemory\r\n    }\r\n    assert(typeof Int32Array !== \"undefined\" && typeof Float64Array !== \"undefined\" && !!(new Int32Array(1))[\"subarray\"] && !!(new Int32Array(1))[\"set\"], \"JS engine does not provide full typed array support\");\r\n    var buffer;\r\n    buffer = new ArrayBuffer(TOTAL_MEMORY);\r\n    HEAP8 = new Int8Array(buffer);\r\n    HEAP16 = new Int16Array(buffer);\r\n    HEAP32 = new Int32Array(buffer);\r\n    HEAPU8 = new Uint8Array(buffer);\r\n    HEAPU16 = new Uint16Array(buffer);\r\n    HEAPU32 = new Uint32Array(buffer);\r\n    HEAPF32 = new Float32Array(buffer);\r\n    HEAPF64 = new Float64Array(buffer);\r\n    HEAP32[0] = 255;\r\n    assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, \"Typed arrays 2 must be run on a little-endian system\");\r\n    Module[\"HEAP\"] = HEAP;\r\n    Module[\"buffer\"] = buffer;\r\n    Module[\"HEAP8\"] = HEAP8;\r\n    Module[\"HEAP16\"] = HEAP16;\r\n    Module[\"HEAP32\"] = HEAP32;\r\n    Module[\"HEAPU8\"] = HEAPU8;\r\n    Module[\"HEAPU16\"] = HEAPU16;\r\n    Module[\"HEAPU32\"] = HEAPU32;\r\n    Module[\"HEAPF32\"] = HEAPF32;\r\n    Module[\"HEAPF64\"] = HEAPF64;\r\n\r\n    function callRuntimeCallbacks(callbacks) {\r\n        while (callbacks.length > 0) {\r\n            var callback = callbacks.shift();\r\n            if (typeof callback == \"function\") {\r\n                callback();\r\n                continue\r\n            }\r\n            var func = callback.func;\r\n            if (typeof func === \"number\") {\r\n                if (callback.arg === undefined) {\r\n                    Runtime.dynCall(\"v\", func)\r\n                } else {\r\n                    Runtime.dynCall(\"vi\", func, [callback.arg])\r\n                }\r\n            } else {\r\n                func(callback.arg === undefined ? null : callback.arg)\r\n            }\r\n        }\r\n    }\r\n\r\n    var __ATPRERUN__ = [];\r\n    var __ATINIT__ = [];\r\n    var __ATMAIN__ = [];\r\n    var __ATEXIT__ = [];\r\n    var __ATPOSTRUN__ = [];\r\n    var runtimeInitialized = false;\r\n    var runtimeExited = false;\r\n\r\n    function preRun() {\r\n        if (Module[\"preRun\"]) {\r\n            if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\r\n            while (Module[\"preRun\"].length) {\r\n                addOnPreRun(Module[\"preRun\"].shift())\r\n            }\r\n        }\r\n        callRuntimeCallbacks(__ATPRERUN__)\r\n    }\r\n\r\n    function ensureInitRuntime() {\r\n        if (runtimeInitialized) return;\r\n        runtimeInitialized = true;\r\n        callRuntimeCallbacks(__ATINIT__)\r\n    }\r\n\r\n    function preMain() {\r\n        callRuntimeCallbacks(__ATMAIN__)\r\n    }\r\n\r\n    function exitRuntime() {\r\n        callRuntimeCallbacks(__ATEXIT__);\r\n        runtimeExited = true\r\n    }\r\n\r\n    function postRun() {\r\n        if (Module[\"postRun\"]) {\r\n            if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\r\n            while (Module[\"postRun\"].length) {\r\n                addOnPostRun(Module[\"postRun\"].shift())\r\n            }\r\n        }\r\n        callRuntimeCallbacks(__ATPOSTRUN__)\r\n    }\r\n\r\n    function addOnPreRun(cb) {\r\n        __ATPRERUN__.unshift(cb)\r\n    }\r\n\r\n    Module[\"addOnPreRun\"] = addOnPreRun;\r\n\r\n    function addOnInit(cb) {\r\n        __ATINIT__.unshift(cb)\r\n    }\r\n\r\n    Module[\"addOnInit\"] = addOnInit;\r\n\r\n    function addOnPreMain(cb) {\r\n        __ATMAIN__.unshift(cb)\r\n    }\r\n\r\n    Module[\"addOnPreMain\"] = addOnPreMain;\r\n\r\n    function addOnExit(cb) {\r\n        __ATEXIT__.unshift(cb)\r\n    }\r\n\r\n    Module[\"addOnExit\"] = addOnExit;\r\n\r\n    function addOnPostRun(cb) {\r\n        __ATPOSTRUN__.unshift(cb)\r\n    }\r\n\r\n    Module[\"addOnPostRun\"] = addOnPostRun;\r\n\r\n    function intArrayFromString(stringy, dontAddNull, length) {\r\n        var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\r\n        var u8array = new Array(len);\r\n        var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n        if (dontAddNull) u8array.length = numBytesWritten;\r\n        return u8array\r\n    }\r\n\r\n    Module[\"intArrayFromString\"] = intArrayFromString;\r\n\r\n    function intArrayToString(array) {\r\n        var ret = [];\r\n        for (var i = 0; i < array.length; i++) {\r\n            var chr = array[i];\r\n            if (chr > 255) {\r\n                chr &= 255\r\n            }\r\n            ret.push(String.fromCharCode(chr))\r\n        }\r\n        return ret.join(\"\")\r\n    }\r\n\r\n    Module[\"intArrayToString\"] = intArrayToString;\r\n\r\n    function writeStringToMemory(string, buffer, dontAddNull) {\r\n        var array = intArrayFromString(string, dontAddNull);\r\n        var i = 0;\r\n        while (i < array.length) {\r\n            var chr = array[i];\r\n            HEAP8[buffer + i >> 0] = chr;\r\n            i = i + 1\r\n        }\r\n    }\r\n\r\n    Module[\"writeStringToMemory\"] = writeStringToMemory;\r\n\r\n    function writeArrayToMemory(array, buffer) {\r\n        for (var i = 0; i < array.length; i++) {\r\n            HEAP8[buffer++ >> 0] = array[i]\r\n        }\r\n    }\r\n\r\n    Module[\"writeArrayToMemory\"] = writeArrayToMemory;\r\n\r\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\r\n        for (var i = 0; i < str.length; ++i) {\r\n            HEAP8[buffer++ >> 0] = str.charCodeAt(i)\r\n        }\r\n        if (!dontAddNull) HEAP8[buffer >> 0] = 0\r\n    }\r\n\r\n    Module[\"writeAsciiToMemory\"] = writeAsciiToMemory;\r\n\r\n    function unSign(value, bits, ignore) {\r\n        if (value >= 0) {\r\n            return value\r\n        }\r\n        return bits <= 32 ? 2 * Math.abs(1 << bits - 1) + value : Math.pow(2, bits) + value\r\n    }\r\n\r\n    function reSign(value, bits, ignore) {\r\n        if (value <= 0) {\r\n            return value\r\n        }\r\n        var half = bits <= 32 ? Math.abs(1 << bits - 1) : Math.pow(2, bits - 1);\r\n        if (value >= half && (bits <= 32 || value > half)) {\r\n            value = -2 * half + value\r\n        }\r\n        return value\r\n    }\r\n\r\n    if (!Math[\"imul\"] || Math[\"imul\"](4294967295, 5) !== -5) Math[\"imul\"] = function imul(a, b) {\r\n        var ah = a >>> 16;\r\n        var al = a & 65535;\r\n        var bh = b >>> 16;\r\n        var bl = b & 65535;\r\n        return al * bl + (ah * bl + al * bh << 16) | 0\r\n    };\r\n    Math.imul = Math[\"imul\"];\r\n    if (!Math[\"clz32\"]) Math[\"clz32\"] = (function (x) {\r\n        x = x >>> 0;\r\n        for (var i = 0; i < 32; i++) {\r\n            if (x & 1 << 31 - i) return i\r\n        }\r\n        return 32\r\n    });\r\n    Math.clz32 = Math[\"clz32\"];\r\n    var Math_abs = Math.abs;\r\n    var Math_cos = Math.cos;\r\n    var Math_sin = Math.sin;\r\n    var Math_tan = Math.tan;\r\n    var Math_acos = Math.acos;\r\n    var Math_asin = Math.asin;\r\n    var Math_atan = Math.atan;\r\n    var Math_atan2 = Math.atan2;\r\n    var Math_exp = Math.exp;\r\n    var Math_log = Math.log;\r\n    var Math_sqrt = Math.sqrt;\r\n    var Math_ceil = Math.ceil;\r\n    var Math_floor = Math.floor;\r\n    var Math_pow = Math.pow;\r\n    var Math_imul = Math.imul;\r\n    var Math_fround = Math.fround;\r\n    var Math_min = Math.min;\r\n    var Math_clz32 = Math.clz32;\r\n    var runDependencies = 0;\r\n    var runDependencyWatcher = null;\r\n    var dependenciesFulfilled = null;\r\n\r\n    function getUniqueRunDependency(id) {\r\n        return id\r\n    }\r\n\r\n    function addRunDependency(id) {\r\n        runDependencies++;\r\n        if (Module[\"monitorRunDependencies\"]) {\r\n            Module[\"monitorRunDependencies\"](runDependencies)\r\n        }\r\n    }\r\n\r\n    Module[\"addRunDependency\"] = addRunDependency;\r\n\r\n    function removeRunDependency(id) {\r\n        runDependencies--;\r\n        if (Module[\"monitorRunDependencies\"]) {\r\n            Module[\"monitorRunDependencies\"](runDependencies)\r\n        }\r\n        if (runDependencies == 0) {\r\n            if (runDependencyWatcher !== null) {\r\n                clearInterval(runDependencyWatcher);\r\n                runDependencyWatcher = null\r\n            }\r\n            if (dependenciesFulfilled) {\r\n                var callback = dependenciesFulfilled;\r\n                dependenciesFulfilled = null;\r\n                callback()\r\n            }\r\n        }\r\n    }\r\n\r\n    Module[\"removeRunDependency\"] = removeRunDependency;\r\n    Module[\"preloadedImages\"] = {};\r\n    Module[\"preloadedAudios\"] = {};\r\n    var memoryInitializer = null;\r\n    var ASM_CONSTS = [];\r\n    STATIC_BASE = 8;\r\n    STATICTOP = STATIC_BASE + 31776;\r\n    __ATINIT__.push();\r\n    allocate([154, 14, 0, 0, 188, 14, 0, 0, 226, 14, 0, 0, 8, 15, 0, 0, 46, 15, 0, 0, 84, 15, 0, 0, 130, 15, 0, 0, 208, 15, 0, 0, 66, 16, 0, 0, 108, 16, 0, 0, 42, 17, 0, 0, 248, 17, 0, 0, 228, 18, 0, 0, 240, 19, 0, 0, 24, 21, 0, 0, 86, 22, 0, 0, 238, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 13, 0, 15, 0, 17, 0, 19, 0, 20, 0, 26, 0, 31, 0, 5, 0, 6, 0, 5, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 252, 146, 252, 36, 253, 182, 253, 72, 254, 218, 254, 108, 255, 0, 0, 0, 0, 32, 78, 32, 78, 32, 78, 32, 78, 32, 78, 80, 70, 0, 64, 0, 32, 0, 0, 0, 0, 255, 127, 112, 125, 112, 125, 112, 125, 112, 125, 112, 125, 153, 89, 255, 127, 112, 125, 112, 125, 102, 102, 102, 38, 153, 25, 153, 25, 154, 89, 185, 62, 232, 43, 188, 30, 132, 21, 16, 15, 139, 10, 97, 7, 42, 5, 157, 3, 0, 96, 0, 72, 0, 54, 128, 40, 96, 30, 200, 22, 22, 17, 209, 12, 157, 9, 54, 7, 102, 70, 184, 38, 75, 21, 182, 11, 113, 6, 139, 3, 243, 1, 18, 1, 151, 0, 83, 0, 154, 89, 185, 62, 232, 43, 188, 30, 132, 21, 16, 15, 139, 10, 97, 7, 42, 5, 157, 3, 44, 3, 128, 0, 30, 2, 140, 0, 57, 11, 111, 4, 218, 8, 74, 13, 19, 8, 51, 2, 133, 49, 135, 2, 36, 16, 6, 7, 225, 21, 165, 20, 9, 30, 118, 1, 151, 14, 185, 1, 160, 42, 78, 10, 31, 46, 190, 9, 10, 80, 29, 3, 98, 20, 163, 2, 68, 26, 162, 32, 162, 20, 160, 6, 208, 5, 172, 1, 250, 22, 196, 1, 212, 20, 232, 15, 255, 13, 244, 4, 165, 9, 133, 3, 22, 62, 237, 3, 134, 58, 199, 12, 91, 40, 250, 18, 51, 14, 229, 7, 36, 10, 67, 3, 72, 48, 28, 19, 174, 47, 168, 6, 120, 52, 68, 6, 158, 35, 37, 9, 128, 15, 2, 6, 103, 21, 208, 38, 211, 14, 161, 1, 79, 5, 158, 1, 56, 14, 33, 6, 59, 31, 213, 13, 141, 44, 133, 2, 104, 33, 123, 2, 216, 15, 97, 5, 224, 64, 236, 23, 156, 44, 188, 2, 215, 7, 95, 2, 127, 48, 42, 6, 111, 43, 46, 18, 112, 53, 172, 6, 214, 46, 205, 4, 60, 31, 129, 28, 175, 51, 83, 22, 124, 9, 135, 4, 25, 8, 149, 7, 74, 24, 233, 23, 218, 13, 12, 7, 221, 34, 10, 7, 231, 33, 44, 6, 111, 54, 248, 13, 1, 52, 93, 24, 254, 23, 106, 4, 106, 23, 198, 6, 61, 55, 54, 18, 7, 44, 249, 12, 194, 47, 15, 6, 107, 54, 199, 11, 217, 19, 224, 40, 228, 36, 50, 26, 153, 6, 171, 2, 156, 5, 26, 5, 44, 28, 93, 15, 242, 15, 153, 10, 113, 30, 192, 2, 222, 58, 34, 3, 155, 24, 92, 20, 241, 16, 237, 20, 20, 26, 29, 2, 174, 23, 114, 2, 83, 53, 116, 14, 234, 44, 104, 9, 28, 63, 204, 2, 145, 47, 239, 2, 129, 31, 225, 44, 170, 24, 208, 8, 114, 17, 240, 1, 125, 28, 11, 2, 229, 39, 249, 14, 202, 32, 221, 11, 211, 32, 198, 3, 148, 55, 88, 7, 255, 33, 33, 21, 11, 64, 255, 18, 252, 28, 187, 7, 201, 23, 206, 4, 155, 36, 46, 17, 222, 56, 35, 13, 247, 52, 57, 11, 107, 51, 185, 5, 158, 21, 142, 6, 82, 51, 179, 57, 170, 28, 88, 2, 38, 5, 36, 2, 156, 16, 211, 13, 60, 39, 60, 9, 91, 41, 110, 2, 32, 51, 157, 2, 46, 55, 198, 13, 175, 19, 56, 38, 234, 59, 107, 2, 43, 12, 78, 2, 58, 64, 197, 11, 182, 60, 72, 16, 177, 60, 75, 6, 45, 60, 204, 4, 151, 62, 83, 36, 110, 29, 112, 19, 198, 7, 189, 4, 183, 44, 133, 4, 224, 48, 143, 21, 3, 37, 84, 10, 36, 30, 242, 7, 224, 51, 191, 8, 139, 62, 229, 19, 130, 31, 105, 26, 99, 39, 133, 5, 138, 19, 43, 9, 235, 48, 87, 23, 22, 59, 83, 11, 88, 71, 241, 8, 211, 61, 223, 9, 137, 63, 14, 40, 59, 57, 55, 44, 5, 7, 81, 1, 43, 12, 141, 1, 182, 13, 112, 11, 240, 17, 110, 10, 95, 29, 116, 2, 151, 44, 144, 2, 58, 23, 131, 9, 144, 25, 199, 28, 46, 32, 61, 3, 160, 15, 95, 3, 48, 39, 188, 9, 185, 62, 223, 13, 28, 71, 30, 4, 215, 23, 174, 5, 252, 22, 220, 30, 64, 73, 140, 13, 72, 7, 32, 2, 238, 35, 171, 2, 103, 45, 64, 16, 242, 17, 108, 6, 86, 12, 133, 4, 81, 62, 0, 10, 61, 48, 149, 14, 12, 68, 140, 20, 218, 23, 212, 7, 101, 11, 206, 6, 83, 64, 137, 20, 147, 65, 144, 6, 53, 67, 223, 6, 165, 18, 159, 12, 218, 28, 147, 23, 6, 56, 28, 39, 195, 15, 186, 1, 98, 16, 202, 1, 254, 35, 194, 8, 3, 29, 121, 16, 60, 50, 33, 3, 178, 43, 57, 3, 104, 49, 36, 8, 156, 50, 154, 25, 33, 37, 228, 3, 229, 25, 217, 3, 41, 41, 198, 9, 185, 59, 142, 19, 58, 49, 7, 8, 124, 60, 117, 6, 66, 63, 9, 27, 151, 55, 158, 22, 66, 10, 60, 3, 239, 21, 150, 6, 95, 53, 146, 22, 84, 14, 18, 6, 49, 44, 73, 10, 42, 38, 179, 5, 179, 54, 125, 18, 25, 62, 147, 24, 134, 24, 78, 7, 230, 30, 237, 8, 82, 66, 219, 17, 192, 64, 9, 15, 144, 59, 7, 9, 151, 62, 172, 12, 123, 56, 144, 69, 71, 46, 203, 10, 189, 7, 127, 5, 120, 5, 108, 3, 239, 16, 219, 13, 39, 17, 114, 16, 29, 21, 168, 2, 53, 68, 13, 3, 101, 25, 254, 19, 155, 31, 253, 29, 187, 28, 26, 3, 141, 32, 158, 4, 193, 58, 88, 12, 80, 58, 223, 11, 197, 79, 112, 3, 209, 56, 84, 3, 49, 48, 116, 57, 248, 26, 128, 7, 129, 16, 165, 3, 26, 32, 63, 4, 163, 41, 244, 15, 98, 39, 181, 17, 175, 10, 72, 3, 177, 80, 57, 4, 71, 65, 78, 23, 1, 62, 226, 17, 119, 42, 14, 10, 189, 14, 142, 4, 183, 56, 204, 15, 219, 80, 67, 10, 115, 59, 174, 10, 170, 59, 138, 8, 113, 24, 154, 12, 69, 51, 24, 76, 28, 28, 162, 3, 158, 9, 82, 6, 163, 17, 20, 12, 28, 54, 181, 16, 220, 40, 65, 3, 187, 67, 42, 3, 251, 65, 241, 8, 186, 60, 25, 32, 35, 53, 148, 6, 125, 12, 42, 7, 76, 62, 4, 11, 196, 61, 207, 20, 110, 66, 134, 9, 148, 65, 46, 5, 55, 61, 220, 31, 206, 45, 108, 33, 178, 14, 5, 8, 91, 37, 37, 5, 249, 52, 134, 26, 195, 47, 144, 7, 244, 31, 222, 13, 231, 51, 242, 6, 171, 63, 199, 25, 163, 63, 78, 30, 73, 33, 247, 9, 57, 28, 85, 10, 93, 71, 65, 29, 245, 65, 200, 8, 218, 69, 68, 11, 113, 67, 0, 13, 201, 36, 194, 78, 34, 43, 128, 32, 6, 5, 108, 2, 151, 5, 71, 2, 105, 23, 241, 8, 138, 15, 42, 14, 24, 20, 240, 2, 97, 52, 62, 3, 177, 21, 44, 11, 244, 45, 20, 23, 241, 41, 48, 2, 70, 21, 52, 2, 9, 52, 192, 11, 170, 46, 99, 14, 175, 77, 30, 3, 97, 38, 216, 2, 95, 53, 44, 34, 223, 28, 237, 11, 211, 9, 10, 3, 162, 23, 65, 3, 69, 25, 210, 19, 113, 32, 159, 9, 253, 23, 73, 7, 204, 59, 238, 4, 72, 56, 195, 17, 95, 53, 163, 17, 65, 12, 167, 11, 175, 9, 235, 4, 240, 58, 39, 18, 22, 60, 47, 10, 156, 56, 88, 9, 174, 48, 233, 9, 115, 29, 133, 11, 109, 50, 28, 47, 92, 21, 172, 2, 69, 12, 210, 2, 217, 19, 250, 4, 188, 49, 104, 16, 198, 59, 169, 2, 139, 30, 80, 2, 134, 25, 229, 7, 94, 64, 33, 34, 52, 52, 114, 3, 21, 21, 131, 3, 64, 57, 130, 8, 149, 57, 131, 16, 190, 55, 18, 5, 105, 54, 237, 7, 117, 60, 58, 29, 199, 61, 220, 17, 217, 9, 221, 7, 198, 19, 12, 7, 39, 20, 182, 25, 218, 27, 13, 14, 168, 42, 75, 6, 209, 45, 172, 6, 7, 66, 127, 13, 140, 63, 240, 25, 90, 36, 239, 3, 153, 36, 58, 8, 238, 74, 173, 19, 153, 48, 173, 16, 47, 62, 52, 5, 253, 59, 184, 13, 122, 46, 61, 55, 229, 62, 198, 26, 218, 7, 225, 2, 195, 14, 93, 3, 190, 44, 64, 11, 236, 13, 212, 13, 97, 35, 217, 4, 103, 48, 128, 3, 98, 33, 21, 18, 41, 45, 144, 22, 193, 31, 77, 2, 26, 32, 76, 2, 40, 73, 171, 14, 173, 50, 77, 12, 113, 61, 246, 2, 250, 64, 242, 2, 118, 59, 130, 43, 255, 61, 160, 8, 65, 18, 98, 2, 234, 39, 166, 2, 153, 59, 50, 16, 97, 22, 255, 12, 185, 32, 134, 6, 150, 77, 17, 9, 90, 60, 135, 21, 230, 54, 105, 21, 96, 22, 72, 11, 156, 29, 66, 5, 48, 56, 205, 20, 108, 63, 110, 15, 14, 59, 160, 14, 202, 59, 155, 5, 5, 57, 230, 15, 13, 48, 80, 61, 193, 29, 163, 6, 122, 8, 116, 3, 107, 17, 215, 17, 174, 70, 234, 12, 198, 49, 47, 3, 78, 58, 139, 3, 168, 58, 185, 16, 158, 60, 176, 32, 74, 70, 63, 4, 54, 9, 97, 3, 153, 63, 203, 14, 63, 61, 244, 17, 228, 63, 254, 5, 200, 64, 162, 8, 193, 65, 225, 37, 57, 62, 161, 17, 205, 12, 61, 4, 171, 37, 139, 8, 197, 46, 180, 23, 239, 35, 110, 17, 251, 34, 93, 6, 49, 40, 246, 11, 97, 64, 35, 20, 106, 60, 154, 27, 110, 53, 239, 9, 153, 20, 229, 8, 106, 65, 69, 24, 15, 65, 80, 13, 80, 79, 35, 13, 0, 73, 193, 7, 92, 55, 67, 50, 50, 59, 87, 61, 121, 17, 252, 3, 145, 6, 118, 3, 215, 16, 205, 16, 248, 34, 73, 14, 5, 23, 123, 4, 127, 45, 172, 5, 14, 62, 179, 8, 230, 17, 244, 25, 17, 27, 181, 4, 76, 24, 31, 3, 127, 48, 81, 13, 96, 62, 37, 15, 147, 77, 61, 8, 217, 37, 93, 8, 150, 57, 126, 34, 144, 56, 39, 10, 25, 7, 214, 4, 91, 30, 45, 3, 135, 74, 58, 17, 178, 21, 16, 8, 103, 14, 28, 11, 27, 68, 208, 8, 57, 65, 134, 17, 71, 63, 12, 21, 92, 31, 203, 10, 77, 13, 71, 8, 18, 68, 101, 21, 130, 53, 226, 10, 167, 77, 160, 10, 138, 35, 40, 15, 252, 70, 225, 18, 184, 67, 175, 47, 252, 19, 228, 3, 71, 19, 220, 3, 160, 38, 9, 12, 126, 23, 251, 20, 9, 62, 131, 6, 213, 32, 159, 4, 239, 58, 62, 9, 65, 77, 90, 27, 187, 46, 26, 6, 111, 28, 104, 4, 219, 65, 252, 5, 146, 61, 5, 21, 116, 57, 17, 8, 137, 78, 107, 8, 6, 67, 53, 32, 247, 69, 174, 24, 91, 21, 224, 5, 4, 16, 14, 10, 13, 68, 154, 26, 41, 22, 72, 11, 252, 64, 54, 13, 15, 35, 39, 7, 191, 78, 129, 18, 94, 76, 126, 28, 2, 26, 221, 10, 208, 44, 249, 12, 197, 75, 190, 19, 190, 73, 114, 18, 55, 64, 69, 9, 206, 79, 34, 17, 89, 44, 158, 103, 73, 45, 252, 11, 50, 11, 30, 6, 244, 19, 46, 4, 142, 37, 51, 19, 75, 19, 208, 13, 117, 29, 110, 3, 237, 80, 83, 3, 26, 27, 43, 17, 159, 65, 53, 30, 153, 39, 251, 3, 117, 38, 196, 3, 134, 60, 115, 15, 99, 60, 102, 13, 175, 73, 214, 3, 152, 78, 195, 3, 236, 65, 87, 50, 254, 55, 104, 16, 199, 25, 196, 4, 6, 36, 46, 3, 46, 66, 14, 20, 29, 22, 34, 19, 112, 21, 6, 7, 34, 79, 122, 15, 109, 66, 34, 24, 9, 70, 41, 23, 149, 36, 92, 13, 50, 29, 179, 7, 81, 76, 57, 20, 59, 74, 190, 11, 70, 64, 204, 14, 198, 62, 63, 9, 216, 33, 183, 10, 229, 36, 246, 102, 104, 42, 7, 5, 227, 13, 241, 3, 230, 21, 38, 14, 253, 75, 136, 21, 165, 48, 29, 3, 154, 80, 143, 3, 67, 60, 250, 11, 141, 66, 35, 40, 195, 73, 73, 10, 73, 15, 244, 4, 63, 76, 43, 13, 132, 70, 110, 20, 91, 75, 142, 6, 52, 76, 100, 12, 152, 70, 2, 42, 241, 64, 189, 26, 62, 12, 250, 8, 117, 42, 133, 9, 220, 60, 1, 27, 53, 49, 53, 13, 108, 43, 225, 12, 122, 65, 120, 9, 165, 73, 59, 26, 19, 67, 159, 38, 199, 49, 45, 10, 233, 34, 68, 12, 89, 74, 84, 30, 171, 71, 40, 15, 251, 79, 98, 14, 146, 76, 52, 13, 244, 50, 173, 75, 30, 41, 84, 90, 1, 0, 3, 0, 0, 0, 1, 0, 2, 0, 4, 0, 82, 120, 26, 113, 81, 106, 240, 99, 241, 93, 78, 88, 2, 83, 7, 78, 89, 73, 242, 68, 51, 115, 174, 103, 80, 93, 251, 83, 149, 75, 6, 68, 56, 61, 25, 55, 150, 49, 161, 44, 205, 76, 21, 46, 166, 27, 151, 16, 244, 9, 249, 5, 149, 3, 38, 2, 74, 1, 198, 0, 249, 79, 26, 80, 59, 80, 92, 80, 125, 80, 164, 80, 197, 80, 236, 80, 13, 81, 52, 81, 85, 81, 124, 81, 157, 81, 196, 81, 236, 81, 19, 82, 58, 82, 97, 82, 137, 82, 176, 82, 215, 82, 255, 82, 38, 83, 84, 83, 123, 83, 169, 83, 208, 83, 254, 83, 38, 84, 84, 84, 129, 84, 175, 84, 221, 84, 11, 85, 57, 85, 103, 85, 149, 85, 201, 85, 247, 85, 43, 86, 89, 86, 142, 86, 194, 86, 247, 86, 43, 87, 95, 87, 148, 87, 200, 87, 3, 88, 56, 88, 115, 88, 174, 88, 233, 88, 36, 89, 95, 89, 154, 89, 219, 89, 22, 90, 88, 90, 153, 90, 212, 90, 28, 91, 94, 91, 159, 91, 231, 91, 48, 92, 113, 92, 192, 92, 8, 93, 80, 93, 159, 93, 237, 93, 60, 94, 138, 94, 224, 94, 46, 95, 131, 95, 217, 95, 52, 96, 138, 96, 229, 96, 72, 97, 163, 97, 6, 98, 104, 98, 209, 98, 51, 99, 156, 99, 11, 100, 123, 100, 234, 100, 96, 101, 214, 101, 76, 102, 201, 102, 76, 103, 207, 103, 82, 104, 220, 104, 108, 105, 252, 105, 147, 106, 48, 107, 205, 107, 113, 108, 27, 109, 204, 109, 125, 110, 59, 111, 249, 111, 197, 112, 150, 113, 111, 114, 84, 115, 64, 116, 50, 117, 50, 118, 63, 119, 88, 120, 225, 122, 255, 127, 255, 127, 255, 127, 255, 127, 255, 127, 255, 127, 255, 127, 225, 122, 88, 120, 63, 119, 50, 118, 50, 117, 64, 116, 84, 115, 111, 114, 150, 113, 197, 112, 249, 111, 59, 111, 125, 110, 204, 109, 27, 109, 113, 108, 205, 107, 48, 107, 147, 106, 252, 105, 108, 105, 220, 104, 82, 104, 207, 103, 76, 103, 201, 102, 76, 102, 214, 101, 96, 101, 234, 100, 123, 100, 11, 100, 156, 99, 51, 99, 209, 98, 104, 98, 6, 98, 163, 97, 72, 97, 229, 96, 138, 96, 52, 96, 217, 95, 131, 95, 46, 95, 224, 94, 138, 94, 60, 94, 237, 93, 159, 93, 80, 93, 8, 93, 192, 92, 113, 92, 48, 92, 231, 91, 159, 91, 94, 91, 28, 91, 212, 90, 153, 90, 88, 90, 22, 90, 219, 89, 154, 89, 95, 89, 36, 89, 233, 88, 174, 88, 115, 88, 56, 88, 3, 88, 200, 87, 148, 87, 95, 87, 43, 87, 247, 86, 194, 86, 142, 86, 89, 86, 43, 86, 247, 85, 201, 85, 149, 85, 103, 85, 57, 85, 11, 85, 221, 84, 175, 84, 129, 84, 84, 84, 38, 84, 254, 83, 208, 83, 169, 83, 123, 83, 84, 83, 38, 83, 255, 82, 215, 82, 176, 82, 137, 82, 97, 82, 58, 82, 19, 82, 236, 81, 196, 81, 157, 81, 124, 81, 85, 81, 52, 81, 13, 81, 236, 80, 197, 80, 164, 80, 125, 80, 92, 80, 59, 80, 26, 80, 249, 79, 210, 79, 177, 79, 145, 79, 112, 79, 13, 0, 14, 0, 16, 0, 18, 0, 20, 0, 21, 0, 27, 0, 32, 0, 6, 0, 7, 0, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 1, 0, 13, 0, 14, 0, 16, 0, 18, 0, 19, 0, 21, 0, 26, 0, 31, 0, 6, 0, 6, 0, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 1, 0, 79, 115, 156, 110, 74, 97, 126, 77, 72, 54, 9, 31, 195, 10, 153, 251, 125, 242, 48, 239, 127, 240, 173, 244, 231, 249, 176, 254, 22, 2, 202, 3, 255, 3, 55, 3, 4, 2, 220, 0, 0, 0, 125, 255, 62, 255, 41, 255, 0, 0, 216, 127, 107, 127, 182, 126, 187, 125, 123, 124, 248, 122, 53, 121, 53, 119, 250, 116, 137, 114, 128, 46, 128, 67, 0, 120, 0, 101, 128, 94, 64, 113, 64, 95, 192, 28, 64, 76, 192, 57, 84, 0, 1, 0, 254, 255, 2, 0, 5, 0, 10, 0, 5, 0, 9, 0, 20, 0, 84, 0, 1, 0, 254, 255, 2, 0, 5, 0, 10, 0, 5, 0, 9, 0, 20, 0, 84, 0, 1, 0, 254, 255, 2, 0, 3, 0, 6, 0, 5, 0, 9, 0, 20, 0, 84, 0, 1, 0, 254, 255, 2, 0, 3, 0, 6, 0, 5, 0, 9, 0, 20, 0, 84, 0, 1, 0, 254, 255, 2, 0, 3, 0, 6, 0, 5, 0, 9, 0, 20, 0, 84, 0, 1, 0, 254, 255, 2, 0, 3, 0, 6, 0, 10, 0, 19, 0, 20, 0, 84, 0, 1, 0, 254, 255, 2, 0, 3, 0, 6, 0, 5, 0, 9, 0, 20, 0, 94, 0, 0, 0, 253, 255, 3, 0, 3, 0, 6, 0, 5, 0, 9, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 19, 0, 19, 0, 19, 0, 19, 0, 23, 0, 39, 0, 57, 0, 5, 0, 8, 0, 8, 0, 7, 0, 8, 0, 7, 0, 2, 0, 8, 0, 4, 0, 7, 0, 2, 0, 4, 0, 7, 0, 2, 0, 8, 0, 4, 0, 7, 0, 2, 0, 8, 0, 8, 0, 7, 0, 8, 0, 7, 0, 2, 0, 6, 0, 4, 0, 7, 0, 2, 0, 6, 0, 4, 0, 7, 0, 2, 0, 6, 0, 4, 0, 7, 0, 2, 0, 6, 0, 8, 0, 9, 0, 9, 0, 8, 0, 9, 0, 2, 0, 6, 0, 4, 0, 9, 0, 2, 0, 6, 0, 8, 0, 9, 0, 2, 0, 6, 0, 4, 0, 9, 0, 2, 0, 6, 0, 8, 0, 9, 0, 9, 0, 8, 0, 11, 0, 3, 0, 7, 0, 4, 0, 11, 0, 3, 0, 7, 0, 8, 0, 11, 0, 3, 0, 7, 0, 4, 0, 11, 0, 3, 0, 7, 0, 8, 0, 9, 0, 9, 0, 8, 0, 13, 0, 4, 0, 7, 0, 5, 0, 13, 0, 4, 0, 7, 0, 8, 0, 13, 0, 4, 0, 7, 0, 5, 0, 13, 0, 4, 0, 7, 0, 9, 0, 9, 0, 9, 0, 8, 0, 13, 0, 4, 0, 4, 0, 5, 0, 6, 0, 13, 0, 4, 0, 4, 0, 5, 0, 8, 0, 13, 0, 4, 0, 4, 0, 5, 0, 6, 0, 13, 0, 4, 0, 4, 0, 5, 0, 8, 0, 9, 0, 9, 0, 8, 0, 1, 0, 1, 0, 1, 0, 1, 0, 10, 0, 10, 0, 7, 0, 7, 0, 5, 0, 1, 0, 1, 0, 1, 0, 1, 0, 10, 0, 10, 0, 7, 0, 7, 0, 8, 0, 1, 0, 1, 0, 1, 0, 1, 0, 10, 0, 10, 0, 7, 0, 7, 0, 5, 0, 1, 0, 1, 0, 1, 0, 1, 0, 10, 0, 10, 0, 7, 0, 7, 0, 7, 0, 8, 0, 9, 0, 8, 0, 6, 0, 9, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 5, 0, 6, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 5, 0, 9, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 5, 0, 6, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 5, 0, 3, 0, 8, 0, 9, 0, 9, 0, 6, 0, 95, 0, 103, 0, 118, 0, 134, 0, 148, 0, 159, 0, 204, 0, 244, 0, 39, 0, 43, 0, 38, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 0, 14, 0, 15, 0, 23, 0, 24, 0, 25, 0, 26, 0, 27, 0, 28, 0, 48, 0, 49, 0, 61, 0, 62, 0, 82, 0, 83, 0, 47, 0, 46, 0, 45, 0, 44, 0, 81, 0, 80, 0, 79, 0, 78, 0, 17, 0, 18, 0, 20, 0, 22, 0, 77, 0, 76, 0, 75, 0, 74, 0, 29, 0, 30, 0, 43, 0, 42, 0, 41, 0, 40, 0, 38, 0, 39, 0, 16, 0, 19, 0, 21, 0, 50, 0, 51, 0, 59, 0, 60, 0, 63, 0, 64, 0, 72, 0, 73, 0, 84, 0, 85, 0, 93, 0, 94, 0, 32, 0, 33, 0, 35, 0, 36, 0, 53, 0, 54, 0, 56, 0, 57, 0, 66, 0, 67, 0, 69, 0, 70, 0, 87, 0, 88, 0, 90, 0, 91, 0, 34, 0, 55, 0, 68, 0, 89, 0, 37, 0, 58, 0, 71, 0, 92, 0, 31, 0, 52, 0, 65, 0, 86, 0, 7, 0, 6, 0, 5, 0, 4, 0, 3, 0, 2, 0, 1, 0, 0, 0, 15, 0, 14, 0, 13, 0, 12, 0, 11, 0, 10, 0, 9, 0, 8, 0, 23, 0, 24, 0, 25, 0, 26, 0, 27, 0, 46, 0, 65, 0, 84, 0, 45, 0, 44, 0, 43, 0, 64, 0, 63, 0, 62, 0, 83, 0, 82, 0, 81, 0, 102, 0, 101, 0, 100, 0, 42, 0, 61, 0, 80, 0, 99, 0, 28, 0, 47, 0, 66, 0, 85, 0, 18, 0, 41, 0, 60, 0, 79, 0, 98, 0, 29, 0, 48, 0, 67, 0, 17, 0, 20, 0, 22, 0, 40, 0, 59, 0, 78, 0, 97, 0, 21, 0, 30, 0, 49, 0, 68, 0, 86, 0, 19, 0, 16, 0, 87, 0, 39, 0, 38, 0, 58, 0, 57, 0, 77, 0, 35, 0, 54, 0, 73, 0, 92, 0, 76, 0, 96, 0, 95, 0, 36, 0, 55, 0, 74, 0, 93, 0, 32, 0, 51, 0, 33, 0, 52, 0, 70, 0, 71, 0, 89, 0, 90, 0, 31, 0, 50, 0, 69, 0, 88, 0, 37, 0, 56, 0, 75, 0, 94, 0, 34, 0, 53, 0, 72, 0, 91, 0, 0, 0, 1, 0, 4, 0, 5, 0, 3, 0, 6, 0, 7, 0, 2, 0, 13, 0, 15, 0, 8, 0, 9, 0, 11, 0, 12, 0, 14, 0, 10, 0, 16, 0, 28, 0, 74, 0, 29, 0, 75, 0, 27, 0, 73, 0, 26, 0, 72, 0, 30, 0, 76, 0, 51, 0, 97, 0, 50, 0, 71, 0, 96, 0, 117, 0, 31, 0, 77, 0, 52, 0, 98, 0, 49, 0, 70, 0, 95, 0, 116, 0, 53, 0, 99, 0, 32, 0, 78, 0, 33, 0, 79, 0, 48, 0, 69, 0, 94, 0, 115, 0, 47, 0, 68, 0, 93, 0, 114, 0, 46, 0, 67, 0, 92, 0, 113, 0, 19, 0, 21, 0, 23, 0, 22, 0, 18, 0, 17, 0, 20, 0, 24, 0, 111, 0, 43, 0, 89, 0, 110, 0, 64, 0, 65, 0, 44, 0, 90, 0, 25, 0, 45, 0, 66, 0, 91, 0, 112, 0, 54, 0, 100, 0, 40, 0, 61, 0, 86, 0, 107, 0, 39, 0, 60, 0, 85, 0, 106, 0, 36, 0, 57, 0, 82, 0, 103, 0, 35, 0, 56, 0, 81, 0, 102, 0, 34, 0, 55, 0, 80, 0, 101, 0, 42, 0, 63, 0, 88, 0, 109, 0, 41, 0, 62, 0, 87, 0, 108, 0, 38, 0, 59, 0, 84, 0, 105, 0, 37, 0, 58, 0, 83, 0, 104, 0, 0, 0, 1, 0, 4, 0, 3, 0, 5, 0, 6, 0, 13, 0, 7, 0, 2, 0, 8, 0, 9, 0, 11, 0, 15, 0, 12, 0, 14, 0, 10, 0, 28, 0, 82, 0, 29, 0, 83, 0, 27, 0, 81, 0, 26, 0, 80, 0, 30, 0, 84, 0, 16, 0, 55, 0, 109, 0, 56, 0, 110, 0, 31, 0, 85, 0, 57, 0, 111, 0, 48, 0, 73, 0, 102, 0, 127, 0, 32, 0, 86, 0, 51, 0, 76, 0, 105, 0, 130, 0, 52, 0, 77, 0, 106, 0, 131, 0, 58, 0, 112, 0, 33, 0, 87, 0, 19, 0, 23, 0, 53, 0, 78, 0, 107, 0, 132, 0, 21, 0, 22, 0, 18, 0, 17, 0, 20, 0, 24, 0, 25, 0, 50, 0, 75, 0, 104, 0, 129, 0, 47, 0, 72, 0, 101, 0, 126, 0, 54, 0, 79, 0, 108, 0, 133, 0, 46, 0, 71, 0, 100, 0, 125, 0, 128, 0, 103, 0, 74, 0, 49, 0, 45, 0, 70, 0, 99, 0, 124, 0, 42, 0, 67, 0, 96, 0, 121, 0, 39, 0, 64, 0, 93, 0, 118, 0, 38, 0, 63, 0, 92, 0, 117, 0, 35, 0, 60, 0, 89, 0, 114, 0, 34, 0, 59, 0, 88, 0, 113, 0, 44, 0, 69, 0, 98, 0, 123, 0, 43, 0, 68, 0, 97, 0, 122, 0, 41, 0, 66, 0, 95, 0, 120, 0, 40, 0, 65, 0, 94, 0, 119, 0, 37, 0, 62, 0, 91, 0, 116, 0, 36, 0, 61, 0, 90, 0, 115, 0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 0, 14, 0, 15, 0, 16, 0, 26, 0, 87, 0, 27, 0, 88, 0, 28, 0, 89, 0, 29, 0, 90, 0, 30, 0, 91, 0, 51, 0, 80, 0, 112, 0, 141, 0, 52, 0, 81, 0, 113, 0, 142, 0, 54, 0, 83, 0, 115, 0, 144, 0, 55, 0, 84, 0, 116, 0, 145, 0, 58, 0, 119, 0, 59, 0, 120, 0, 21, 0, 22, 0, 23, 0, 17, 0, 18, 0, 19, 0, 31, 0, 60, 0, 92, 0, 121, 0, 56, 0, 85, 0, 117, 0, 146, 0, 20, 0, 24, 0, 25, 0, 50, 0, 79, 0, 111, 0, 140, 0, 57, 0, 86, 0, 118, 0, 147, 0, 49, 0, 78, 0, 110, 0, 139, 0, 48, 0, 77, 0, 53, 0, 82, 0, 114, 0, 143, 0, 109, 0, 138, 0, 47, 0, 76, 0, 108, 0, 137, 0, 32, 0, 33, 0, 61, 0, 62, 0, 93, 0, 94, 0, 122, 0, 123, 0, 41, 0, 42, 0, 43, 0, 44, 0, 45, 0, 46, 0, 70, 0, 71, 0, 72, 0, 73, 0, 74, 0, 75, 0, 102, 0, 103, 0, 104, 0, 105, 0, 106, 0, 107, 0, 131, 0, 132, 0, 133, 0, 134, 0, 135, 0, 136, 0, 34, 0, 63, 0, 95, 0, 124, 0, 35, 0, 64, 0, 96, 0, 125, 0, 36, 0, 65, 0, 97, 0, 126, 0, 37, 0, 66, 0, 98, 0, 127, 0, 38, 0, 67, 0, 99, 0, 128, 0, 39, 0, 68, 0, 100, 0, 129, 0, 40, 0, 69, 0, 101, 0, 130, 0, 8, 0, 7, 0, 6, 0, 5, 0, 4, 0, 3, 0, 2, 0, 14, 0, 16, 0, 9, 0, 10, 0, 12, 0, 13, 0, 15, 0, 11, 0, 17, 0, 20, 0, 22, 0, 24, 0, 23, 0, 19, 0, 18, 0, 21, 0, 56, 0, 88, 0, 122, 0, 154, 0, 57, 0, 89, 0, 123, 0, 155, 0, 58, 0, 90, 0, 124, 0, 156, 0, 52, 0, 84, 0, 118, 0, 150, 0, 53, 0, 85, 0, 119, 0, 151, 0, 27, 0, 93, 0, 28, 0, 94, 0, 29, 0, 95, 0, 30, 0, 96, 0, 31, 0, 97, 0, 61, 0, 127, 0, 62, 0, 128, 0, 63, 0, 129, 0, 59, 0, 91, 0, 125, 0, 157, 0, 32, 0, 98, 0, 64, 0, 130, 0, 1, 0, 0, 0, 25, 0, 26, 0, 33, 0, 99, 0, 34, 0, 100, 0, 65, 0, 131, 0, 66, 0, 132, 0, 54, 0, 86, 0, 120, 0, 152, 0, 60, 0, 92, 0, 126, 0, 158, 0, 55, 0, 87, 0, 121, 0, 153, 0, 117, 0, 116, 0, 115, 0, 46, 0, 78, 0, 112, 0, 144, 0, 43, 0, 75, 0, 109, 0, 141, 0, 40, 0, 72, 0, 106, 0, 138, 0, 36, 0, 68, 0, 102, 0, 134, 0, 114, 0, 149, 0, 148, 0, 147, 0, 146, 0, 83, 0, 82, 0, 81, 0, 80, 0, 51, 0, 50, 0, 49, 0, 48, 0, 47, 0, 45, 0, 44, 0, 42, 0, 39, 0, 35, 0, 79, 0, 77, 0, 76, 0, 74, 0, 71, 0, 67, 0, 113, 0, 111, 0, 110, 0, 108, 0, 105, 0, 101, 0, 145, 0, 143, 0, 142, 0, 140, 0, 137, 0, 133, 0, 41, 0, 73, 0, 107, 0, 139, 0, 37, 0, 69, 0, 103, 0, 135, 0, 38, 0, 70, 0, 104, 0, 136, 0, 7, 0, 6, 0, 5, 0, 4, 0, 3, 0, 2, 0, 1, 0, 0, 0, 16, 0, 15, 0, 14, 0, 13, 0, 12, 0, 11, 0, 10, 0, 9, 0, 8, 0, 26, 0, 27, 0, 28, 0, 29, 0, 30, 0, 31, 0, 115, 0, 116, 0, 117, 0, 118, 0, 119, 0, 120, 0, 72, 0, 73, 0, 161, 0, 162, 0, 65, 0, 68, 0, 69, 0, 108, 0, 111, 0, 112, 0, 154, 0, 157, 0, 158, 0, 197, 0, 200, 0, 201, 0, 32, 0, 33, 0, 121, 0, 122, 0, 74, 0, 75, 0, 163, 0, 164, 0, 66, 0, 109, 0, 155, 0, 198, 0, 19, 0, 23, 0, 21, 0, 22, 0, 18, 0, 17, 0, 20, 0, 24, 0, 25, 0, 37, 0, 36, 0, 35, 0, 34, 0, 80, 0, 79, 0, 78, 0, 77, 0, 126, 0, 125, 0, 124, 0, 123, 0, 169, 0, 168, 0, 167, 0, 166, 0, 70, 0, 67, 0, 71, 0, 113, 0, 110, 0, 114, 0, 159, 0, 156, 0, 160, 0, 202, 0, 199, 0, 203, 0, 76, 0, 165, 0, 81, 0, 82, 0, 92, 0, 91, 0, 93, 0, 83, 0, 95, 0, 85, 0, 84, 0, 94, 0, 101, 0, 102, 0, 96, 0, 104, 0, 86, 0, 103, 0, 87, 0, 97, 0, 127, 0, 128, 0, 138, 0, 137, 0, 139, 0, 129, 0, 141, 0, 131, 0, 130, 0, 140, 0, 147, 0, 148, 0, 142, 0, 150, 0, 132, 0, 149, 0, 133, 0, 143, 0, 170, 0, 171, 0, 181, 0, 180, 0, 182, 0, 172, 0, 184, 0, 174, 0, 173, 0, 183, 0, 190, 0, 191, 0, 185, 0, 193, 0, 175, 0, 192, 0, 176, 0, 186, 0, 38, 0, 39, 0, 49, 0, 48, 0, 50, 0, 40, 0, 52, 0, 42, 0, 41, 0, 51, 0, 58, 0, 59, 0, 53, 0, 61, 0, 43, 0, 60, 0, 44, 0, 54, 0, 194, 0, 179, 0, 189, 0, 196, 0, 177, 0, 195, 0, 178, 0, 187, 0, 188, 0, 151, 0, 136, 0, 146, 0, 153, 0, 134, 0, 152, 0, 135, 0, 144, 0, 145, 0, 105, 0, 90, 0, 100, 0, 107, 0, 88, 0, 106, 0, 89, 0, 98, 0, 99, 0, 62, 0, 47, 0, 57, 0, 64, 0, 45, 0, 63, 0, 46, 0, 55, 0, 56, 0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 0, 14, 0, 23, 0, 15, 0, 16, 0, 17, 0, 18, 0, 19, 0, 20, 0, 21, 0, 22, 0, 24, 0, 25, 0, 26, 0, 27, 0, 28, 0, 38, 0, 141, 0, 39, 0, 142, 0, 40, 0, 143, 0, 41, 0, 144, 0, 42, 0, 145, 0, 43, 0, 146, 0, 44, 0, 147, 0, 45, 0, 148, 0, 46, 0, 149, 0, 47, 0, 97, 0, 150, 0, 200, 0, 48, 0, 98, 0, 151, 0, 201, 0, 49, 0, 99, 0, 152, 0, 202, 0, 86, 0, 136, 0, 189, 0, 239, 0, 87, 0, 137, 0, 190, 0, 240, 0, 88, 0, 138, 0, 191, 0, 241, 0, 91, 0, 194, 0, 92, 0, 195, 0, 93, 0, 196, 0, 94, 0, 197, 0, 95, 0, 198, 0, 29, 0, 30, 0, 31, 0, 32, 0, 33, 0, 34, 0, 35, 0, 50, 0, 100, 0, 153, 0, 203, 0, 89, 0, 139, 0, 192, 0, 242, 0, 51, 0, 101, 0, 154, 0, 204, 0, 55, 0, 105, 0, 158, 0, 208, 0, 90, 0, 140, 0, 193, 0, 243, 0, 59, 0, 109, 0, 162, 0, 212, 0, 63, 0, 113, 0, 166, 0, 216, 0, 67, 0, 117, 0, 170, 0, 220, 0, 36, 0, 37, 0, 54, 0, 53, 0, 52, 0, 58, 0, 57, 0, 56, 0, 62, 0, 61, 0, 60, 0, 66, 0, 65, 0, 64, 0, 70, 0, 69, 0, 68, 0, 104, 0, 103, 0, 102, 0, 108, 0, 107, 0, 106, 0, 112, 0, 111, 0, 110, 0, 116, 0, 115, 0, 114, 0, 120, 0, 119, 0, 118, 0, 157, 0, 156, 0, 155, 0, 161, 0, 160, 0, 159, 0, 165, 0, 164, 0, 163, 0, 169, 0, 168, 0, 167, 0, 173, 0, 172, 0, 171, 0, 207, 0, 206, 0, 205, 0, 211, 0, 210, 0, 209, 0, 215, 0, 214, 0, 213, 0, 219, 0, 218, 0, 217, 0, 223, 0, 222, 0, 221, 0, 73, 0, 72, 0, 71, 0, 76, 0, 75, 0, 74, 0, 79, 0, 78, 0, 77, 0, 82, 0, 81, 0, 80, 0, 85, 0, 84, 0, 83, 0, 123, 0, 122, 0, 121, 0, 126, 0, 125, 0, 124, 0, 129, 0, 128, 0, 127, 0, 132, 0, 131, 0, 130, 0, 135, 0, 134, 0, 133, 0, 176, 0, 175, 0, 174, 0, 179, 0, 178, 0, 177, 0, 182, 0, 181, 0, 180, 0, 185, 0, 184, 0, 183, 0, 188, 0, 187, 0, 186, 0, 226, 0, 225, 0, 224, 0, 229, 0, 228, 0, 227, 0, 232, 0, 231, 0, 230, 0, 235, 0, 234, 0, 233, 0, 238, 0, 237, 0, 236, 0, 96, 0, 199, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 3, 0, 1, 0, 3, 0, 2, 0, 4, 0, 1, 0, 4, 0, 1, 0, 4, 0, 0, 0, 205, 12, 156, 25, 0, 32, 102, 38, 205, 44, 0, 48, 51, 51, 102, 54, 154, 57, 205, 60, 0, 64, 51, 67, 102, 70, 154, 73, 205, 76, 159, 0, 64, 241, 53, 167, 206, 0, 190, 242, 52, 176, 12, 1, 67, 244, 88, 185, 93, 1, 201, 245, 133, 194, 163, 1, 215, 246, 223, 200, 226, 1, 166, 247, 189, 205, 42, 2, 116, 248, 147, 210, 125, 2, 66, 249, 109, 215, 221, 2, 18, 250, 77, 220, 74, 3, 222, 250, 30, 225, 201, 3, 174, 251, 0, 230, 90, 4, 124, 252, 216, 234, 1, 5, 74, 253, 179, 239, 193, 5, 25, 254, 141, 244, 158, 6, 231, 254, 104, 249, 156, 7, 181, 255, 67, 254, 193, 8, 133, 0, 33, 3, 17, 10, 83, 1, 252, 7, 147, 11, 33, 2, 213, 12, 80, 13, 240, 2, 178, 17, 79, 15, 190, 3, 140, 22, 155, 17, 141, 4, 104, 27, 63, 20, 91, 5, 67, 32, 72, 23, 41, 6, 29, 37, 199, 26, 248, 6, 249, 41, 203, 30, 199, 7, 212, 46, 105, 35, 149, 8, 175, 51, 185, 40, 100, 9, 138, 56, 222, 48, 113, 10, 224, 62, 135, 63, 244, 11, 253, 71, 150, 82, 120, 13, 27, 81, 93, 107, 252, 14, 57, 90, 93, 107, 252, 14, 57, 90, 0, 0, 1, 0, 3, 0, 2, 0, 6, 0, 4, 0, 5, 0, 7, 0, 0, 0, 1, 0, 3, 0, 2, 0, 5, 0, 6, 0, 4, 0, 7, 0, 248, 127, 211, 127, 76, 127, 108, 126, 51, 125, 163, 123, 188, 121, 127, 119, 239, 116, 12, 114, 217, 110, 89, 107, 141, 103, 121, 99, 31, 95, 130, 90, 166, 85, 141, 80, 60, 75, 182, 69, 0, 64, 28, 58, 15, 52, 223, 45, 141, 39, 32, 33, 156, 26, 6, 20, 97, 13, 178, 6, 0, 0, 78, 249, 159, 242, 250, 235, 100, 229, 224, 222, 115, 216, 33, 210, 241, 203, 228, 197, 0, 192, 74, 186, 196, 180, 115, 175, 90, 170, 126, 165, 225, 160, 135, 156, 115, 152, 167, 148, 39, 145, 244, 141, 17, 139, 129, 136, 68, 134, 93, 132, 205, 130, 148, 129, 180, 128, 45, 128, 8, 128, 255, 127, 46, 124, 174, 120, 118, 117, 125, 114, 186, 111, 41, 109, 194, 106, 131, 104, 102, 102, 105, 100, 137, 98, 194, 96, 19, 95, 122, 93, 245, 91, 130, 90, 33, 89, 207, 87, 139, 86, 85, 85, 44, 84, 15, 83, 252, 81, 244, 80, 246, 79, 1, 79, 20, 78, 48, 77, 83, 76, 126, 75, 175, 74, 231, 73, 37, 73, 104, 72, 178, 71, 0, 71, 84, 70, 173, 69, 10, 69, 107, 68, 209, 67, 59, 67, 168, 66, 25, 66, 142, 65, 6, 65, 130, 64, 0, 64, 0, 0, 175, 5, 50, 11, 140, 16, 192, 21, 207, 26, 188, 31, 136, 36, 53, 41, 196, 45, 55, 50, 143, 54, 206, 58, 245, 62, 4, 67, 252, 70, 223, 74, 174, 78, 105, 82, 17, 86, 167, 89, 44, 93, 159, 96, 3, 100, 87, 103, 155, 106, 209, 109, 250, 112, 20, 116, 33, 119, 34, 122, 23, 125, 255, 127, 255, 127, 217, 127, 98, 127, 157, 126, 138, 125, 42, 124, 125, 122, 133, 120, 66, 118, 182, 115, 227, 112, 202, 109, 110, 106, 208, 102, 242, 98, 215, 94, 130, 90, 246, 85, 52, 81, 64, 76, 29, 71, 206, 65, 87, 60, 186, 54, 252, 48, 31, 43, 40, 37, 26, 31, 249, 24, 200, 18, 140, 12, 72, 6, 0, 0, 184, 249, 116, 243, 56, 237, 7, 231, 230, 224, 216, 218, 225, 212, 4, 207, 70, 201, 169, 195, 50, 190, 227, 184, 192, 179, 204, 174, 10, 170, 126, 165, 41, 161, 14, 157, 48, 153, 146, 149, 54, 146, 29, 143, 74, 140, 190, 137, 123, 135, 131, 133, 214, 131, 118, 130, 99, 129, 158, 128, 39, 128, 0, 128, 249, 150, 148, 221, 53, 235, 27, 241, 93, 244, 116, 246, 223, 247, 237, 248, 184, 249, 86, 250, 214, 250, 61, 251, 148, 251, 221, 251, 26, 252, 78, 252, 123, 252, 163, 252, 197, 252, 227, 252, 252, 252, 18, 253, 38, 253, 55, 253, 69, 253, 81, 253, 91, 253, 100, 253, 106, 253, 111, 253, 114, 253, 116, 253, 116, 253, 114, 253, 111, 253, 106, 253, 100, 253, 91, 253, 81, 253, 69, 253, 55, 253, 38, 253, 18, 253, 252, 252, 227, 252, 197, 252, 163, 252, 123, 252, 78, 252, 26, 252, 221, 251, 148, 251, 61, 251, 214, 250, 86, 250, 184, 249, 237, 248, 223, 247, 116, 246, 93, 244, 27, 241, 53, 235, 148, 221, 249, 150, 48, 117, 144, 101, 8, 82, 152, 58, 64, 31, 0, 0, 192, 224, 104, 197, 248, 173, 112, 154, 153, 104, 33, 3, 201, 9, 85, 253, 154, 250, 70, 2, 92, 2, 6, 251, 183, 13, 250, 232, 182, 17, 13, 254, 108, 248, 195, 11, 62, 236, 238, 21, 58, 248, 219, 251, 77, 250, 90, 17, 68, 253, 41, 235, 1, 18, 196, 1, 179, 253, 232, 242, 137, 11, 243, 4, 68, 251, 226, 245, 195, 6, 86, 14, 133, 238, 49, 252, 39, 17, 23, 246, 181, 3, 173, 250, 45, 252, 102, 22, 66, 118, 247, 14, 60, 240, 156, 11, 232, 251, 22, 252, 173, 9, 29, 244, 255, 10, 73, 247, 217, 6, 181, 249, 178, 6, 17, 249, 7, 6, 16, 252, 173, 1, 87, 255, 216, 1, 16, 251, 128, 8, 110, 245, 219, 9, 171, 249, 88, 1, 58, 3, 7, 250, 188, 6, 135, 249, 165, 6, 241, 247, 84, 10, 12, 244, 81, 11, 70, 248, 45, 2, 12, 3, 167, 250, 74, 3, 143, 2, 98, 57, 254, 44, 244, 4, 55, 245, 217, 233, 90, 29, 221, 255, 9, 245, 32, 244, 215, 18, 136, 11, 24, 223, 201, 14, 175, 5, 131, 8, 67, 222, 115, 31, 201, 247, 82, 250, 9, 3, 84, 4, 175, 246, 206, 8, 149, 254, 94, 253, 201, 247, 158, 23, 207, 233, 48, 4, 51, 12, 62, 236, 192, 20, 231, 246, 112, 241, 12, 27, 207, 240, 163, 2, 17, 249, 29, 0, 161, 39, 66, 118, 247, 14, 60, 240, 156, 11, 232, 251, 22, 252, 173, 9, 29, 244, 255, 10, 73, 247, 217, 6, 181, 249, 178, 6, 17, 249, 7, 6, 16, 252, 173, 1, 87, 255, 216, 1, 16, 251, 128, 8, 110, 245, 219, 9, 171, 249, 88, 1, 58, 3, 7, 250, 188, 6, 135, 249, 165, 6, 241, 247, 84, 10, 12, 244, 81, 11, 70, 248, 45, 2, 12, 3, 167, 250, 74, 3, 143, 2, 0, 64, 103, 65, 213, 66, 76, 68, 203, 69, 82, 71, 226, 72, 122, 74, 28, 76, 199, 77, 123, 79, 56, 81, 255, 82, 209, 84, 172, 86, 146, 88, 130, 90, 126, 92, 132, 94, 150, 96, 180, 98, 221, 100, 18, 103, 84, 105, 162, 107, 254, 109, 102, 112, 221, 114, 96, 117, 242, 119, 147, 122, 66, 125, 255, 127, 3, 115, 186, 110, 119, 98, 225, 79, 109, 57, 245, 33, 71, 12, 184, 250, 206, 238, 23, 233, 38, 233, 191, 237, 33, 245, 96, 253, 187, 4, 232, 9, 58, 12, 175, 11, 211, 8, 146, 4, 0, 0, 23, 252, 140, 249, 180, 248, 126, 249, 133, 251, 48, 254, 218, 0, 244, 2, 36, 4, 75, 4, 136, 3, 38, 2, 135, 0, 11, 255, 254, 253, 134, 253, 166, 253, 61, 254, 25, 255, 0, 0, 191, 0, 52, 1, 84, 1, 40, 1, 198, 0, 78, 0, 220, 255, 136, 255, 93, 255, 91, 255, 124, 255, 177, 255, 237, 255, 34, 0, 73, 0, 91, 0, 89, 0, 70, 0, 38, 0, 0, 0, 254, 254, 194, 254, 73, 254, 134, 253, 112, 253, 251, 252, 57, 253, 10, 254, 244, 254, 63, 255, 254, 255, 125, 0, 122, 0, 217, 255, 247, 255, 105, 0, 129, 0, 27, 1, 116, 1, 63, 2, 235, 254, 188, 254, 59, 255, 25, 254, 67, 254, 150, 254, 220, 254, 229, 255, 177, 0, 31, 2, 86, 1, 5, 2, 4, 2, 130, 0, 27, 0, 152, 255, 136, 255, 116, 255, 182, 255, 200, 255, 204, 253, 81, 252, 16, 250, 59, 252, 210, 252, 242, 253, 190, 254, 254, 255, 159, 0, 145, 2, 200, 254, 228, 254, 126, 254, 171, 253, 19, 254, 242, 253, 94, 254, 27, 255, 105, 0, 193, 1, 211, 253, 154, 252, 205, 251, 105, 252, 74, 252, 16, 253, 59, 253, 196, 254, 62, 0, 230, 1, 198, 254, 65, 255, 53, 255, 182, 254, 96, 255, 153, 255, 205, 255, 131, 0, 82, 1, 3, 2, 10, 6, 224, 8, 194, 14, 112, 21, 60, 27, 190, 32, 63, 39, 221, 43, 222, 49, 146, 53, 84, 37, 17, 42, 27, 49, 236, 51, 45, 56, 131, 45, 92, 41, 39, 38, 145, 33, 84, 25, 6, 0, 82, 0, 125, 255, 154, 0, 200, 255, 33, 253, 183, 0, 191, 255, 247, 254, 9, 0, 46, 255, 151, 254, 113, 0, 206, 2, 25, 7, 242, 3, 190, 4, 37, 6, 89, 3, 53, 5, 228, 8, 59, 3, 32, 6, 141, 7, 205, 2, 197, 7, 158, 8, 70, 3, 148, 4, 31, 7, 209, 2, 232, 3, 106, 8, 30, 1, 220, 1, 229, 5, 9, 255, 237, 253, 230, 0, 147, 0, 174, 255, 57, 2, 26, 0, 79, 255, 80, 252, 229, 255, 239, 254, 180, 2, 92, 255, 248, 254, 73, 255, 224, 0, 22, 3, 15, 4, 131, 3, 178, 3, 89, 2, 229, 1, 3, 3, 126, 4, 12, 2, 165, 2, 135, 3, 116, 255, 119, 1, 10, 3, 154, 1, 164, 2, 173, 1, 45, 1, 18, 2, 241, 3, 207, 2, 134, 2, 38, 0, 226, 0, 111, 1, 40, 0, 145, 0, 211, 255, 7, 254, 34, 1, 121, 0, 135, 255, 46, 1, 127, 0, 166, 0, 132, 255, 129, 254, 68, 252, 154, 254, 57, 254, 47, 252, 203, 2, 110, 3, 126, 3, 210, 3, 155, 3, 211, 0, 221, 1, 16, 1, 64, 0, 188, 0, 178, 255, 17, 0, 113, 255, 191, 255, 38, 0, 131, 2, 74, 2, 109, 2, 122, 255, 86, 254, 117, 253, 91, 1, 33, 2, 4, 11, 164, 4, 166, 10, 138, 9, 142, 0, 176, 255, 199, 6, 27, 1, 130, 0, 205, 1, 250, 254, 113, 254, 135, 251, 101, 254, 155, 0, 174, 1, 73, 1, 119, 1, 11, 3, 53, 0, 30, 255, 117, 255, 127, 255, 20, 255, 146, 6, 29, 1, 232, 2, 47, 5, 226, 2, 185, 2, 128, 6, 56, 1, 153, 1, 10, 1, 69, 1, 208, 2, 135, 0, 1, 0, 221, 0, 197, 1, 8, 0, 203, 0, 145, 0, 43, 1, 128, 2, 248, 2, 29, 0, 212, 1, 126, 2, 103, 0, 173, 1, 123, 1, 164, 1, 186, 3, 164, 3, 46, 5, 186, 4, 234, 4, 192, 2, 244, 3, 128, 4, 90, 255, 68, 254, 246, 254, 196, 254, 126, 255, 136, 254, 191, 0, 127, 4, 112, 7, 16, 255, 225, 253, 20, 251, 144, 255, 12, 1, 183, 4, 70, 0, 38, 4, 47, 6, 22, 1, 80, 5, 38, 6, 254, 254, 240, 254, 0, 253, 19, 0, 51, 2, 192, 8, 253, 255, 247, 254, 135, 0, 217, 254, 177, 253, 124, 254, 140, 0, 98, 1, 50, 255, 252, 254, 8, 254, 229, 252, 79, 254, 50, 253, 217, 250, 109, 0, 75, 1, 194, 3, 83, 254, 169, 255, 140, 2, 216, 254, 170, 1, 251, 3, 17, 255, 7, 3, 83, 3, 233, 1, 54, 5, 49, 4, 178, 254, 180, 254, 25, 0, 31, 2, 182, 4, 15, 7, 70, 1, 61, 0, 215, 2, 66, 2, 81, 3, 125, 5, 48, 255, 235, 254, 73, 1, 104, 255, 64, 0, 157, 2, 78, 254, 90, 253, 41, 253, 58, 254, 185, 255, 251, 0, 93, 2, 224, 1, 254, 0, 30, 254, 11, 0, 228, 3, 223, 254, 139, 1, 230, 1, 210, 2, 25, 4, 160, 5, 226, 255, 196, 254, 238, 252, 150, 255, 141, 255, 149, 253, 93, 3, 194, 5, 132, 5, 31, 4, 86, 5, 160, 4, 44, 3, 213, 4, 157, 3, 42, 0, 5, 255, 192, 253, 86, 1, 141, 0, 58, 254, 88, 255, 176, 255, 79, 5, 170, 254, 112, 253, 29, 249, 100, 0, 53, 3, 213, 2, 222, 3, 235, 2, 32, 3, 76, 1, 184, 1, 56, 2, 151, 2, 123, 1, 84, 3, 112, 0, 165, 0, 143, 254, 85, 2, 142, 3, 26, 1, 248, 255, 66, 3, 1, 5, 160, 254, 60, 2, 183, 2, 206, 1, 198, 8, 14, 7, 89, 1, 190, 0, 94, 5, 160, 1, 147, 3, 118, 8, 168, 0, 174, 255, 24, 1, 252, 253, 66, 254, 72, 3, 47, 0, 21, 2, 44, 0, 150, 254, 57, 253, 137, 251, 22, 0, 193, 0, 192, 5, 171, 255, 233, 0, 21, 7, 194, 255, 67, 2, 224, 5, 38, 2, 176, 3, 213, 6, 211, 2, 138, 2, 124, 4, 204, 3, 116, 3, 115, 5, 87, 254, 131, 2, 0, 0, 232, 3, 184, 3, 74, 4, 249, 0, 166, 5, 160, 2, 178, 254, 169, 255, 124, 8, 214, 253, 90, 7, 112, 10, 140, 0, 34, 7, 61, 7, 152, 3, 213, 6, 30, 10, 52, 4, 141, 7, 246, 7, 119, 255, 69, 254, 237, 249, 245, 4, 150, 4, 212, 1, 19, 254, 134, 255, 241, 5, 61, 254, 9, 4, 190, 4, 226, 1, 159, 6, 94, 4, 47, 3, 137, 2, 128, 1, 66, 254, 76, 253, 107, 0, 193, 254, 163, 253, 138, 255, 49, 255, 7, 254, 13, 2, 44, 254, 244, 255, 176, 10, 75, 0, 142, 7, 25, 5, 112, 3, 54, 9, 219, 8, 5, 5, 39, 6, 212, 7, 208, 255, 208, 254, 94, 251, 77, 254, 51, 254, 5, 255, 146, 254, 108, 254, 221, 253, 223, 254, 163, 253, 171, 253, 230, 253, 214, 252, 91, 255, 136, 255, 3, 0, 100, 1, 127, 2, 217, 4, 222, 5, 96, 0, 177, 0, 238, 2, 77, 254, 183, 253, 106, 251, 156, 254, 109, 0, 177, 255, 27, 254, 32, 1, 213, 7, 9, 0, 92, 4, 219, 2, 112, 3, 86, 8, 178, 3, 247, 254, 49, 6, 41, 4, 133, 4, 186, 4, 75, 3, 14, 254, 100, 253, 175, 1, 118, 1, 65, 1, 27, 255, 160, 5, 53, 8, 101, 5, 193, 1, 205, 1, 131, 4, 151, 255, 39, 0, 128, 254, 249, 254, 111, 1, 182, 0, 141, 254, 108, 253, 5, 3, 68, 255, 127, 4, 203, 3, 53, 5, 96, 6, 155, 5, 6, 3, 243, 4, 197, 4, 30, 254, 192, 252, 47, 250, 19, 255, 46, 255, 92, 3, 122, 3, 79, 6, 40, 4, 216, 1, 38, 4, 168, 4, 185, 0, 53, 4, 221, 3, 200, 253, 32, 252, 88, 249, 63, 254, 122, 252, 5, 248, 114, 255, 135, 254, 54, 254, 46, 255, 214, 253, 251, 251, 245, 255, 109, 4, 217, 8, 183, 254, 93, 253, 131, 252, 6, 255, 145, 2, 163, 4, 7, 2, 230, 5, 243, 6, 8, 2, 27, 2, 123, 5, 15, 2, 141, 5, 22, 5, 205, 253, 153, 252, 32, 251, 109, 255, 49, 254, 111, 3, 180, 255, 30, 9, 24, 11, 51, 2, 13, 10, 81, 9, 120, 2, 134, 7, 104, 11, 207, 2, 231, 7, 48, 7, 223, 253, 45, 253, 84, 4, 129, 0, 131, 255, 116, 3, 137, 5, 96, 6, 157, 3, 162, 255, 30, 6, 215, 6, 171, 254, 253, 5, 15, 6, 79, 2, 139, 1, 238, 254, 180, 255, 213, 3, 15, 11, 153, 0, 169, 11, 52, 7, 8, 4, 5, 10, 189, 10, 228, 5, 16, 11, 87, 7, 23, 3, 175, 4, 26, 2, 66, 255, 59, 254, 209, 5, 234, 254, 220, 253, 134, 4, 11, 255, 149, 7, 252, 7, 0, 4, 24, 6, 114, 6, 0, 2, 253, 0, 210, 1, 194, 255, 189, 254, 127, 4, 39, 254, 136, 254, 251, 1, 79, 254, 100, 5, 114, 8, 131, 3, 151, 7, 165, 5, 134, 0, 192, 2, 184, 1, 204, 1, 13, 2, 228, 255, 62, 254, 23, 1, 58, 5, 0, 0, 203, 3, 252, 0, 67, 254, 141, 253, 33, 252, 164, 254, 166, 253, 112, 250, 142, 1, 200, 2, 120, 6, 149, 255, 58, 1, 78, 255, 93, 0, 178, 8, 190, 8, 6, 2, 81, 3, 144, 2, 50, 254, 57, 253, 65, 254, 174, 0, 222, 255, 167, 4, 137, 255, 42, 0, 237, 3, 140, 254, 18, 1, 246, 2, 12, 4, 48, 9, 46, 7, 163, 2, 188, 6, 218, 5, 174, 1, 6, 5, 85, 8, 127, 255, 73, 254, 0, 0, 139, 254, 32, 3, 96, 8, 6, 0, 51, 6, 174, 9, 222, 1, 84, 2, 80, 8, 84, 254, 32, 253, 225, 5, 129, 1, 178, 0, 212, 3, 139, 0, 193, 1, 201, 4, 242, 253, 182, 252, 42, 252, 145, 0, 18, 6, 218, 4, 111, 2, 168, 5, 144, 2, 93, 1, 248, 3, 202, 5, 31, 0, 232, 254, 159, 1, 196, 254, 212, 2, 105, 6, 104, 1, 34, 4, 44, 2, 76, 254, 154, 254, 177, 4, 157, 254, 99, 4, 147, 7, 145, 1, 48, 6, 200, 8, 241, 253, 12, 252, 99, 1, 233, 0, 238, 0, 185, 8, 218, 253, 127, 252, 129, 253, 147, 254, 11, 254, 165, 7, 133, 1, 68, 7, 85, 6, 162, 0, 108, 4, 240, 4, 19, 255, 150, 4, 110, 5, 128, 253, 101, 254, 116, 0, 28, 255, 158, 6, 250, 8, 103, 6, 138, 8, 219, 8, 50, 2, 249, 4, 98, 10, 67, 1, 82, 1, 238, 6, 66, 2, 83, 4, 84, 3, 22, 0, 82, 2, 166, 3, 113, 255, 206, 2, 190, 1, 50, 0, 71, 0, 247, 255, 174, 254, 70, 253, 129, 250, 102, 0, 118, 255, 204, 252, 202, 254, 43, 254, 133, 251, 158, 1, 67, 0, 245, 254, 36, 4, 46, 3, 161, 5, 12, 6, 80, 5, 248, 4, 218, 6, 103, 7, 125, 6, 227, 7, 85, 8, 28, 7, 16, 7, 14, 9, 53, 7, 132, 2, 163, 255, 198, 1, 90, 3, 73, 1, 120, 255, 233, 1, 254, 254, 128, 255, 58, 255, 23, 253, 215, 255, 204, 255, 247, 254, 39, 252, 90, 1, 137, 0, 223, 1, 51, 249, 20, 253, 84, 253, 117, 251, 67, 249, 145, 254, 129, 252, 135, 251, 240, 252, 24, 254, 78, 252, 56, 252, 171, 255, 122, 254, 43, 253, 215, 0, 172, 254, 85, 255, 252, 3, 148, 3, 177, 7, 52, 2, 179, 0, 234, 2, 150, 2, 209, 3, 198, 6, 119, 3, 110, 2, 146, 3, 171, 3, 88, 3, 141, 4, 53, 1, 176, 2, 35, 3, 149, 3, 161, 0, 58, 2, 118, 0, 236, 255, 229, 254, 208, 252, 214, 255, 204, 0, 52, 251, 187, 254, 50, 254, 61, 252, 54, 255, 113, 255, 36, 252, 28, 254, 151, 254, 66, 253, 46, 252, 35, 254, 210, 254, 234, 252, 92, 251, 156, 255, 238, 252, 192, 251, 226, 251, 77, 252, 108, 249, 54, 255, 181, 252, 242, 252, 241, 251, 158, 250, 123, 252, 144, 253, 146, 255, 171, 255, 100, 1, 213, 0, 246, 255, 19, 254, 108, 1, 6, 3, 169, 1, 54, 3, 223, 1, 173, 255, 45, 2, 8, 2, 32, 252, 232, 249, 196, 253, 165, 253, 27, 253, 230, 255, 10, 254, 130, 253, 121, 252, 209, 0, 50, 1, 147, 0, 196, 254, 175, 253, 172, 253, 171, 255, 45, 255, 31, 255, 106, 252, 239, 253, 117, 0, 233, 0, 73, 254, 30, 253, 77, 4, 239, 2, 121, 2, 177, 5, 180, 6, 231, 5, 229, 6, 177, 5, 142, 3, 98, 4, 132, 4, 81, 3, 74, 5, 100, 3, 214, 1, 153, 252, 130, 251, 252, 248, 153, 252, 163, 252, 32, 252, 138, 255, 155, 0, 212, 0, 229, 251, 175, 252, 162, 253, 163, 251, 199, 248, 66, 245, 5, 252, 109, 250, 179, 248, 114, 1, 72, 255, 98, 254, 191, 3, 237, 1, 104, 0, 190, 3, 15, 4, 31, 2, 154, 0, 141, 2, 201, 0, 225, 4, 251, 1, 150, 0, 151, 2, 247, 1, 230, 0, 111, 2, 9, 3, 163, 2, 147, 2, 88, 0, 146, 255, 75, 3, 244, 0, 224, 0, 126, 1, 29, 2, 46, 1, 212, 2, 177, 1, 154, 2, 142, 4, 222, 2, 85, 1, 118, 255, 20, 0, 115, 254, 97, 251, 88, 254, 210, 255, 191, 254, 160, 254, 132, 255, 53, 5, 253, 3, 56, 4, 6, 1, 110, 1, 211, 2, 154, 3, 27, 1, 217, 253, 31, 0, 132, 253, 157, 253, 79, 253, 71, 253, 97, 254, 72, 252, 245, 252, 55, 255, 207, 250, 170, 253, 153, 254, 71, 252, 251, 250, 166, 0, 237, 1, 49, 1, 221, 0, 78, 3, 191, 2], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE);\r\n    allocate([98, 2, 72, 3, 168, 3, 6, 3, 45, 253, 212, 250, 19, 251, 155, 254, 255, 251, 148, 250, 184, 251, 160, 250, 147, 254, 120, 250, 167, 248, 160, 253, 250, 248, 65, 249, 94, 253, 223, 253, 107, 251, 65, 253, 166, 2, 18, 3, 148, 0, 133, 255, 184, 2, 8, 5, 132, 2, 94, 1, 246, 255, 158, 1, 102, 2, 15, 0, 137, 0, 88, 1, 45, 255, 210, 252, 24, 250, 205, 252, 121, 254, 94, 252, 180, 253, 47, 0, 177, 253, 126, 252, 115, 252, 183, 251, 93, 255, 8, 251, 113, 251, 99, 255, 72, 250, 11, 250, 123, 254, 6, 251, 92, 251, 144, 253, 159, 2, 213, 0, 198, 1, 124, 0, 238, 254, 243, 253, 39, 253, 16, 254, 104, 255, 192, 250, 122, 0, 135, 0, 167, 244, 179, 253, 118, 254, 64, 249, 185, 1, 206, 255, 196, 5, 136, 3, 19, 3, 60, 1, 236, 0, 72, 254, 165, 254, 217, 0, 157, 1, 113, 252, 107, 252, 121, 0, 57, 254, 92, 252, 202, 0, 164, 255, 47, 254, 137, 254, 232, 1, 134, 1, 218, 1, 108, 3, 217, 2, 60, 1, 233, 248, 224, 250, 99, 253, 87, 0, 194, 3, 176, 1, 51, 2, 7, 255, 222, 251, 250, 0, 29, 1, 81, 4, 117, 4, 171, 1, 184, 2, 242, 251, 128, 249, 210, 249, 76, 252, 90, 1, 160, 0, 203, 254, 240, 254, 166, 252, 158, 2, 112, 2, 226, 4, 80, 252, 104, 254, 102, 253, 162, 253, 192, 254, 128, 254, 20, 254, 230, 0, 65, 0, 78, 1, 206, 255, 240, 255, 240, 255, 78, 253, 139, 250, 255, 6, 180, 6, 119, 5, 174, 9, 15, 8, 124, 5, 221, 4, 191, 5, 146, 5, 130, 254, 243, 251, 254, 255, 173, 0, 114, 254, 121, 4, 211, 5, 232, 7, 9, 7, 4, 3, 250, 4, 226, 5, 149, 5, 199, 6, 209, 7, 55, 4, 194, 4, 249, 4, 126, 251, 197, 248, 207, 250, 216, 252, 147, 251, 184, 251, 61, 254, 247, 251, 70, 249, 65, 0, 66, 2, 172, 255, 60, 250, 126, 246, 14, 249, 3, 253, 170, 250, 18, 254, 38, 255, 174, 253, 93, 252, 81, 1, 20, 255, 50, 2, 53, 9, 102, 10, 146, 7, 209, 5, 252, 4, 106, 3, 189, 0, 102, 1, 118, 1, 17, 250, 23, 247, 214, 246, 57, 252, 9, 251, 209, 247, 140, 253, 92, 251, 250, 249, 125, 6, 19, 4, 34, 2, 53, 2, 37, 4, 220, 2, 192, 255, 188, 252, 78, 254, 76, 254, 160, 255, 203, 0, 54, 4, 192, 4, 100, 6, 139, 3, 254, 5, 218, 3, 70, 1, 197, 3, 77, 3, 142, 0, 172, 255, 197, 0, 214, 1, 75, 9, 34, 6, 109, 4, 214, 1, 190, 4, 139, 1, 96, 5, 176, 4, 101, 4, 18, 4, 92, 1, 225, 253, 46, 251, 136, 254, 41, 255, 75, 255, 225, 1, 101, 248, 171, 249, 46, 255, 18, 253, 95, 251, 134, 1, 29, 0, 113, 254, 27, 0, 52, 3, 212, 4, 243, 2, 183, 2, 211, 3, 153, 1, 82, 255, 173, 4, 11, 4, 144, 3, 76, 5, 54, 7, 32, 252, 99, 250, 228, 1, 51, 250, 92, 249, 208, 0, 100, 254, 180, 4, 152, 5, 241, 254, 128, 3, 120, 4, 96, 254, 241, 6, 154, 5, 96, 249, 172, 245, 52, 255, 3, 249, 241, 249, 9, 4, 136, 249, 233, 249, 23, 5, 27, 251, 203, 249, 57, 4, 99, 253, 185, 251, 190, 255, 86, 253, 64, 1, 167, 254, 147, 2, 49, 1, 45, 4, 244, 250, 220, 252, 237, 255, 157, 249, 245, 250, 29, 0, 109, 249, 15, 254, 71, 0, 225, 254, 249, 255, 156, 255, 18, 254, 62, 252, 19, 255, 84, 3, 89, 7, 204, 6, 63, 251, 149, 250, 227, 0, 108, 253, 46, 1, 117, 1, 96, 0, 63, 4, 233, 4, 206, 251, 123, 249, 160, 0, 229, 1, 28, 8, 6, 7, 90, 252, 36, 255, 40, 2, 172, 253, 156, 253, 237, 0, 80, 1, 184, 6, 111, 3, 131, 2, 117, 2, 178, 1, 243, 4, 10, 2, 97, 6, 15, 0, 244, 0, 71, 254, 195, 5, 205, 2, 184, 0, 27, 7, 54, 6, 173, 6, 220, 3, 5, 1, 169, 3, 45, 8, 41, 9, 240, 5, 91, 8, 66, 7, 70, 6, 191, 253, 189, 253, 77, 251, 68, 252, 135, 0, 24, 254, 48, 254, 51, 0, 174, 254, 139, 253, 164, 254, 45, 253, 122, 4, 25, 8, 162, 5, 144, 8, 186, 5, 143, 3, 92, 250, 220, 249, 26, 247, 120, 5, 198, 2, 17, 5, 55, 5, 121, 2, 160, 3, 154, 5, 146, 8, 34, 10, 118, 9, 156, 8, 89, 7, 214, 3, 194, 8, 62, 7, 124, 1, 24, 3, 121, 4, 193, 255, 229, 253, 158, 1, 4, 255, 60, 252, 198, 254, 19, 251, 85, 253, 244, 252, 193, 252, 242, 253, 19, 252, 126, 249, 145, 251, 88, 254, 181, 249, 60, 254, 213, 254, 244, 4, 24, 4, 130, 2, 123, 4, 85, 3, 88, 3, 93, 253, 176, 254, 139, 0, 220, 8, 63, 5, 138, 5, 29, 0, 0, 3, 29, 3, 56, 251, 167, 1, 52, 2, 218, 250, 198, 251, 245, 0, 234, 250, 212, 252, 61, 2, 238, 250, 175, 249, 134, 2, 56, 252, 66, 3, 211, 2, 225, 3, 116, 6, 235, 7, 65, 255, 207, 252, 176, 1, 150, 2, 60, 0, 198, 0, 114, 2, 229, 3, 50, 5, 112, 6, 171, 7, 9, 5, 195, 249, 163, 255, 211, 255, 192, 251, 37, 0, 172, 255, 117, 6, 47, 10, 33, 9, 41, 4, 248, 7, 73, 9, 115, 4, 22, 9, 70, 8, 91, 3, 101, 1, 230, 5, 152, 2, 203, 4, 75, 4, 223, 1, 80, 5, 144, 3, 105, 7, 218, 6, 227, 7, 144, 4, 117, 7, 248, 6, 143, 1, 34, 0, 0, 1, 175, 253, 208, 254, 227, 251, 35, 2, 158, 6, 127, 5, 135, 2, 157, 255, 171, 254, 212, 5, 111, 6, 166, 4, 38, 0, 124, 253, 44, 255, 139, 1, 78, 3, 222, 0, 64, 253, 3, 253, 52, 253, 44, 253, 84, 248, 12, 245, 106, 255, 35, 1, 174, 255, 209, 4, 179, 5, 239, 3, 116, 255, 101, 255, 153, 0, 183, 1, 41, 1, 32, 6, 7, 250, 102, 254, 132, 253, 0, 6, 199, 1, 19, 255, 208, 250, 117, 255, 252, 254, 19, 2, 42, 2, 100, 3, 13, 1, 240, 4, 94, 2, 23, 255, 115, 3, 207, 1, 230, 2, 88, 2, 136, 255, 183, 255, 165, 1, 212, 0, 73, 254, 198, 255, 36, 3, 250, 250, 39, 251, 216, 2, 38, 1, 22, 254, 50, 0, 177, 253, 119, 252, 26, 251, 42, 0, 81, 253, 147, 0, 231, 255, 17, 1, 84, 2, 201, 254, 189, 4, 89, 2, 14, 253, 81, 3, 72, 2, 173, 1, 95, 2, 75, 2, 166, 253, 90, 255, 205, 1, 228, 252, 201, 252, 9, 3, 100, 5, 142, 3, 219, 6, 119, 0, 137, 5, 204, 3, 37, 255, 144, 252, 196, 249, 231, 251, 14, 252, 182, 1, 55, 253, 157, 250, 78, 0, 0, 0, 65, 254, 101, 251, 144, 251, 217, 250, 219, 249, 200, 8, 231, 6, 29, 5, 178, 3, 47, 6, 152, 5, 126, 4, 226, 1, 180, 1, 43, 254, 172, 251, 106, 2, 65, 254, 58, 252, 64, 4, 28, 251, 21, 250, 142, 255, 176, 251, 40, 248, 189, 253, 210, 0, 101, 2, 241, 1, 73, 248, 99, 250, 130, 2, 11, 251, 168, 252, 243, 3, 146, 249, 95, 251, 39, 4, 237, 249, 96, 253, 180, 4, 100, 249, 166, 251, 111, 2, 45, 252, 210, 250, 3, 251, 27, 2, 109, 255, 126, 3, 182, 250, 127, 252, 78, 254, 120, 3, 219, 1, 172, 1, 153, 0, 128, 254, 82, 1, 44, 250, 1, 254, 103, 1, 50, 252, 165, 251, 42, 254, 105, 0, 218, 253, 165, 2, 87, 252, 135, 251, 109, 3, 124, 1, 252, 254, 210, 0, 149, 6, 156, 3, 232, 4, 239, 6, 166, 4, 71, 4, 139, 5, 119, 2, 21, 2, 115, 2, 43, 1, 165, 254, 101, 254, 234, 253, 135, 2, 118, 253, 29, 0, 173, 253, 134, 254, 169, 250, 27, 6, 122, 5, 97, 4, 185, 5, 65, 4, 130, 5, 136, 2, 208, 247, 190, 251, 250, 255, 55, 1, 62, 255, 155, 252, 129, 253, 193, 252, 160, 1, 118, 251, 56, 251, 69, 5, 33, 251, 83, 252, 21, 7, 111, 247, 61, 248, 197, 1, 149, 253, 169, 250, 68, 252, 186, 249, 76, 248, 29, 250, 105, 251, 223, 251, 176, 251, 135, 254, 89, 2, 201, 0, 84, 7, 57, 3, 118, 1, 82, 254, 213, 250, 29, 0, 139, 250, 31, 251, 205, 250, 17, 252, 32, 250, 192, 3, 135, 250, 39, 248, 197, 0, 157, 250, 99, 248, 20, 255, 203, 251, 123, 0, 166, 1, 103, 2, 245, 4, 34, 2, 206, 254, 246, 5, 136, 3, 170, 4, 252, 6, 153, 4, 142, 253, 140, 252, 10, 250, 199, 0, 254, 2, 224, 5, 215, 251, 94, 3, 197, 0, 246, 251, 19, 249, 137, 252, 224, 252, 145, 0, 87, 2, 146, 251, 249, 253, 114, 2, 75, 251, 122, 248, 244, 1, 114, 252, 239, 251, 141, 250, 60, 250, 225, 249, 55, 252, 245, 253, 74, 3, 34, 0, 2, 7, 134, 2, 94, 3, 73, 251, 160, 248, 22, 252, 178, 255, 247, 255, 96, 253, 20, 4, 247, 2, 80, 0, 168, 253, 115, 4, 251, 3, 57, 0, 208, 7, 142, 5, 191, 252, 134, 5, 97, 4, 78, 251, 94, 6, 236, 4, 51, 254, 140, 5, 220, 4, 1, 6, 207, 3, 253, 0, 229, 254, 68, 1, 153, 254, 87, 2, 61, 255, 106, 0, 76, 2, 62, 0, 181, 253, 11, 253, 133, 2, 205, 0, 51, 0, 177, 4, 246, 2, 71, 251, 161, 2, 122, 254, 144, 253, 45, 6, 173, 3, 105, 255, 255, 3, 223, 2, 4, 11, 21, 5, 178, 2, 210, 254, 12, 2, 157, 255, 124, 252, 204, 249, 91, 251, 60, 4, 251, 0, 238, 0, 222, 7, 0, 7, 242, 3, 221, 4, 97, 6, 205, 6, 53, 251, 252, 249, 72, 251, 147, 253, 200, 1, 147, 255, 40, 0, 191, 255, 20, 3, 219, 252, 69, 253, 186, 250, 185, 253, 136, 3, 64, 3, 223, 252, 20, 2, 82, 2, 180, 7, 128, 5, 71, 5, 103, 251, 168, 248, 190, 247, 251, 252, 56, 2, 180, 3, 9, 252, 55, 4, 236, 4, 169, 251, 226, 1, 126, 255, 242, 6, 20, 4, 12, 3, 45, 250, 245, 0, 144, 3, 196, 254, 139, 251, 107, 252, 232, 253, 94, 250, 214, 246, 239, 252, 246, 249, 60, 248, 45, 248, 1, 1, 141, 3, 199, 248, 135, 253, 71, 251, 254, 249, 130, 248, 226, 251, 70, 6, 191, 8, 40, 6, 201, 253, 36, 250, 248, 249, 1, 251, 195, 0, 89, 5, 207, 252, 37, 1, 195, 4, 243, 253, 118, 2, 173, 4, 94, 249, 135, 246, 208, 248, 209, 254, 219, 2, 235, 2, 111, 251, 5, 255, 13, 1, 74, 252, 181, 255, 148, 6, 98, 251, 59, 254, 237, 3, 193, 249, 73, 2, 122, 1, 229, 247, 197, 253, 85, 254, 239, 253, 121, 251, 109, 251, 229, 254, 51, 255, 204, 253, 228, 252, 222, 4, 205, 2, 229, 8, 159, 3, 27, 2, 58, 254, 47, 2, 184, 1, 51, 253, 180, 5, 79, 6, 250, 251, 28, 4, 74, 6, 111, 251, 118, 255, 79, 3, 226, 0, 39, 0, 156, 253, 29, 251, 150, 255, 39, 253, 117, 253, 200, 3, 22, 5, 54, 253, 132, 253, 191, 6, 97, 1, 45, 4, 154, 1, 226, 252, 100, 255, 75, 4, 194, 253, 150, 3, 190, 1, 226, 250, 244, 3, 210, 1, 128, 5, 55, 6, 253, 2, 149, 5, 100, 5, 221, 6, 157, 7, 164, 7, 74, 9, 42, 6, 255, 7, 100, 8, 148, 3, 98, 0, 249, 255, 101, 7, 138, 5, 93, 8, 92, 1, 125, 5, 43, 6, 152, 0, 110, 4, 9, 7, 245, 254, 154, 0, 115, 5, 114, 251, 213, 1, 30, 4, 138, 251, 107, 254, 207, 251, 195, 250, 40, 247, 211, 249, 148, 254, 101, 3, 170, 6, 118, 251, 37, 2, 14, 6, 55, 251, 116, 248, 126, 249, 51, 250, 71, 248, 249, 247, 65, 249, 118, 252, 158, 255, 151, 248, 233, 0, 212, 5, 124, 3, 108, 0, 181, 254, 64, 249, 110, 251, 92, 249, 220, 251, 188, 7, 254, 6, 210, 251, 51, 249, 139, 248, 245, 255, 3, 6, 37, 5, 192, 249, 94, 0, 241, 1, 165, 1, 187, 1, 59, 255, 214, 249, 163, 254, 30, 252, 169, 253, 229, 253, 116, 4, 59, 252, 117, 250, 127, 255, 195, 250, 175, 0, 65, 254, 137, 254, 31, 5, 7, 8, 141, 254, 118, 253, 205, 254, 207, 251, 93, 2, 109, 1, 247, 247, 143, 255, 174, 1, 140, 2, 146, 3, 199, 3, 12, 252, 206, 249, 237, 246, 225, 5, 224, 4, 47, 2, 6, 1, 26, 254, 111, 254, 65, 249, 62, 5, 10, 6, 50, 0, 56, 0, 176, 1, 182, 254, 119, 0, 164, 253, 19, 250, 200, 251, 214, 252, 178, 3, 103, 4, 31, 4, 136, 250, 89, 249, 80, 249, 10, 251, 64, 253, 219, 250, 39, 3, 29, 7, 119, 4, 200, 10, 70, 6, 123, 8, 96, 4, 153, 1, 106, 255, 109, 255, 148, 1, 191, 3, 135, 9, 119, 7, 141, 8, 118, 252, 115, 255, 158, 252, 120, 252, 114, 255, 54, 254, 211, 253, 60, 253, 113, 249, 194, 252, 105, 250, 209, 249, 206, 248, 190, 250, 194, 251, 188, 249, 240, 254, 147, 3, 84, 251, 4, 3, 32, 4, 130, 253, 46, 251, 151, 248, 12, 254, 175, 255, 202, 252, 247, 250, 179, 249, 33, 253, 139, 255, 17, 3, 168, 0, 190, 251, 109, 4, 154, 3, 184, 251, 22, 253, 104, 5, 31, 1, 221, 253, 217, 251, 160, 250, 103, 247, 76, 251, 128, 247, 222, 249, 35, 249, 25, 250, 63, 247, 253, 252, 55, 249, 75, 4, 62, 3, 204, 249, 212, 2, 219, 4, 250, 249, 181, 2, 37, 3, 102, 249, 16, 255, 129, 6, 92, 249, 252, 255, 100, 253, 101, 8, 48, 3, 18, 4, 206, 252, 207, 248, 22, 0, 4, 253, 5, 254, 193, 1, 129, 251, 151, 253, 33, 1, 181, 252, 196, 249, 16, 255, 242, 1, 22, 255, 111, 253, 16, 253, 224, 1, 142, 6, 193, 254, 31, 254, 193, 0, 213, 252, 171, 0, 137, 255, 176, 247, 54, 255, 176, 252, 181, 6, 116, 4, 164, 6, 67, 0, 239, 255, 66, 0, 244, 255, 102, 249, 187, 253, 152, 255, 240, 254, 204, 251, 94, 251, 203, 248, 136, 254, 140, 251, 98, 252, 92, 254, 198, 255, 253, 254, 112, 253, 146, 251, 215, 253, 252, 6, 203, 4, 199, 1, 129, 0, 206, 1, 185, 1, 16, 255, 240, 253, 72, 3, 2, 2, 130, 0, 181, 255, 90, 4, 111, 2, 153, 0, 216, 0, 44, 4, 52, 2, 250, 255, 236, 254, 95, 4, 215, 2, 190, 0, 188, 255, 192, 2, 50, 1, 119, 0, 248, 254, 73, 1, 61, 0, 156, 255, 156, 0, 108, 1, 123, 0, 183, 0, 48, 255, 85, 255, 133, 255, 220, 0, 191, 255, 206, 254, 194, 255, 146, 1, 17, 0, 108, 253, 86, 252, 246, 254, 0, 0, 129, 1, 235, 0, 20, 1, 29, 1, 64, 1, 12, 1, 176, 254, 56, 255, 44, 253, 17, 0, 172, 255, 125, 1, 224, 253, 173, 1, 238, 1, 7, 2, 139, 255, 32, 1, 48, 1, 73, 1, 131, 2, 157, 0, 189, 2, 252, 1, 176, 4, 113, 2, 28, 3, 96, 2, 230, 3, 165, 1, 236, 1, 120, 2, 180, 4, 12, 3, 190, 1, 132, 0, 233, 4, 76, 3, 35, 2, 193, 1, 61, 3, 146, 2, 29, 2, 214, 1, 108, 4, 234, 4, 150, 3, 127, 2, 35, 2, 51, 0, 167, 1, 23, 1, 9, 0, 136, 1, 83, 0, 94, 0, 30, 2, 31, 2, 229, 0, 109, 255, 58, 255, 129, 0, 194, 0, 71, 255, 161, 252, 215, 250, 210, 254, 30, 0, 171, 253, 139, 253, 237, 255, 114, 0, 124, 252, 199, 251, 210, 1, 97, 1, 53, 250, 219, 249, 15, 0, 113, 255, 84, 249, 245, 247, 17, 253, 196, 0, 172, 248, 237, 247, 126, 253, 254, 254, 225, 246, 66, 250, 62, 254, 204, 253, 184, 253, 70, 255, 152, 252, 98, 254, 243, 248, 36, 252, 155, 251, 226, 250, 42, 253, 151, 251, 28, 0, 169, 0, 241, 251, 160, 252, 50, 253, 10, 255, 228, 1, 36, 0, 23, 255, 207, 255, 9, 1, 67, 0, 33, 1, 211, 1, 178, 0, 31, 2, 42, 3, 28, 2, 84, 0, 26, 1, 160, 2, 191, 2, 49, 252, 247, 252, 129, 0, 31, 1, 86, 252, 29, 255, 187, 3, 83, 2, 175, 249, 223, 254, 68, 3, 137, 2, 201, 248, 41, 255, 82, 4, 206, 2, 14, 248, 195, 251, 138, 2, 184, 1, 203, 247, 239, 253, 139, 3, 63, 2, 37, 248, 176, 254, 158, 2, 204, 0, 171, 246, 76, 253, 104, 1, 137, 0, 148, 247, 100, 247, 247, 255, 24, 1, 246, 254, 119, 0, 39, 0, 193, 0, 78, 0, 197, 255, 136, 255, 226, 0, 49, 252, 166, 252, 243, 252, 185, 251, 149, 253, 99, 254, 61, 254, 182, 252, 64, 251, 215, 250, 211, 252, 141, 252, 160, 250, 177, 249, 118, 254, 84, 254, 31, 253, 167, 251, 219, 253, 234, 252, 144, 252, 49, 252, 57, 252, 126, 253, 39, 252, 138, 252, 7, 251, 175, 250, 39, 254, 220, 252, 135, 250, 129, 250, 160, 0, 247, 254, 105, 252, 237, 254, 8, 255, 6, 255, 50, 253, 132, 254, 97, 0, 153, 255, 137, 254, 27, 255, 97, 254, 63, 255, 121, 255, 213, 253, 116, 2, 105, 1, 119, 0, 216, 0, 67, 2, 108, 1, 135, 1, 209, 0, 122, 2, 10, 2, 102, 255, 108, 255, 14, 2, 133, 1, 170, 0, 33, 0, 105, 0, 11, 1, 64, 0, 124, 1, 33, 250, 24, 252, 226, 255, 143, 254, 210, 251, 58, 0, 135, 2, 223, 0, 16, 250, 221, 254, 109, 2, 51, 1, 5, 250, 156, 0, 250, 2, 148, 1, 19, 248, 141, 0, 222, 2, 243, 1, 199, 248, 118, 253, 50, 1, 0, 2, 69, 255, 152, 255, 197, 255, 182, 1, 134, 0, 26, 255, 156, 0, 70, 255, 195, 255, 252, 254, 240, 255, 10, 0, 199, 253, 253, 255, 91, 254, 215, 254, 67, 249, 247, 253, 166, 254, 178, 0, 174, 250, 197, 255, 212, 255, 157, 0, 158, 247, 51, 254, 42, 254, 163, 254, 134, 247, 255, 255, 143, 254, 135, 255, 213, 249, 139, 254, 124, 252, 9, 252, 163, 251, 177, 253, 155, 253, 240, 252, 207, 253, 122, 0, 181, 255, 63, 254, 252, 255, 85, 255, 133, 255, 140, 254, 192, 0, 168, 0, 180, 255, 124, 255, 252, 0, 149, 255, 84, 1, 210, 0, 136, 1, 253, 1, 16, 1, 181, 0, 147, 255, 145, 0, 218, 0, 119, 0, 96, 254, 249, 254, 229, 1, 9, 1, 75, 255, 248, 255, 226, 254, 226, 0, 12, 255, 38, 255, 69, 0, 222, 254, 98, 255, 191, 0, 255, 255, 192, 255, 176, 253, 166, 255, 213, 0, 160, 255, 255, 0, 179, 1, 178, 0, 176, 255, 143, 254, 238, 255, 223, 255, 176, 255, 214, 255, 159, 1, 140, 0, 34, 255, 119, 4, 139, 2, 137, 2, 73, 1, 255, 2, 44, 2, 249, 0, 235, 0, 180, 3, 157, 1, 186, 1, 23, 1, 141, 0, 83, 1, 100, 1, 45, 2, 42, 254, 86, 255, 99, 0, 237, 0, 199, 253, 224, 252, 96, 1, 53, 2, 26, 1, 217, 1, 214, 1, 76, 1, 57, 255, 78, 253, 252, 250, 107, 252, 63, 255, 86, 254, 224, 252, 158, 251, 230, 255, 141, 254, 22, 254, 63, 255, 125, 2, 83, 2, 7, 2, 74, 1, 152, 1, 141, 255, 79, 0, 12, 0, 221, 1, 87, 0, 153, 255, 136, 254, 102, 253, 165, 254, 235, 254, 221, 254, 2, 254, 31, 254, 169, 0, 41, 1, 195, 252, 30, 253, 51, 255, 85, 255, 192, 254, 228, 253, 72, 1, 27, 1, 165, 252, 66, 252, 186, 1, 254, 255, 44, 2, 174, 2, 130, 0, 56, 0, 103, 5, 244, 3, 243, 2, 171, 1, 100, 2, 229, 2, 116, 2, 41, 2, 173, 254, 228, 252, 134, 0, 21, 1, 135, 253, 195, 251, 254, 255, 10, 255, 144, 252, 245, 251, 185, 249, 216, 251, 30, 252, 38, 254, 142, 251, 24, 254, 98, 254, 229, 252, 73, 0, 50, 255, 248, 255, 117, 255, 183, 1, 204, 0, 80, 255, 190, 253, 23, 0, 131, 0, 243, 254, 11, 253, 65, 255, 245, 0, 147, 255, 174, 254, 112, 0, 60, 1, 120, 0, 106, 254, 138, 255, 99, 2, 76, 255, 70, 255, 123, 253, 115, 0, 83, 255, 34, 0, 250, 253, 23, 254, 105, 255, 61, 0, 185, 253, 180, 252, 220, 0, 118, 255, 87, 253, 4, 252, 135, 1, 239, 255, 170, 253, 191, 254, 157, 0, 217, 254, 129, 0, 155, 0, 98, 252, 149, 252, 37, 252, 29, 1, 241, 0, 173, 255, 131, 255, 131, 255, 108, 2, 85, 2, 176, 1, 92, 0, 137, 1, 78, 0, 153, 1, 61, 0, 119, 254, 29, 253, 99, 254, 20, 253, 83, 0, 54, 0, 105, 1, 27, 0, 196, 251, 130, 0, 175, 254, 74, 253, 227, 249, 41, 1, 62, 1, 237, 255, 175, 248, 36, 0, 51, 0, 195, 254, 237, 246, 10, 255, 231, 0, 172, 255, 254, 246, 241, 252, 40, 0, 77, 255, 71, 247, 94, 252, 38, 254, 50, 254, 14, 253, 170, 255, 224, 254, 142, 253, 149, 246, 57, 254, 193, 255, 171, 0, 181, 251, 186, 251, 230, 255, 113, 255, 87, 251, 57, 254, 106, 254, 131, 254, 163, 253, 46, 255, 160, 255, 205, 255, 188, 253, 36, 254, 236, 254, 241, 255, 85, 251, 134, 253, 77, 251, 143, 252, 134, 254, 35, 255, 99, 253, 72, 252, 82, 2, 178, 0, 109, 254, 92, 253, 251, 2, 71, 1, 89, 2, 34, 1, 172, 0, 44, 1, 203, 0, 157, 0, 200, 255, 176, 254, 100, 1, 24, 0, 28, 255, 216, 254, 253, 254, 227, 255, 70, 255, 7, 1, 160, 1, 14, 0, 159, 254, 117, 1, 244, 255, 40, 255, 1, 1, 96, 0, 174, 0, 57, 0, 10, 250, 152, 253, 70, 252, 13, 254, 15, 254, 104, 255, 179, 254, 125, 0, 105, 0, 200, 0, 179, 0, 159, 255, 181, 254, 32, 255, 253, 2, 185, 2, 248, 2, 0, 1, 45, 1, 59, 0, 199, 1, 171, 255, 204, 0, 32, 1, 254, 253, 240, 0, 251, 0, 147, 255, 0, 1, 161, 1, 222, 255, 99, 254, 101, 0, 174, 1, 128, 1, 156, 0, 225, 255, 246, 255, 206, 0, 170, 1, 77, 2, 145, 0, 143, 0, 71, 0, 40, 3, 138, 3, 77, 1, 93, 1, 218, 3, 170, 3, 77, 2, 75, 1, 20, 5, 56, 3, 187, 0, 253, 1, 38, 4, 141, 2, 123, 1, 210, 1, 182, 5, 169, 3, 145, 1, 18, 1, 19, 3, 93, 3, 9, 1, 2, 0, 97, 2, 41, 2, 28, 0, 49, 1, 158, 3, 84, 1, 106, 0, 130, 1, 241, 0, 245, 254, 109, 255, 225, 0, 78, 255, 234, 253, 91, 1, 246, 1, 125, 253, 131, 254, 141, 1, 30, 0, 117, 253, 35, 253, 77, 254, 142, 1, 105, 254, 42, 253, 28, 254, 8, 255, 235, 252, 110, 252, 74, 254, 36, 254, 14, 254, 122, 254, 75, 0, 217, 254, 60, 252, 178, 253, 162, 253, 150, 0, 135, 255, 207, 255, 101, 255, 178, 255, 167, 3, 38, 2, 133, 1, 38, 0, 191, 254, 127, 0, 168, 1, 59, 1, 227, 254, 143, 255, 27, 1, 3, 1, 146, 2, 203, 0, 66, 1, 230, 1, 135, 3, 249, 1, 236, 2, 161, 1, 99, 2, 167, 1, 43, 2, 0, 2, 239, 0, 173, 255, 190, 253, 237, 255, 173, 254, 37, 253, 93, 1, 13, 0, 90, 252, 137, 250, 142, 255, 152, 254, 107, 0, 180, 2, 182, 0, 90, 0, 37, 251, 254, 249, 241, 249, 43, 253, 200, 253, 121, 252, 173, 250, 243, 253, 251, 253, 171, 252, 163, 252, 20, 252, 88, 255, 78, 253, 189, 252, 63, 0, 119, 255, 212, 253, 221, 253, 144, 0, 226, 254, 207, 252, 229, 1, 63, 1, 109, 255, 104, 254, 14, 2, 246, 0, 165, 254, 78, 254, 41, 1, 228, 255, 222, 254, 41, 254, 170, 251, 251, 250, 52, 254, 153, 254, 36, 252, 230, 252, 67, 5, 19, 5, 178, 2, 11, 2, 192, 4, 44, 4, 70, 4, 245, 2, 57, 3, 116, 4, 240, 2, 238, 1, 228, 4, 85, 5, 171, 4, 130, 3, 9, 2, 29, 4, 20, 2, 176, 1, 178, 254, 40, 255, 199, 254, 249, 254, 96, 255, 52, 0, 40, 254, 101, 255, 127, 0, 136, 0, 132, 254, 44, 0, 83, 3, 154, 1, 94, 255, 23, 254, 123, 0, 1, 255, 228, 252, 101, 253, 66, 4, 149, 3, 21, 3, 237, 1, 117, 5, 173, 4, 46, 2, 202, 0, 205, 255, 138, 255, 170, 254, 67, 253, 83, 0, 108, 0, 214, 255, 71, 254, 61, 0, 95, 0, 31, 1, 0, 1, 229, 255, 89, 0, 12, 2, 19, 2, 95, 1, 227, 0, 80, 2, 33, 2, 185, 2, 155, 0, 92, 255, 51, 1, 126, 2, 18, 1, 23, 254, 206, 255, 242, 2, 240, 0, 90, 255, 132, 255, 140, 255, 189, 253, 68, 251, 193, 255, 190, 0, 217, 254, 240, 251, 240, 250, 147, 0, 136, 254, 79, 255, 143, 255, 73, 3, 217, 4, 27, 4, 156, 2, 2, 0, 37, 1, 39, 2, 48, 1, 184, 251, 71, 252, 8, 255, 120, 1, 18, 253, 59, 252, 87, 0, 4, 2, 237, 254, 252, 253, 177, 2, 135, 1, 133, 254, 125, 253, 108, 3, 82, 2, 122, 254, 11, 252, 123, 253, 61, 2, 149, 255, 200, 253, 79, 253, 198, 252, 255, 251, 229, 255, 184, 254, 53, 255, 93, 3, 237, 2, 36, 2, 233, 0, 132, 249, 237, 251, 195, 1, 108, 0, 108, 253, 148, 253, 174, 1, 236, 0, 21, 0, 116, 254, 122, 251, 137, 253, 92, 5, 18, 5, 199, 3, 65, 2, 101, 4, 101, 4, 77, 2, 198, 1, 189, 254, 159, 252, 45, 254, 153, 0, 44, 254, 69, 253, 220, 252, 3, 254, 120, 254, 50, 253, 52, 255, 221, 255, 165, 253, 187, 251, 201, 253, 94, 255, 7, 254, 20, 252, 154, 255, 94, 1, 219, 0, 224, 0, 167, 1, 252, 0, 139, 1, 79, 2, 96, 2, 107, 1, 22, 253, 160, 255, 117, 1, 172, 0, 171, 0, 39, 1, 202, 2, 83, 1, 233, 0, 77, 0, 107, 0, 21, 1, 157, 0, 153, 0, 13, 254, 156, 254, 11, 6, 49, 4, 64, 2, 238, 1, 220, 254, 173, 254, 8, 254, 176, 253, 121, 252, 184, 255, 149, 253, 31, 254, 198, 249, 163, 251, 201, 253, 2, 255, 231, 252, 5, 254, 204, 253, 221, 254, 20, 254, 236, 253, 246, 1, 48, 2, 130, 254, 171, 1, 88, 2, 230, 0, 29, 255, 221, 1, 251, 0, 75, 0, 29, 1, 74, 3, 45, 3, 220, 1, 226, 250, 203, 250, 186, 0, 121, 1, 181, 253, 107, 252, 131, 2, 125, 1, 94, 251, 215, 253, 155, 1, 82, 0, 153, 251, 204, 252, 82, 255, 228, 253, 164, 253, 119, 0, 31, 2, 205, 0, 132, 254, 145, 2, 141, 3, 55, 2, 112, 0, 214, 254, 138, 254, 114, 0, 167, 252, 5, 255, 56, 0, 159, 0, 145, 1, 89, 1, 222, 255, 116, 255, 145, 255, 161, 253, 41, 0, 102, 2, 99, 1, 142, 255, 179, 255, 218, 1, 66, 2, 56, 0, 170, 5, 156, 3, 74, 4, 140, 5, 229, 2, 144, 1, 246, 0, 22, 0, 76, 2, 57, 1, 135, 255, 71, 1, 63, 3, 216, 1, 142, 251, 160, 253, 88, 3, 40, 2, 39, 251, 208, 251, 126, 2, 88, 2, 154, 254, 254, 0, 179, 254, 209, 254, 122, 253, 227, 2, 102, 1, 74, 0, 202, 4, 135, 6, 197, 4, 81, 3, 193, 8, 88, 6, 215, 3, 124, 2, 49, 7, 197, 5, 237, 2, 128, 1, 94, 1, 7, 1, 87, 0, 128, 0, 146, 248, 83, 252, 112, 255, 192, 255, 58, 249, 1, 255, 32, 1, 225, 255, 172, 245, 42, 251, 110, 1, 235, 0, 149, 249, 188, 251, 192, 250, 208, 254, 227, 253, 205, 251, 164, 251, 123, 0, 102, 251, 4, 255, 208, 252, 76, 255, 8, 252, 21, 2, 53, 2, 233, 0, 25, 254, 82, 254, 68, 255, 78, 1, 99, 3, 212, 4, 22, 2, 171, 0, 202, 249, 185, 249, 123, 2, 118, 2, 108, 247, 54, 1, 156, 3, 156, 1, 202, 246, 184, 254, 188, 3, 17, 2, 177, 245, 135, 254, 118, 2, 22, 1, 214, 245, 61, 1, 31, 3, 43, 1, 154, 246, 133, 0, 84, 1, 31, 0, 148, 247, 68, 250, 131, 0, 125, 0, 96, 251, 22, 254, 117, 255, 46, 0, 24, 253, 191, 1, 123, 3, 52, 2, 67, 0, 61, 254, 134, 2, 92, 2, 215, 253, 83, 254, 148, 252, 140, 1, 162, 0, 190, 255, 25, 5, 147, 3, 223, 1, 67, 2, 64, 4, 26, 3, 194, 1, 22, 1, 54, 2, 68, 1, 223, 251, 102, 255, 148, 0, 79, 255, 15, 246, 168, 0, 46, 4, 80, 2, 209, 246, 214, 255, 51, 3, 89, 1, 216, 246, 61, 253, 209, 2, 250, 0, 129, 247, 39, 250, 203, 254, 122, 0, 178, 255, 183, 255, 120, 0, 173, 0, 252, 255, 6, 1, 249, 254, 251, 254, 81, 254, 192, 255, 107, 254, 36, 253, 207, 245, 116, 0, 173, 255, 63, 255, 11, 250, 80, 252, 35, 254, 43, 253, 4, 254, 51, 1, 170, 0, 172, 0, 64, 3, 161, 1, 64, 3, 174, 2, 31, 255, 177, 0, 126, 3, 50, 3, 30, 254, 123, 254, 255, 4, 15, 4, 129, 254, 201, 0, 162, 254, 40, 0, 218, 2, 123, 2, 226, 0, 14, 2, 247, 1, 206, 1, 82, 1, 142, 1, 23, 2, 202, 2, 40, 0, 230, 254, 202, 5, 191, 5, 61, 4, 219, 2, 25, 6, 48, 4, 141, 3, 181, 2, 139, 5, 2, 5, 121, 3, 111, 3, 129, 4, 216, 2, 162, 4, 72, 3, 30, 255, 106, 4, 181, 3, 177, 2, 18, 254, 38, 252, 236, 249, 128, 255, 200, 253, 47, 253, 55, 253, 230, 255, 61, 1, 12, 2, 70, 0, 135, 0, 107, 254, 159, 252, 26, 249, 116, 253, 82, 255, 223, 252, 117, 3, 5, 3, 103, 255, 165, 255, 75, 4, 239, 2, 6, 254, 131, 251, 85, 3, 134, 2, 241, 0, 14, 3, 7, 2, 27, 2, 61, 7, 164, 6, 77, 4, 172, 2, 31, 251, 50, 250, 48, 254, 188, 0, 131, 252, 127, 250, 224, 250, 171, 254, 121, 255, 182, 1, 81, 255, 18, 0, 87, 4, 208, 3, 63, 1, 208, 0, 106, 250, 24, 249, 83, 0, 202, 1, 238, 253, 24, 252, 51, 1, 129, 0, 184, 252, 241, 255, 227, 255, 156, 254, 113, 252, 100, 252, 133, 251, 14, 255, 137, 255, 240, 253, 127, 0, 123, 255, 7, 253, 3, 253, 190, 0, 173, 255, 197, 254, 127, 3, 10, 2, 231, 0, 34, 255, 102, 0, 193, 255, 84, 254, 60, 1, 187, 2, 123, 1, 70, 0, 25, 0, 204, 2, 58, 1, 148, 255, 251, 1, 106, 3, 54, 2, 238, 0, 108, 0, 173, 3, 7, 2, 195, 0, 169, 1, 196, 255, 85, 254, 1, 1, 139, 0, 153, 255, 138, 253, 190, 1, 78, 1, 114, 1, 156, 1, 48, 0, 84, 255, 78, 253, 229, 254, 45, 2, 187, 0, 226, 254, 158, 0, 227, 1, 140, 0, 14, 1, 168, 254, 137, 253, 156, 3, 67, 2, 140, 255, 132, 0, 142, 0, 210, 1, 188, 255, 192, 255, 230, 0, 111, 255, 210, 254, 226, 253, 221, 252, 112, 252, 250, 3, 225, 2, 251, 252, 247, 3, 118, 2, 41, 1, 220, 245, 95, 0, 189, 1, 80, 1, 182, 247, 235, 1, 254, 1, 191, 0, 27, 251, 161, 0, 254, 255, 188, 254, 86, 250, 135, 253, 56, 253, 151, 255, 182, 252, 2, 255, 101, 254, 100, 0, 128, 253, 222, 254, 242, 3, 251, 2, 118, 253, 57, 1, 145, 4, 218, 2, 140, 0, 249, 1, 6, 4, 254, 2, 4, 3, 31, 1, 43, 4, 55, 3, 239, 1, 237, 2, 49, 1, 67, 1, 92, 255, 206, 1, 78, 0, 143, 1, 170, 254, 150, 252, 69, 0, 85, 2, 240, 255, 108, 2, 109, 2, 81, 1, 118, 255, 68, 254, 247, 254, 218, 0, 84, 0, 62, 254, 185, 3, 154, 2, 34, 255, 221, 252, 29, 2, 92, 2, 103, 252, 160, 250, 244, 0, 116, 0, 183, 252, 45, 253, 118, 2, 76, 2, 140, 0, 151, 2, 38, 1, 112, 1, 167, 3, 22, 4, 113, 3, 247, 2, 210, 6, 184, 5, 148, 3, 116, 2, 180, 1, 195, 3, 25, 1, 1, 0, 137, 255, 74, 0, 30, 2, 213, 0, 1, 0, 201, 253, 45, 1, 241, 0, 4, 1, 179, 1, 222, 0, 140, 1, 168, 3, 189, 3, 84, 4, 191, 2, 254, 1, 250, 1, 40, 3, 222, 1, 89, 2, 182, 2, 192, 3, 108, 2, 204, 3, 229, 2, 212, 3, 88, 2, 66, 3, 205, 2, 255, 2, 172, 2, 131, 2, 204, 3, 167, 3, 126, 2, 245, 1, 149, 2, 208, 2, 83, 3, 151, 255, 136, 253, 209, 254, 139, 255, 83, 254, 130, 0, 21, 3, 186, 1, 246, 253, 68, 255, 192, 2, 117, 1, 9, 253, 42, 0, 46, 3, 11, 2, 237, 253, 143, 251, 117, 1, 66, 2, 86, 253, 77, 251, 57, 254, 29, 1, 117, 251, 215, 249, 182, 251, 44, 0, 81, 0, 174, 255, 200, 2, 107, 1, 221, 1, 246, 0, 186, 3, 110, 2, 68, 6, 86, 6, 253, 4, 123, 3, 129, 5, 91, 3, 156, 3, 124, 3, 6, 3, 17, 4, 179, 3, 118, 4, 40, 0, 222, 253, 181, 255, 32, 1, 152, 253, 150, 255, 71, 253, 230, 255, 87, 255, 96, 255, 133, 252, 29, 253, 233, 254, 128, 254, 251, 251, 162, 254, 245, 6, 28, 5, 22, 4, 48, 3, 44, 6, 253, 5, 192, 5, 154, 4, 225, 5, 52, 4, 192, 4, 131, 3, 122, 3, 136, 3, 52, 2, 142, 2, 152, 3, 180, 2, 253, 3, 88, 3, 19, 254, 132, 0, 177, 0, 249, 1, 71, 0, 195, 0, 228, 255, 97, 0, 200, 1, 95, 1, 92, 255, 88, 0, 183, 1, 22, 1, 216, 255, 94, 1, 115, 5, 181, 3, 234, 0, 161, 255, 219, 252, 40, 254, 38, 0, 93, 255, 111, 1, 158, 255, 233, 1, 11, 2, 1, 4, 154, 4, 188, 4, 138, 3, 63, 1, 34, 5, 46, 3, 205, 1, 133, 255, 225, 253, 220, 252, 191, 1, 20, 253, 188, 254, 127, 252, 153, 251, 31, 253, 11, 254, 235, 252, 55, 253, 203, 2, 9, 3, 215, 4, 154, 3, 157, 7, 147, 7, 88, 5, 97, 3, 218, 2, 112, 3, 246, 2, 132, 1, 153, 252, 198, 1, 17, 0, 5, 255, 131, 254, 214, 252, 209, 249, 239, 0, 247, 253, 58, 252, 232, 252, 3, 1, 134, 252, 178, 250, 254, 252, 183, 255, 166, 0, 93, 1, 44, 255, 67, 1, 184, 252, 211, 254, 217, 1, 179, 1, 89, 253, 48, 254, 216, 2, 95, 1, 100, 255, 57, 255, 155, 2, 176, 1, 29, 0, 4, 255, 159, 1, 224, 1, 37, 253, 133, 254, 145, 0, 47, 2, 240, 253, 137, 253, 122, 251, 97, 255, 189, 1, 17, 1, 123, 0, 127, 2, 117, 1, 130, 255, 32, 3, 56, 2, 84, 0, 94, 255, 208, 2, 200, 2, 194, 252, 232, 253, 71, 255, 222, 0, 152, 1, 196, 1, 245, 1, 3, 3, 127, 252, 181, 250, 189, 255, 186, 1, 232, 252, 130, 250, 54, 2, 90, 2, 167, 0, 186, 254, 253, 1, 74, 1, 161, 255, 142, 253, 38, 253, 168, 254, 132, 6, 193, 4, 11, 3, 199, 1, 36, 5, 60, 3, 72, 2, 207, 2, 148, 1, 225, 255, 245, 3, 21, 3, 89, 0, 107, 0, 123, 3, 37, 2, 103, 3, 45, 6, 149, 3, 159, 2, 98, 3, 199, 5, 9, 5, 86, 3, 135, 1, 44, 4, 98, 4, 44, 3, 78, 0, 206, 253, 89, 1, 51, 2, 173, 1, 153, 255, 161, 1, 19, 3, 134, 255, 75, 254, 155, 1, 20, 3, 111, 252, 95, 254, 90, 2, 242, 2, 30, 255, 240, 255, 151, 0, 248, 2, 68, 253, 118, 0, 152, 255, 242, 255, 152, 251, 48, 0, 28, 1, 137, 1, 122, 254, 93, 254, 129, 253, 140, 255, 114, 252, 50, 1, 60, 1, 243, 255, 183, 4, 216, 3, 53, 3, 157, 2, 85, 251, 75, 253, 140, 0, 43, 255, 140, 252, 96, 254, 57, 255, 210, 253, 152, 253, 245, 0, 108, 254, 104, 253, 6, 1, 56, 0, 151, 253, 44, 253, 171, 255, 21, 254, 192, 254, 112, 253, 198, 253, 193, 252, 127, 255, 240, 253, 30, 250, 193, 255, 145, 254, 127, 254, 154, 254, 191, 254, 4, 0, 51, 0, 146, 254, 42, 255, 63, 1, 255, 1, 146, 0, 159, 2, 239, 255, 221, 254, 146, 255, 208, 1, 117, 255, 16, 254, 54, 255, 220, 0, 200, 254, 137, 253, 108, 253, 183, 255, 113, 253, 204, 252, 106, 253, 115, 253, 248, 250, 167, 252, 82, 254, 71, 252, 65, 252, 248, 254, 207, 255, 44, 254, 184, 255, 131, 254, 162, 254, 205, 253, 63, 255, 105, 254, 55, 0, 104, 254, 221, 252, 11, 0, 203, 254, 137, 2, 188, 0, 58, 255, 0, 254, 205, 1, 177, 255, 54, 254, 218, 250, 249, 254, 122, 255, 245, 253, 135, 249, 77, 254, 17, 254, 3, 253, 57, 0, 165, 254, 98, 254, 178, 1, 139, 251, 14, 255, 104, 253, 167, 252, 34, 0, 188, 255, 61, 253, 174, 254, 163, 1, 163, 0, 226, 255, 250, 254, 57, 254, 235, 252, 106, 250, 47, 253, 238, 3, 152, 2, 13, 1, 25, 0, 107, 2, 4, 1, 183, 0, 96, 0, 56, 252, 178, 250, 124, 254, 135, 0, 75, 253, 67, 3, 200, 1, 154, 0, 81, 4, 191, 2, 57, 2, 107, 1, 89, 6, 46, 5, 217, 3, 236, 2, 36, 255, 219, 0, 76, 0, 48, 255, 81, 250, 130, 249, 49, 0, 149, 0, 60, 252, 84, 255, 16, 253, 176, 254, 113, 2, 209, 0, 6, 255, 190, 255, 7, 252, 186, 252, 254, 255, 61, 1, 136, 247, 51, 250, 118, 255, 123, 0, 172, 248, 205, 247, 247, 253, 85, 0, 57, 252, 146, 254, 73, 253, 143, 252, 103, 252, 13, 252, 5, 253, 75, 252, 132, 255, 0, 255, 160, 254, 108, 253, 178, 0, 207, 1, 98, 1, 48, 1, 48, 249, 177, 253, 230, 254, 79, 0, 55, 247, 175, 0, 99, 3, 243, 1, 118, 255, 76, 255, 75, 255, 235, 255, 13, 247, 39, 251, 52, 254, 248, 253, 253, 252, 195, 1, 246, 255, 204, 254, 15, 1, 191, 255, 4, 0, 214, 0, 233, 254, 77, 254, 213, 255, 164, 254, 98, 253, 35, 0, 191, 255, 45, 255, 38, 3, 23, 2, 85, 0, 41, 1, 57, 0, 239, 0, 210, 2, 237, 1, 225, 0, 149, 2, 72, 3, 35, 2, 228, 253, 136, 254, 14, 0, 93, 1, 213, 1, 209, 2, 75, 1, 162, 0, 224, 253, 16, 253, 194, 255, 246, 255, 142, 1, 168, 255, 212, 2, 189, 2, 237, 255, 235, 253, 162, 255, 89, 2, 136, 0, 185, 255, 87, 253, 21, 253, 90, 255, 168, 254, 5, 1, 206, 255, 161, 0, 204, 255, 229, 1, 81, 1, 117, 249, 50, 0, 190, 0, 163, 255, 22, 247, 25, 255, 62, 255, 174, 255, 161, 255, 173, 253, 102, 255, 128, 0, 126, 3, 245, 1, 76, 2, 201, 1, 167, 254, 206, 0, 122, 0, 110, 0, 137, 253, 29, 255, 199, 253, 3, 0, 152, 1, 239, 0, 141, 1, 226, 0, 59, 255, 254, 255, 128, 0, 235, 1, 1, 5, 136, 3, 36, 1, 215, 0, 26, 2, 50, 1, 3, 1, 253, 1, 91, 253, 233, 251, 13, 0, 65, 1, 89, 253, 180, 253, 154, 254, 44, 255, 210, 253, 243, 0, 134, 2, 223, 1, 230, 1, 86, 1, 122, 2, 20, 2, 107, 0, 34, 3, 75, 1, 136, 0, 144, 255, 114, 254, 249, 251, 226, 254, 186, 254, 63, 253, 32, 1, 16, 1, 19, 5, 120, 4, 154, 4, 92, 3, 89, 254, 121, 0, 127, 254, 108, 255, 217, 254, 210, 254, 190, 252, 205, 252, 16, 0, 232, 255, 55, 255, 36, 254, 43, 2, 91, 0, 11, 255, 38, 1, 218, 255, 133, 254, 62, 252, 59, 251, 89, 251, 18, 250, 239, 254, 117, 254, 122, 254, 11, 252, 123, 253, 61, 2, 205, 248, 250, 251, 249, 1, 212, 1, 232, 2, 179, 3, 97, 2, 237, 1, 79, 253, 108, 251, 140, 253, 121, 255, 254, 251, 195, 0, 155, 1, 196, 0, 46, 6, 123, 4, 63, 2, 81, 1, 41, 251, 247, 252, 120, 253, 114, 255, 83, 2, 57, 3, 199, 3, 223, 2, 74, 251, 54, 252, 175, 255, 170, 254, 23, 253, 13, 0, 184, 255, 119, 1, 198, 1, 19, 0, 127, 5, 153, 3, 145, 249, 84, 255, 93, 3, 50, 2, 160, 3, 1, 6, 39, 4, 228, 2, 88, 246, 72, 252, 8, 1, 82, 0, 10, 254, 59, 252, 202, 250, 123, 0, 99, 3, 212, 4, 22, 2, 171, 0, 240, 246, 52, 254, 12, 3, 107, 1, 90, 251, 151, 253, 252, 0, 195, 255, 82, 255, 34, 0, 243, 3, 20, 3, 227, 246, 247, 0, 167, 1, 153, 0, 240, 255, 157, 254, 6, 1, 193, 1, 216, 249, 207, 251, 224, 253, 141, 254, 153, 253, 207, 254, 27, 4, 37, 3, 175, 2, 16, 2, 6, 0, 74, 255, 167, 3, 107, 3, 234, 3, 41, 3, 199, 0, 1, 1, 126, 0, 76, 0, 184, 253, 142, 251, 87, 2, 44, 2, 175, 251, 145, 250, 201, 249, 249, 253, 47, 252, 211, 250, 108, 0, 91, 1, 46, 253, 49, 252, 109, 1, 101, 0, 111, 255, 169, 2, 249, 0, 103, 255, 0, 0, 178, 254, 198, 253, 159, 0, 156, 1, 29, 1, 176, 254, 151, 253, 71, 252, 58, 252, 119, 3, 177, 2, 29, 251, 84, 0, 71, 255, 114, 254, 176, 253, 177, 1, 20, 4, 141, 2, 85, 0, 73, 1, 216, 255, 105, 1, 79, 254, 63, 253, 210, 1, 62, 2, 102, 255, 142, 2, 80, 2, 34, 1, 89, 255, 72, 0, 93, 1, 175, 0, 162, 2, 41, 1, 209, 3, 208, 2, 211, 4, 180, 4, 245, 2, 232, 1, 112, 254, 243, 254, 26, 2, 116, 1, 186, 250, 149, 250, 86, 251, 165, 255, 238, 4, 108, 3, 7, 3, 188, 2, 169, 253, 218, 255, 82, 254, 46, 253, 184, 7, 94, 6, 223, 3, 96, 2, 111, 0, 20, 1, 30, 255, 160, 255, 77, 252, 124, 254, 245, 255, 249, 255, 209, 254, 237, 253, 185, 252, 82, 1, 198, 6, 174, 6, 125, 5, 245, 3, 252, 253, 169, 252, 123, 253, 210, 0, 80, 253, 96, 254, 1, 2, 230, 0, 202, 252, 131, 253, 134, 251, 192, 254, 72, 252, 110, 253, 74, 253, 183, 0, 142, 255, 145, 253, 50, 3, 162, 2, 65, 255, 52, 255, 219, 2, 123, 2, 51, 0, 197, 4, 115, 3, 64, 2, 70, 252, 81, 254, 58, 3, 86, 2, 170, 254, 13, 253, 124, 252, 105, 254, 154, 251, 158, 254, 50, 255, 0, 254, 221, 253, 214, 252, 155, 254, 148, 253, 66, 0, 3, 2, 183, 255, 102, 254, 152, 252, 79, 252, 92, 250, 53, 251, 191, 0, 239, 255, 224, 253, 25, 255, 252, 249, 224, 253, 123, 252, 138, 252, 134, 252, 242, 249, 19, 246, 205, 252, 54, 252, 175, 0, 198, 252, 46, 251, 6, 253, 169, 253, 234, 255, 122, 2, 213, 252, 37, 252, 122, 252, 189, 254, 203, 0, 26, 0, 129, 254, 21, 255, 243, 252, 113, 254, 238, 4, 138, 3, 92, 252, 137, 250, 156, 250, 144, 253, 93, 0, 87, 0, 98, 254, 229, 253, 77, 253, 37, 0, 121, 2, 254, 1, 125, 254, 36, 254, 206, 250, 143, 1, 66, 0, 7, 1, 105, 254, 207, 255, 177, 254, 95, 254, 17, 4, 73, 7, 245, 252, 191, 251, 96, 250, 22, 253, 166, 252, 64, 3, 187, 253, 9, 253, 141, 254, 95, 253, 6, 254, 40, 8, 208, 253, 134, 253, 101, 251, 15, 1, 241, 0, 14, 0, 74, 254, 12, 255, 115, 254, 207, 1, 178, 4, 23, 4, 162, 253, 227, 252, 98, 250, 205, 255, 189, 254, 225, 1, 32, 255, 184, 253, 241, 253, 238, 1, 113, 3, 170, 2, 79, 254, 206, 254, 22, 252, 42, 2, 147, 2, 222, 0, 171, 0, 96, 255, 159, 254, 169, 2, 6, 7, 29, 6, 172, 252, 99, 251, 97, 249, 176, 254, 102, 253, 114, 0, 187, 253, 12, 253, 24, 253, 61, 255, 119, 1, 241, 1, 47, 254, 220, 252, 182, 251, 154, 0, 26, 1, 125, 255, 206, 255, 65, 255, 49, 253, 67, 1, 220, 2, 6, 6, 46, 253, 205, 252, 132, 250, 105, 0, 6, 255, 185, 0, 78, 255, 10, 254, 26, 253, 65, 1, 254, 1, 87, 4, 189, 254, 201, 253, 58, 252, 127, 0, 228, 1, 82, 1, 96, 255, 52, 0, 174, 254, 220, 2, 87, 5, 18, 6, 142, 253, 222, 252, 96, 249, 226, 254, 182, 253, 164, 2, 73, 253, 169, 254, 142, 254, 22, 254, 39, 1, 101, 7, 138, 253, 194, 253, 10, 252, 176, 255, 133, 2, 187, 255, 250, 255, 194, 254, 148, 254, 14, 3, 170, 5, 14, 4, 199, 254, 35, 253, 141, 250, 120, 0, 60, 0, 221, 1, 248, 254, 183, 253, 133, 255, 199, 2, 221, 4, 121, 2, 165, 255, 157, 254, 8, 252, 3, 3, 246, 2, 5, 1, 253, 0, 81, 0, 38, 254, 162, 3, 167, 8, 184, 6, 216, 252, 181, 251, 123, 248, 208, 253, 242, 252, 169, 0, 220, 252, 206, 251, 68, 255, 142, 253, 201, 255, 125, 5, 74, 253, 52, 253, 86, 251, 108, 253, 98, 1, 73, 1, 254, 253, 201, 255, 225, 253, 110, 1, 9, 4, 158, 4, 110, 253, 65, 252, 179, 250, 201, 255, 72, 255, 93, 0, 163, 253, 226, 254, 106, 253, 148, 1, 193, 1, 59, 3, 226, 254, 162, 254, 17, 251, 116, 2, 50, 1, 227, 0, 240, 255, 147, 0, 145, 253, 186, 0, 155, 3, 98, 8, 94, 253, 134, 252, 186, 249, 69, 254, 28, 255, 83, 1, 143, 254, 234, 252, 103, 254, 231, 0, 86, 0, 189, 5, 64, 254, 187, 253, 219, 251, 82, 2, 194, 1, 79, 255, 132, 255, 86, 255, 65, 254, 159, 2, 135, 4, 124, 5, 36, 254, 101, 253, 25, 250, 179, 255, 118, 255, 204, 2, 79, 255, 140, 254, 131, 254, 195, 1, 166, 3, 147, 3, 6, 255, 80, 254, 202, 252, 16, 1, 60, 3, 190, 1, 26, 0, 19, 0, 225, 255, 186, 2, 156, 6, 120, 8, 122, 253, 47, 252, 124, 248, 77, 255, 39, 254, 12, 1, 133, 254, 23, 253, 77, 253, 11, 0, 127, 0, 9, 4, 24, 254, 107, 252, 199, 252, 61, 0, 67, 1, 135, 0, 147, 0, 111, 255, 82, 253, 173, 2, 18, 3, 146, 6, 6, 254, 176, 252, 239, 250, 35, 0, 90, 0, 222, 0, 233, 255, 166, 254, 98, 253, 199, 1, 79, 2, 7, 5, 53, 255, 175, 253, 194, 251, 140, 2, 96, 1, 181, 1, 39, 0, 63, 0, 55, 254, 73, 3, 241, 4, 57, 8, 248, 253, 142, 252, 208, 249, 184, 254, 57, 253, 141, 5, 172, 253, 170, 254, 186, 255, 209, 0, 173, 0, 136, 7, 89, 254, 170, 253, 103, 252, 165, 1, 93, 2, 218, 255, 254, 255, 11, 255, 129, 255, 128, 3, 177, 7, 111, 4, 133, 254, 250, 253, 213, 249, 173, 0, 118, 0, 241, 2, 201, 255, 131, 254, 204, 255, 217, 3, 253, 3, 241, 2, 254, 255, 221, 254, 133, 252, 241, 2, 224, 3, 167, 1, 8, 1, 131, 0, 60, 255, 127, 3, 226, 8, 239, 9, 133, 253, 192, 251, 61, 246, 239, 253, 42, 252, 14, 2, 4, 253, 194, 252, 220, 253, 76, 254, 60, 1, 87, 2, 93, 253, 84, 252, 22, 253, 199, 255, 236, 0, 245, 255, 55, 255, 175, 255, 226, 252, 16, 0, 77, 3, 22, 6, 31, 253, 39, 252, 68, 251, 44, 254, 17, 0, 34, 1, 233, 254, 184, 253, 68, 253, 183, 0, 54, 3, 193, 2, 247, 254, 20, 254, 93, 251, 165, 1, 152, 0, 212, 1, 122, 254, 166, 0, 244, 254, 39, 0, 14, 6, 76, 7, 133, 253, 58, 252, 221, 249, 59, 254, 20, 254, 142, 3, 228, 254, 253, 251, 181, 255, 75, 255, 123, 255, 60, 7, 67, 254, 144, 253, 106, 251, 164, 1, 111, 1, 207, 255, 123, 254, 44, 255, 87, 255, 195, 2, 49, 4, 184, 4, 229, 253, 58, 253, 87, 250, 83, 0, 93, 255, 228, 1, 20, 255, 225, 253, 157, 254, 82, 1, 151, 4, 46, 3, 10, 255, 203, 254, 66, 252, 94, 2, 248, 2, 60, 0, 166, 0, 248, 255, 93, 255, 206, 254, 57, 7, 3, 10, 21, 253, 255, 251, 9, 249, 93, 254, 66, 254, 209, 0, 50, 253, 202, 253, 234, 253, 6, 254, 181, 2, 89, 3, 49, 254, 71, 253, 198, 251, 69, 1, 175, 1, 50, 255, 241, 255, 248, 255, 5, 253, 33, 2, 151, 3, 238, 5, 157, 253, 241, 252, 223, 250, 0, 1, 201, 255, 208, 0, 91, 255, 164, 254, 106, 253, 65, 1, 168, 2, 162, 3, 186, 254, 83, 254, 73, 252, 228, 1, 190, 1, 58, 2, 59, 255, 72, 0, 183, 255, 141, 3, 175, 5, 205, 6, 205, 253, 31, 253, 74, 248, 132, 255, 96, 254, 206, 2, 34, 254, 108, 254, 198, 254, 240, 255, 190, 1, 100, 6, 217, 253, 231, 253, 18, 253, 198, 255, 126, 2, 214, 0, 55, 0, 71, 255, 241, 254, 124, 4, 21, 5, 188, 4, 29, 254, 97, 253, 16, 251, 117, 0, 29, 1, 31, 2, 52, 255, 121, 254, 145, 255, 1, 2, 2, 6, 86, 3, 142, 255, 66, 255, 46, 252, 109, 3, 83, 2, 208, 1, 4, 1, 4, 1, 201, 254, 236, 2, 235, 8, 168, 8, 251, 253, 79, 252, 133, 247, 186, 254, 60, 253, 122, 1, 212, 252, 77, 253, 24, 255, 208, 253, 175, 2, 129, 5, 36, 253, 78, 253, 188, 252, 153, 254, 133, 2, 130, 1, 247, 254, 62, 0, 90, 253, 145, 0, 108, 6, 184, 4, 213, 253, 36, 252, 47, 251, 178, 255, 14, 0, 114, 0, 185, 254, 154, 254, 23, 254, 136, 1, 165, 2, 185, 2, 55, 255, 20, 255, 140, 251, 181, 2, 193, 1, 178, 0, 13, 255, 0, 1, 79, 254, 99, 2, 105, 5, 152, 9, 156, 253, 123, 252, 72, 250, 205, 254, 239, 255, 243, 1, 197, 254, 101, 253, 2, 255, 0, 1, 172, 1, 183, 5, 26, 254, 90, 254, 224, 251, 143, 2, 114, 1, 18, 0, 154, 255, 71, 255, 236, 254, 243, 2, 42, 6, 55, 5, 24, 254, 165, 253, 118, 250, 182, 0, 163, 255, 102, 3, 183, 255, 54, 254, 164, 254, 67, 3, 94, 3, 189, 3, 230, 254, 179, 254, 22, 253, 35, 2, 71, 3, 172, 1, 17, 1, 167, 255, 13, 0, 172, 3, 172, 6, 16, 10, 94, 254, 196, 251, 34, 249, 212, 255, 154, 254, 3, 1, 15, 254, 125, 253, 208, 253, 99, 0, 45, 2, 193, 3, 91, 254, 2, 253, 107, 252, 39, 1, 70, 1, 184, 0, 175, 0, 15, 0, 142, 253, 20, 2, 110, 3, 189, 7, 69, 254, 0, 253, 5, 251, 221, 0, 156, 0, 12, 1, 39, 0, 149, 254, 7, 254, 183, 2, 4, 3, 116, 4, 94, 255, 53, 254, 112, 252, 197, 2, 188, 1, 146, 2, 25, 0, 47, 1, 200, 254, 244, 4, 130, 5, 179, 6, 215, 254, 2, 253, 212, 248, 249, 254, 148, 255, 46, 4, 106, 254, 243, 255, 127, 255, 57, 0, 182, 1, 174, 10, 138, 254, 25, 254, 189, 252, 48, 1, 184, 2, 164, 0, 104, 0, 21, 255, 5, 0, 75, 6, 108, 7, 119, 5, 27, 255, 186, 253, 211, 250, 149, 1, 192, 0, 49, 3, 169, 255, 74, 254, 111, 0, 4, 4, 175, 4, 225, 3, 68, 0, 81, 255, 90, 252, 9, 4, 93, 4, 195, 1, 222, 1, 200, 0, 8, 255, 79, 8, 136, 10, 250, 7, 189, 252, 213, 250, 173, 247, 225, 252, 76, 253, 210, 1, 212, 252, 248, 251, 43, 254, 146, 253, 32, 1, 152, 3, 67, 253, 183, 252, 210, 251, 101, 254, 0, 2, 8, 0, 122, 254, 165, 255, 24, 253, 226, 255, 19, 4, 137, 4, 202, 252, 132, 251, 124, 251, 218, 254, 210, 255, 110, 0, 101, 254, 138, 254, 90, 253, 214, 0, 19, 2, 156, 2, 106, 254, 92, 254, 86, 251, 231, 1, 232, 0, 47, 1, 194, 254, 91, 0, 40, 254, 123, 0, 208, 4, 141, 9, 46, 253, 72, 252, 41, 250, 30, 253, 93, 253, 52, 5, 225, 253, 162, 253, 45, 255, 161, 255, 158, 255, 228, 5, 219, 253, 254, 253, 87, 251, 217, 1, 211, 0, 73, 0, 224, 254, 144, 255, 123, 254, 25, 2, 52, 5, 234, 4, 201, 253, 13, 253, 247, 249, 71, 0, 229, 254, 120, 2, 86, 255, 31, 254, 19, 254, 169, 2, 234, 3, 49, 3, 156, 254, 181, 254, 147, 252, 163, 1, 194, 2, 90, 1, 241, 0, 222, 255, 186, 254, 121, 1, 158, 7, 91, 7, 41, 253, 205, 251, 167, 249, 23, 255, 225, 253, 116, 0, 244, 253, 218, 252, 183, 253, 183, 255, 222, 1, 217, 2, 224, 254, 99, 252, 137, 251, 173, 0, 191, 1, 204, 255, 68, 0, 27, 255, 162, 253, 193, 1, 17, 2, 5, 7, 177, 253, 149, 252, 173, 250, 183, 0, 112, 255, 68, 1, 153, 255, 60, 254, 102, 253, 111, 2, 232, 1, 152, 4, 18, 255, 1, 254, 20, 252, 70, 1, 40, 2, 202, 1, 136, 0, 108, 0, 193, 254, 114, 2, 63, 5, 91, 7, 22, 254, 122, 253, 62, 249, 70, 255, 63, 254, 216, 3, 30, 253, 180, 255, 86, 255, 218, 253, 243, 2, 0, 10, 16, 254, 2, 254, 77, 252, 210, 0, 182, 2, 204, 255, 84, 0, 190, 254, 57, 255, 66, 4, 89, 6, 200, 4, 136, 254, 165, 253, 140, 250, 87, 1, 74, 0, 120, 2, 81, 255, 10, 254, 224, 255, 204, 3, 52, 5, 222, 2, 52, 0, 217, 254, 167, 251, 41, 4, 150, 3, 160, 0, 137, 1, 107, 0, 115, 254, 190, 4, 89, 10, 205, 6, 136, 253, 79, 251, 157, 248, 49, 253, 235, 254, 97, 1, 117, 253, 144, 252, 134, 255, 45, 255, 209, 0, 58, 5, 206, 253, 54, 253, 221, 251, 48, 255, 132, 1, 159, 0, 192, 254, 195, 255, 217, 253, 37, 1, 68, 4, 163, 5, 120, 253, 159, 252, 27, 251, 207, 255, 113, 255, 49, 1, 111, 254, 29, 255, 183, 253, 49, 2, 20, 2, 159, 3, 139, 255, 69, 254, 92, 251, 251, 1, 180, 1, 36, 1, 177, 255, 233, 0, 54, 254, 159, 2, 1, 4, 92, 9, 135, 253, 182, 252, 11, 250, 204, 254, 226, 254, 128, 2, 139, 254, 147, 253, 105, 254, 162, 1, 253, 0, 25, 5, 197, 254, 187, 253, 143, 251, 60, 2, 173, 2, 231, 254, 61, 0, 188, 255, 141, 254, 223, 3, 77, 4, 218, 5, 19, 254, 85, 253, 174, 250, 209, 255, 164, 0, 192, 2, 0, 255, 198, 254, 244, 254, 119, 2, 181, 3, 28, 4, 138, 255, 164, 254, 191, 252, 68, 0, 156, 4, 56, 2, 152, 0, 117, 0, 34, 0, 89, 4, 110, 7, 191, 8, 167, 253, 65, 252, 86, 249, 113, 255, 23, 254, 224, 1, 180, 254, 113, 253, 194, 253, 54, 0, 97, 1, 168, 4, 50, 254, 116, 253, 228, 252, 150, 0, 37, 2, 112, 0, 195, 0, 145, 255, 253, 253, 167, 2, 84, 4, 111, 6, 210, 253, 19, 253, 63, 251, 247, 255, 16, 1, 85, 1, 203, 255, 247, 254, 233, 253, 233, 1, 75, 3, 18, 5, 136, 255, 30, 254, 248, 251, 120, 2, 31, 2, 152, 1, 179, 0, 50, 1, 242, 253, 100, 4, 184, 5, 196, 8, 95, 254, 238, 252, 230, 249, 32, 255, 128, 254, 84, 5, 135, 254, 53, 254, 231, 255, 129, 1, 233, 1, 126, 8, 180, 254, 117, 253, 195, 252, 32, 2, 41, 2, 61, 0, 22, 0, 143, 255, 167, 255, 104, 4, 189, 6, 244, 5, 40, 255, 139, 254, 139, 249, 161, 0, 60, 1, 140, 3, 91, 255, 34, 255, 189, 255, 82, 5, 151, 4, 21, 3, 73, 0, 4, 255, 1, 253, 226, 2, 164, 3, 104, 2, 106, 1, 246, 0, 130, 255, 19, 3, 94, 10, 211, 11, 77, 253, 174, 251, 114, 247, 203, 253, 180, 253, 12, 2, 178, 253, 45, 252, 22, 254, 249, 254, 141, 1, 214, 3, 191, 253, 187, 252, 79, 252, 234, 255, 179, 1, 207, 255, 66, 255, 138, 255, 139, 253, 168, 255, 216, 4, 233, 5, 132, 253, 229, 251, 5, 252, 221, 254, 189, 0, 3, 1, 255, 254, 42, 254, 139, 253, 145, 0, 177, 3, 126, 3, 186, 254, 148, 254, 186, 251, 31, 2, 4, 1, 118, 2, 54, 255, 189, 0, 47, 255, 101, 1, 99, 5, 43, 8, 199, 253, 205, 251, 87, 250, 54, 253, 17, 255, 151, 3, 92, 254, 63, 253, 172, 255, 147, 255, 142, 255, 103, 9, 99, 254, 239, 253, 103, 251, 226, 1, 112, 1, 131, 0, 70, 255, 184, 255, 125, 255, 93, 3, 231, 4, 196, 4, 157, 253, 110, 253, 195, 250, 227, 0, 135, 255, 119, 2, 80, 255, 23, 254, 38, 255, 233, 2, 151, 4, 189, 3, 191, 254, 108, 255, 88, 252, 159, 2, 198, 3, 216, 0, 84, 1, 253, 255, 113, 255, 213, 1, 56, 7, 133, 9, 39, 253, 63, 252, 109, 249, 43, 255, 2, 255, 65, 1, 1, 254, 74, 254, 247, 253, 130, 255, 213, 2, 135, 3, 172, 254, 83, 253, 248, 251, 60, 1, 224, 1, 20, 0, 23, 0, 167, 255, 217, 253, 97, 1, 27, 4, 253, 6, 224, 253, 11, 253, 172, 250, 42, 1, 231, 255, 180, 1, 156, 255, 120, 254, 249, 253, 211, 1, 242, 2, 54, 4, 46, 255, 114, 254, 202, 251, 108, 2, 146, 2, 118, 2], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE + 10240);\r\n    allocate([33, 0, 147, 0, 78, 255, 153, 3, 151, 6, 129, 7, 187, 254, 240, 253, 70, 248, 2, 0, 227, 254, 142, 3, 141, 254, 22, 254, 26, 255, 0, 0, 85, 2, 218, 7, 16, 254, 117, 254, 190, 252, 37, 0, 177, 3, 245, 0, 181, 0, 96, 255, 112, 255, 201, 5, 93, 5, 77, 5, 157, 254, 167, 253, 10, 251, 42, 1, 66, 1, 160, 2, 63, 255, 176, 254, 77, 0, 65, 4, 253, 5, 154, 3, 177, 0, 217, 255, 155, 251, 228, 3, 13, 3, 24, 2, 200, 1, 110, 1, 80, 254, 135, 5, 136, 9, 231, 8, 46, 254, 10, 253, 235, 246, 209, 254, 3, 254, 131, 1, 41, 253, 211, 253, 66, 0, 111, 255, 131, 2, 224, 4, 224, 253, 92, 253, 108, 252, 31, 255, 94, 3, 76, 2, 104, 255, 40, 0, 235, 253, 167, 1, 143, 5, 22, 6, 196, 253, 181, 252, 135, 251, 128, 255, 85, 0, 205, 1, 18, 255, 255, 254, 184, 253, 93, 2, 236, 2, 93, 3, 24, 0, 54, 255, 127, 250, 29, 3, 231, 1, 47, 1, 75, 255, 108, 1, 74, 255, 104, 2, 98, 5, 126, 11, 18, 254, 172, 252, 95, 250, 220, 254, 61, 0, 44, 3, 172, 255, 45, 253, 74, 255, 43, 2, 20, 2, 226, 5, 147, 254, 19, 254, 223, 251, 54, 3, 76, 2, 11, 0, 242, 255, 238, 255, 26, 255, 233, 3, 121, 5, 171, 5, 38, 254, 199, 253, 244, 250, 46, 1, 62, 0, 38, 4, 186, 255, 136, 254, 34, 255, 214, 3, 206, 3, 125, 4, 60, 255, 22, 255, 229, 252, 223, 1, 74, 4, 243, 1, 106, 1, 58, 0, 70, 0, 123, 4, 21, 8, 41, 11, 25, 254, 146, 252, 224, 248, 73, 0, 224, 254, 92, 1, 154, 254, 12, 254, 4, 254, 199, 0, 209, 2, 218, 4, 178, 255, 71, 253, 229, 252, 105, 1, 24, 2, 196, 0, 118, 1, 110, 0, 33, 253, 79, 3, 27, 4, 104, 7, 146, 254, 55, 253, 98, 251, 59, 1, 64, 1, 173, 1, 72, 0, 41, 255, 62, 254, 247, 2, 118, 3, 83, 5, 226, 255, 84, 254, 190, 252, 93, 3, 115, 2, 28, 3, 118, 0, 212, 1, 233, 254, 75, 5, 91, 7, 101, 7, 68, 255, 126, 253, 180, 249, 63, 0, 81, 255, 174, 4, 94, 254, 45, 255, 51, 0, 158, 1, 75, 2, 41, 10, 22, 255, 211, 253, 166, 252, 168, 1, 121, 3, 222, 0, 136, 0, 155, 255, 83, 0, 133, 5, 230, 8, 103, 5, 172, 255, 67, 254, 147, 250, 158, 1, 57, 1, 21, 4, 29, 0, 169, 254, 65, 0, 16, 6, 111, 6, 212, 3, 183, 0, 165, 255, 195, 252, 249, 4, 133, 5, 104, 1, 41, 2, 16, 1, 149, 255, 51, 6, 77, 12, 43, 10, 104, 5, 29, 8, 92, 13, 244, 19, 86, 26, 186, 31, 135, 38, 84, 43, 170, 49, 133, 53, 61, 254, 215, 251, 239, 253, 231, 250, 62, 254, 12, 253, 15, 254, 161, 252, 128, 254, 149, 253, 99, 254, 99, 253, 195, 254, 230, 253, 181, 254, 212, 253, 98, 254, 4, 254, 88, 254, 134, 254, 238, 254, 188, 254, 78, 254, 154, 253, 30, 255, 12, 254, 24, 255, 254, 253, 249, 254, 135, 254, 214, 254, 102, 254, 105, 255, 58, 253, 82, 255, 206, 252, 107, 255, 100, 254, 100, 255, 83, 254, 224, 254, 50, 254, 70, 255, 53, 255, 86, 255, 210, 254, 65, 255, 191, 254, 125, 255, 109, 255, 215, 254, 117, 254, 28, 255, 42, 255, 11, 255, 64, 255, 189, 255, 196, 254, 185, 255, 185, 254, 152, 255, 51, 255, 162, 255, 73, 255, 113, 255, 218, 255, 63, 255, 161, 255, 16, 0, 180, 255, 132, 255, 8, 255, 23, 0, 19, 255, 24, 0, 12, 255, 18, 0, 120, 255, 44, 0, 145, 255, 223, 255, 232, 255, 231, 255, 0, 0, 149, 0, 19, 0, 23, 0, 113, 255, 158, 0, 87, 255, 174, 0, 75, 255, 133, 0, 201, 255, 165, 0, 230, 255, 111, 0, 84, 0, 98, 0, 75, 0, 87, 0, 183, 0, 141, 255, 245, 255, 248, 255, 130, 0, 11, 0, 170, 0, 254, 0, 77, 0, 205, 0, 17, 0, 183, 0, 112, 0, 6, 1, 194, 0, 202, 0, 31, 1, 95, 0, 189, 0, 214, 255, 151, 255, 234, 0, 179, 0, 39, 0, 186, 0, 163, 0, 89, 1, 76, 1, 199, 0, 43, 1, 161, 0, 202, 255, 29, 1, 178, 255, 25, 1, 123, 255, 141, 0, 74, 255, 111, 0, 249, 0, 85, 1, 15, 1, 108, 1, 93, 0, 147, 1, 75, 0, 135, 1, 92, 0, 254, 1, 118, 255, 220, 0, 71, 255, 227, 255, 222, 255, 105, 1, 141, 255, 64, 1, 3, 0, 42, 2, 99, 0, 30, 1, 218, 0, 79, 2, 11, 255, 150, 1, 244, 254, 197, 1, 0, 0, 68, 2, 25, 0, 94, 2, 19, 1, 20, 2, 148, 0, 194, 1, 183, 255, 227, 2, 227, 254, 6, 2, 224, 254, 94, 0, 53, 255, 162, 2, 116, 255, 182, 255, 205, 0, 202, 2, 142, 255, 43, 1, 176, 0, 155, 3, 182, 0, 45, 2, 240, 0, 193, 2, 240, 255, 1, 2, 229, 1, 81, 2, 37, 1, 128, 1, 195, 1, 105, 2, 218, 255, 50, 0, 51, 2, 17, 2, 47, 1, 209, 0, 203, 1, 107, 1, 177, 1, 196, 1, 194, 1, 198, 1, 111, 1, 94, 2, 221, 1, 229, 2, 176, 1, 97, 1, 112, 1, 11, 1, 105, 1, 204, 2, 17, 1, 71, 2, 197, 1, 166, 0, 254, 1, 172, 0, 201, 0, 117, 2, 18, 1, 191, 0, 56, 2, 127, 2, 46, 1, 42, 1, 122, 2, 131, 1, 131, 2, 94, 1, 75, 2, 48, 2, 100, 2, 53, 2, 88, 2, 20, 3, 231, 1, 160, 2, 0, 2, 247, 3, 65, 1, 77, 1, 101, 1, 86, 3, 131, 255, 157, 1, 218, 1, 200, 2, 17, 0, 105, 255, 52, 2, 29, 1, 14, 1, 15, 255, 203, 3, 121, 3, 233, 1, 220, 0, 254, 1, 128, 3, 37, 2, 156, 3, 71, 1, 57, 3, 34, 1, 143, 3, 28, 2, 84, 4, 158, 0, 37, 3, 199, 0, 189, 3, 255, 1, 218, 2, 100, 0, 106, 3, 13, 0, 23, 3, 179, 1, 120, 2, 164, 2, 204, 3, 249, 0, 132, 3, 211, 1, 194, 4, 13, 3, 50, 4, 73, 2, 17, 3, 233, 255, 157, 2, 11, 1, 19, 4, 107, 2, 60, 4, 103, 2, 121, 4, 110, 2, 137, 3, 148, 3, 25, 4, 80, 0, 75, 1, 72, 2, 51, 4, 89, 0, 127, 2, 220, 3, 193, 3, 2, 3, 208, 2, 30, 3, 187, 2, 236, 1, 191, 1, 131, 3, 115, 2, 15, 1, 164, 4, 213, 2, 53, 5, 87, 0, 91, 2, 64, 3, 67, 6, 104, 2, 103, 4, 122, 3, 225, 5, 232, 3, 132, 4, 98, 3, 241, 3, 227, 3, 59, 3, 125, 4, 90, 3, 49, 3, 170, 5, 5, 3, 40, 5, 244, 1, 109, 5, 56, 1, 129, 4, 236, 255, 60, 4, 64, 0, 3, 5, 2, 0, 148, 4, 143, 1, 77, 7, 2, 2, 170, 6, 246, 1, 100, 6, 118, 3, 242, 5, 160, 1, 88, 2, 107, 4, 70, 5, 251, 4, 110, 5, 121, 3, 3, 7, 146, 3, 230, 6, 227, 0, 159, 4, 226, 4, 34, 7, 249, 1, 62, 7, 151, 3, 49, 9, 57, 255, 175, 1, 152, 0, 199, 6, 43, 255, 228, 255, 136, 1, 54, 5, 103, 255, 204, 255, 210, 3, 127, 4, 189, 254, 112, 254, 45, 3, 167, 6, 120, 255, 84, 0, 169, 5, 223, 7, 181, 254, 113, 255, 119, 255, 168, 4, 0, 255, 22, 2, 99, 255, 7, 4, 205, 254, 73, 254, 30, 2, 219, 2, 183, 254, 92, 254, 159, 255, 104, 2, 150, 254, 88, 255, 190, 254, 110, 1, 9, 255, 146, 255, 45, 255, 89, 0, 60, 255, 203, 254, 20, 0, 59, 0, 148, 254, 49, 254, 226, 254, 89, 0, 176, 254, 175, 0, 80, 254, 141, 0, 133, 254, 66, 255, 78, 254, 60, 255, 177, 255, 150, 0, 234, 254, 29, 255, 232, 254, 166, 0, 213, 253, 90, 254, 101, 255, 29, 2, 146, 254, 54, 0, 227, 255, 173, 255, 211, 254, 250, 252, 186, 0, 116, 2, 115, 254, 248, 254, 242, 0, 37, 1, 59, 255, 183, 253, 124, 0, 154, 1, 53, 0, 123, 255, 10, 0, 84, 1, 198, 253, 215, 251, 65, 0, 66, 254, 68, 0, 19, 254, 127, 1, 169, 3, 155, 254, 57, 253, 153, 254, 6, 255, 91, 253, 212, 251, 36, 1, 230, 255, 107, 1, 6, 0, 95, 2, 33, 5, 129, 255, 246, 255, 233, 5, 94, 7, 201, 2, 204, 3, 189, 5, 133, 8, 163, 5, 224, 7, 161, 249, 192, 249, 252, 248, 14, 247, 253, 251, 22, 249, 180, 251, 23, 248, 3, 251, 148, 250, 169, 250, 2, 250, 77, 252, 75, 250, 52, 252, 12, 250, 25, 252, 58, 251, 4, 252, 108, 251, 209, 252, 37, 252, 32, 252, 165, 250, 64, 251, 18, 252, 247, 250, 186, 251, 24, 253, 12, 251, 13, 253, 243, 250, 162, 252, 101, 252, 119, 252, 40, 252, 90, 253, 229, 251, 83, 253, 230, 251, 193, 251, 39, 252, 218, 251, 89, 253, 35, 252, 127, 253, 153, 251, 48, 252, 6, 253, 114, 253, 134, 252, 218, 252, 191, 252, 189, 251, 62, 253, 139, 253, 147, 253, 218, 252, 128, 253, 212, 252, 249, 252, 134, 253, 245, 252, 225, 253, 28, 252, 203, 253, 205, 251, 188, 253, 222, 253, 157, 253, 196, 253, 149, 253, 8, 253, 222, 254, 145, 252, 242, 253, 201, 252, 50, 254, 229, 252, 3, 255, 215, 253, 97, 254, 179, 253, 73, 254, 235, 253, 172, 254, 76, 253, 89, 252, 7, 254, 252, 252, 66, 253, 149, 251, 249, 254, 206, 254, 53, 252, 29, 254, 67, 254, 182, 255, 213, 253, 220, 253, 154, 253, 127, 255, 75, 253, 22, 255, 116, 254, 10, 255, 37, 254, 6, 255, 247, 254, 108, 254, 136, 254, 254, 253, 95, 254, 2, 254, 212, 254, 199, 254, 178, 254, 104, 253, 49, 254, 210, 252, 126, 254, 64, 253, 175, 254, 153, 253, 22, 255, 55, 255, 23, 255, 17, 255, 89, 255, 201, 253, 53, 255, 149, 253, 109, 255, 97, 254, 141, 255, 160, 254, 90, 255, 18, 253, 85, 255, 7, 253, 242, 254, 145, 252, 248, 254, 121, 252, 145, 254, 24, 253, 43, 0, 37, 254, 14, 0, 115, 253, 43, 0, 98, 253, 11, 0, 64, 254, 197, 255, 247, 253, 130, 255, 137, 255, 101, 255, 155, 253, 214, 255, 161, 252, 229, 255, 93, 252, 136, 0, 29, 254, 183, 0, 44, 254, 55, 0, 214, 254, 55, 0, 208, 254, 57, 1, 159, 253, 57, 1, 48, 253, 66, 1, 89, 255, 100, 0, 227, 253, 253, 255, 137, 255, 145, 255, 69, 255, 233, 0, 20, 255, 4, 1, 22, 255, 26, 0, 91, 255, 134, 0, 211, 255, 216, 255, 219, 253, 104, 1, 53, 255, 122, 1, 124, 254, 194, 1, 129, 254, 19, 1, 20, 0, 182, 0, 153, 255, 246, 0, 145, 255, 175, 1, 37, 0, 206, 1, 110, 255, 231, 1, 99, 255, 228, 254, 197, 255, 247, 1, 72, 255, 24, 0, 53, 0, 253, 255, 54, 0, 122, 0, 3, 1, 77, 1, 66, 0, 228, 1, 104, 0, 180, 1, 68, 0, 195, 0, 116, 0, 190, 0, 206, 0, 13, 1, 247, 255, 226, 1, 96, 1, 126, 1, 29, 1, 143, 1, 21, 1, 196, 1, 0, 1, 69, 0, 186, 0, 13, 0, 41, 1, 243, 255, 3, 1, 161, 255, 30, 0, 56, 0, 138, 1, 196, 0, 169, 1, 205, 0, 200, 1, 25, 1, 65, 2, 15, 0, 191, 0, 119, 1, 34, 1, 151, 1, 64, 2, 200, 255, 227, 0, 32, 2, 149, 1, 0, 0, 37, 2, 164, 255, 16, 2, 27, 255, 95, 1, 11, 255, 82, 1, 150, 254, 179, 1, 167, 0, 15, 2, 181, 255, 46, 1, 91, 0, 56, 3, 129, 0, 87, 2, 240, 1, 167, 2, 186, 0, 237, 2, 153, 0, 225, 2, 231, 254, 88, 2, 164, 254, 103, 2, 20, 255, 1, 3, 41, 0, 113, 3, 38, 0, 122, 3, 36, 255, 73, 3, 155, 254, 115, 3, 119, 254, 135, 3, 134, 253, 218, 1, 68, 254, 82, 3, 81, 255, 166, 2, 19, 254, 242, 0, 249, 253, 17, 3, 54, 253, 70, 2, 227, 253, 110, 1, 225, 253, 178, 1, 171, 253, 244, 1, 3, 253, 222, 0, 66, 253, 149, 3, 25, 253, 194, 3, 155, 252, 245, 1, 125, 252, 36, 2, 133, 254, 200, 0, 77, 254, 157, 0, 205, 252, 214, 0, 163, 252, 157, 0, 154, 253, 40, 0, 136, 253, 94, 0, 141, 252, 202, 255, 27, 253, 4, 2, 11, 254, 42, 1, 154, 253, 85, 255, 154, 252, 95, 255, 159, 252, 233, 255, 206, 252, 93, 0, 9, 252, 245, 254, 106, 253, 153, 254, 219, 253, 2, 0, 70, 254, 135, 255, 135, 254, 0, 0, 29, 255, 33, 0, 98, 254, 130, 255, 127, 255, 212, 0, 90, 252, 34, 0, 198, 251, 230, 254, 161, 251, 244, 254, 58, 253, 199, 252, 92, 254, 65, 255, 204, 251, 96, 252, 107, 252, 163, 255, 140, 253, 154, 254, 97, 0, 7, 0, 50, 255, 119, 254, 155, 255, 24, 0, 53, 255, 38, 0, 88, 255, 83, 0, 169, 253, 89, 254, 233, 254, 170, 1, 68, 253, 118, 0, 181, 255, 206, 0, 43, 252, 95, 253, 88, 253, 161, 1, 145, 254, 37, 0, 233, 254, 218, 1, 127, 255, 194, 254, 63, 1, 40, 1, 142, 253, 217, 255, 87, 1, 90, 2, 72, 253, 217, 255, 209, 254, 172, 3, 104, 0, 233, 0, 132, 254, 137, 0, 220, 255, 13, 1, 181, 255, 42, 255, 120, 0, 43, 0, 239, 253, 35, 254, 203, 1, 164, 0, 54, 255, 27, 255, 207, 255, 89, 255, 97, 2, 24, 3, 98, 0, 36, 255, 147, 3, 148, 0, 37, 1, 27, 1, 101, 3, 91, 0, 63, 2, 138, 1, 70, 1, 178, 255, 205, 2, 67, 0, 109, 1, 189, 254, 104, 2, 220, 255, 219, 2, 27, 0, 107, 2, 238, 0, 120, 2, 17, 1, 192, 1, 99, 0, 33, 3, 220, 1, 101, 3, 17, 1, 173, 2, 64, 0, 21, 3, 72, 0, 253, 3, 217, 0, 25, 3, 203, 1, 222, 2, 104, 1, 134, 2, 224, 1, 104, 1, 66, 1, 173, 1, 208, 1, 126, 2, 174, 1, 244, 2, 107, 1, 232, 3, 148, 1, 171, 2, 16, 2, 90, 2, 103, 2, 143, 2, 157, 1, 178, 3, 175, 2, 169, 3, 90, 2, 136, 3, 92, 2, 43, 2, 225, 2, 18, 3, 150, 2, 211, 1, 142, 2, 106, 1, 77, 2, 161, 3, 198, 2, 242, 1, 222, 1, 159, 1, 164, 1, 181, 2, 115, 3, 45, 3, 171, 2, 13, 3, 157, 3, 145, 3, 171, 3, 214, 2, 220, 2, 235, 1, 85, 3, 19, 2, 180, 3, 222, 2, 195, 3, 59, 1, 40, 3, 249, 2, 243, 2, 120, 4, 248, 2, 143, 2, 52, 4, 58, 3, 33, 4, 67, 4, 70, 3, 235, 3, 40, 3, 23, 4, 109, 4, 147, 2, 77, 4, 224, 3, 26, 4, 50, 4, 51, 4, 203, 3, 182, 2, 202, 4, 30, 4, 59, 2, 73, 3, 116, 3, 124, 5, 99, 5, 72, 4, 56, 4, 93, 3, 207, 4, 223, 2, 4, 5, 248, 2, 248, 4, 223, 3, 87, 5, 29, 4, 233, 4, 188, 2, 26, 4, 22, 2, 220, 3, 197, 1, 240, 4, 87, 2, 116, 4, 167, 2, 85, 6, 47, 3, 104, 5, 9, 2, 37, 5, 137, 1, 28, 6, 37, 3, 168, 5, 174, 2, 44, 4, 136, 2, 107, 3, 51, 1, 59, 4, 105, 1, 23, 4, 61, 1, 137, 5, 196, 3, 163, 2, 59, 2, 128, 4, 79, 0, 90, 4, 209, 255, 250, 5, 55, 1, 185, 6, 58, 1, 142, 4, 177, 2, 2, 2, 162, 255, 93, 1, 26, 1, 132, 5, 72, 1, 1, 4, 231, 1, 191, 255, 57, 0, 37, 3, 202, 3, 36, 0, 62, 0, 1, 3, 249, 254, 23, 3, 166, 254, 125, 2, 187, 2, 119, 255, 108, 2, 22, 2, 29, 2, 33, 253, 194, 0, 199, 2, 44, 1, 244, 254, 161, 252, 158, 3, 1, 3, 60, 253, 84, 254, 250, 1, 174, 0, 132, 252, 138, 253, 179, 1, 35, 2, 101, 250, 254, 254, 109, 2, 215, 1, 6, 252, 168, 250, 119, 254, 9, 2, 104, 252, 82, 253, 231, 255, 20, 0, 42, 252, 124, 251, 84, 1, 9, 0, 234, 249, 145, 251, 160, 254, 48, 0, 213, 249, 110, 254, 137, 252, 6, 0, 124, 251, 136, 252, 220, 253, 160, 254, 149, 249, 112, 251, 97, 255, 98, 2, 24, 248, 61, 252, 31, 255, 193, 0, 136, 249, 88, 248, 11, 255, 19, 254, 60, 252, 112, 249, 88, 252, 133, 253, 237, 250, 48, 249, 148, 250, 164, 253, 252, 249, 189, 252, 139, 250, 121, 255, 204, 249, 222, 254, 122, 249, 56, 253, 37, 248, 160, 249, 129, 249, 229, 255, 46, 247, 213, 252, 123, 251, 184, 0, 15, 251, 189, 0, 169, 250, 74, 2, 37, 248, 201, 0, 234, 252, 200, 2, 70, 251, 3, 0, 247, 251, 40, 3, 29, 251, 62, 3, 145, 255, 123, 2, 156, 249, 191, 1, 49, 254, 75, 252, 67, 254, 96, 252, 8, 254, 118, 251, 11, 254, 69, 251, 144, 0, 161, 254, 140, 254, 228, 251, 229, 254, 221, 251, 233, 254, 157, 251, 193, 253, 98, 250, 181, 253, 178, 249, 89, 252, 40, 252, 229, 0, 178, 2, 103, 252, 49, 253, 109, 254, 82, 5, 83, 253, 47, 254, 106, 3, 141, 1, 3, 254, 210, 255, 61, 1, 54, 5, 27, 254, 200, 1, 45, 3, 183, 1, 101, 254, 83, 1, 130, 3, 43, 4, 87, 254, 46, 0, 161, 5, 241, 1, 115, 252, 224, 252, 185, 5, 22, 4, 2, 255, 191, 254, 150, 5, 141, 4, 68, 0, 94, 1, 10, 4, 154, 2, 114, 1, 11, 0, 31, 5, 22, 3, 143, 0, 232, 0, 17, 4, 26, 6, 142, 255, 151, 2, 80, 6, 54, 4, 198, 1, 67, 2, 251, 4, 16, 4, 180, 255, 141, 3, 240, 2, 43, 4, 153, 0, 0, 2, 92, 1, 190, 4, 102, 2, 129, 1, 51, 7, 40, 3, 13, 1, 10, 4, 203, 0, 62, 4, 140, 2, 249, 3, 247, 6, 106, 4, 173, 1, 47, 5, 131, 1, 104, 5, 207, 255, 159, 4, 184, 255, 191, 4, 96, 254, 233, 3, 32, 2, 213, 6, 160, 254, 199, 4, 10, 254, 175, 4, 179, 253, 57, 2, 29, 255, 94, 6, 114, 255, 42, 6, 26, 255, 179, 6, 54, 253, 8, 5, 186, 252, 118, 5, 107, 4, 77, 5, 48, 255, 208, 4, 181, 1, 197, 3, 95, 252, 50, 3, 43, 3, 130, 5, 91, 3, 227, 5, 164, 0, 188, 4, 107, 5, 1, 7, 228, 1, 82, 7, 200, 1, 15, 8, 228, 3, 146, 4, 46, 5, 122, 5, 36, 5, 80, 5, 111, 4, 238, 4, 210, 4, 82, 6, 81, 5, 232, 6, 141, 5, 203, 4, 48, 6, 67, 5, 86, 3, 160, 2, 149, 6, 30, 6, 115, 4, 246, 4, 224, 7, 33, 7, 237, 6, 45, 6, 252, 5, 180, 5, 207, 5, 178, 3, 123, 6, 253, 3, 208, 6, 188, 4, 112, 5, 209, 3, 236, 6, 137, 4, 34, 7, 140, 4, 182, 6, 149, 5, 181, 7, 55, 6, 161, 4, 96, 3, 84, 8, 37, 4, 7, 7, 46, 3, 46, 7, 245, 2, 56, 8, 35, 5, 6, 8, 234, 4, 65, 8, 147, 3, 27, 9, 162, 3, 187, 5, 123, 4, 30, 10, 159, 5, 197, 8, 208, 6, 42, 8, 84, 6, 54, 9, 174, 5, 106, 10, 226, 5, 84, 7, 45, 7, 22, 8, 183, 7, 203, 6, 41, 6, 170, 2, 9, 5, 48, 6, 253, 7, 174, 5, 50, 8, 194, 9, 212, 7, 151, 10, 18, 8, 214, 2, 52, 6, 196, 10, 32, 9, 228, 0, 79, 3, 152, 9, 123, 6, 36, 0, 45, 1, 150, 7, 165, 7, 66, 254, 160, 255, 106, 8, 116, 5, 253, 5, 77, 4, 14, 0, 96, 2, 101, 252, 36, 253, 103, 5, 190, 7, 65, 5, 184, 3, 88, 253, 65, 1, 1, 5, 244, 4, 198, 249, 109, 1, 173, 3, 178, 3, 55, 249, 202, 252, 70, 9, 227, 10, 29, 7, 228, 10, 236, 248, 29, 247, 169, 248, 23, 246, 152, 249, 200, 248, 97, 249, 44, 248, 60, 251, 136, 248, 59, 251, 198, 247, 233, 249, 204, 249, 219, 249, 236, 249, 85, 251, 177, 249, 56, 251, 65, 249, 177, 250, 129, 251, 176, 249, 100, 248, 6, 251, 145, 250, 231, 250, 133, 250, 185, 249, 101, 251, 116, 249, 225, 250, 93, 250, 58, 250, 169, 250, 126, 252, 24, 251, 221, 251, 205, 250, 146, 251, 42, 252, 147, 251, 131, 251, 32, 250, 200, 251, 228, 250, 4, 252, 97, 251, 44, 252, 50, 250, 57, 252, 41, 250, 36, 252, 102, 252, 233, 251, 203, 251, 186, 252, 101, 251, 166, 252, 58, 251, 149, 251, 239, 251, 216, 251, 1, 253, 152, 252, 123, 251, 67, 253, 144, 252, 62, 253, 118, 252, 250, 252, 8, 252, 190, 253, 200, 251, 223, 252, 58, 250, 177, 253, 169, 251, 176, 253, 134, 251, 55, 253, 148, 250, 128, 253, 160, 250, 171, 253, 221, 251, 96, 254, 121, 252, 82, 253, 192, 252, 107, 253, 60, 253, 68, 254, 156, 252, 22, 254, 103, 252, 138, 254, 248, 252, 149, 253, 110, 251, 183, 253, 219, 253, 255, 252, 229, 252, 77, 254, 109, 253, 238, 253, 27, 253, 14, 254, 187, 252, 155, 254, 171, 253, 233, 254, 153, 252, 13, 255, 137, 252, 230, 254, 103, 253, 232, 254, 101, 253, 91, 255, 208, 253, 118, 254, 121, 252, 150, 254, 102, 254, 64, 254, 185, 253, 103, 254, 194, 253, 199, 254, 155, 254, 131, 253, 220, 253, 198, 253, 76, 254, 128, 252, 8, 254, 130, 254, 11, 253, 198, 255, 31, 254, 91, 255, 150, 253, 65, 255, 138, 254, 22, 255, 130, 254, 34, 255, 85, 253, 231, 255, 32, 254, 94, 254, 153, 254, 38, 253, 159, 254, 188, 254, 99, 255, 80, 254, 190, 254, 118, 254, 209, 254, 228, 254, 152, 255, 167, 253, 223, 254, 212, 253, 60, 255, 180, 253, 106, 255, 109, 253, 160, 253, 39, 254, 232, 255, 188, 255, 64, 254, 38, 254, 248, 255, 6, 254, 211, 255, 20, 253, 72, 255, 180, 252, 4, 255, 123, 252, 165, 255, 184, 253, 159, 255, 116, 253, 138, 0, 4, 253, 125, 255, 90, 253, 244, 255, 98, 253, 165, 0, 253, 254, 253, 255, 184, 252, 149, 255, 115, 252, 37, 0, 32, 252, 44, 0, 170, 252, 97, 254, 185, 252, 13, 0, 23, 252, 241, 254, 254, 251, 203, 254, 226, 252, 34, 254, 192, 252, 24, 254, 81, 252, 168, 0, 168, 251, 125, 254, 95, 251, 155, 255, 97, 251, 216, 255, 83, 252, 196, 254, 250, 251, 254, 252, 236, 251, 143, 253, 199, 251, 230, 253, 56, 251, 213, 254, 224, 250, 76, 254, 83, 251, 105, 253, 113, 251, 95, 255, 64, 251, 78, 253, 43, 251, 193, 252, 104, 250, 48, 253, 133, 250, 19, 254, 126, 252, 28, 253, 102, 252, 223, 252, 178, 251, 110, 254, 213, 249, 60, 252, 219, 251, 130, 253, 11, 251, 98, 250, 37, 250, 90, 252, 34, 250, 129, 252, 194, 249, 204, 253, 69, 249, 51, 253, 162, 253, 171, 253, 114, 251, 195, 251, 167, 250, 44, 254, 102, 248, 43, 250, 210, 248, 71, 252, 116, 248, 93, 252, 37, 250, 68, 255, 157, 249, 91, 254, 79, 250, 174, 254, 88, 250, 234, 255, 106, 248, 90, 254, 42, 248, 7, 255, 16, 254, 142, 255, 138, 248, 13, 253, 247, 250, 174, 0, 85, 250, 147, 255, 30, 254, 255, 254, 59, 251, 4, 254, 175, 249, 151, 0, 98, 249, 208, 0, 114, 253, 107, 0, 141, 249, 29, 0, 139, 251, 23, 1, 65, 251, 50, 1, 52, 251, 6, 254, 38, 253, 81, 255, 44, 251, 155, 255, 55, 252, 39, 2, 154, 252, 22, 1, 201, 252, 59, 1, 205, 253, 120, 1, 229, 251, 228, 0, 5, 254, 24, 1, 169, 253, 25, 1, 10, 253, 253, 0, 207, 254, 123, 1, 13, 253, 122, 255, 157, 253, 148, 2, 200, 252, 24, 2, 207, 252, 134, 2, 99, 254, 49, 0, 171, 254, 177, 0, 59, 254, 14, 2, 30, 254, 77, 2, 185, 255, 83, 1, 111, 253, 8, 1, 12, 255, 39, 1, 19, 255, 59, 1, 125, 254, 57, 2, 6, 254, 247, 255, 135, 254, 14, 0, 96, 255, 149, 2, 40, 255, 40, 0, 204, 254, 210, 255, 95, 0, 214, 0, 14, 255, 167, 0, 170, 255, 192, 0, 200, 255, 27, 0, 180, 255, 31, 0, 36, 0, 53, 1, 150, 255, 74, 255, 143, 255, 74, 0, 71, 254, 234, 255, 23, 0, 139, 0, 81, 0, 245, 255, 44, 0, 15, 0, 169, 255, 119, 255, 138, 255, 49, 255, 98, 255, 198, 255, 16, 1, 164, 255, 100, 255, 71, 254, 8, 0, 120, 255, 128, 0, 35, 255, 101, 0, 38, 255, 40, 0, 59, 255, 180, 255, 56, 254, 9, 0, 67, 254, 33, 0, 89, 254, 226, 0, 60, 0, 73, 0, 34, 255, 156, 0, 113, 254, 24, 1, 194, 254, 245, 0, 171, 254, 166, 0, 13, 254, 83, 1, 66, 255, 71, 1, 37, 255, 69, 1, 119, 255, 167, 255, 172, 253, 100, 0, 141, 253, 144, 0, 91, 253, 231, 1, 28, 0, 252, 0, 121, 254, 214, 0, 215, 255, 26, 1, 228, 255, 99, 0, 226, 254, 75, 1, 49, 0, 203, 1, 124, 254, 53, 2, 143, 254, 180, 1, 28, 0, 80, 1, 247, 255, 141, 1, 89, 255, 106, 2, 34, 0, 84, 2, 239, 255, 49, 2, 116, 255, 43, 1, 79, 0, 10, 2, 125, 0, 203, 0, 2, 0, 244, 0, 32, 1, 255, 0, 211, 0, 175, 0, 82, 0, 84, 2, 187, 0, 5, 2, 108, 0, 125, 1, 255, 0, 109, 1, 41, 1, 241, 1, 96, 1, 71, 1, 174, 255, 25, 0, 210, 0, 115, 1, 245, 0, 5, 1, 3, 0, 33, 2, 193, 1, 140, 0, 38, 1, 44, 0, 39, 1, 212, 0, 91, 1, 244, 0, 238, 1, 75, 1, 16, 2, 201, 0, 51, 1, 93, 1, 155, 1, 101, 2, 28, 1, 102, 2, 157, 1, 208, 1, 66, 1, 112, 2, 141, 1, 97, 0, 200, 0, 96, 255, 128, 1, 149, 0, 106, 1, 239, 1, 13, 2, 13, 1, 73, 2, 33, 0, 235, 1, 135, 255, 177, 1, 171, 1, 99, 2, 242, 1, 4, 2, 171, 0, 187, 1, 241, 1, 154, 2, 184, 1, 19, 1, 54, 2, 63, 2, 146, 0, 127, 2, 155, 0, 158, 2, 223, 255, 173, 0, 212, 0, 184, 2, 90, 255, 89, 2, 65, 255, 183, 2, 23, 254, 247, 1, 175, 0, 230, 2, 214, 0, 220, 1, 116, 1, 59, 4, 66, 2, 18, 2, 74, 2, 9, 3, 169, 1, 106, 3, 59, 1, 73, 3, 118, 1, 80, 3, 91, 255, 53, 2, 35, 0, 223, 3, 217, 255, 38, 4, 73, 1, 200, 2, 18, 3, 72, 3, 133, 2, 27, 3, 149, 2, 164, 2, 59, 2, 150, 3, 120, 2, 55, 4, 161, 2, 49, 3, 62, 1, 132, 1, 106, 3, 244, 3, 52, 2, 80, 3, 112, 3, 108, 2, 45, 2, 223, 1, 159, 2, 197, 1, 180, 2, 212, 1, 72, 3, 130, 2, 76, 3, 133, 2, 250, 1, 172, 1, 129, 3, 55, 2, 69, 3, 131, 1, 194, 3, 243, 1, 179, 2, 49, 2, 171, 3, 158, 3, 15, 3, 40, 1, 22, 3, 12, 1, 4, 4, 18, 2, 106, 3, 73, 1, 36, 2, 143, 0, 163, 2, 35, 1, 247, 1, 66, 0, 17, 4, 103, 1, 18, 3, 97, 0, 37, 3, 33, 0, 69, 3, 214, 1, 255, 1, 49, 0, 68, 4, 71, 1, 150, 4, 67, 1, 3, 0, 242, 0, 104, 3, 218, 1, 177, 2, 173, 1, 49, 5, 166, 2, 18, 4, 108, 2, 85, 4, 152, 2, 65, 1, 193, 0, 121, 3, 182, 3, 129, 4, 106, 3, 125, 3, 123, 2, 109, 3, 94, 3, 180, 3, 145, 3, 13, 5, 153, 2, 40, 5, 127, 2, 229, 3, 25, 3, 122, 5, 6, 4, 152, 4, 244, 3, 86, 4, 191, 3, 130, 5, 157, 3, 123, 5, 147, 3, 31, 2, 94, 3, 92, 4, 198, 4, 67, 3, 166, 4, 67, 3, 166, 4, 191, 3, 124, 4, 123, 4, 96, 5, 20, 5, 169, 4, 135, 5, 207, 4, 55, 5, 61, 5, 234, 2, 68, 4, 175, 6, 3, 5, 109, 5, 49, 4, 54, 5, 30, 6, 129, 4, 195, 5, 109, 6, 113, 4, 33, 7, 196, 4, 32, 4, 102, 5, 241, 5, 194, 6, 96, 6, 9, 6, 84, 6, 6, 6, 87, 3, 60, 6, 97, 3, 131, 6, 181, 2, 117, 3, 180, 6, 239, 5, 143, 4, 16, 5, 161, 8, 224, 6, 160, 7, 213, 5, 228, 7, 202, 5, 254, 5, 74, 7, 158, 6, 216, 7, 30, 6, 236, 2, 225, 6, 57, 3, 38, 1, 112, 5, 60, 4, 10, 8, 109, 2, 35, 5, 109, 1, 7, 5, 198, 0, 4, 4, 232, 1, 128, 5, 249, 0, 147, 1, 246, 3, 25, 6, 68, 1, 107, 1, 109, 6, 20, 4, 193, 0, 111, 1, 242, 7, 67, 7, 5, 255, 67, 2, 238, 2, 226, 3, 13, 255, 30, 0, 45, 5, 111, 3, 228, 255, 87, 255, 112, 2, 149, 3, 59, 254, 159, 0, 186, 0, 90, 5, 154, 253, 6, 0, 25, 2, 136, 1, 162, 255, 221, 254, 13, 3, 229, 0, 128, 255, 214, 254, 245, 0, 235, 1, 67, 253, 120, 253, 204, 3, 21, 3, 11, 254, 128, 253, 178, 0, 255, 0, 147, 254, 122, 254, 1, 255, 61, 1, 66, 252, 218, 254, 65, 255, 228, 0, 249, 252, 65, 254, 157, 0, 19, 255, 111, 253, 48, 253, 105, 254, 92, 0, 139, 255, 157, 253, 78, 1, 26, 255, 89, 253, 196, 251, 112, 255, 195, 254, 123, 252, 163, 252, 30, 253, 152, 254, 171, 255, 41, 253, 166, 255, 237, 252, 100, 0, 234, 255, 121, 254, 249, 254, 200, 255, 183, 255, 175, 254, 14, 253, 5, 0, 67, 255, 62, 253, 144, 253, 89, 0, 168, 254, 121, 255, 167, 251, 159, 254, 19, 255, 84, 253, 145, 251, 237, 254, 178, 251, 243, 254, 77, 251, 152, 0, 145, 0, 46, 253, 48, 251, 49, 0, 80, 0, 32, 251, 248, 252, 8, 255, 135, 1, 36, 253, 221, 253, 213, 1, 218, 0, 1, 255, 160, 252, 69, 0, 110, 1, 90, 255, 27, 254, 80, 253, 191, 0, 68, 251, 84, 251, 86, 255, 87, 255, 228, 250, 161, 249, 65, 1, 214, 1, 117, 250, 37, 251, 192, 255, 16, 1, 175, 250, 8, 255, 236, 1, 53, 2, 47, 253, 159, 253, 195, 0, 229, 1, 195, 253, 123, 255, 171, 1, 202, 0, 85, 255, 138, 255, 199, 0, 63, 2, 2, 0, 225, 255, 182, 2, 243, 2, 170, 250, 217, 255, 40, 2, 45, 2, 23, 254, 15, 1, 168, 2, 25, 2, 13, 0, 59, 254, 87, 3, 186, 3, 123, 255, 204, 255, 175, 255, 226, 2, 111, 251, 125, 2, 31, 4, 35, 4, 161, 255, 164, 2, 235, 4, 57, 4, 233, 1, 49, 1, 63, 254, 186, 3, 234, 253, 228, 3, 55, 252, 98, 3, 222, 251, 35, 4, 242, 250, 106, 2, 120, 250, 105, 2, 54, 254, 86, 5, 97, 255, 29, 7, 250, 252, 240, 253, 242, 255, 86, 4, 78, 251, 123, 252, 252, 252, 177, 1, 24, 251, 25, 251, 13, 252, 210, 254, 166, 253, 183, 253, 9, 253, 174, 249, 8, 253, 243, 249, 184, 252, 127, 248, 208, 252, 229, 253, 23, 249, 69, 247, 29, 255, 220, 255, 14, 248, 217, 248, 197, 247, 154, 251, 89, 246, 232, 248, 66, 250, 252, 0, 115, 245, 97, 254, 197, 253, 45, 254, 229, 5, 18, 6, 132, 8, 183, 7, 22, 9, 228, 7, 191, 248, 111, 249, 191, 248, 37, 249, 248, 247, 130, 251, 170, 247, 138, 249, 173, 249, 181, 251, 88, 249, 149, 251, 191, 250, 184, 249, 177, 250, 154, 249, 198, 250, 243, 250, 211, 250, 15, 251, 128, 249, 143, 249, 49, 250, 173, 252, 190, 250, 216, 248, 123, 250, 116, 247, 254, 250, 87, 253, 7, 249, 143, 249, 58, 252, 198, 251, 97, 251, 116, 249, 226, 251, 207, 251, 138, 251, 122, 251, 73, 251, 24, 253, 6, 251, 27, 252, 90, 252, 153, 250, 97, 252, 120, 250, 14, 252, 231, 250, 241, 252, 69, 252, 231, 251, 124, 252, 31, 252, 207, 252, 31, 253, 201, 252, 52, 252, 91, 251, 30, 253, 186, 251, 30, 253, 126, 251, 240, 252, 223, 252, 214, 252, 238, 252, 132, 252, 248, 253, 24, 252, 206, 252, 124, 253, 59, 252, 191, 253, 142, 252, 227, 253, 74, 253, 97, 253, 107, 252, 173, 253, 126, 253, 122, 253, 153, 253, 68, 252, 147, 253, 99, 252, 253, 253, 41, 253, 29, 254, 209, 252, 27, 254, 184, 252, 190, 253, 72, 254, 55, 253, 190, 253, 187, 254, 111, 253, 98, 253, 126, 254, 198, 253, 71, 254, 102, 253, 254, 253, 237, 252, 120, 254, 239, 253, 246, 253, 59, 254, 25, 254, 89, 254, 152, 253, 183, 253, 151, 253, 99, 255, 106, 253, 244, 254, 88, 253, 164, 254, 190, 254, 189, 254, 136, 253, 68, 254, 208, 254, 82, 254, 180, 254, 54, 254, 235, 254, 44, 254, 109, 253, 231, 252, 193, 254, 132, 253, 29, 255, 214, 253, 139, 254, 165, 254, 178, 254, 46, 255, 56, 254, 64, 255, 238, 253, 14, 255, 40, 255, 58, 255, 146, 254, 142, 254, 174, 254, 95, 255, 103, 254, 20, 253, 149, 255, 132, 254, 218, 254, 125, 253, 33, 255, 103, 253, 22, 255, 27, 253, 115, 255, 16, 254, 126, 255, 2, 254, 117, 255, 185, 254, 84, 255, 207, 254, 206, 254, 188, 253, 92, 255, 249, 254, 250, 254, 84, 255, 189, 255, 110, 254, 31, 0, 146, 254, 246, 255, 76, 254, 170, 255, 241, 253, 71, 0, 135, 254, 234, 255, 159, 253, 244, 255, 90, 253, 189, 255, 193, 254, 63, 0, 65, 255, 35, 0, 75, 255, 217, 255, 14, 255, 126, 0, 89, 255, 116, 255, 224, 253, 155, 0, 215, 254, 174, 0, 215, 254, 38, 0, 248, 255, 117, 0, 132, 254, 197, 0, 60, 254, 240, 0, 246, 253, 223, 0, 153, 255, 110, 0, 69, 255, 87, 0, 101, 255, 169, 0, 209, 255, 157, 0, 26, 0, 173, 255, 156, 255, 128, 0, 80, 0, 209, 0, 194, 255, 6, 0, 7, 0, 22, 0, 5, 0, 62, 1, 236, 255, 248, 0, 211, 255, 56, 255, 193, 255, 156, 0, 187, 255, 250, 0, 73, 255, 113, 1, 130, 255, 143, 255, 180, 255, 114, 255, 134, 255, 192, 255, 2, 255, 225, 255, 35, 0, 79, 255, 185, 255, 249, 255, 171, 0, 93, 0, 27, 0, 108, 0, 212, 0, 182, 254, 47, 255, 133, 255, 186, 255, 233, 254, 95, 0, 160, 255, 20, 0, 68, 255, 195, 255, 198, 254, 87, 0, 212, 254, 178, 255, 158, 254, 122, 255, 11, 0, 122, 0, 116, 255, 122, 0, 237, 254, 152, 0, 219, 254, 140, 0, 174, 255, 138, 0, 191, 254, 145, 255, 32, 254, 100, 255, 153, 254, 76, 0, 2, 255, 216, 255, 133, 253, 160, 255, 246, 253, 79, 0, 5, 254, 8, 0, 244, 254, 47, 1, 229, 253, 68, 0, 66, 254, 61, 0, 246, 253, 50, 1, 111, 0, 189, 0, 77, 254, 122, 0, 133, 254, 166, 0, 197, 253, 114, 254, 136, 253, 182, 255, 21, 253, 161, 255, 57, 254, 194, 0, 72, 252, 83, 0, 226, 252, 192, 0, 13, 253, 192, 0, 243, 252, 94, 255, 149, 253, 234, 0, 105, 253, 215, 254, 24, 254, 147, 255, 60, 252, 124, 255, 186, 252, 188, 255, 181, 252, 58, 0, 168, 251, 170, 255, 219, 252, 213, 254, 80, 252, 3, 255, 246, 252, 206, 255, 59, 252, 219, 253, 160, 254, 158, 255, 32, 252, 169, 254, 163, 251, 197, 254, 163, 251, 205, 254, 125, 251, 138, 254, 131, 253, 26, 255, 114, 251, 213, 255, 237, 250, 156, 255, 99, 252, 119, 254, 6, 251, 168, 253, 79, 253, 126, 255, 57, 250, 200, 254, 215, 250, 2, 255, 72, 250, 70, 254, 244, 250, 155, 253, 19, 251, 9, 254, 35, 250, 144, 254, 214, 250, 26, 0, 104, 250, 190, 255, 49, 249, 95, 255, 148, 249, 45, 254, 32, 249, 220, 253, 143, 250, 200, 253, 236, 249, 153, 252, 41, 250, 246, 251, 149, 250, 197, 253, 131, 248, 240, 253, 9, 249, 133, 255, 151, 248, 25, 255, 250, 247, 189, 254, 252, 247, 118, 252, 72, 248, 201, 253, 131, 248, 148, 253, 1, 248, 35, 252, 203, 251, 142, 254, 17, 248, 64, 253, 205, 246, 19, 253, 76, 245, 191, 251, 139, 248, 159, 0, 36, 248, 248, 0, 142, 253, 133, 255, 221, 246, 62, 252, 99, 253, 104, 254, 157, 250, 106, 251, 60, 254, 148, 254, 236, 251, 33, 253, 124, 255, 183, 0, 172, 249, 16, 253, 221, 253, 205, 254, 247, 252, 19, 251, 158, 255, 41, 0, 144, 252, 189, 251, 255, 254, 97, 0, 190, 249, 215, 248, 31, 0, 230, 255, 124, 253, 207, 253, 76, 255, 222, 253, 127, 254, 185, 251, 102, 254, 222, 252, 98, 254, 197, 252, 55, 254, 54, 252, 22, 254, 171, 251, 41, 255, 108, 252, 112, 255, 87, 252, 19, 254, 11, 251, 251, 253, 29, 250, 181, 0, 101, 0, 180, 254, 135, 252, 188, 252, 87, 252, 209, 253, 83, 254, 139, 253, 221, 253, 73, 255, 175, 254, 223, 253, 174, 255, 6, 255, 226, 254, 5, 0, 124, 255, 164, 254, 4, 255, 219, 254, 40, 254, 98, 255, 100, 0, 227, 255, 197, 0, 20, 255, 88, 254, 163, 252, 43, 255, 116, 255, 249, 255, 85, 254, 69, 254, 187, 0, 159, 255, 84, 253, 32, 253, 219, 254, 2, 1, 144, 254, 104, 255, 106, 255, 136, 1, 159, 253, 175, 0, 114, 255, 43, 1, 118, 255, 152, 0, 137, 255, 73, 1, 26, 254, 204, 255, 37, 1, 198, 0, 73, 255, 117, 0, 175, 0, 75, 1, 198, 255, 238, 254, 231, 0, 44, 1, 224, 254, 74, 1, 207, 254, 116, 1, 145, 255, 153, 1, 247, 255, 167, 1, 83, 0, 0, 1, 67, 0, 111, 1, 237, 255, 248, 0, 91, 0, 113, 0, 221, 255, 150, 1, 65, 255, 154, 0, 238, 0, 40, 1, 5, 0, 197, 0, 141, 0, 221, 0, 57, 1, 198, 0, 211, 0, 165, 1, 244, 0, 78, 1, 88, 0, 170, 1, 13, 255, 198, 1, 202, 0, 40, 2, 251, 255, 147, 1, 35, 1, 185, 0, 219, 0, 45, 1, 251, 0, 138, 0, 128, 0, 69, 0, 197, 0, 32, 1, 116, 255, 195, 255, 188, 0, 105, 1, 197, 0, 86, 2, 186, 1, 17, 1, 34, 1, 143, 0, 216, 1, 226, 1, 157, 0, 114, 1, 159, 1, 65, 1, 116, 1, 129, 1, 146, 1, 40, 2, 155, 0, 24, 0, 38, 2, 7, 1, 245, 255, 21, 0, 104, 1, 227, 0, 147, 0, 2, 255, 168, 1, 97, 0, 110, 1, 243, 255, 119, 1, 141, 0, 193, 1, 232, 0, 140, 1, 251, 1, 218, 1, 16, 1, 189, 2, 68, 1, 106, 1, 209, 255, 75, 2, 148, 0, 31, 2, 69, 0, 144, 1, 205, 255, 49, 2, 59, 0, 220, 0, 246, 255, 96, 1, 147, 0, 206, 0, 211, 0, 141, 2, 185, 0, 51, 2, 41, 1, 53, 2, 28, 1, 82, 2, 121, 0, 254, 2, 192, 0, 142, 1, 118, 0, 130, 2, 178, 1, 233, 0, 8, 1, 225, 1, 211, 1, 129, 0, 91, 255, 187, 2, 239, 0, 90, 0, 26, 0, 86, 1, 218, 1, 201, 255, 27, 0, 132, 1, 94, 0, 84, 255, 0, 0, 213, 2, 123, 1, 196, 255, 81, 1, 114, 1, 209, 1, 95, 0, 63, 1, 38, 3, 83, 2, 78, 0, 4, 1, 241, 1, 83, 3, 210, 0, 48, 2, 202, 1, 62, 2, 48, 254, 202, 0, 241, 1, 113, 2, 54, 255, 152, 0, 48, 0, 200, 2, 236, 255, 54, 2, 100, 0, 203, 2, 199, 1, 212, 1, 155, 1, 93, 2, 63, 1, 134, 2, 195, 0, 103, 2, 145, 1, 26, 2, 168, 2, 227, 2, 201, 0, 155, 2, 178, 1, 186, 3, 198, 1, 169, 1, 134, 2, 235, 1, 94, 2, 169, 2, 160, 1, 252, 1, 241, 1, 54, 3, 170, 1, 47, 3, 148, 2, 135, 2, 116, 2, 204, 2, 185, 2, 210, 1, 106, 2, 201, 1, 173, 2, 204, 1, 109, 1, 53, 1, 209, 2, 55, 2, 68, 3, 89, 2, 97, 2, 44, 1, 57, 3, 203, 1, 175, 3, 175, 2, 169, 2, 21, 2, 147, 3, 86, 2, 79, 2, 243, 0, 108, 3, 195, 1, 106, 3, 164, 1, 18, 3, 61, 1, 220, 2, 220, 0, 154, 3, 61, 1, 84, 4, 111, 1, 19, 2, 210, 1, 4, 4, 137, 2, 29, 4, 103, 2, 10, 4, 41, 2, 61, 3, 90, 2, 253, 3, 31, 3, 159, 3, 35, 3, 110, 3, 251, 2, 31, 3, 240, 1, 93, 5, 5, 3, 73, 2, 2, 3, 35, 3, 162, 3, 75, 4, 25, 3, 198, 4, 94, 3, 185, 4, 127, 3, 1, 4, 215, 2, 4, 3, 77, 3, 148, 4, 91, 4, 99, 3, 253, 3, 62, 3, 245, 3, 73, 3, 142, 3, 250, 1, 191, 2, 215, 4, 53, 4, 108, 2, 51, 3, 172, 4, 59, 4, 131, 4, 57, 4, 118, 4, 139, 3, 11, 6, 97, 4, 29, 5, 136, 2, 63, 5, 100, 2, 204, 5, 220, 3, 199, 5, 169, 3, 217, 3, 48, 5, 187, 3, 61, 5, 173, 1, 142, 3, 73, 3, 58, 5, 52, 2, 155, 4, 156, 1, 132, 4, 147, 5, 40, 5, 154, 5, 50, 5, 128, 2, 248, 2, 190, 6, 130, 5, 190, 0, 43, 2, 49, 4, 237, 3, 170, 1, 1, 1, 71, 3, 212, 3, 235, 0, 231, 0, 240, 5, 143, 4, 109, 0, 37, 1, 246, 3, 33, 6, 49, 1, 142, 0, 124, 4, 27, 2, 221, 254, 148, 255, 189, 4, 204, 3, 22, 0, 40, 255, 155, 2, 60, 3, 30, 254, 182, 1, 197, 1, 151, 5, 187, 253, 90, 254, 21, 3, 131, 1, 154, 254, 58, 254, 174, 0, 12, 3, 220, 255, 140, 254, 134, 1, 122, 255, 139, 253, 160, 0, 206, 254, 239, 2, 22, 251, 181, 254, 177, 0, 10, 2, 8, 255, 62, 2, 5, 255, 127, 2, 237, 253, 151, 1, 172, 253, 138, 1, 93, 254, 21, 3, 151, 253, 33, 3, 38, 252, 143, 1, 167, 252, 215, 2, 249, 255, 6, 2, 65, 253, 54, 1, 137, 251, 232, 255, 22, 252, 31, 1, 64, 252, 107, 1, 237, 250, 56, 1, 2, 250, 245, 0, 235, 249, 49, 1, 28, 0, 153, 0, 165, 252, 81, 255, 223, 255, 76, 1, 138, 250, 102, 255, 212, 0, 154, 1, 175, 253, 59, 255, 188, 251, 64, 253, 120, 252, 191, 255, 26, 1, 111, 1, 106, 252, 82, 253, 89, 1, 93, 0, 254, 254, 155, 254, 184, 2, 132, 2, 75, 253, 228, 255, 192, 1, 237, 1, 239, 254, 193, 0, 15, 2, 34, 2, 13, 255, 255, 253, 128, 1, 120, 255, 17, 1, 159, 254, 0, 2, 114, 255, 25, 2, 58, 255, 173, 3, 238, 2, 83, 0, 248, 0, 66, 2, 93, 3, 200, 255, 80, 2, 74, 3, 44, 0, 124, 3, 24, 0, 33, 0, 122, 3, 240, 255, 214, 3, 63, 3, 118, 5, 255, 5, 106, 7, 180, 6, 96, 5, 156, 7, 185, 5, 22, 252, 95, 252, 184, 251, 77, 251, 127, 253, 93, 252, 164, 253, 63, 252, 245, 252, 95, 253, 189, 252, 236, 252, 96, 254, 104, 253, 54, 254, 2, 253, 116, 253, 247, 253, 106, 253, 17, 254, 1, 252, 3, 254, 1, 252, 84, 254, 68, 254, 216, 253, 144, 254, 63, 254, 33, 254, 45, 255, 226, 251, 121, 252, 196, 254, 7, 255, 199, 253, 177, 253, 199, 253, 237, 254, 227, 253, 65, 255, 52, 253, 68, 255, 182, 252, 248, 254, 179, 254, 8, 255, 194, 254, 28, 255, 237, 254, 1, 0, 201, 253, 28, 255, 141, 255, 35, 255, 18, 255, 138, 254, 59, 255, 5, 254, 34, 255, 189, 253, 254, 254, 80, 254, 195, 255, 12, 255, 167, 254, 2, 0, 174, 254, 39, 0, 41, 255, 87, 255, 198, 255, 0, 0, 200, 255, 250, 255, 53, 255, 125, 255, 1, 0, 70, 255, 251, 255, 45, 255, 6, 0, 132, 254, 11, 0, 94, 254, 140, 255, 131, 0, 122, 255, 113, 0, 89, 0, 252, 255, 71, 0, 254, 255, 237, 255, 64, 255, 6, 1, 24, 0, 189, 0, 151, 0, 123, 255, 147, 255, 186, 0, 103, 255, 166, 0, 37, 255, 37, 0, 139, 0, 193, 0, 171, 0, 81, 1, 124, 0, 158, 0, 195, 255, 141, 0, 226, 0, 243, 255, 190, 0, 231, 0, 34, 0, 98, 1, 109, 0, 60, 1, 201, 0, 244, 0, 164, 0, 74, 1, 171, 255, 134, 1, 172, 255, 254, 0, 71, 1, 1, 1, 79, 1, 235, 1, 147, 0, 220, 1, 105, 0, 54, 0, 77, 0, 181, 1, 114, 1, 165, 1, 58, 1, 193, 1, 86, 1, 73, 1, 126, 0, 161, 2, 36, 1, 59, 2, 132, 1, 243, 0, 193, 0, 141, 2, 64, 1, 109, 2, 24, 1, 194, 0, 124, 1, 5, 2, 69, 2, 45, 0, 67, 1, 111, 0, 166, 1, 233, 1, 139, 1, 222, 2, 22, 2, 110, 2, 34, 2, 230, 1, 246, 1, 62, 1, 60, 2, 189, 0, 38, 2, 129, 1, 166, 1, 99, 255, 153, 0, 131, 255, 126, 1, 59, 255, 130, 1, 249, 254, 78, 1, 228, 0, 185, 2, 68, 255, 1, 0, 51, 0, 41, 1, 5, 254, 213, 0, 136, 254, 141, 1, 232, 255, 255, 0, 221, 253, 89, 0, 10, 254, 162, 255, 131, 1, 179, 0, 148, 253, 68, 0, 84, 253, 112, 0, 126, 253, 162, 254, 252, 254, 172, 0, 74, 254, 188, 254, 8, 1, 136, 2, 60, 252, 252, 255, 159, 251, 7, 0, 122, 255, 134, 0, 147, 251, 206, 254, 143, 0, 96, 0, 92, 254, 15, 254, 59, 251, 162, 254, 9, 250, 83, 253, 95, 255, 72, 0, 105, 3, 179, 2, 220, 2, 27, 1, 153, 3, 97, 1, 78, 1, 219, 1, 71, 4, 53, 3, 96, 3, 12, 2, 75, 3, 241, 1, 202, 2, 199, 2, 20, 3, 238, 2, 52, 4, 202, 2, 180, 4, 241, 2, 65, 2, 150, 2, 124, 245, 170, 192, 38, 3, 44, 7, 95, 251, 33, 228, 37, 12, 28, 4, 40, 248, 202, 208, 85, 16, 107, 5, 192, 249, 99, 218, 69, 9, 145, 5, 232, 249, 78, 219, 176, 12, 193, 7, 210, 251, 214, 230, 35, 7, 16, 9, 184, 252, 64, 236, 173, 3, 242, 12, 199, 254, 163, 248, 47, 9, 161, 11, 41, 254, 234, 244, 32, 14, 116, 9, 247, 252, 183, 237, 123, 13, 24, 12, 98, 254, 70, 246, 139, 11, 205, 16, 72, 0, 178, 1, 56, 7, 148, 17, 139, 0, 68, 3, 44, 15, 40, 21, 157, 1, 180, 9, 163, 4, 42, 28, 67, 3, 166, 19, 11, 12, 40, 35, 139, 4, 90, 27, 216, 28, 115, 3, 37, 247, 177, 202, 74, 23, 226, 5, 58, 250, 60, 221, 35, 20, 86, 8, 61, 252, 88, 233, 8, 31, 217, 7, 228, 251, 65, 231, 107, 25, 202, 8, 139, 252, 49, 235, 246, 29, 192, 10, 180, 253, 47, 242, 64, 23, 200, 11, 60, 254, 92, 245, 34, 19, 180, 14, 131, 255, 17, 253, 77, 27, 4, 14, 60, 255, 103, 251, 238, 31, 138, 15, 213, 255, 252, 254, 176, 23, 52, 17, 107, 0, 133, 2, 29, 30, 223, 19, 64, 1, 136, 7, 147, 21, 133, 23, 57, 2, 98, 13, 89, 30, 214, 27, 50, 3, 62, 19, 172, 23, 2, 31, 209, 3, 253, 22, 218, 21, 223, 44, 243, 5, 212, 35, 85, 41, 76, 5, 159, 249, 153, 217, 89, 35, 61, 6, 145, 250, 68, 223, 66, 38, 243, 7, 247, 251, 180, 231, 242, 34, 111, 9, 244, 252, 164, 237, 56, 40, 24, 10, 87, 253, 253, 239, 191, 36, 174, 10, 171, 253, 245, 241, 252, 33, 146, 12, 156, 254, 160, 247, 29, 38, 67, 13, 235, 254, 123, 249, 193, 39, 52, 15, 181, 255, 58, 254, 210, 35, 176, 17, 148, 0, 123, 3, 168, 39, 140, 19, 40, 1, 245, 6, 154, 35, 103, 22, 241, 1, 177, 11, 4, 41, 122, 24, 116, 2, 198, 14, 126, 39, 207, 29, 151, 3, 158, 21, 140, 34, 23, 34, 93, 4, 72, 26, 252, 34, 208, 48, 112, 6, 193, 38, 124, 50, 208, 3, 185, 247, 47, 206, 171, 44, 219, 6, 28, 251, 141, 226, 106, 47, 24, 9, 189, 252, 96, 236, 124, 44, 64, 9, 214, 252, 248, 236, 204, 41, 248, 11, 83, 254, 236, 245, 44, 48, 45, 11, 238, 253, 136, 243, 202, 45, 255, 12, 205, 254, 200, 248, 6, 44, 116, 14, 106, 255, 120, 252, 109, 42, 61, 17, 110, 0, 151, 2, 50, 47, 181, 17, 150, 0, 134, 3, 19, 44, 85, 20, 98, 1, 84, 8, 184, 46, 161, 24, 125, 2, 253, 14, 159, 43, 110, 29, 132, 3, 44, 21, 96, 47, 137, 32, 25, 4, 168, 24, 217, 42, 25, 42, 149, 5, 156, 33, 60, 40, 224, 67, 87, 8, 53, 50, 75, 54, 145, 6, 220, 250, 15, 225, 36, 49, 253, 7, 254, 251, 221, 231, 209, 51, 135, 9, 2, 253, 254, 237, 209, 54, 173, 11, 47, 254, 14, 245, 140, 52, 26, 12, 99, 254, 78, 246, 108, 48, 74, 14, 89, 255, 18, 252, 198, 52, 196, 14, 137, 255, 55, 253, 80, 50, 176, 16, 62, 0, 118, 1, 221, 52, 253, 18, 253, 0, 243, 5, 123, 49, 81, 21, 168, 1, 248, 9, 30, 54, 218, 23, 78, 2, 223, 13, 231, 50, 83, 25, 166, 2, 244, 15, 245, 52, 41, 30, 169, 3, 7, 22, 157, 50, 95, 36, 189, 4, 136, 28, 146, 53, 31, 45, 252, 5, 5, 36, 47, 49, 102, 59, 146, 7, 147, 45, 9, 59, 4, 6, 91, 250, 4, 222, 224, 58, 29, 9, 192, 252, 113, 236, 191, 56, 207, 9, 45, 253, 0, 239, 100, 57, 127, 12, 147, 254, 107, 247, 22, 60, 232, 13, 49, 255, 33, 251, 53, 55, 120, 15, 206, 255, 212, 254, 254, 58, 140, 16, 50, 0, 42, 1, 252, 55, 216, 18, 242, 0, 174, 5, 254, 57, 75, 21, 166, 1, 238, 9, 202, 59, 195, 23, 72, 2, 190, 13, 249, 55, 232, 26, 0, 3, 15, 18, 212, 58, 9, 30, 162, 3, 226, 21, 70, 56, 210, 36, 207, 4, 245, 28, 27, 60, 13, 38, 0, 5, 26, 30, 232, 57, 191, 55, 52, 7, 94, 43, 32, 53, 107, 97, 109, 10, 195, 62, 12, 64, 177, 7, 198, 251, 139, 230, 177, 65, 16, 11, 223, 253, 45, 243, 97, 61, 27, 11, 229, 253, 80, 243, 232, 62, 8, 13, 209, 254, 223, 248, 0, 64, 123, 15, 207, 255, 218, 254, 44, 66, 227, 17, 165, 0, 224, 3, 95, 61, 247, 17, 171, 0, 6, 4, 94, 63, 72, 21, 165, 1, 233, 9, 192, 65, 238, 24, 143, 2, 105, 15, 129, 61, 229, 27, 53, 3, 80, 19, 198, 63, 45, 29, 120, 3, 223, 20, 227, 64, 176, 33, 76, 4, 222, 25, 132, 66, 178, 40, 99, 5, 111, 32, 33, 62, 41, 46, 29, 6, 207, 36, 238, 65, 98, 57, 95, 7, 96, 44, 131, 64, 134, 81, 102, 9, 147, 56, 222, 70, 35, 8, 25, 252, 131, 232, 201, 75, 106, 12, 137, 254, 47, 247, 100, 68, 98, 13, 248, 254, 203, 249, 86, 78, 187, 15, 231, 255, 105, 255, 149, 70, 153, 16, 54, 0, 70, 1, 8, 74, 202, 19, 58, 1, 98, 7, 47, 69, 26, 21, 153, 1, 157, 9, 123, 77, 48, 24, 98, 2, 92, 14, 30, 70, 102, 27, 27, 3, 176, 18, 70, 83, 197, 30, 198, 3, 184, 22, 246, 69, 73, 36, 186, 4, 115, 28, 200, 74, 74, 36, 186, 4, 116, 28, 37, 80, 117, 44, 230, 5, 129, 35, 155, 70, 149, 56, 74, 7, 226, 43, 31, 78, 218, 69, 129, 8, 52, 51, 154, 73, 252, 127, 0, 12, 62, 72, 61, 42, 81, 112, 63, 11, 181, 67, 0, 80, 225, 10, 198, 253, 153, 242, 153, 73, 194, 25, 191, 2, 139, 16, 81, 24, 245, 28, 108, 3, 156, 20, 51, 67, 204, 40, 103, 5, 133, 32, 122, 84, 245, 4, 61, 249, 74, 215, 143, 82, 71, 17, 113, 0, 171, 2, 40, 44, 20, 6, 106, 250, 95, 222, 61, 74, 20, 50, 150, 6, 164, 39, 215, 67, 194, 9, 37, 253, 210, 238, 194, 69, 225, 18, 244, 0, 192, 5, 10, 39, 194, 9, 37, 253, 210, 238, 122, 68, 184, 30, 196, 3, 170, 22, 174, 55, 92, 7, 133, 251, 5, 229, 20, 62, 81, 12, 125, 254, 233, 246, 61, 26, 10, 7, 67, 251, 121, 227, 10, 71, 225, 78, 53, 9, 109, 55, 102, 70, 215, 11, 67, 254, 138, 245, 71, 65, 225, 22, 16, 2, 109, 12, 143, 34, 174, 15, 226, 255, 76, 255, 20, 62, 10, 35, 134, 4, 60, 27, 102, 70, 112, 5, 198, 249, 129, 218, 71, 65, 0, 16, 0, 0, 0, 0, 0, 32, 143, 2, 108, 245, 79, 192, 133, 59, 102, 54, 16, 7, 132, 42, 174, 55, 40, 12, 106, 254, 116, 246, 10, 55, 61, 18, 193, 0, 141, 4, 30, 21, 143, 10, 154, 253, 143, 241, 122, 52, 153, 25, 182, 2, 84, 16, 163, 48, 133, 3, 67, 247, 100, 203, 163, 48, 102, 10, 131, 253, 7, 241, 184, 14, 143, 2, 108, 245, 79, 192, 153, 57, 215, 91, 22, 10, 183, 60, 225, 74, 153, 9, 13, 253, 62, 238, 184, 78, 215, 19, 62, 1, 121, 7, 225, 26, 0, 16, 0, 0, 0, 0, 0, 80, 112, 33, 65, 4, 156, 25, 204, 76, 225, 2, 26, 246, 105, 196, 61, 74, 163, 16, 58, 0, 91, 1, 184, 30, 40, 8, 29, 252, 151, 232, 204, 44, 0, 48, 87, 6, 43, 38, 20, 62, 194, 5, 26, 250, 126, 220, 112, 61, 20, 18, 180, 0, 62, 4, 215, 35, 153, 5, 240, 249, 131, 219, 184, 62, 92, 27, 25, 3, 164, 18, 235, 57, 225, 2, 26, 246, 105, 196, 225, 58, 204, 8, 140, 252, 55, 235, 215, 19, 204, 4, 12, 249, 38, 214, 215, 51, 174, 67, 83, 8, 27, 50, 163, 64, 30, 9, 193, 252, 118, 236, 225, 58, 184, 22, 6, 2, 46, 12, 92, 15, 102, 14, 100, 255, 86, 252, 174, 55, 153, 33, 72, 4, 198, 25, 235, 65, 10, 3, 106, 246, 74, 198, 225, 58, 225, 14, 149, 255, 122, 253, 174, 23, 102, 2, 12, 245, 17, 190, 122, 36, 40, 36, 180, 4, 83, 28, 215, 51, 225, 6, 33, 251, 172, 226, 215, 51, 194, 13, 33, 255, 193, 250, 153, 9, 174, 7, 196, 251, 127, 230, 204, 44, 153, 21, 187, 1, 108, 10, 245, 40, 225, 2, 26, 246, 105, 196, 112, 45, 122, 12, 145, 254, 92, 247, 194, 5, 10, 3, 106, 246, 74, 198, 0, 64, 248, 65, 226, 67, 190, 69, 142, 71, 82, 73, 12, 75, 188, 76, 98, 78, 0, 80, 150, 81, 35, 83, 170, 84, 42, 86, 163, 87, 22, 89, 130, 90, 234, 91, 76, 93, 168, 94, 0, 96, 83, 97, 161, 98, 236, 99, 49, 101, 115, 102, 177, 103, 235, 104, 34, 106, 85, 107, 132, 108, 177, 109, 218, 110, 0, 112, 35, 113, 67, 114, 97, 115, 123, 116, 147, 117, 169, 118, 188, 119, 204, 120, 218, 121, 230, 122, 239, 123, 247, 124, 252, 125, 255, 126, 255, 127, 255, 127, 61, 10, 63, 10, 69, 10, 78, 10, 91, 10, 108, 10, 129, 10, 153, 10, 181, 10, 212, 10, 248, 10, 31, 11, 74, 11, 120, 11, 170, 11, 224, 11, 25, 12, 86, 12, 151, 12, 219, 12, 35, 13, 110, 13, 189, 13, 15, 14, 101, 14, 190, 14, 27, 15, 123, 15, 223, 15, 70, 16, 176, 16, 30, 17, 143, 17, 3, 18, 123, 18, 245, 18, 115, 19, 244, 19, 120, 20, 0, 21, 138, 21, 23, 22, 168, 22, 59, 23, 209, 23, 106, 24, 6, 25, 165, 25, 70, 26, 234, 26, 145, 27, 59, 28, 231, 28, 149, 29, 70, 30, 250, 30, 176, 31, 104, 32, 35, 33, 224, 33, 159, 34, 97, 35, 36, 36, 234, 36, 178, 37, 124, 38, 71, 39, 21, 40, 228, 40, 181, 41, 136, 42, 93, 43, 51, 44, 11, 45, 228, 45, 191, 46, 155, 47, 121, 48, 88, 49, 56, 50, 26, 51, 252, 51, 224, 52, 196, 53, 170, 54, 145, 55, 120, 56, 96, 57, 73, 58, 51, 59, 29, 60, 8, 61, 243, 61, 223, 62, 203, 63, 184, 64, 165, 65, 146, 66, 127, 67, 108, 68, 90, 69, 71, 70, 52, 71, 33, 72, 14, 73, 251, 73, 231, 74, 211, 75, 191, 76, 170, 77, 149, 78, 126, 79, 104, 80, 80, 81, 56, 82, 31, 83, 5, 84, 234, 84, 207, 85, 178, 86, 148, 87, 116, 88, 84, 89, 50, 90, 15, 91, 235, 91, 197, 92, 157, 93, 117, 94, 74, 95, 30, 96, 240, 96, 192, 97, 143, 98, 91, 99, 38, 100, 239, 100, 181, 101, 122, 102, 60, 103, 253, 103, 187, 104, 119, 105, 48, 106, 232, 106, 156, 107, 79, 108, 255, 108, 172, 109, 87, 110, 255, 110, 165, 111, 71, 112, 231, 112, 133, 113, 31, 114, 183, 114, 75, 115, 221, 115, 108, 116, 248, 116, 129, 117, 6, 118, 137, 118, 8, 119, 133, 119, 254, 119, 116, 120, 230, 120, 86, 121, 194, 121, 42, 122, 144, 122, 242, 122, 80, 123, 171, 123, 3, 124, 87, 124, 167, 124, 244, 124, 62, 125, 132, 125, 198, 125, 5, 126, 64, 126, 120, 126, 172, 126, 220, 126, 9, 127, 49, 127, 87, 127, 120, 127, 150, 127, 176, 127, 199, 127, 217, 127, 232, 127, 243, 127, 251, 127, 255, 127, 255, 127, 229, 127, 153, 127, 25, 127, 103, 126, 129, 125], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE + 20480);\r\n    allocate([106, 124, 33, 123, 167, 121, 252, 119, 34, 118, 24, 116, 223, 113, 122, 111, 231, 108, 41, 106, 65, 103, 47, 100, 245, 96, 149, 93, 15, 90, 101, 86, 153, 82, 171, 78, 158, 74, 116, 70, 45, 66, 204, 61, 82, 57, 193, 52, 27, 48, 98, 43, 151, 38, 189, 33, 213, 28, 226, 23, 230, 18, 226, 13, 216, 8, 203, 3, 61, 10, 64, 10, 73, 10, 88, 10, 108, 10, 135, 10, 167, 10, 205, 10, 249, 10, 43, 11, 99, 11, 160, 11, 227, 11, 44, 12, 122, 12, 207, 12, 40, 13, 136, 13, 237, 13, 87, 14, 199, 14, 60, 15, 183, 15, 55, 16, 189, 16, 71, 17, 215, 17, 108, 18, 6, 19, 165, 19, 73, 20, 242, 20, 159, 21, 82, 22, 9, 23, 196, 23, 133, 24, 73, 25, 18, 26, 224, 26, 177, 27, 135, 28, 97, 29, 62, 30, 32, 31, 5, 32, 238, 32, 219, 33, 203, 34, 191, 35, 182, 36, 176, 37, 174, 38, 174, 39, 177, 40, 184, 41, 193, 42, 204, 43, 218, 44, 235, 45, 254, 46, 19, 48, 42, 49, 67, 50, 94, 51, 123, 52, 154, 53, 186, 54, 219, 55, 254, 56, 34, 58, 71, 59, 109, 60, 148, 61, 188, 62, 228, 63, 13, 65, 54, 66, 96, 67, 138, 68, 180, 69, 221, 70, 7, 72, 48, 73, 89, 74, 130, 75, 169, 76, 208, 77, 246, 78, 27, 80, 63, 81, 98, 82, 132, 83, 164, 84, 194, 85, 223, 86, 250, 87, 19, 89, 43, 90, 64, 91, 83, 92, 99, 93, 113, 94, 125, 95, 134, 96, 140, 97, 143, 98, 144, 99, 141, 100, 135, 101, 126, 102, 114, 103, 98, 104, 79, 105, 56, 106, 30, 107, 255, 107, 221, 108, 183, 109, 140, 110, 94, 111, 43, 112, 244, 112, 185, 113, 121, 114, 53, 115, 236, 115, 158, 116, 76, 117, 245, 117, 153, 118, 55, 119, 209, 119, 102, 120, 246, 120, 129, 121, 6, 122, 134, 122, 1, 123, 118, 123, 230, 123, 81, 124, 182, 124, 21, 125, 111, 125, 195, 125, 17, 126, 90, 126, 157, 126, 219, 126, 18, 127, 68, 127, 112, 127, 150, 127, 183, 127, 209, 127, 230, 127, 244, 127, 253, 127, 255, 127, 255, 127, 244, 127, 208, 127, 149, 127, 66, 127, 215, 126, 85, 126, 188, 125, 12, 125, 69, 124, 104, 123, 117, 122, 108, 121, 78, 120, 28, 119, 213, 117, 122, 116, 13, 115, 140, 113, 250, 111, 87, 110, 162, 108, 222, 106, 11, 105, 40, 103, 57, 101, 60, 99, 51, 97, 30, 95, 255, 92, 215, 90, 165, 88, 108, 86, 44, 84, 229, 81, 154, 79, 74, 77, 247, 74, 161, 72, 74, 70, 243, 67, 156, 65, 71, 63, 244, 60, 164, 58, 88, 56, 18, 54, 209, 51, 152, 49, 103, 47, 62, 45, 31, 43, 11, 41, 2, 39, 5, 37, 21, 35, 51, 33, 95, 31, 155, 29, 231, 27, 67, 26, 177, 24, 49, 23, 195, 21, 105, 20, 34, 19, 239, 17, 209, 16, 201, 15, 214, 14, 249, 13, 50, 13, 130, 12, 232, 11, 102, 11, 252, 10, 169, 10, 109, 10, 73, 10, 61, 10, 61, 10, 63, 10, 67, 10, 74, 10, 84, 10, 96, 10, 111, 10, 129, 10, 150, 10, 174, 10, 200, 10, 229, 10, 5, 11, 39, 11, 77, 11, 117, 11, 159, 11, 205, 11, 253, 11, 48, 12, 101, 12, 157, 12, 216, 12, 22, 13, 86, 13, 153, 13, 222, 13, 38, 14, 113, 14, 190, 14, 13, 15, 96, 15, 181, 15, 12, 16, 102, 16, 194, 16, 33, 17, 130, 17, 230, 17, 76, 18, 180, 18, 31, 19, 140, 19, 252, 19, 110, 20, 226, 20, 88, 21, 209, 21, 76, 22, 201, 22, 72, 23, 202, 23, 77, 24, 211, 24, 91, 25, 229, 25, 113, 26, 254, 26, 142, 27, 32, 28, 180, 28, 74, 29, 225, 29, 123, 30, 22, 31, 179, 31, 82, 32, 242, 32, 149, 33, 57, 34, 222, 34, 133, 35, 46, 36, 216, 36, 132, 37, 50, 38, 224, 38, 145, 39, 66, 40, 245, 40, 169, 41, 95, 42, 22, 43, 206, 43, 135, 44, 66, 45, 253, 45, 186, 46, 120, 47, 54, 48, 246, 48, 183, 49, 120, 50, 59, 51, 254, 51, 194, 52, 135, 53, 77, 54, 19, 55, 218, 55, 161, 56, 106, 57, 50, 58, 252, 58, 197, 59, 144, 60, 90, 61, 37, 62, 240, 62, 188, 63, 136, 64, 84, 65, 32, 66, 236, 66, 185, 67, 133, 68, 82, 69, 30, 70, 235, 70, 183, 71, 132, 72, 80, 73, 28, 74, 231, 74, 179, 75, 126, 76, 73, 77, 19, 78, 221, 78, 166, 79, 111, 80, 56, 81, 0, 82, 199, 82, 142, 83, 84, 84, 25, 85, 221, 85, 161, 86, 100, 87, 38, 88, 231, 88, 167, 89, 103, 90, 37, 91, 226, 91, 158, 92, 89, 93, 19, 94, 204, 94, 131, 95, 57, 96, 238, 96, 162, 97, 84, 98, 5, 99, 181, 99, 99, 100, 15, 101, 186, 101, 100, 102, 12, 103, 178, 103, 87, 104, 250, 104, 155, 105, 59, 106, 217, 106, 117, 107, 16, 108, 168, 108, 63, 109, 211, 109, 102, 110, 247, 110, 134, 111, 19, 112, 158, 112, 39, 113, 174, 113, 50, 114, 181, 114, 53, 115, 179, 115, 47, 116, 169, 116, 33, 117, 150, 117, 9, 118, 122, 118, 232, 118, 84, 119, 190, 119, 37, 120, 138, 120, 236, 120, 76, 121, 170, 121, 5, 122, 94, 122, 180, 122, 7, 123, 88, 123, 167, 123, 242, 123, 60, 124, 130, 124, 198, 124, 8, 125, 71, 125, 131, 125, 188, 125, 243, 125, 39, 126, 89, 126, 136, 126, 180, 126, 221, 126, 4, 127, 40, 127, 73, 127, 103, 127, 131, 127, 156, 127, 178, 127, 197, 127, 214, 127, 228, 127, 239, 127, 247, 127, 253, 127, 255, 127, 255, 127, 97, 125, 160, 117, 15, 105, 48, 88, 181, 67, 116, 44, 98, 19, 68, 101, 99, 111, 100, 101, 114, 0, 101, 110, 99, 111, 100, 101, 114, 0], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE + 30720);\r\n    var tempDoublePtr = Runtime.alignMemory(allocate(12, \"i8\", ALLOC_STATIC), 8);\r\n    assert(tempDoublePtr % 8 == 0);\r\n\r\n    function copyTempFloat(ptr) {\r\n        HEAP8[tempDoublePtr] = HEAP8[ptr];\r\n        HEAP8[tempDoublePtr + 1] = HEAP8[ptr + 1];\r\n        HEAP8[tempDoublePtr + 2] = HEAP8[ptr + 2];\r\n        HEAP8[tempDoublePtr + 3] = HEAP8[ptr + 3]\r\n    }\r\n\r\n    function copyTempDouble(ptr) {\r\n        HEAP8[tempDoublePtr] = HEAP8[ptr];\r\n        HEAP8[tempDoublePtr + 1] = HEAP8[ptr + 1];\r\n        HEAP8[tempDoublePtr + 2] = HEAP8[ptr + 2];\r\n        HEAP8[tempDoublePtr + 3] = HEAP8[ptr + 3];\r\n        HEAP8[tempDoublePtr + 4] = HEAP8[ptr + 4];\r\n        HEAP8[tempDoublePtr + 5] = HEAP8[ptr + 5];\r\n        HEAP8[tempDoublePtr + 6] = HEAP8[ptr + 6];\r\n        HEAP8[tempDoublePtr + 7] = HEAP8[ptr + 7]\r\n    }\r\n\r\n    function _sbrk(bytes) {\r\n        var self = _sbrk;\r\n        if (!self.called) {\r\n            DYNAMICTOP = alignMemoryPage(DYNAMICTOP);\r\n            self.called = true;\r\n            assert(Runtime.dynamicAlloc);\r\n            self.alloc = Runtime.dynamicAlloc;\r\n            Runtime.dynamicAlloc = (function () {\r\n                abort(\"cannot dynamically allocate, sbrk now has control\")\r\n            })\r\n        }\r\n        var ret = DYNAMICTOP;\r\n        if (bytes != 0) {\r\n            var success = self.alloc(bytes);\r\n            if (!success) return -1 >>> 0\r\n        }\r\n        return ret\r\n    }\r\n\r\n    function ___setErrNo(value) {\r\n        if (Module[\"___errno_location\"]) HEAP32[Module[\"___errno_location\"]() >> 2] = value;\r\n        return value\r\n    }\r\n\r\n    var ERRNO_CODES = {\r\n        EPERM: 1,\r\n        ENOENT: 2,\r\n        ESRCH: 3,\r\n        EINTR: 4,\r\n        EIO: 5,\r\n        ENXIO: 6,\r\n        E2BIG: 7,\r\n        ENOEXEC: 8,\r\n        EBADF: 9,\r\n        ECHILD: 10,\r\n        EAGAIN: 11,\r\n        EWOULDBLOCK: 11,\r\n        ENOMEM: 12,\r\n        EACCES: 13,\r\n        EFAULT: 14,\r\n        ENOTBLK: 15,\r\n        EBUSY: 16,\r\n        EEXIST: 17,\r\n        EXDEV: 18,\r\n        ENODEV: 19,\r\n        ENOTDIR: 20,\r\n        EISDIR: 21,\r\n        EINVAL: 22,\r\n        ENFILE: 23,\r\n        EMFILE: 24,\r\n        ENOTTY: 25,\r\n        ETXTBSY: 26,\r\n        EFBIG: 27,\r\n        ENOSPC: 28,\r\n        ESPIPE: 29,\r\n        EROFS: 30,\r\n        EMLINK: 31,\r\n        EPIPE: 32,\r\n        EDOM: 33,\r\n        ERANGE: 34,\r\n        ENOMSG: 42,\r\n        EIDRM: 43,\r\n        ECHRNG: 44,\r\n        EL2NSYNC: 45,\r\n        EL3HLT: 46,\r\n        EL3RST: 47,\r\n        ELNRNG: 48,\r\n        EUNATCH: 49,\r\n        ENOCSI: 50,\r\n        EL2HLT: 51,\r\n        EDEADLK: 35,\r\n        ENOLCK: 37,\r\n        EBADE: 52,\r\n        EBADR: 53,\r\n        EXFULL: 54,\r\n        ENOANO: 55,\r\n        EBADRQC: 56,\r\n        EBADSLT: 57,\r\n        EDEADLOCK: 35,\r\n        EBFONT: 59,\r\n        ENOSTR: 60,\r\n        ENODATA: 61,\r\n        ETIME: 62,\r\n        ENOSR: 63,\r\n        ENONET: 64,\r\n        ENOPKG: 65,\r\n        EREMOTE: 66,\r\n        ENOLINK: 67,\r\n        EADV: 68,\r\n        ESRMNT: 69,\r\n        ECOMM: 70,\r\n        EPROTO: 71,\r\n        EMULTIHOP: 72,\r\n        EDOTDOT: 73,\r\n        EBADMSG: 74,\r\n        ENOTUNIQ: 76,\r\n        EBADFD: 77,\r\n        EREMCHG: 78,\r\n        ELIBACC: 79,\r\n        ELIBBAD: 80,\r\n        ELIBSCN: 81,\r\n        ELIBMAX: 82,\r\n        ELIBEXEC: 83,\r\n        ENOSYS: 38,\r\n        ENOTEMPTY: 39,\r\n        ENAMETOOLONG: 36,\r\n        ELOOP: 40,\r\n        EOPNOTSUPP: 95,\r\n        EPFNOSUPPORT: 96,\r\n        ECONNRESET: 104,\r\n        ENOBUFS: 105,\r\n        EAFNOSUPPORT: 97,\r\n        EPROTOTYPE: 91,\r\n        ENOTSOCK: 88,\r\n        ENOPROTOOPT: 92,\r\n        ESHUTDOWN: 108,\r\n        ECONNREFUSED: 111,\r\n        EADDRINUSE: 98,\r\n        ECONNABORTED: 103,\r\n        ENETUNREACH: 101,\r\n        ENETDOWN: 100,\r\n        ETIMEDOUT: 110,\r\n        EHOSTDOWN: 112,\r\n        EHOSTUNREACH: 113,\r\n        EINPROGRESS: 115,\r\n        EALREADY: 114,\r\n        EDESTADDRREQ: 89,\r\n        EMSGSIZE: 90,\r\n        EPROTONOSUPPORT: 93,\r\n        ESOCKTNOSUPPORT: 94,\r\n        EADDRNOTAVAIL: 99,\r\n        ENETRESET: 102,\r\n        EISCONN: 106,\r\n        ENOTCONN: 107,\r\n        ETOOMANYREFS: 109,\r\n        EUSERS: 87,\r\n        EDQUOT: 122,\r\n        ESTALE: 116,\r\n        ENOTSUP: 95,\r\n        ENOMEDIUM: 123,\r\n        EILSEQ: 84,\r\n        EOVERFLOW: 75,\r\n        ECANCELED: 125,\r\n        ENOTRECOVERABLE: 131,\r\n        EOWNERDEAD: 130,\r\n        ESTRPIPE: 86\r\n    };\r\n\r\n    function _sysconf(name) {\r\n        switch (name) {\r\n            case 30:\r\n                return PAGE_SIZE;\r\n            case 85:\r\n                return totalMemory / PAGE_SIZE;\r\n            case 132:\r\n            case 133:\r\n            case 12:\r\n            case 137:\r\n            case 138:\r\n            case 15:\r\n            case 235:\r\n            case 16:\r\n            case 17:\r\n            case 18:\r\n            case 19:\r\n            case 20:\r\n            case 149:\r\n            case 13:\r\n            case 10:\r\n            case 236:\r\n            case 153:\r\n            case 9:\r\n            case 21:\r\n            case 22:\r\n            case 159:\r\n            case 154:\r\n            case 14:\r\n            case 77:\r\n            case 78:\r\n            case 139:\r\n            case 80:\r\n            case 81:\r\n            case 82:\r\n            case 68:\r\n            case 67:\r\n            case 164:\r\n            case 11:\r\n            case 29:\r\n            case 47:\r\n            case 48:\r\n            case 95:\r\n            case 52:\r\n            case 51:\r\n            case 46:\r\n                return 200809;\r\n            case 79:\r\n                return 0;\r\n            case 27:\r\n            case 246:\r\n            case 127:\r\n            case 128:\r\n            case 23:\r\n            case 24:\r\n            case 160:\r\n            case 161:\r\n            case 181:\r\n            case 182:\r\n            case 242:\r\n            case 183:\r\n            case 184:\r\n            case 243:\r\n            case 244:\r\n            case 245:\r\n            case 165:\r\n            case 178:\r\n            case 179:\r\n            case 49:\r\n            case 50:\r\n            case 168:\r\n            case 169:\r\n            case 175:\r\n            case 170:\r\n            case 171:\r\n            case 172:\r\n            case 97:\r\n            case 76:\r\n            case 32:\r\n            case 173:\r\n            case 35:\r\n                return -1;\r\n            case 176:\r\n            case 177:\r\n            case 7:\r\n            case 155:\r\n            case 8:\r\n            case 157:\r\n            case 125:\r\n            case 126:\r\n            case 92:\r\n            case 93:\r\n            case 129:\r\n            case 130:\r\n            case 131:\r\n\r\n            case 94:\r\n            case 91:\r\n                return 1;\r\n            case 74:\r\n            case 60:\r\n            case 69:\r\n            case 70:\r\n            case 4:\r\n                return 1024;\r\n            case 31:\r\n            case 42:\r\n            case 72:\r\n                return 32;\r\n            case 87:\r\n            case 26:\r\n            case 33:\r\n                return 2147483647;\r\n            case 34:\r\n            case 1:\r\n                return 47839;\r\n            case 38:\r\n            case 36:\r\n                return 99;\r\n            case 43:\r\n            case 37:\r\n                return 2048;\r\n            case 0:\r\n                return 2097152;\r\n            case 3:\r\n                return 65536;\r\n            case 28:\r\n                return 32768;\r\n            case 44:\r\n                return 32767;\r\n            case 75:\r\n                return 16384;\r\n            case 39:\r\n                return 1e3;\r\n            case 89:\r\n                return 700;\r\n            case 71:\r\n                return 256;\r\n            case 40:\r\n                return 255;\r\n            case 2:\r\n                return 100;\r\n            case 180:\r\n                return 64;\r\n            case 25:\r\n                return 20;\r\n            case 5:\r\n                return 16;\r\n            case 6:\r\n                return 6;\r\n            case 73:\r\n                return 4;\r\n            case 84: {\r\n                if (typeof navigator === \"object\") return navigator[\"hardwareConcurrency\"] || 1;\r\n                return 1\r\n            }\r\n        }\r\n        ___setErrNo(ERRNO_CODES.EINVAL);\r\n        return -1\r\n    }\r\n\r\n    function _emscripten_memcpy_big(dest, src, num) {\r\n        HEAPU8.set(HEAPU8.subarray(src, src + num), dest);\r\n        return dest\r\n    }\r\n\r\n    Module[\"_memcpy\"] = _memcpy;\r\n    Module[\"_memmove\"] = _memmove;\r\n    Module[\"_memset\"] = _memset;\r\n\r\n    function _abort() {\r\n        Module[\"abort\"]()\r\n    }\r\n\r\n    var ERRNO_MESSAGES = {\r\n        0: \"Success\",\r\n        1: \"Not super-user\",\r\n        2: \"No such file or directory\",\r\n        3: \"No such process\",\r\n        4: \"Interrupted system call\",\r\n        5: \"I/O error\",\r\n        6: \"No such device or address\",\r\n        7: \"Arg list too long\",\r\n        8: \"Exec format error\",\r\n        9: \"Bad file number\",\r\n        10: \"No children\",\r\n        11: \"No more processes\",\r\n        12: \"Not enough core\",\r\n        13: \"Permission denied\",\r\n        14: \"Bad address\",\r\n        15: \"Block device required\",\r\n        16: \"Mount device busy\",\r\n        17: \"File exists\",\r\n        18: \"Cross-device link\",\r\n        19: \"No such device\",\r\n        20: \"Not a directory\",\r\n        21: \"Is a directory\",\r\n        22: \"Invalid argument\",\r\n        23: \"Too many open files in system\",\r\n        24: \"Too many open files\",\r\n        25: \"Not a typewriter\",\r\n        26: \"Text file busy\",\r\n        27: \"File too large\",\r\n        28: \"No space left on device\",\r\n        29: \"Illegal seek\",\r\n        30: \"Read only file system\",\r\n        31: \"Too many links\",\r\n        32: \"Broken pipe\",\r\n        33: \"Math arg out of domain of func\",\r\n        34: \"Math result not representable\",\r\n        35: \"File locking deadlock error\",\r\n        36: \"File or path name too long\",\r\n        37: \"No record locks available\",\r\n        38: \"Function not implemented\",\r\n        39: \"Directory not empty\",\r\n        40: \"Too many symbolic links\",\r\n        42: \"No message of desired type\",\r\n        43: \"Identifier removed\",\r\n        44: \"Channel number out of range\",\r\n        45: \"Level 2 not synchronized\",\r\n        46: \"Level 3 halted\",\r\n        47: \"Level 3 reset\",\r\n        48: \"Link number out of range\",\r\n        49: \"Protocol driver not attached\",\r\n        50: \"No CSI structure available\",\r\n        51: \"Level 2 halted\",\r\n        52: \"Invalid exchange\",\r\n        53: \"Invalid request descriptor\",\r\n        54: \"Exchange full\",\r\n        55: \"No anode\",\r\n        56: \"Invalid request code\",\r\n        57: \"Invalid slot\",\r\n        59: \"Bad font file fmt\",\r\n        60: \"Device not a stream\",\r\n        61: \"No data (for no delay io)\",\r\n        62: \"Timer expired\",\r\n        63: \"Out of streams resources\",\r\n        64: \"Machine is not on the network\",\r\n        65: \"Package not installed\",\r\n        66: \"The object is remote\",\r\n        67: \"The link has been severed\",\r\n        68: \"Advertise error\",\r\n        69: \"Srmount error\",\r\n        70: \"Communication error on send\",\r\n        71: \"Protocol error\",\r\n        72: \"Multihop attempted\",\r\n        73: \"Cross mount point (not really error)\",\r\n        74: \"Trying to read unreadable message\",\r\n        75: \"Value too large for defined data type\",\r\n        76: \"Given log. name not unique\",\r\n        77: \"f.d. invalid for this operation\",\r\n        78: \"Remote address changed\",\r\n        79: \"Can   access a needed shared lib\",\r\n        80: \"Accessing a corrupted shared lib\",\r\n        81: \".lib section in a.out corrupted\",\r\n        82: \"Attempting to link in too many libs\",\r\n        83: \"Attempting to exec a shared library\",\r\n        84: \"Illegal byte sequence\",\r\n        86: \"Streams pipe error\",\r\n        87: \"Too many users\",\r\n        88: \"Socket operation on non-socket\",\r\n        89: \"Destination address required\",\r\n        90: \"Message too long\",\r\n        91: \"Protocol wrong type for socket\",\r\n        92: \"Protocol not available\",\r\n        93: \"Unknown protocol\",\r\n        94: \"Socket type not supported\",\r\n        95: \"Not supported\",\r\n        96: \"Protocol family not supported\",\r\n        97: \"Address family not supported by protocol family\",\r\n        98: \"Address already in use\",\r\n        99: \"Address not available\",\r\n        100: \"Network interface is not configured\",\r\n        101: \"Network is unreachable\",\r\n        102: \"Connection reset by network\",\r\n        103: \"Connection aborted\",\r\n        104: \"Connection reset by peer\",\r\n        105: \"No buffer space available\",\r\n        106: \"Socket is already connected\",\r\n        107: \"Socket is not connected\",\r\n        108: \"Can't send after socket shutdown\",\r\n        109: \"Too many references\",\r\n        110: \"Connection timed out\",\r\n        111: \"Connection refused\",\r\n        112: \"Host is down\",\r\n        113: \"Host is unreachable\",\r\n        114: \"Socket already connected\",\r\n        115: \"Connection already in progress\",\r\n        116: \"Stale file handle\",\r\n        122: \"Quota exceeded\",\r\n        123: \"No medium (in tape drive)\",\r\n        125: \"Operation canceled\",\r\n        130: \"Previous owner died\",\r\n        131: \"State not recoverable\"\r\n    };\r\n    var TTY = {\r\n        ttys: [], init: (function () {\r\n        }), shutdown: (function () {\r\n        }), register: (function (dev, ops) {\r\n            TTY.ttys[dev] = {input: [], output: [], ops: ops};\r\n            FS.registerDevice(dev, TTY.stream_ops)\r\n        }), stream_ops: {\r\n            open: (function (stream) {\r\n                var tty = TTY.ttys[stream.node.rdev];\r\n                if (!tty) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.ENODEV)\r\n                }\r\n                stream.tty = tty;\r\n                stream.seekable = false\r\n            }), close: (function (stream) {\r\n                stream.tty.ops.flush(stream.tty)\r\n            }), flush: (function (stream) {\r\n                stream.tty.ops.flush(stream.tty)\r\n            }), read: (function (stream, buffer, offset, length, pos) {\r\n                if (!stream.tty || !stream.tty.ops.get_char) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.ENXIO)\r\n                }\r\n                var bytesRead = 0;\r\n                for (var i = 0; i < length; i++) {\r\n                    var result;\r\n                    try {\r\n                        result = stream.tty.ops.get_char(stream.tty)\r\n                    } catch (e) {\r\n                        throw new FS.ErrnoError(ERRNO_CODES.EIO)\r\n                    }\r\n                    if (result === undefined && bytesRead === 0) {\r\n                        throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)\r\n                    }\r\n                    if (result === null || result === undefined) break;\r\n                    bytesRead++;\r\n                    buffer[offset + i] = result\r\n                }\r\n\r\n                if (bytesRead) {\r\n                    stream.node.timestamp = Date.now()\r\n                }\r\n                return bytesRead\r\n            }), write: (function (stream, buffer, offset, length, pos) {\r\n                if (!stream.tty || !stream.tty.ops.put_char) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.ENXIO)\r\n                }\r\n                for (var i = 0; i < length; i++) {\r\n                    try {\r\n                        stream.tty.ops.put_char(stream.tty, buffer[offset + i])\r\n                    } catch (e) {\r\n                        throw new FS.ErrnoError(ERRNO_CODES.EIO)\r\n                    }\r\n                }\r\n                if (length) {\r\n                    stream.node.timestamp = Date.now()\r\n                }\r\n                return i\r\n            })\r\n        }, default_tty_ops: {\r\n            get_char: (function (tty) {\r\n                if (!tty.input.length) {\r\n                    var result = null;\r\n                    if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\r\n                        result = window.prompt(\"Input: \");\r\n                        if (result !== null) {\r\n                            result += \"\\n\"\r\n                        }\r\n                    } else if (typeof readline == \"function\") {\r\n                        result = readline();\r\n                        if (result !== null) {\r\n                            result += \"\\n\"\r\n                        }\r\n                    }\r\n                    if (!result) {\r\n                        return null\r\n                    }\r\n                    tty.input = intArrayFromString(result, true)\r\n                }\r\n                return tty.input.shift()\r\n            }), put_char: (function (tty, val) {\r\n                if (val === null || val === 10) {\r\n                    Module[\"print\"](UTF8ArrayToString(tty.output, 0));\r\n                    tty.output = []\r\n                } else {\r\n                    if (val != 0) tty.output.push(val)\r\n                }\r\n            }), flush: (function (tty) {\r\n                if (tty.output && tty.output.length > 0) {\r\n                    Module[\"print\"](UTF8ArrayToString(tty.output, 0));\r\n                    tty.output = []\r\n                }\r\n            })\r\n        }, default_tty1_ops: {\r\n            put_char: (function (tty, val) {\r\n                if (val === null || val === 10) {\r\n                    Module[\"printErr\"](UTF8ArrayToString(tty.output, 0));\r\n                    tty.output = []\r\n                } else {\r\n                    if (val != 0) tty.output.push(val)\r\n                }\r\n            }), flush: (function (tty) {\r\n                if (tty.output && tty.output.length > 0) {\r\n                    Module[\"printErr\"](UTF8ArrayToString(tty.output, 0));\r\n                    tty.output = []\r\n                }\r\n            })\r\n        }\r\n    };\r\n    var MEMFS = {\r\n        ops_table: null, mount: (function (mount) {\r\n            return MEMFS.createNode(null, \"/\", 16384 | 511, 0)\r\n        }), createNode: (function (parent, name, mode, dev) {\r\n            if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }\r\n            if (!MEMFS.ops_table) {\r\n                MEMFS.ops_table = {\r\n                    dir: {\r\n                        node: {\r\n                            getattr: MEMFS.node_ops.getattr,\r\n                            setattr: MEMFS.node_ops.setattr,\r\n                            lookup: MEMFS.node_ops.lookup,\r\n                            mknod: MEMFS.node_ops.mknod,\r\n                            rename: MEMFS.node_ops.rename,\r\n                            unlink: MEMFS.node_ops.unlink,\r\n                            rmdir: MEMFS.node_ops.rmdir,\r\n                            readdir: MEMFS.node_ops.readdir,\r\n                            symlink: MEMFS.node_ops.symlink\r\n                        }, stream: {llseek: MEMFS.stream_ops.llseek}\r\n                    },\r\n                    file: {\r\n                        node: {getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr},\r\n                        stream: {\r\n                            llseek: MEMFS.stream_ops.llseek,\r\n                            read: MEMFS.stream_ops.read,\r\n                            write: MEMFS.stream_ops.write,\r\n                            allocate: MEMFS.stream_ops.allocate,\r\n                            mmap: MEMFS.stream_ops.mmap,\r\n                            msync: MEMFS.stream_ops.msync\r\n                        }\r\n                    },\r\n                    link: {\r\n                        node: {\r\n                            getattr: MEMFS.node_ops.getattr,\r\n                            setattr: MEMFS.node_ops.setattr,\r\n                            readlink: MEMFS.node_ops.readlink\r\n                        }, stream: {}\r\n                    },\r\n                    chrdev: {\r\n                        node: {getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr},\r\n                        stream: FS.chrdev_stream_ops\r\n                    }\r\n                }\r\n            }\r\n            var node = FS.createNode(parent, name, mode, dev);\r\n            if (FS.isDir(node.mode)) {\r\n                node.node_ops = MEMFS.ops_table.dir.node;\r\n                node.stream_ops = MEMFS.ops_table.dir.stream;\r\n                node.contents = {}\r\n            } else if (FS.isFile(node.mode)) {\r\n                node.node_ops = MEMFS.ops_table.file.node;\r\n                node.stream_ops = MEMFS.ops_table.file.stream;\r\n                node.usedBytes = 0;\r\n                node.contents = null\r\n            } else if (FS.isLink(node.mode)) {\r\n                node.node_ops = MEMFS.ops_table.link.node;\r\n                node.stream_ops = MEMFS.ops_table.link.stream\r\n            } else if (FS.isChrdev(node.mode)) {\r\n                node.node_ops = MEMFS.ops_table.chrdev.node;\r\n                node.stream_ops = MEMFS.ops_table.chrdev.stream\r\n            }\r\n            node.timestamp = Date.now();\r\n            if (parent) {\r\n                parent.contents[name] = node\r\n            }\r\n            return node\r\n        }), getFileDataAsRegularArray: (function (node) {\r\n            if (node.contents && node.contents.subarray) {\r\n                var arr = [];\r\n                for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);\r\n                return arr\r\n            }\r\n            return node.contents\r\n        }), getFileDataAsTypedArray: (function (node) {\r\n            if (!node.contents) return new Uint8Array;\r\n            if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\r\n            return new Uint8Array(node.contents)\r\n        }), expandFileStorage: (function (node, newCapacity) {\r\n            if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {\r\n                node.contents = MEMFS.getFileDataAsRegularArray(node);\r\n                node.usedBytes = node.contents.length\r\n            }\r\n            if (!node.contents || node.contents.subarray) {\r\n                var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;\r\n                if (prevCapacity >= newCapacity) return;\r\n                var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n                newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);\r\n                if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\r\n                var oldContents = node.contents;\r\n                node.contents = new Uint8Array(newCapacity);\r\n                if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\r\n                return\r\n            }\r\n            if (!node.contents && newCapacity > 0) node.contents = [];\r\n            while (node.contents.length < newCapacity) node.contents.push(0)\r\n        }), resizeFileStorage: (function (node, newSize) {\r\n            if (node.usedBytes == newSize) return;\r\n            if (newSize == 0) {\r\n                node.contents = null;\r\n                node.usedBytes = 0;\r\n                return\r\n            }\r\n            if (!node.contents || node.contents.subarray) {\r\n                var oldContents = node.contents;\r\n                node.contents = new Uint8Array(new ArrayBuffer(newSize));\r\n                if (oldContents) {\r\n                    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)))\r\n                }\r\n                node.usedBytes = newSize;\r\n                return\r\n            }\r\n            if (!node.contents) node.contents = [];\r\n            if (node.contents.length > newSize) node.contents.length = newSize; else while (node.contents.length < newSize) node.contents.push(0);\r\n            node.usedBytes = newSize\r\n        }), node_ops: {\r\n            getattr: (function (node) {\r\n                var attr = {};\r\n                attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n                attr.ino = node.id;\r\n                attr.mode = node.mode;\r\n                attr.nlink = 1;\r\n                attr.uid = 0;\r\n                attr.gid = 0;\r\n                attr.rdev = node.rdev;\r\n                if (FS.isDir(node.mode)) {\r\n                    attr.size = 4096\r\n                } else if (FS.isFile(node.mode)) {\r\n                    attr.size = node.usedBytes\r\n                } else if (FS.isLink(node.mode)) {\r\n                    attr.size = node.link.length\r\n                } else {\r\n                    attr.size = 0\r\n                }\r\n                attr.atime = new Date(node.timestamp);\r\n                attr.mtime = new Date(node.timestamp);\r\n                attr.ctime = new Date(node.timestamp);\r\n                attr.blksize = 4096;\r\n                attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n                return attr\r\n            }), setattr: (function (node, attr) {\r\n                if (attr.mode !== undefined) {\r\n                    node.mode = attr.mode\r\n                }\r\n                if (attr.timestamp !== undefined) {\r\n                    node.timestamp = attr.timestamp\r\n                }\r\n                if (attr.size !== undefined) {\r\n                    MEMFS.resizeFileStorage(node, attr.size)\r\n                }\r\n            }), lookup: (function (parent, name) {\r\n                throw FS.genericErrors[ERRNO_CODES.ENOENT]\r\n            }), mknod: (function (parent, name, mode, dev) {\r\n                return MEMFS.createNode(parent, name, mode, dev)\r\n            }), rename: (function (old_node, new_dir, new_name) {\r\n                if (FS.isDir(old_node.mode)) {\r\n                    var new_node;\r\n                    try {\r\n                        new_node = FS.lookupNode(new_dir, new_name)\r\n                    } catch (e) {\r\n                    }\r\n                    if (new_node) {\r\n                        for (var i in new_node.contents) {\r\n                            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)\r\n                        }\r\n                    }\r\n                }\r\n                delete old_node.parent.contents[old_node.name];\r\n                old_node.name = new_name;\r\n                new_dir.contents[new_name] = old_node;\r\n                old_node.parent = new_dir\r\n            }), unlink: (function (parent, name) {\r\n                delete parent.contents[name]\r\n            }), rmdir: (function (parent, name) {\r\n                var node = FS.lookupNode(parent, name);\r\n                for (var i in node.contents) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)\r\n                }\r\n                delete parent.contents[name]\r\n            }), readdir: (function (node) {\r\n                var entries = [\".\", \"..\"];\r\n                for (var key in node.contents) {\r\n                    if (!node.contents.hasOwnProperty(key)) {\r\n                        continue\r\n                    }\r\n                    entries.push(key)\r\n                }\r\n                return entries\r\n            }), symlink: (function (parent, newname, oldpath) {\r\n                var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\r\n                node.link = oldpath;\r\n                return node\r\n            }), readlink: (function (node) {\r\n                if (!FS.isLink(node.mode)) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n                }\r\n                return node.link\r\n            })\r\n        }, stream_ops: {\r\n            read: (function (stream, buffer, offset, length, position) {\r\n                var contents = stream.node.contents;\r\n                if (position >= stream.node.usedBytes) return 0;\r\n                var size = Math.min(stream.node.usedBytes - position, length);\r\n                assert(size >= 0);\r\n                if (size > 8 && contents.subarray) {\r\n                    buffer.set(contents.subarray(position, position + size), offset)\r\n                } else {\r\n                    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i]\r\n                }\r\n                return size\r\n            }), write: (function (stream, buffer, offset, length, position, canOwn) {\r\n                if (!length) return 0;\r\n                var node = stream.node;\r\n                node.timestamp = Date.now();\r\n                if (buffer.subarray && (!node.contents || node.contents.subarray)) {\r\n                    if (canOwn) {\r\n                        node.contents = buffer.subarray(offset, offset + length);\r\n                        node.usedBytes = length;\r\n                        return length\r\n                    } else if (node.usedBytes === 0 && position === 0) {\r\n                        node.contents = new Uint8Array(buffer.subarray(offset, offset + length));\r\n                        node.usedBytes = length;\r\n                        return length\r\n                    } else if (position + length <= node.usedBytes) {\r\n                        node.contents.set(buffer.subarray(offset, offset + length), position);\r\n                        return length\r\n                    }\r\n                }\r\n                MEMFS.expandFileStorage(node, position + length);\r\n                if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); else {\r\n                    for (var i = 0; i < length; i++) {\r\n                        node.contents[position + i] = buffer[offset + i]\r\n                    }\r\n                }\r\n                node.usedBytes = Math.max(node.usedBytes, position + length);\r\n                return length\r\n            }), llseek: (function (stream, offset, whence) {\r\n                var position = offset;\r\n                if (whence === 1) {\r\n                    position += stream.position\r\n                } else if (whence === 2) {\r\n                    if (FS.isFile(stream.node.mode)) {\r\n                        position += stream.node.usedBytes\r\n                    }\r\n                }\r\n                if (position < 0) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n                }\r\n                return position\r\n            }), allocate: (function (stream, offset, length) {\r\n                MEMFS.expandFileStorage(stream.node, offset + length);\r\n                stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length)\r\n            }), mmap: (function (stream, buffer, offset, length, position, prot, flags) {\r\n                if (!FS.isFile(stream.node.mode)) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.ENODEV)\r\n                }\r\n                var ptr;\r\n                var allocated;\r\n                var contents = stream.node.contents;\r\n                if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {\r\n                    allocated = false;\r\n                    ptr = contents.byteOffset\r\n                } else {\r\n                    if (position > 0 || position + length < stream.node.usedBytes) {\r\n                        if (contents.subarray) {\r\n                            contents = contents.subarray(position, position + length)\r\n                        } else {\r\n                            contents = Array.prototype.slice.call(contents, position, position + length)\r\n                        }\r\n                    }\r\n                    allocated = true;\r\n                    ptr = _malloc(length);\r\n                    if (!ptr) {\r\n                        throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)\r\n                    }\r\n                    buffer.set(contents, ptr)\r\n                }\r\n                return {ptr: ptr, allocated: allocated}\r\n            }), msync: (function (stream, buffer, offset, length, mmapFlags) {\r\n                if (!FS.isFile(stream.node.mode)) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.ENODEV)\r\n                }\r\n                if (mmapFlags & 2) {\r\n                    return 0\r\n                }\r\n                var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n                return 0\r\n            })\r\n        }\r\n    };\r\n    var IDBFS = {\r\n        dbs: {}, indexedDB: (function () {\r\n            if (typeof indexedDB !== \"undefined\") return indexedDB;\r\n            var ret = null;\r\n            if (typeof window === \"object\") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n            assert(ret, \"IDBFS used, but indexedDB not supported\");\r\n            return ret\r\n        }), DB_VERSION: 21, DB_STORE_NAME: \"FILE_DATA\", mount: (function (mount) {\r\n            return MEMFS.mount.apply(null, arguments)\r\n        }), syncfs: (function (mount, populate, callback) {\r\n            IDBFS.getLocalSet(mount, (function (err, local) {\r\n                if (err) return callback(err);\r\n                IDBFS.getRemoteSet(mount, (function (err, remote) {\r\n                    if (err) return callback(err);\r\n                    var src = populate ? remote : local;\r\n                    var dst = populate ? local : remote;\r\n                    IDBFS.reconcile(src, dst, callback)\r\n                }))\r\n            }))\r\n        }), getDB: (function (name, callback) {\r\n            var db = IDBFS.dbs[name];\r\n            if (db) {\r\n                return callback(null, db)\r\n            }\r\n            var req;\r\n            try {\r\n                req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION)\r\n            } catch (e) {\r\n                return callback(e)\r\n            }\r\n            req.onupgradeneeded = (function (e) {\r\n                var db = e.target.result;\r\n                var transaction = e.target.transaction;\r\n                var fileStore;\r\n                if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\r\n                    fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME)\r\n                } else {\r\n                    fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME)\r\n                }\r\n                if (!fileStore.indexNames.contains(\"timestamp\")) {\r\n                    fileStore.createIndex(\"timestamp\", \"timestamp\", {unique: false})\r\n                }\r\n            });\r\n            req.onsuccess = (function () {\r\n                db = req.result;\r\n                IDBFS.dbs[name] = db;\r\n                callback(null, db)\r\n            });\r\n            req.onerror = (function (e) {\r\n                callback(this.error);\r\n                e.preventDefault()\r\n            })\r\n        }), getLocalSet: (function (mount, callback) {\r\n            var entries = {};\r\n\r\n            function isRealDir(p) {\r\n                return p !== \".\" && p !== \"..\"\r\n            }\r\n\r\n            function toAbsolute(root) {\r\n                return (function (p) {\r\n                    return PATH.join2(root, p)\r\n                })\r\n            }\r\n\r\n            var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\r\n            while (check.length) {\r\n                var path = check.pop();\r\n                var stat;\r\n                try {\r\n                    stat = FS.stat(path)\r\n                } catch (e) {\r\n                    return callback(e)\r\n                }\r\n                if (FS.isDir(stat.mode)) {\r\n                    check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))\r\n                }\r\n                entries[path] = {timestamp: stat.mtime}\r\n            }\r\n            return callback(null, {type: \"local\", entries: entries})\r\n        }), getRemoteSet: (function (mount, callback) {\r\n            var entries = {};\r\n            IDBFS.getDB(mount.mountpoint, (function (err, db) {\r\n                if (err) return callback(err);\r\n                var transaction = db.transaction([IDBFS.DB_STORE_NAME], \"readonly\");\r\n                transaction.onerror = (function (e) {\r\n                    callback(this.error);\r\n                    e.preventDefault()\r\n                });\r\n                var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n                var index = store.index(\"timestamp\");\r\n                index.openKeyCursor().onsuccess = (function (event) {\r\n                    var cursor = event.target.result;\r\n                    if (!cursor) {\r\n                        return callback(null, {type: \"remote\", db: db, entries: entries})\r\n                    }\r\n                    entries[cursor.primaryKey] = {timestamp: cursor.key};\r\n                    cursor.continue()\r\n                })\r\n            }))\r\n        }), loadLocalEntry: (function (path, callback) {\r\n            var stat, node;\r\n            try {\r\n                var lookup = FS.lookupPath(path);\r\n                node = lookup.node;\r\n                stat = FS.stat(path)\r\n            } catch (e) {\r\n                return callback(e)\r\n            }\r\n            if (FS.isDir(stat.mode)) {\r\n                return callback(null, {timestamp: stat.mtime, mode: stat.mode})\r\n            } else if (FS.isFile(stat.mode)) {\r\n                node.contents = MEMFS.getFileDataAsTypedArray(node);\r\n                return callback(null, {timestamp: stat.mtime, mode: stat.mode, contents: node.contents})\r\n            } else {\r\n                return callback(new Error(\"node type not supported\"))\r\n            }\r\n        }), storeLocalEntry: (function (path, entry, callback) {\r\n            try {\r\n                if (FS.isDir(entry.mode)) {\r\n                    FS.mkdir(path, entry.mode)\r\n                } else if (FS.isFile(entry.mode)) {\r\n                    FS.writeFile(path, entry.contents, {encoding: \"binary\", canOwn: true})\r\n                } else {\r\n                    return callback(new Error(\"node type not supported\"))\r\n                }\r\n                FS.chmod(path, entry.mode);\r\n                FS.utime(path, entry.timestamp, entry.timestamp)\r\n            } catch (e) {\r\n                return callback(e)\r\n            }\r\n            callback(null)\r\n        }), removeLocalEntry: (function (path, callback) {\r\n            try {\r\n                var lookup = FS.lookupPath(path);\r\n                var stat = FS.stat(path);\r\n                if (FS.isDir(stat.mode)) {\r\n                    FS.rmdir(path)\r\n                } else if (FS.isFile(stat.mode)) {\r\n                    FS.unlink(path)\r\n                }\r\n            } catch (e) {\r\n                return callback(e)\r\n            }\r\n            callback(null)\r\n        }), loadRemoteEntry: (function (store, path, callback) {\r\n            var req = store.get(path);\r\n            req.onsuccess = (function (event) {\r\n                callback(null, event.target.result)\r\n            });\r\n            req.onerror = (function (e) {\r\n                callback(this.error);\r\n                e.preventDefault()\r\n            })\r\n        }), storeRemoteEntry: (function (store, path, entry, callback) {\r\n            var req = store.put(entry, path);\r\n            req.onsuccess = (function () {\r\n                callback(null)\r\n            });\r\n            req.onerror = (function (e) {\r\n                callback(this.error);\r\n                e.preventDefault()\r\n            })\r\n        }), removeRemoteEntry: (function (store, path, callback) {\r\n            var req = store.delete(path);\r\n            req.onsuccess = (function () {\r\n                callback(null)\r\n            });\r\n            req.onerror = (function (e) {\r\n                callback(this.error);\r\n                e.preventDefault()\r\n            })\r\n        }), reconcile: (function (src, dst, callback) {\r\n            var total = 0;\r\n            var create = [];\r\n            Object.keys(src.entries).forEach((function (key) {\r\n                var e = src.entries[key];\r\n                var e2 = dst.entries[key];\r\n                if (!e2 || e.timestamp > e2.timestamp) {\r\n                    create.push(key);\r\n                    total++\r\n                }\r\n            }));\r\n            var remove = [];\r\n            Object.keys(dst.entries).forEach((function (key) {\r\n                var e = dst.entries[key];\r\n                var e2 = src.entries[key];\r\n                if (!e2) {\r\n                    remove.push(key);\r\n                    total++\r\n                }\r\n            }));\r\n            if (!total) {\r\n                return callback(null)\r\n            }\r\n            var errored = false;\r\n            var completed = 0;\r\n            var db = src.type === \"remote\" ? src.db : dst.db;\r\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], \"readwrite\");\r\n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n\r\n            function done(err) {\r\n                if (err) {\r\n                    if (!done.errored) {\r\n                        done.errored = true;\r\n                        return callback(err)\r\n                    }\r\n                    return\r\n                }\r\n                if (++completed >= total) {\r\n                    return callback(null)\r\n                }\r\n            }\r\n\r\n            transaction.onerror = (function (e) {\r\n                done(this.error);\r\n                e.preventDefault()\r\n            });\r\n            create.sort().forEach((function (path) {\r\n                if (dst.type === \"local\") {\r\n                    IDBFS.loadRemoteEntry(store, path, (function (err, entry) {\r\n                        if (err) return done(err);\r\n                        IDBFS.storeLocalEntry(path, entry, done)\r\n                    }))\r\n                } else {\r\n                    IDBFS.loadLocalEntry(path, (function (err, entry) {\r\n                        if (err) return done(err);\r\n                        IDBFS.storeRemoteEntry(store, path, entry, done)\r\n                    }))\r\n                }\r\n            }));\r\n            remove.sort().reverse().forEach((function (path) {\r\n                if (dst.type === \"local\") {\r\n                    IDBFS.removeLocalEntry(path, done)\r\n                } else {\r\n                    IDBFS.removeRemoteEntry(store, path, done)\r\n                }\r\n            }))\r\n        })\r\n    };\r\n    \r\n    var WORKERFS = {\r\n        DIR_MODE: 16895, FILE_MODE: 33279, reader: null, mount: (function (mount) {\r\n            assert(ENVIRONMENT_IS_WORKER);\r\n            if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync;\r\n            var root = WORKERFS.createNode(null, \"/\", WORKERFS.DIR_MODE, 0);\r\n            var createdParents = {};\r\n\r\n            function ensureParent(path) {\r\n                var parts = path.split(\"/\");\r\n                var parent = root;\r\n                for (var i = 0; i < parts.length - 1; i++) {\r\n                    var curr = parts.slice(0, i + 1).join(\"/\");\r\n                    if (!createdParents[curr]) {\r\n                        createdParents[curr] = WORKERFS.createNode(parent, curr, WORKERFS.DIR_MODE, 0)\r\n                    }\r\n                    parent = createdParents[curr]\r\n                }\r\n                return parent\r\n            }\r\n\r\n            function base(path) {\r\n                var parts = path.split(\"/\");\r\n                return parts[parts.length - 1]\r\n            }\r\n\r\n            Array.prototype.forEach.call(mount.opts[\"files\"] || [], (function (file) {\r\n                WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate)\r\n            }));\r\n            (mount.opts[\"blobs\"] || []).forEach((function (obj) {\r\n                WORKERFS.createNode(ensureParent(obj[\"name\"]), base(obj[\"name\"]), WORKERFS.FILE_MODE, 0, obj[\"data\"])\r\n            }));\r\n            (mount.opts[\"packages\"] || []).forEach((function (pack) {\r\n                pack[\"metadata\"].files.forEach((function (file) {\r\n                    var name = file.filename.substr(1);\r\n                    WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack[\"blob\"].slice(file.start, file.end))\r\n                }))\r\n            }));\r\n            return root\r\n        }), createNode: (function (parent, name, mode, dev, contents, mtime) {\r\n            var node = FS.createNode(parent, name, mode);\r\n            node.mode = mode;\r\n            node.node_ops = WORKERFS.node_ops;\r\n            node.stream_ops = WORKERFS.stream_ops;\r\n            node.timestamp = (mtime || new Date).getTime();\r\n            assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);\r\n            if (mode === WORKERFS.FILE_MODE) {\r\n                node.size = contents.size;\r\n                node.contents = contents\r\n            } else {\r\n                node.size = 4096;\r\n                node.contents = {}\r\n            }\r\n            if (parent) {\r\n                parent.contents[name] = node\r\n            }\r\n            return node\r\n        }), node_ops: {\r\n            getattr: (function (node) {\r\n                return {\r\n                    dev: 1,\r\n                    ino: undefined,\r\n                    mode: node.mode,\r\n                    nlink: 1,\r\n                    uid: 0,\r\n                    gid: 0,\r\n                    rdev: undefined,\r\n                    size: node.size,\r\n                    atime: new Date(node.timestamp),\r\n                    mtime: new Date(node.timestamp),\r\n                    ctime: new Date(node.timestamp),\r\n                    blksize: 4096,\r\n                    blocks: Math.ceil(node.size / 4096)\r\n                }\r\n            }), setattr: (function (node, attr) {\r\n                if (attr.mode !== undefined) {\r\n                    node.mode = attr.mode\r\n                }\r\n                if (attr.timestamp !== undefined) {\r\n                    node.timestamp = attr.timestamp\r\n                }\r\n            }), lookup: (function (parent, name) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOENT)\r\n            }), mknod: (function (parent, name, mode, dev) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }), rename: (function (oldNode, newDir, newName) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }), unlink: (function (parent, name) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }), rmdir: (function (parent, name) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }), readdir: (function (node) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }), symlink: (function (parent, newName, oldPath) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }), readlink: (function (node) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            })\r\n        }, stream_ops: {\r\n            read: (function (stream, buffer, offset, length, position) {\r\n                if (position >= stream.node.size) return 0;\r\n                var chunk = stream.node.contents.slice(position, position + length);\r\n                var ab = WORKERFS.reader.readAsArrayBuffer(chunk);\r\n                buffer.set(new Uint8Array(ab), offset);\r\n                return chunk.size\r\n            }), write: (function (stream, buffer, offset, length, position) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EIO)\r\n            }), llseek: (function (stream, offset, whence) {\r\n                var position = offset;\r\n                if (whence === 1) {\r\n                    position += stream.position\r\n                } else if (whence === 2) {\r\n                    if (FS.isFile(stream.node.mode)) {\r\n                        position += stream.node.size\r\n                    }\r\n                }\r\n                if (position < 0) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n                }\r\n                return position\r\n            })\r\n        }\r\n    };\r\n    var _stdin = allocate(1, \"i32*\", ALLOC_STATIC);\r\n    var _stdout = allocate(1, \"i32*\", ALLOC_STATIC);\r\n    var _stderr = allocate(1, \"i32*\", ALLOC_STATIC);\r\n    var FS = {\r\n        root: null,\r\n        mounts: [],\r\n        devices: [null],\r\n        streams: [],\r\n        nextInode: 1,\r\n        nameTable: null,\r\n        currentPath: \"/\",\r\n        initialized: false,\r\n        ignorePermissions: true,\r\n        trackingDelegate: {},\r\n        tracking: {openFlags: {READ: 1, WRITE: 2}},\r\n        ErrnoError: null,\r\n        genericErrors: {},\r\n        filesystems: null,\r\n        handleFSError: (function (e) {\r\n            if (!(e instanceof FS.ErrnoError)) throw e + \" : \" + stackTrace();\r\n            return ___setErrNo(e.errno)\r\n        }),\r\n        lookupPath: (function (path, opts) {\r\n            path = PATH.resolve(FS.cwd(), path);\r\n            opts = opts || {};\r\n            if (!path) return {path: \"\", node: null};\r\n            var defaults = {follow_mount: true, recurse_count: 0};\r\n            for (var key in defaults) {\r\n                if (opts[key] === undefined) {\r\n                    opts[key] = defaults[key]\r\n                }\r\n            }\r\n            if (opts.recurse_count > 8) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ELOOP)\r\n            }\r\n            var parts = PATH.normalizeArray(path.split(\"/\").filter((function (p) {\r\n                return !!p\r\n            })), false);\r\n            var current = FS.root;\r\n            var current_path = \"/\";\r\n            for (var i = 0; i < parts.length; i++) {\r\n                var islast = i === parts.length - 1;\r\n                if (islast && opts.parent) {\r\n                    break\r\n                }\r\n                current = FS.lookupNode(current, parts[i]);\r\n                current_path = PATH.join2(current_path, parts[i]);\r\n                if (FS.isMountpoint(current)) {\r\n                    if (!islast || islast && opts.follow_mount) {\r\n                        current = current.mounted.root\r\n                    }\r\n                }\r\n                if (!islast || opts.follow) {\r\n                    var count = 0;\r\n                    while (FS.isLink(current.mode)) {\r\n                        var link = FS.readlink(current_path);\r\n                        current_path = PATH.resolve(PATH.dirname(current_path), link);\r\n                        var lookup = FS.lookupPath(current_path, {recurse_count: opts.recurse_count});\r\n                        current = lookup.node;\r\n                        if (count++ > 40) {\r\n                            throw new FS.ErrnoError(ERRNO_CODES.ELOOP)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {path: current_path, node: current}\r\n        }),\r\n        getPath: (function (node) {\r\n            var path;\r\n            while (true) {\r\n                if (FS.isRoot(node)) {\r\n                    var mount = node.mount.mountpoint;\r\n                    if (!path) return mount;\r\n                    return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path\r\n                }\r\n                path = path ? node.name + \"/\" + path : node.name;\r\n                node = node.parent\r\n            }\r\n        }),\r\n        hashName: (function (parentid, name) {\r\n            var hash = 0;\r\n            for (var i = 0; i < name.length; i++) {\r\n                hash = (hash << 5) - hash + name.charCodeAt(i) | 0\r\n            }\r\n            return (parentid + hash >>> 0) % FS.nameTable.length\r\n        }),\r\n        hashAddNode: (function (node) {\r\n            var hash = FS.hashName(node.parent.id, node.name);\r\n            node.name_next = FS.nameTable[hash];\r\n            FS.nameTable[hash] = node\r\n        }),\r\n        hashRemoveNode: (function (node) {\r\n            var hash = FS.hashName(node.parent.id, node.name);\r\n            if (FS.nameTable[hash] === node) {\r\n                FS.nameTable[hash] = node.name_next\r\n            } else {\r\n                var current = FS.nameTable[hash];\r\n                while (current) {\r\n                    if (current.name_next === node) {\r\n                        current.name_next = node.name_next;\r\n                        break\r\n                    }\r\n                    current = current.name_next\r\n                }\r\n            }\r\n        }),\r\n        lookupNode: (function (parent, name) {\r\n            var err = FS.mayLookup(parent);\r\n            if (err) {\r\n                throw new FS.ErrnoError(err, parent)\r\n            }\r\n            var hash = FS.hashName(parent.id, name);\r\n            for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n                var nodeName = node.name;\r\n                if (node.parent.id === parent.id && nodeName === name) {\r\n                    return node\r\n                }\r\n            }\r\n            return FS.lookup(parent, name)\r\n        }),\r\n        createNode: (function (parent, name, mode, rdev) {\r\n            if (!FS.FSNode) {\r\n                FS.FSNode = (function (parent, name, mode, rdev) {\r\n                    if (!parent) {\r\n                        parent = this\r\n                    }\r\n                    this.parent = parent;\r\n                    this.mount = parent.mount;\r\n                    this.mounted = null;\r\n                    this.id = FS.nextInode++;\r\n                    this.name = name;\r\n                    this.mode = mode;\r\n                    this.node_ops = {};\r\n                    this.stream_ops = {};\r\n                    this.rdev = rdev\r\n                });\r\n                FS.FSNode.prototype = {};\r\n                var readMode = 292 | 73;\r\n                var writeMode = 146;\r\n                Object.defineProperties(FS.FSNode.prototype, {\r\n                    read: {\r\n                        get: (function () {\r\n                            return (this.mode & readMode) === readMode\r\n                        }), set: (function (val) {\r\n                            val ? this.mode |= readMode : this.mode &= ~readMode\r\n                        })\r\n                    }, write: {\r\n                        get: (function () {\r\n                            return (this.mode & writeMode) === writeMode\r\n                        }), set: (function (val) {\r\n                            val ? this.mode |= writeMode : this.mode &= ~writeMode\r\n                        })\r\n                    }, isFolder: {\r\n                        get: (function () {\r\n                            return FS.isDir(this.mode)\r\n                        })\r\n                    }, isDevice: {\r\n                        get: (function () {\r\n                            return FS.isChrdev(this.mode)\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n            var node = new FS.FSNode(parent, name, mode, rdev);\r\n            FS.hashAddNode(node);\r\n            return node\r\n        }),\r\n        destroyNode: (function (node) {\r\n            FS.hashRemoveNode(node)\r\n        }),\r\n        isRoot: (function (node) {\r\n            return node === node.parent\r\n        }),\r\n        isMountpoint: (function (node) {\r\n            return !!node.mounted\r\n        }),\r\n        isFile: (function (mode) {\r\n            return (mode & 61440) === 32768\r\n        }),\r\n        isDir: (function (mode) {\r\n            return (mode & 61440) === 16384\r\n        }),\r\n        isLink: (function (mode) {\r\n            return (mode & 61440) === 40960\r\n        }),\r\n        isChrdev: (function (mode) {\r\n            return (mode & 61440) === 8192\r\n        }),\r\n        isBlkdev: (function (mode) {\r\n            return (mode & 61440) === 24576\r\n        }),\r\n        isFIFO: (function (mode) {\r\n            return (mode & 61440) === 4096\r\n        }),\r\n        isSocket: (function (mode) {\r\n            return (mode & 49152) === 49152\r\n        }),\r\n        flagModes: {\r\n            \"r\": 0,\r\n            \"rs\": 1052672,\r\n            \"r+\": 2,\r\n            \"w\": 577,\r\n            \"wx\": 705,\r\n            \"xw\": 705,\r\n            \"w+\": 578,\r\n            \"wx+\": 706,\r\n            \"xw+\": 706,\r\n            \"a\": 1089,\r\n            \"ax\": 1217,\r\n            \"xa\": 1217,\r\n            \"a+\": 1090,\r\n            \"ax+\": 1218,\r\n            \"xa+\": 1218\r\n        },\r\n        modeStringToFlags: (function (str) {\r\n            var flags = FS.flagModes[str];\r\n            if (typeof flags === \"undefined\") {\r\n                throw new Error(\"Unknown file open mode: \" + str)\r\n            }\r\n            return flags\r\n        }),\r\n        flagsToPermissionString: (function (flag) {\r\n            var perms = [\"r\", \"w\", \"rw\"][flag & 3];\r\n            if (flag & 512) {\r\n                perms += \"w\"\r\n            }\r\n            return perms\r\n        }),\r\n        nodePermissions: (function (node, perms) {\r\n            if (FS.ignorePermissions) {\r\n                return 0\r\n            }\r\n            if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\r\n                return ERRNO_CODES.EACCES\r\n            } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\r\n                return ERRNO_CODES.EACCES\r\n            } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\r\n                return ERRNO_CODES.EACCES\r\n            }\r\n            return 0\r\n        }),\r\n        mayLookup: (function (dir) {\r\n            var err = FS.nodePermissions(dir, \"x\");\r\n            if (err) return err;\r\n            if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;\r\n            return 0\r\n        }),\r\n        mayCreate: (function (dir, name) {\r\n            try {\r\n                var node = FS.lookupNode(dir, name);\r\n                return ERRNO_CODES.EEXIST\r\n            } catch (e) {\r\n            }\r\n            return FS.nodePermissions(dir, \"wx\")\r\n        }),\r\n        mayDelete: (function (dir, name, isdir) {\r\n            var node;\r\n            try {\r\n                node = FS.lookupNode(dir, name)\r\n            } catch (e) {\r\n                return e.errno\r\n            }\r\n            var err = FS.nodePermissions(dir, \"wx\");\r\n            if (err) {\r\n                return err\r\n            }\r\n            if (isdir) {\r\n                if (!FS.isDir(node.mode)) {\r\n                    return ERRNO_CODES.ENOTDIR\r\n                }\r\n                if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n                    return ERRNO_CODES.EBUSY\r\n                }\r\n            } else {\r\n                if (FS.isDir(node.mode)) {\r\n                    return ERRNO_CODES.EISDIR\r\n                }\r\n            }\r\n            return 0\r\n        }),\r\n        mayOpen: (function (node, flags) {\r\n            if (!node) {\r\n                return ERRNO_CODES.ENOENT\r\n            }\r\n            if (FS.isLink(node.mode)) {\r\n                return ERRNO_CODES.ELOOP\r\n            } else if (FS.isDir(node.mode)) {\r\n                if ((flags & 2097155) !== 0 || flags & 512) {\r\n                    return ERRNO_CODES.EISDIR\r\n                }\r\n            }\r\n            return FS.nodePermissions(node, FS.flagsToPermissionString(flags))\r\n        }),\r\n        MAX_OPEN_FDS: 4096,\r\n        nextfd: (function (fd_start, fd_end) {\r\n            fd_start = fd_start || 0;\r\n            fd_end = fd_end || FS.MAX_OPEN_FDS;\r\n            for (var fd = fd_start; fd <= fd_end; fd++) {\r\n                if (!FS.streams[fd]) {\r\n                    return fd\r\n                }\r\n            }\r\n            throw new FS.ErrnoError(ERRNO_CODES.EMFILE)\r\n        }),\r\n        getStream: (function (fd) {\r\n            return FS.streams[fd]\r\n        }),\r\n        createStream: (function (stream, fd_start, fd_end) {\r\n            if (!FS.FSStream) {\r\n                FS.FSStream = (function () {\r\n                });\r\n                FS.FSStream.prototype = {};\r\n                Object.defineProperties(FS.FSStream.prototype, {\r\n                    object: {\r\n                        get: (function () {\r\n                            return this.node\r\n                        }), set: (function (val) {\r\n                            this.node = val\r\n                        })\r\n                    }, isRead: {\r\n                        get: (function () {\r\n                            return (this.flags & 2097155) !== 1\r\n                        })\r\n                    }, isWrite: {\r\n                        get: (function () {\r\n                            return (this.flags & 2097155) !== 0\r\n                        })\r\n                    }, isAppend: {\r\n                        get: (function () {\r\n                            return this.flags & 1024\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n            var newStream = new FS.FSStream;\r\n            for (var p in stream) {\r\n                newStream[p] = stream[p]\r\n            }\r\n            stream = newStream;\r\n            var fd = FS.nextfd(fd_start, fd_end);\r\n            stream.fd = fd;\r\n            FS.streams[fd] = stream;\r\n            return stream\r\n        }),\r\n        closeStream: (function (fd) {\r\n            FS.streams[fd] = null\r\n        }),\r\n        chrdev_stream_ops: {\r\n            open: (function (stream) {\r\n                var device = FS.getDevice(stream.node.rdev);\r\n                stream.stream_ops = device.stream_ops;\r\n                if (stream.stream_ops.open) {\r\n                    stream.stream_ops.open(stream)\r\n                }\r\n            }), llseek: (function () {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)\r\n            })\r\n        },\r\n        major: (function (dev) {\r\n            return dev >> 8\r\n        }),\r\n        minor: (function (dev) {\r\n            return dev & 255\r\n        }),\r\n        makedev: (function (ma, mi) {\r\n            return ma << 8 | mi\r\n        }),\r\n        registerDevice: (function (dev, ops) {\r\n            FS.devices[dev] = {stream_ops: ops}\r\n        }),\r\n        getDevice: (function (dev) {\r\n            return FS.devices[dev]\r\n        }),\r\n        getMounts: (function (mount) {\r\n            var mounts = [];\r\n            var check = [mount];\r\n            while (check.length) {\r\n                var m = check.pop();\r\n                mounts.push(m);\r\n                check.push.apply(check, m.mounts)\r\n            }\r\n            return mounts\r\n        }),\r\n        syncfs: (function (populate, callback) {\r\n            if (typeof populate === \"function\") {\r\n                callback = populate;\r\n                populate = false\r\n            }\r\n            var mounts = FS.getMounts(FS.root.mount);\r\n            var completed = 0;\r\n\r\n            function done(err) {\r\n                if (err) {\r\n                    if (!done.errored) {\r\n                        done.errored = true;\r\n                        return callback(err)\r\n                    }\r\n                    return\r\n                }\r\n                if (++completed >= mounts.length) {\r\n                    callback(null)\r\n                }\r\n            }\r\n\r\n            mounts.forEach((function (mount) {\r\n                if (!mount.type.syncfs) {\r\n                    return done(null)\r\n                }\r\n                mount.type.syncfs(mount, populate, done)\r\n            }))\r\n        }),\r\n        mount: (function (type, opts, mountpoint) {\r\n            var root = mountpoint === \"/\";\r\n            var pseudo = !mountpoint;\r\n            var node;\r\n            if (root && FS.root) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBUSY)\r\n            } else if (!root && !pseudo) {\r\n                var lookup = FS.lookupPath(mountpoint, {follow_mount: false});\r\n                mountpoint = lookup.path;\r\n                node = lookup.node;\r\n                if (FS.isMountpoint(node)) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.EBUSY)\r\n                }\r\n                if (!FS.isDir(node.mode)) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)\r\n                }\r\n            }\r\n            var mount = {type: type, opts: opts, mountpoint: mountpoint, mounts: []};\r\n            var mountRoot = type.mount(mount);\r\n            mountRoot.mount = mount;\r\n            mount.root = mountRoot;\r\n            if (root) {\r\n                FS.root = mountRoot\r\n            } else if (node) {\r\n                node.mounted = mount;\r\n                if (node.mount) {\r\n                    node.mount.mounts.push(mount)\r\n                }\r\n            }\r\n            return mountRoot\r\n        }),\r\n        unmount: (function (mountpoint) {\r\n            var lookup = FS.lookupPath(mountpoint, {follow_mount: false});\r\n            if (!FS.isMountpoint(lookup.node)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            var node = lookup.node;\r\n            var mount = node.mounted;\r\n            var mounts = FS.getMounts(mount);\r\n            Object.keys(FS.nameTable).forEach((function (hash) {\r\n                var current = FS.nameTable[hash];\r\n                while (current) {\r\n                    var next = current.name_next;\r\n                    if (mounts.indexOf(current.mount) !== -1) {\r\n                        FS.destroyNode(current)\r\n                    }\r\n                    current = next\r\n                }\r\n            }));\r\n            node.mounted = null;\r\n            var idx = node.mount.mounts.indexOf(mount);\r\n            assert(idx !== -1);\r\n            node.mount.mounts.splice(idx, 1)\r\n        }),\r\n        lookup: (function (parent, name) {\r\n            return parent.node_ops.lookup(parent, name)\r\n        }),\r\n        mknod: (function (path, mode, dev) {\r\n            var lookup = FS.lookupPath(path, {parent: true});\r\n            var parent = lookup.node;\r\n            var name = PATH.basename(path);\r\n            if (!name || name === \".\" || name === \"..\") {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            var err = FS.mayCreate(parent, name);\r\n            if (err) {\r\n                throw new FS.ErrnoError(err)\r\n            }\r\n            if (!parent.node_ops.mknod) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }\r\n            return parent.node_ops.mknod(parent, name, mode, dev)\r\n        }),\r\n        create: (function (path, mode) {\r\n            mode = mode !== undefined ? mode : 438;\r\n            mode &= 4095;\r\n            mode |= 32768;\r\n            return FS.mknod(path, mode, 0)\r\n        }),\r\n        mkdir: (function (path, mode) {\r\n            mode = mode !== undefined ? mode : 511;\r\n            mode &= 511 | 512;\r\n            mode |= 16384;\r\n            return FS.mknod(path, mode, 0)\r\n        }),\r\n        mkdev: (function (path, mode, dev) {\r\n            if (typeof dev === \"undefined\") {\r\n                dev = mode;\r\n                mode = 438\r\n            }\r\n            mode |= 8192;\r\n            return FS.mknod(path, mode, dev)\r\n        }),\r\n        symlink: (function (oldpath, newpath) {\r\n            if (!PATH.resolve(oldpath)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOENT)\r\n            }\r\n            var lookup = FS.lookupPath(newpath, {parent: true});\r\n            var parent = lookup.node;\r\n            if (!parent) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOENT)\r\n            }\r\n            var newname = PATH.basename(newpath);\r\n            var err = FS.mayCreate(parent, newname);\r\n            if (err) {\r\n                throw new FS.ErrnoError(err)\r\n            }\r\n            if (!parent.node_ops.symlink) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }\r\n            return parent.node_ops.symlink(parent, newname, oldpath)\r\n        }),\r\n        rename: (function (old_path, new_path) {\r\n            var old_dirname = PATH.dirname(old_path);\r\n            var new_dirname = PATH.dirname(new_path);\r\n            var old_name = PATH.basename(old_path);\r\n            var new_name = PATH.basename(new_path);\r\n            var lookup, old_dir, new_dir;\r\n            try {\r\n                lookup = FS.lookupPath(old_path, {parent: true});\r\n                old_dir = lookup.node;\r\n                lookup = FS.lookupPath(new_path, {parent: true});\r\n                new_dir = lookup.node\r\n            } catch (e) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBUSY)\r\n            }\r\n            if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\r\n            if (old_dir.mount !== new_dir.mount) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EXDEV)\r\n            }\r\n            var old_node = FS.lookupNode(old_dir, old_name);\r\n            var relative = PATH.relative(old_path, new_dirname);\r\n            if (relative.charAt(0) !== \".\") {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            relative = PATH.relative(new_path, old_dirname);\r\n            if (relative.charAt(0) !== \".\") {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)\r\n            }\r\n            var new_node;\r\n            try {\r\n                new_node = FS.lookupNode(new_dir, new_name)\r\n            } catch (e) {\r\n            }\r\n            if (old_node === new_node) {\r\n                return\r\n            }\r\n            var isdir = FS.isDir(old_node.mode);\r\n            var err = FS.mayDelete(old_dir, old_name, isdir);\r\n            if (err) {\r\n                throw new FS.ErrnoError(err)\r\n            }\r\n            err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\r\n            if (err) {\r\n                throw new FS.ErrnoError(err)\r\n            }\r\n            if (!old_dir.node_ops.rename) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }\r\n            if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBUSY)\r\n            }\r\n            if (new_dir !== old_dir) {\r\n                err = FS.nodePermissions(old_dir, \"w\");\r\n                if (err) {\r\n                    throw new FS.ErrnoError(err)\r\n                }\r\n            }\r\n            try {\r\n                if (FS.trackingDelegate[\"willMovePath\"]) {\r\n                    FS.trackingDelegate[\"willMovePath\"](old_path, new_path)\r\n                }\r\n            } catch (e) {\r\n                console.log(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message)\r\n            }\r\n            FS.hashRemoveNode(old_node);\r\n            try {\r\n                old_dir.node_ops.rename(old_node, new_dir, new_name)\r\n            } catch (e) {\r\n                throw e\r\n            } finally {\r\n                FS.hashAddNode(old_node)\r\n            }\r\n            try {\r\n                if (FS.trackingDelegate[\"onMovePath\"]) FS.trackingDelegate[\"onMovePath\"](old_path, new_path)\r\n            } catch (e) {\r\n                console.log(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message)\r\n            }\r\n        }),\r\n        rmdir: (function (path) {\r\n            var lookup = FS.lookupPath(path, {parent: true});\r\n            var parent = lookup.node;\r\n            var name = PATH.basename(path);\r\n            var node = FS.lookupNode(parent, name);\r\n            var err = FS.mayDelete(parent, name, true);\r\n            if (err) {\r\n                throw new FS.ErrnoError(err)\r\n            }\r\n            if (!parent.node_ops.rmdir) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }\r\n            if (FS.isMountpoint(node)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBUSY)\r\n            }\r\n            try {\r\n                if (FS.trackingDelegate[\"willDeletePath\"]) {\r\n                    FS.trackingDelegate[\"willDeletePath\"](path)\r\n                }\r\n            } catch (e) {\r\n                console.log(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message)\r\n            }\r\n            parent.node_ops.rmdir(parent, name);\r\n            FS.destroyNode(node);\r\n            try {\r\n                if (FS.trackingDelegate[\"onDeletePath\"]) FS.trackingDelegate[\"onDeletePath\"](path)\r\n            } catch (e) {\r\n                console.log(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message)\r\n            }\r\n        }),\r\n        readdir: (function (path) {\r\n            var lookup = FS.lookupPath(path, {follow: true});\r\n            var node = lookup.node;\r\n            if (!node.node_ops.readdir) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)\r\n            }\r\n            return node.node_ops.readdir(node)\r\n        }),\r\n        unlink: (function (path) {\r\n            var lookup = FS.lookupPath(path, {parent: true});\r\n            var parent = lookup.node;\r\n            var name = PATH.basename(path);\r\n            var node = FS.lookupNode(parent, name);\r\n            var err = FS.mayDelete(parent, name, false);\r\n            if (err) {\r\n                if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;\r\n                throw new FS.ErrnoError(err)\r\n            }\r\n            if (!parent.node_ops.unlink) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }\r\n            if (FS.isMountpoint(node)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBUSY)\r\n            }\r\n            try {\r\n                if (FS.trackingDelegate[\"willDeletePath\"]) {\r\n                    FS.trackingDelegate[\"willDeletePath\"](path)\r\n                }\r\n            } catch (e) {\r\n                console.log(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message)\r\n            }\r\n            parent.node_ops.unlink(parent, name);\r\n            FS.destroyNode(node);\r\n            try {\r\n                if (FS.trackingDelegate[\"onDeletePath\"]) FS.trackingDelegate[\"onDeletePath\"](path)\r\n            } catch (e) {\r\n                console.log(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message)\r\n            }\r\n        }),\r\n        readlink: (function (path) {\r\n            var lookup = FS.lookupPath(path);\r\n            var link = lookup.node;\r\n            if (!link) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOENT)\r\n            }\r\n            if (!link.node_ops.readlink) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link))\r\n        }),\r\n        stat: (function (path, dontFollow) {\r\n            var lookup = FS.lookupPath(path, {follow: !dontFollow});\r\n            var node = lookup.node;\r\n            if (!node) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOENT)\r\n            }\r\n            if (!node.node_ops.getattr) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }\r\n            return node.node_ops.getattr(node)\r\n        }),\r\n        lstat: (function (path) {\r\n            return FS.stat(path, true)\r\n        }),\r\n        chmod: (function (path, mode, dontFollow) {\r\n            var node;\r\n            if (typeof path === \"string\") {\r\n                var lookup = FS.lookupPath(path, {follow: !dontFollow});\r\n                node = lookup.node\r\n            } else {\r\n                node = path\r\n            }\r\n            if (!node.node_ops.setattr) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }\r\n            node.node_ops.setattr(node, {mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now()})\r\n        }),\r\n        lchmod: (function (path, mode) {\r\n            FS.chmod(path, mode, true)\r\n        }),\r\n        fchmod: (function (fd, mode) {\r\n            var stream = FS.getStream(fd);\r\n            if (!stream) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBADF)\r\n            }\r\n            FS.chmod(stream.node, mode)\r\n        }),\r\n        chown: (function (path, uid, gid, dontFollow) {\r\n            var node;\r\n            if (typeof path === \"string\") {\r\n                var lookup = FS.lookupPath(path, {follow: !dontFollow});\r\n                node = lookup.node\r\n            } else {\r\n                node = path\r\n            }\r\n            if (!node.node_ops.setattr) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }\r\n            node.node_ops.setattr(node, {timestamp: Date.now()})\r\n        }),\r\n        lchown: (function (path, uid, gid) {\r\n            FS.chown(path, uid, gid, true)\r\n        }),\r\n        fchown: (function (fd, uid, gid) {\r\n            var stream = FS.getStream(fd);\r\n            if (!stream) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBADF)\r\n            }\r\n            FS.chown(stream.node, uid, gid)\r\n        }),\r\n        truncate: (function (path, len) {\r\n            if (len < 0) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            var node;\r\n            if (typeof path === \"string\") {\r\n                var lookup = FS.lookupPath(path, {follow: true});\r\n                node = lookup.node\r\n            } else {\r\n                node = path\r\n            }\r\n            if (!node.node_ops.setattr) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EPERM)\r\n            }\r\n            if (FS.isDir(node.mode)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EISDIR)\r\n            }\r\n            if (!FS.isFile(node.mode)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            var err = FS.nodePermissions(node, \"w\");\r\n            if (err) {\r\n                throw new FS.ErrnoError(err)\r\n            }\r\n            node.node_ops.setattr(node, {size: len, timestamp: Date.now()})\r\n        }),\r\n        ftruncate: (function (fd, len) {\r\n            var stream = FS.getStream(fd);\r\n            if (!stream) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBADF)\r\n            }\r\n            if ((stream.flags & 2097155) === 0) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            FS.truncate(stream.node, len)\r\n        }),\r\n        utime: (function (path, atime, mtime) {\r\n            var lookup = FS.lookupPath(path, {follow: true});\r\n            var node = lookup.node;\r\n            node.node_ops.setattr(node, {timestamp: Math.max(atime, mtime)})\r\n        }),\r\n        open: (function (path, flags, mode, fd_start, fd_end) {\r\n            if (path === \"\") {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOENT)\r\n            }\r\n            flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\r\n            mode = typeof mode === \"undefined\" ? 438 : mode;\r\n            if (flags & 64) {\r\n                mode = mode & 4095 | 32768\r\n            } else {\r\n                mode = 0\r\n            }\r\n            var node;\r\n            if (typeof path === \"object\") {\r\n                node = path\r\n            } else {\r\n                path = PATH.normalize(path);\r\n                try {\r\n                    var lookup = FS.lookupPath(path, {follow: !(flags & 131072)});\r\n                    node = lookup.node\r\n                } catch (e) {\r\n                }\r\n            }\r\n            var created = false;\r\n            if (flags & 64) {\r\n                if (node) {\r\n                    if (flags & 128) {\r\n                        throw new FS.ErrnoError(ERRNO_CODES.EEXIST)\r\n                    }\r\n                } else {\r\n                    node = FS.mknod(path, mode, 0);\r\n                    created = true\r\n                }\r\n            }\r\n            if (!node) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOENT)\r\n            }\r\n            if (FS.isChrdev(node.mode)) {\r\n                flags &= ~512\r\n            }\r\n            if (flags & 65536 && !FS.isDir(node.mode)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)\r\n            }\r\n            if (!created) {\r\n                var err = FS.mayOpen(node, flags);\r\n                if (err) {\r\n                    throw new FS.ErrnoError(err)\r\n                }\r\n            }\r\n            if (flags & 512) {\r\n                FS.truncate(node, 0)\r\n            }\r\n            flags &= ~(128 | 512);\r\n            var stream = FS.createStream({\r\n                node: node,\r\n                path: FS.getPath(node),\r\n                flags: flags,\r\n                seekable: true,\r\n                position: 0,\r\n                stream_ops: node.stream_ops,\r\n                ungotten: [],\r\n                error: false\r\n            }, fd_start, fd_end);\r\n            if (stream.stream_ops.open) {\r\n                stream.stream_ops.open(stream)\r\n            }\r\n            if (Module[\"logReadFiles\"] && !(flags & 1)) {\r\n                if (!FS.readFiles) FS.readFiles = {};\r\n                if (!(path in FS.readFiles)) {\r\n                    FS.readFiles[path] = 1;\r\n                    Module[\"printErr\"](\"read file: \" + path)\r\n                }\r\n            }\r\n            try {\r\n                if (FS.trackingDelegate[\"onOpenFile\"]) {\r\n                    var trackingFlags = 0;\r\n                    if ((flags & 2097155) !== 1) {\r\n                        trackingFlags |= FS.tracking.openFlags.READ\r\n                    }\r\n                    if ((flags & 2097155) !== 0) {\r\n                        trackingFlags |= FS.tracking.openFlags.WRITE\r\n                    }\r\n                    FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags)\r\n                }\r\n            } catch (e) {\r\n                console.log(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message)\r\n            }\r\n            return stream\r\n        }),\r\n        close: (function (stream) {\r\n            if (stream.getdents) stream.getdents = null;\r\n            try {\r\n                if (stream.stream_ops.close) {\r\n                    stream.stream_ops.close(stream)\r\n                }\r\n            } catch (e) {\r\n                throw e\r\n            } finally {\r\n                FS.closeStream(stream.fd)\r\n            }\r\n        }),\r\n        llseek: (function (stream, offset, whence) {\r\n            if (!stream.seekable || !stream.stream_ops.llseek) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)\r\n            }\r\n            stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n            stream.ungotten = [];\r\n            return stream.position\r\n        }),\r\n        read: (function (stream, buffer, offset, length, position) {\r\n            if (length < 0 || position < 0) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            if ((stream.flags & 2097155) === 1) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBADF)\r\n            }\r\n            if (FS.isDir(stream.node.mode)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EISDIR)\r\n            }\r\n            if (!stream.stream_ops.read) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            var seeking = true;\r\n            if (typeof position === \"undefined\") {\r\n                position = stream.position;\r\n                seeking = false\r\n            } else if (!stream.seekable) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)\r\n            }\r\n            var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n            if (!seeking) stream.position += bytesRead;\r\n            return bytesRead\r\n        }),\r\n        write: (function (stream, buffer, offset, length, position, canOwn) {\r\n            if (length < 0 || position < 0) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            if ((stream.flags & 2097155) === 0) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBADF)\r\n            }\r\n            if (FS.isDir(stream.node.mode)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EISDIR)\r\n            }\r\n            if (!stream.stream_ops.write) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            if (stream.flags & 1024) {\r\n                FS.llseek(stream, 0, 2)\r\n            }\r\n            var seeking = true;\r\n            if (typeof position === \"undefined\") {\r\n                position = stream.position;\r\n                seeking = false\r\n            } else if (!stream.seekable) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)\r\n            }\r\n            var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n            if (!seeking) stream.position += bytesWritten;\r\n            try {\r\n                if (stream.path && FS.trackingDelegate[\"onWriteToFile\"]) FS.trackingDelegate[\"onWriteToFile\"](stream.path)\r\n            } catch (e) {\r\n                console.log(\"FS.trackingDelegate['onWriteToFile']('\" + path + \"') threw an exception: \" + e.message)\r\n            }\r\n            return bytesWritten\r\n        }),\r\n        allocate: (function (stream, offset, length) {\r\n            if (offset < 0 || length <= 0) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EINVAL)\r\n            }\r\n            if ((stream.flags & 2097155) === 0) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EBADF)\r\n            }\r\n            if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENODEV)\r\n            }\r\n            if (!stream.stream_ops.allocate) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)\r\n            }\r\n            stream.stream_ops.allocate(stream, offset, length)\r\n        }),\r\n        mmap: (function (stream, buffer, offset, length, position, prot, flags) {\r\n            if ((stream.flags & 2097155) === 1) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.EACCES)\r\n            }\r\n            if (!stream.stream_ops.mmap) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENODEV)\r\n            }\r\n            return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags)\r\n        }),\r\n        msync: (function (stream, buffer, offset, length, mmapFlags) {\r\n            if (!stream || !stream.stream_ops.msync) {\r\n                return 0\r\n            }\r\n            return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags)\r\n        }),\r\n        munmap: (function (stream) {\r\n            return 0\r\n        }),\r\n        ioctl: (function (stream, cmd, arg) {\r\n            if (!stream.stream_ops.ioctl) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)\r\n            }\r\n            return stream.stream_ops.ioctl(stream, cmd, arg)\r\n        }),\r\n        readFile: (function (path, opts) {\r\n            opts = opts || {};\r\n            opts.flags = opts.flags || \"r\";\r\n            opts.encoding = opts.encoding || \"binary\";\r\n            if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\r\n                throw new Error('Invalid encoding type \"' + opts.encoding + '\"')\r\n            }\r\n            var ret;\r\n            var stream = FS.open(path, opts.flags);\r\n            var stat = FS.stat(path);\r\n            var length = stat.size;\r\n            var buf = new Uint8Array(length);\r\n            FS.read(stream, buf, 0, length, 0);\r\n            if (opts.encoding === \"utf8\") {\r\n                ret = UTF8ArrayToString(buf, 0)\r\n            } else if (opts.encoding === \"binary\") {\r\n                ret = buf\r\n            }\r\n            FS.close(stream);\r\n            return ret\r\n        }),\r\n        writeFile: (function (path, data, opts) {\r\n            opts = opts || {};\r\n            opts.flags = opts.flags || \"w\";\r\n            opts.encoding = opts.encoding || \"utf8\";\r\n            if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\r\n                throw new Error('Invalid encoding type \"' + opts.encoding + '\"')\r\n            }\r\n            var stream = FS.open(path, opts.flags, opts.mode);\r\n            if (opts.encoding === \"utf8\") {\r\n                var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\r\n                var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n                FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn)\r\n            } else if (opts.encoding === \"binary\") {\r\n                FS.write(stream, data, 0, data.length, 0, opts.canOwn)\r\n            }\r\n            FS.close(stream)\r\n        }),\r\n        cwd: (function () {\r\n            return FS.currentPath\r\n        }),\r\n        chdir: (function (path) {\r\n            var lookup = FS.lookupPath(path, {follow: true});\r\n            if (!FS.isDir(lookup.node.mode)) {\r\n                throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)\r\n            }\r\n            var err = FS.nodePermissions(lookup.node, \"x\");\r\n            if (err) {\r\n                throw new FS.ErrnoError(err)\r\n            }\r\n            FS.currentPath = lookup.path\r\n        }),\r\n        createDefaultDirectories: (function () {\r\n            FS.mkdir(\"/tmp\");\r\n            FS.mkdir(\"/home\");\r\n            FS.mkdir(\"/home/web_user\")\r\n        }),\r\n        createDefaultDevices: (function () {\r\n            FS.mkdir(\"/dev\");\r\n            FS.registerDevice(FS.makedev(1, 3), {\r\n                read: (function () {\r\n                    return 0\r\n                }), write: (function (stream, buffer, offset, length, pos) {\r\n                    return length\r\n                })\r\n            });\r\n            FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\r\n            TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n            TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n            FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\r\n            FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\r\n            var random_device;\r\n            if (typeof crypto !== \"undefined\") {\r\n                var randomBuffer = new Uint8Array(1);\r\n                random_device = (function () {\r\n                    crypto.getRandomValues(randomBuffer);\r\n                    return randomBuffer[0]\r\n                })\r\n            } else {\r\n                random_device = (function () {\r\n                    return Math.random() * 256 | 0\r\n                })\r\n            }\r\n            FS.createDevice(\"/dev\", \"random\", random_device);\r\n            FS.createDevice(\"/dev\", \"urandom\", random_device);\r\n            FS.mkdir(\"/dev/shm\");\r\n            FS.mkdir(\"/dev/shm/tmp\")\r\n        }),\r\n        createSpecialDirectories: (function () {\r\n            FS.mkdir(\"/proc\");\r\n            FS.mkdir(\"/proc/self\");\r\n            FS.mkdir(\"/proc/self/fd\");\r\n            FS.mount({\r\n                mount: (function () {\r\n                    var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\r\n                    node.node_ops = {\r\n                        lookup: (function (parent, name) {\r\n                            var fd = +name;\r\n                            var stream = FS.getStream(fd);\r\n                            if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);\r\n                            var ret = {\r\n                                parent: null, mount: {mountpoint: \"fake\"}, node_ops: {\r\n                                    readlink: (function () {\r\n                                        return stream.path\r\n                                    })\r\n                                }\r\n                            };\r\n                            ret.parent = ret;\r\n                            return ret\r\n                        })\r\n                    };\r\n                    return node\r\n                })\r\n            }, {}, \"/proc/self/fd\")\r\n        }),\r\n        createStandardStreams: (function () {\r\n            if (Module[\"stdin\"]) {\r\n                FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"])\r\n            } else {\r\n                FS.symlink(\"/dev/tty\", \"/dev/stdin\")\r\n            }\r\n            if (Module[\"stdout\"]) {\r\n                FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"])\r\n            } else {\r\n                FS.symlink(\"/dev/tty\", \"/dev/stdout\")\r\n            }\r\n            if (Module[\"stderr\"]) {\r\n                FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"])\r\n            } else {\r\n                FS.symlink(\"/dev/tty1\", \"/dev/stderr\")\r\n            }\r\n            var stdin = FS.open(\"/dev/stdin\", \"r\");\r\n            assert(stdin.fd === 0, \"invalid handle for stdin (\" + stdin.fd + \")\");\r\n            var stdout = FS.open(\"/dev/stdout\", \"w\");\r\n            assert(stdout.fd === 1, \"invalid handle for stdout (\" + stdout.fd + \")\");\r\n            var stderr = FS.open(\"/dev/stderr\", \"w\");\r\n            assert(stderr.fd === 2, \"invalid handle for stderr (\" + stderr.fd + \")\")\r\n        }),\r\n        ensureErrnoError: (function () {\r\n            if (FS.ErrnoError) return;\r\n            FS.ErrnoError = function ErrnoError(errno, node) {\r\n                this.node = node;\r\n                this.setErrno = (function (errno) {\r\n                    this.errno = errno;\r\n                    for (var key in ERRNO_CODES) {\r\n                        if (ERRNO_CODES[key] === errno) {\r\n                            this.code = key;\r\n                            break\r\n                        }\r\n                    }\r\n                });\r\n                this.setErrno(errno);\r\n                this.message = ERRNO_MESSAGES[errno]\r\n            };\r\n            FS.ErrnoError.prototype = new Error;\r\n            FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n            [ERRNO_CODES.ENOENT].forEach((function (code) {\r\n                FS.genericErrors[code] = new FS.ErrnoError(code);\r\n                FS.genericErrors[code].stack = \"<generic error, no stack>\"\r\n            }))\r\n        }),\r\n        staticInit: (function () {\r\n            FS.ensureErrnoError();\r\n            FS.nameTable = new Array(4096);\r\n            FS.mount(MEMFS, {}, \"/\");\r\n            FS.createDefaultDirectories();\r\n            FS.createDefaultDevices();\r\n            FS.createSpecialDirectories();\r\n            FS.filesystems = {\"MEMFS\": MEMFS, \"IDBFS\": IDBFS, \"NODEFS\": {}, \"WORKERFS\": WORKERFS}\r\n        }),\r\n        init: (function (input, output, error) {\r\n            assert(!FS.init.initialized, \"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");\r\n            FS.init.initialized = true;\r\n            FS.ensureErrnoError();\r\n            Module[\"stdin\"] = input || Module[\"stdin\"];\r\n            Module[\"stdout\"] = output || Module[\"stdout\"];\r\n            Module[\"stderr\"] = error || Module[\"stderr\"];\r\n            FS.createStandardStreams()\r\n        }),\r\n        quit: (function () {\r\n            FS.init.initialized = false;\r\n            var fflush = Module[\"_fflush\"];\r\n            if (fflush) fflush(0);\r\n            for (var i = 0; i < FS.streams.length; i++) {\r\n                var stream = FS.streams[i];\r\n                if (!stream) {\r\n                    continue\r\n                }\r\n                FS.close(stream)\r\n            }\r\n        }),\r\n        getMode: (function (canRead, canWrite) {\r\n            var mode = 0;\r\n            if (canRead) mode |= 292 | 73;\r\n            if (canWrite) mode |= 146;\r\n            return mode\r\n        }),\r\n        joinPath: (function (parts, forceRelative) {\r\n            var path = PATH.join.apply(null, parts);\r\n            if (forceRelative && path[0] == \"/\") path = path.substr(1);\r\n            return path\r\n        }),\r\n        absolutePath: (function (relative, base) {\r\n            return PATH.resolve(base, relative)\r\n        }),\r\n        standardizePath: (function (path) {\r\n            return PATH.normalize(path)\r\n        }),\r\n        findObject: (function (path, dontResolveLastLink) {\r\n            var ret = FS.analyzePath(path, dontResolveLastLink);\r\n            if (ret.exists) {\r\n                return ret.object\r\n            } else {\r\n                ___setErrNo(ret.error);\r\n                return null\r\n            }\r\n        }),\r\n        analyzePath: (function (path, dontResolveLastLink) {\r\n            try {\r\n                var lookup = FS.lookupPath(path, {follow: !dontResolveLastLink});\r\n                path = lookup.path\r\n            } catch (e) {\r\n            }\r\n            var ret = {\r\n                isRoot: false,\r\n                exists: false,\r\n                error: 0,\r\n                name: null,\r\n                path: null,\r\n                object: null,\r\n                parentExists: false,\r\n                parentPath: null,\r\n                parentObject: null\r\n            };\r\n            try {\r\n                var lookup = FS.lookupPath(path, {parent: true});\r\n                ret.parentExists = true;\r\n                ret.parentPath = lookup.path;\r\n                ret.parentObject = lookup.node;\r\n                ret.name = PATH.basename(path);\r\n                lookup = FS.lookupPath(path, {follow: !dontResolveLastLink});\r\n                ret.exists = true;\r\n                ret.path = lookup.path;\r\n                ret.object = lookup.node;\r\n                ret.name = lookup.node.name;\r\n                ret.isRoot = lookup.path === \"/\"\r\n            } catch (e) {\r\n                ret.error = e.errno\r\n            }\r\n            return ret\r\n        }),\r\n        createFolder: (function (parent, name, canRead, canWrite) {\r\n            var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\r\n            var mode = FS.getMode(canRead, canWrite);\r\n            return FS.mkdir(path, mode)\r\n        }),\r\n        createPath: (function (parent, path, canRead, canWrite) {\r\n            parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\r\n            var parts = path.split(\"/\").reverse();\r\n            while (parts.length) {\r\n                var part = parts.pop();\r\n                if (!part) continue;\r\n                var current = PATH.join2(parent, part);\r\n                try {\r\n                    FS.mkdir(current)\r\n                } catch (e) {\r\n                }\r\n                parent = current\r\n            }\r\n            return current\r\n        }),\r\n        createFile: (function (parent, name, properties, canRead, canWrite) {\r\n            var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\r\n            var mode = FS.getMode(canRead, canWrite);\r\n            return FS.create(path, mode)\r\n        }),\r\n        createDataFile: (function (parent, name, data, canRead, canWrite, canOwn) {\r\n            var path = name ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name) : parent;\r\n            var mode = FS.getMode(canRead, canWrite);\r\n            var node = FS.create(path, mode);\r\n            if (data) {\r\n                if (typeof data === \"string\") {\r\n                    var arr = new Array(data.length);\r\n                    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n                    data = arr\r\n                }\r\n                FS.chmod(node, mode | 146);\r\n                var stream = FS.open(node, \"w\");\r\n                FS.write(stream, data, 0, data.length, 0, canOwn);\r\n                FS.close(stream);\r\n                FS.chmod(node, mode)\r\n            }\r\n            return node\r\n        }),\r\n        createDevice: (function (parent, name, input, output) {\r\n            var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\r\n            var mode = FS.getMode(!!input, !!output);\r\n            if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n            var dev = FS.makedev(FS.createDevice.major++, 0);\r\n            FS.registerDevice(dev, {\r\n                open: (function (stream) {\r\n                    stream.seekable = false\r\n                }), close: (function (stream) {\r\n                    if (output && output.buffer && output.buffer.length) {\r\n                        output(10)\r\n                    }\r\n                }), read: (function (stream, buffer, offset, length, pos) {\r\n                    var bytesRead = 0;\r\n                    for (var i = 0; i < length; i++) {\r\n                        var result;\r\n                        try {\r\n                            result = input()\r\n                        } catch (e) {\r\n                            throw new FS.ErrnoError(ERRNO_CODES.EIO)\r\n                        }\r\n                        if (result === undefined && bytesRead === 0) {\r\n                            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)\r\n                        }\r\n                        if (result === null || result === undefined) break;\r\n                        bytesRead++;\r\n                        buffer[offset + i] = result\r\n                    }\r\n                    if (bytesRead) {\r\n                        stream.node.timestamp = Date.now()\r\n                    }\r\n                    return bytesRead\r\n                }), write: (function (stream, buffer, offset, length, pos) {\r\n                    for (var i = 0; i < length; i++) {\r\n                        try {\r\n                            output(buffer[offset + i])\r\n                        } catch (e) {\r\n                            throw new FS.ErrnoError(ERRNO_CODES.EIO)\r\n                        }\r\n                    }\r\n                    if (length) {\r\n                        stream.node.timestamp = Date.now()\r\n                    }\r\n                    return i\r\n                })\r\n            });\r\n            return FS.mkdev(path, mode, dev)\r\n        }),\r\n        createLink: (function (parent, name, target, canRead, canWrite) {\r\n            var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\r\n            return FS.symlink(target, path)\r\n        }),\r\n\r\n        forceLoadFile: (function (obj) {\r\n            if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n            var success = true;\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")\r\n            } else if (Module[\"read\"]) {\r\n                try {\r\n                    obj.contents = intArrayFromString(Module[\"read\"](obj.url), true);\r\n                    obj.usedBytes = obj.contents.length\r\n                } catch (e) {\r\n                    success = false\r\n                }\r\n            } else {\r\n                throw new Error(\"Cannot load without read() or XMLHttpRequest.\")\r\n            }\r\n            if (!success) ___setErrNo(ERRNO_CODES.EIO);\r\n            return success\r\n        }),\r\n        createLazyFile: (function (parent, name, url, canRead, canWrite) {\r\n            function LazyUint8Array() {\r\n                this.lengthKnown = false;\r\n                this.chunks = []\r\n            }\r\n\r\n            LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\r\n                if (idx > this.length - 1 || idx < 0) {\r\n                    return undefined\r\n                }\r\n                var chunkOffset = idx % this.chunkSize;\r\n                var chunkNum = idx / this.chunkSize | 0;\r\n                return this.getter(chunkNum)[chunkOffset]\r\n            };\r\n            LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n                this.getter = getter\r\n            };\r\n            LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n                var xhr = new XMLHttpRequest;\r\n                xhr.open(\"HEAD\", url, false);\r\n                xhr.send(null);\r\n                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n                var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n                var header;\r\n                var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n                var chunkSize = 1024 * 1024;\r\n                if (!hasByteServing) chunkSize = datalength;\r\n                var doXHR = (function (from, to) {\r\n                    if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n                    if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n                    var xhr = new XMLHttpRequest;\r\n                    xhr.open(\"GET\", url, false);\r\n                    if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n                    if (typeof Uint8Array != \"undefined\") xhr.responseType = \"arraybuffer\";\r\n                    if (xhr.overrideMimeType) {\r\n                        xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")\r\n                    }\r\n                    xhr.send(null);\r\n                    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n                    if (xhr.response !== undefined) {\r\n                        return new Uint8Array(xhr.response || [])\r\n                    } else {\r\n                        return intArrayFromString(xhr.responseText || \"\", true)\r\n                    }\r\n                });\r\n                var lazyArray = this;\r\n                lazyArray.setDataGetter((function (chunkNum) {\r\n                    var start = chunkNum * chunkSize;\r\n                    var end = (chunkNum + 1) * chunkSize - 1;\r\n                    end = Math.min(end, datalength - 1);\r\n                    if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\r\n                        lazyArray.chunks[chunkNum] = doXHR(start, end)\r\n                    }\r\n                    if (typeof lazyArray.chunks[chunkNum] === \"undefined\") throw new Error(\"doXHR failed!\");\r\n                    return lazyArray.chunks[chunkNum]\r\n                }));\r\n                this._length = datalength;\r\n                this._chunkSize = chunkSize;\r\n                this.lengthKnown = true\r\n            };\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                if (!ENVIRONMENT_IS_WORKER) throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\r\n                var lazyArray = new LazyUint8Array;\r\n                Object.defineProperty(lazyArray, \"length\", {\r\n                    get: (function () {\r\n                        if (!this.lengthKnown) {\r\n                            this.cacheLength()\r\n                        }\r\n                        return this._length\r\n                    })\r\n                });\r\n                Object.defineProperty(lazyArray, \"chunkSize\", {\r\n                    get: (function () {\r\n                        if (!this.lengthKnown) {\r\n                            this.cacheLength()\r\n                        }\r\n                        return this._chunkSize\r\n                    })\r\n                });\r\n                var properties = {isDevice: false, contents: lazyArray}\r\n            } else {\r\n                var properties = {isDevice: false, url: url}\r\n            }\r\n            var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n            if (properties.contents) {\r\n                node.contents = properties.contents\r\n            } else if (properties.url) {\r\n                node.contents = null;\r\n                node.url = properties.url\r\n            }\r\n            Object.defineProperty(node, \"usedBytes\", {\r\n                get: (function () {\r\n                    return this.contents.length\r\n                })\r\n            });\r\n            var stream_ops = {};\r\n            var keys = Object.keys(node.stream_ops);\r\n            keys.forEach((function (key) {\r\n                var fn = node.stream_ops[key];\r\n                stream_ops[key] = function forceLoadLazyFile() {\r\n                    if (!FS.forceLoadFile(node)) {\r\n                        throw new FS.ErrnoError(ERRNO_CODES.EIO)\r\n                    }\r\n                    return fn.apply(null, arguments)\r\n                }\r\n            }));\r\n            stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\r\n                if (!FS.forceLoadFile(node)) {\r\n                    throw new FS.ErrnoError(ERRNO_CODES.EIO)\r\n                }\r\n                var contents = stream.node.contents;\r\n                if (position >= contents.length) return 0;\r\n                var size = Math.min(contents.length - position, length);\r\n                assert(size >= 0);\r\n                if (contents.slice) {\r\n                    for (var i = 0; i < size; i++) {\r\n                        buffer[offset + i] = contents[position + i]\r\n                    }\r\n                } else {\r\n                    for (var i = 0; i < size; i++) {\r\n                        buffer[offset + i] = contents.get(position + i)\r\n                    }\r\n                }\r\n                return size\r\n            };\r\n            node.stream_ops = stream_ops;\r\n            return node\r\n        }),\r\n        createPreloadedFile: (function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\r\n            Browser.init();\r\n            var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;\r\n            var dep = getUniqueRunDependency(\"cp \" + fullname);\r\n\r\n            function processData(byteArray) {\r\n                function finish(byteArray) {\r\n                    if (preFinish) preFinish();\r\n                    if (!dontCreateFile) {\r\n                        FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn)\r\n                    }\r\n                    if (onload) onload();\r\n                    removeRunDependency(dep)\r\n                }\r\n\r\n                var handled = false;\r\n                Module[\"preloadPlugins\"].forEach((function (plugin) {\r\n                    if (handled) return;\r\n                    if (plugin[\"canHandle\"](fullname)) {\r\n                        plugin[\"handle\"](byteArray, fullname, finish, (function () {\r\n                            if (onerror) onerror();\r\n                            removeRunDependency(dep)\r\n                        }));\r\n                        handled = true\r\n                    }\r\n                }));\r\n                if (!handled) finish(byteArray)\r\n            }\r\n\r\n            addRunDependency(dep);\r\n            if (typeof url == \"string\") {\r\n                Browser.asyncLoad(url, (function (byteArray) {\r\n                    processData(byteArray)\r\n                }), onerror)\r\n            } else {\r\n                processData(url)\r\n            }\r\n        }),\r\n        indexedDB: (function () {\r\n            return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB\r\n        }),\r\n        DB_NAME: (function () {\r\n            return \"EM_FS_\" + window.location.pathname\r\n        }),\r\n        DB_VERSION: 20,\r\n        DB_STORE_NAME: \"FILE_DATA\",\r\n        saveFilesToDB: (function (paths, onload, onerror) {\r\n            onload = onload || (function () {\r\n            });\r\n            onerror = onerror || (function () {\r\n            });\r\n            var indexedDB = FS.indexedDB();\r\n            try {\r\n                var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION)\r\n            } catch (e) {\r\n                return onerror(e)\r\n            }\r\n            openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\r\n                console.log(\"creating db\");\r\n                var db = openRequest.result;\r\n                db.createObjectStore(FS.DB_STORE_NAME)\r\n            };\r\n            openRequest.onsuccess = function openRequest_onsuccess() {\r\n                var db = openRequest.result;\r\n                var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\r\n                var files = transaction.objectStore(FS.DB_STORE_NAME);\r\n                var ok = 0, fail = 0, total = paths.length;\r\n\r\n                function finish() {\r\n                    if (fail == 0) onload(); else onerror()\r\n                }\r\n\r\n                paths.forEach((function (path) {\r\n                    var putRequest = files.put(FS.analyzePath(path).object.contents, path);\r\n                    putRequest.onsuccess = function putRequest_onsuccess() {\r\n                        ok++;\r\n                        if (ok + fail == total) finish()\r\n                    };\r\n                    putRequest.onerror = function putRequest_onerror() {\r\n                        fail++;\r\n                        if (ok + fail == total) finish()\r\n                    }\r\n                }));\r\n                transaction.onerror = onerror\r\n            };\r\n            openRequest.onerror = onerror\r\n        }),\r\n        loadFilesFromDB: (function (paths, onload, onerror) {\r\n            onload = onload || (function () {\r\n            });\r\n            onerror = onerror || (function () {\r\n            });\r\n            var indexedDB = FS.indexedDB();\r\n            try {\r\n                var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION)\r\n            } catch (e) {\r\n                return onerror(e)\r\n            }\r\n            openRequest.onupgradeneeded = onerror;\r\n            openRequest.onsuccess = function openRequest_onsuccess() {\r\n                var db = openRequest.result;\r\n                try {\r\n                    var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\")\r\n                } catch (e) {\r\n                    onerror(e);\r\n                    return\r\n                }\r\n                var files = transaction.objectStore(FS.DB_STORE_NAME);\r\n                var ok = 0, fail = 0, total = paths.length;\r\n\r\n                function finish() {\r\n                    if (fail == 0) onload(); else onerror()\r\n                }\r\n\r\n                paths.forEach((function (path) {\r\n                    var getRequest = files.get(path);\r\n                    getRequest.onsuccess = function getRequest_onsuccess() {\r\n                        if (FS.analyzePath(path).exists) {\r\n                            FS.unlink(path)\r\n                        }\r\n                        FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\r\n                        ok++;\r\n                        if (ok + fail == total) finish()\r\n                    };\r\n                    getRequest.onerror = function getRequest_onerror() {\r\n                        fail++;\r\n                        if (ok + fail == total) finish()\r\n                    }\r\n                }));\r\n                transaction.onerror = onerror\r\n            };\r\n            openRequest.onerror = onerror\r\n        })\r\n    };\r\n    var PATH = {\r\n        splitPath: (function (filename) {\r\n            var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n            return splitPathRe.exec(filename).slice(1)\r\n        }), normalizeArray: (function (parts, allowAboveRoot) {\r\n            var up = 0;\r\n            for (var i = parts.length - 1; i >= 0; i--) {\r\n                var last = parts[i];\r\n                if (last === \".\") {\r\n                    parts.splice(i, 1)\r\n                } else if (last === \"..\") {\r\n                    parts.splice(i, 1);\r\n                    up++\r\n                } else if (up) {\r\n                    parts.splice(i, 1);\r\n                    up--\r\n                }\r\n            }\r\n            if (allowAboveRoot) {\r\n                for (; up--; up) {\r\n                    parts.unshift(\"..\")\r\n                }\r\n            }\r\n            return parts\r\n        }), normalize: (function (path) {\r\n            var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\r\n            path = PATH.normalizeArray(path.split(\"/\").filter((function (p) {\r\n                return !!p\r\n            })), !isAbsolute).join(\"/\");\r\n            if (!path && !isAbsolute) {\r\n                path = \".\"\r\n            }\r\n            if (path && trailingSlash) {\r\n                path += \"/\"\r\n            }\r\n            return (isAbsolute ? \"/\" : \"\") + path\r\n        }), dirname: (function (path) {\r\n            var result = PATH.splitPath(path), root = result[0], dir = result[1];\r\n            if (!root && !dir) {\r\n                return \".\"\r\n            }\r\n            if (dir) {\r\n                dir = dir.substr(0, dir.length - 1)\r\n            }\r\n            return root + dir\r\n        }), basename: (function (path) {\r\n            if (path === \"/\") return \"/\";\r\n            var lastSlash = path.lastIndexOf(\"/\");\r\n            if (lastSlash === -1) return path;\r\n            return path.substr(lastSlash + 1)\r\n        }), extname: (function (path) {\r\n            return PATH.splitPath(path)[3]\r\n        }), join: (function () {\r\n            var paths = Array.prototype.slice.call(arguments, 0);\r\n            return PATH.normalize(paths.join(\"/\"))\r\n        }), join2: (function (l, r) {\r\n            return PATH.normalize(l + \"/\" + r)\r\n        }), resolve: (function () {\r\n            var resolvedPath = \"\", resolvedAbsolute = false;\r\n            for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n                var path = i >= 0 ? arguments[i] : FS.cwd();\r\n                if (typeof path !== \"string\") {\r\n                    throw new TypeError(\"Arguments to path.resolve must be strings\")\r\n                } else if (!path) {\r\n                    return \"\"\r\n                }\r\n                resolvedPath = path + \"/\" + resolvedPath;\r\n                resolvedAbsolute = path.charAt(0) === \"/\"\r\n            }\r\n            resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter((function (p) {\r\n                return !!p\r\n            })), !resolvedAbsolute).join(\"/\");\r\n            return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\"\r\n        }), relative: (function (from, to) {\r\n            from = PATH.resolve(from).substr(1);\r\n            to = PATH.resolve(to).substr(1);\r\n\r\n            function trim(arr) {\r\n                var start = 0;\r\n                for (; start < arr.length; start++) {\r\n                    if (arr[start] !== \"\") break\r\n                }\r\n                var end = arr.length - 1;\r\n                for (; end >= 0; end--) {\r\n                    if (arr[end] !== \"\") break\r\n                }\r\n                if (start > end) return [];\r\n                return arr.slice(start, end - start + 1)\r\n            }\r\n\r\n            var fromParts = trim(from.split(\"/\"));\r\n            var toParts = trim(to.split(\"/\"));\r\n            var length = Math.min(fromParts.length, toParts.length);\r\n            var samePartsLength = length;\r\n            for (var i = 0; i < length; i++) {\r\n                if (fromParts[i] !== toParts[i]) {\r\n                    samePartsLength = i;\r\n                    break\r\n                }\r\n            }\r\n            var outputParts = [];\r\n            for (var i = samePartsLength; i < fromParts.length; i++) {\r\n                outputParts.push(\"..\")\r\n            }\r\n            outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n            return outputParts.join(\"/\")\r\n        })\r\n    };\r\n\r\n    function _emscripten_set_main_loop_timing(mode, value) {\r\n        Browser.mainLoop.timingMode = mode;\r\n        Browser.mainLoop.timingValue = value;\r\n        if (!Browser.mainLoop.func) {\r\n            return 1\r\n        }\r\n        if (mode == 0) {\r\n            Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\r\n                setTimeout(Browser.mainLoop.runner, value)\r\n            };\r\n            Browser.mainLoop.method = \"timeout\"\r\n        } else if (mode == 1) {\r\n            Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\r\n                Browser.requestAnimationFrame(Browser.mainLoop.runner)\r\n            };\r\n            Browser.mainLoop.method = \"rAF\"\r\n        } else if (mode == 2) {\r\n            if (!window[\"setImmediate\"]) {\r\n                var setImmediates = [];\r\n                var emscriptenMainLoopMessageId = \"__emcc\";\r\n\r\n                var Browser_setImmediate_messageHandler=function(event) {\r\n                    if (event.source === window && event.data === emscriptenMainLoopMessageId) {\r\n                        event.stopPropagation();\r\n                        setImmediates.shift()()\r\n                    }\r\n                }\r\n\r\n                window.addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\r\n                window[\"setImmediate\"] = function Browser_emulated_setImmediate(func) {\r\n                    setImmediates.push(func);\r\n                    window.postMessage(emscriptenMainLoopMessageId, \"*\")\r\n                }\r\n            }\r\n            Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\r\n                window[\"setImmediate\"](Browser.mainLoop.runner)\r\n            };\r\n            Browser.mainLoop.method = \"immediate\"\r\n        }\r\n        return 0\r\n    }\r\n\r\n    function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {\r\n        Module[\"noExitRuntime\"] = true;\r\n        assert(!Browser.mainLoop.func, \"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.\");\r\n        Browser.mainLoop.func = func;\r\n        Browser.mainLoop.arg = arg;\r\n        var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;\r\n        Browser.mainLoop.runner = function Browser_mainLoop_runner() {\r\n            if (ABORT) return;\r\n            if (Browser.mainLoop.queue.length > 0) {\r\n                var start = Date.now();\r\n                var blocker = Browser.mainLoop.queue.shift();\r\n                blocker.func(blocker.arg);\r\n                if (Browser.mainLoop.remainingBlockers) {\r\n                    var remaining = Browser.mainLoop.remainingBlockers;\r\n                    var next = remaining % 1 == 0 ? remaining - 1 : Math.floor(remaining);\r\n                    if (blocker.counted) {\r\n                        Browser.mainLoop.remainingBlockers = next\r\n                    } else {\r\n                        next = next + .5;\r\n                        Browser.mainLoop.remainingBlockers = (8 * remaining + next) / 9\r\n                    }\r\n                }\r\n                console.log('main loop blocker \"' + blocker.name + '\" took ' + (Date.now() - start) + \" ms\");\r\n                Browser.mainLoop.updateStatus();\r\n                setTimeout(Browser.mainLoop.runner, 0);\r\n                return\r\n            }\r\n            if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;\r\n            Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\r\n            if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\r\n                Browser.mainLoop.scheduler();\r\n                return\r\n            }\r\n            if (Browser.mainLoop.method === \"timeout\" && Module.ctx) {\r\n                Module.printErr(\"Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!\");\r\n                Browser.mainLoop.method = \"\"\r\n            }\r\n            Browser.mainLoop.runIter((function () {\r\n                if (typeof arg !== \"undefined\") {\r\n                    Runtime.dynCall(\"vi\", func, [arg])\r\n                } else {\r\n                    Runtime.dynCall(\"v\", func)\r\n                }\r\n            }));\r\n            if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;\r\n            if (typeof SDL === \"object\" && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();\r\n            Browser.mainLoop.scheduler()\r\n        };\r\n        if (!noSetTiming) {\r\n            if (fps && fps > 0) _emscripten_set_main_loop_timing(0, 1e3 / fps); else _emscripten_set_main_loop_timing(1, 1);\r\n            Browser.mainLoop.scheduler()\r\n        }\r\n        if (simulateInfiniteLoop) {\r\n            throw\"SimulateInfiniteLoop\"\r\n        }\r\n    }\r\n\r\n    var Browser = {\r\n        mainLoop: {\r\n            scheduler: null,\r\n            method: \"\",\r\n            currentlyRunningMainloop: 0,\r\n            func: null,\r\n            arg: 0,\r\n            timingMode: 0,\r\n            timingValue: 0,\r\n            currentFrameNumber: 0,\r\n            queue: [],\r\n            pause: (function () {\r\n                Browser.mainLoop.scheduler = null;\r\n                Browser.mainLoop.currentlyRunningMainloop++\r\n            }),\r\n            resume: (function () {\r\n                Browser.mainLoop.currentlyRunningMainloop++;\r\n                var timingMode = Browser.mainLoop.timingMode;\r\n                var timingValue = Browser.mainLoop.timingValue;\r\n                var func = Browser.mainLoop.func;\r\n                Browser.mainLoop.func = null;\r\n                _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true);\r\n                _emscripten_set_main_loop_timing(timingMode, timingValue);\r\n                Browser.mainLoop.scheduler()\r\n            }),\r\n            updateStatus: (function () {\r\n                if (Module[\"setStatus\"]) {\r\n                    var message = Module[\"statusMessage\"] || \"Please wait...\";\r\n                    var remaining = Browser.mainLoop.remainingBlockers;\r\n                    var expected = Browser.mainLoop.expectedBlockers;\r\n                    if (remaining) {\r\n                        if (remaining < expected) {\r\n                            Module[\"setStatus\"](message + \" (\" + (expected - remaining) + \"/\" + expected + \")\")\r\n                        } else {\r\n                            Module[\"setStatus\"](message)\r\n                        }\r\n                    } else {\r\n                        Module[\"setStatus\"](\"\")\r\n                    }\r\n                }\r\n            }),\r\n            runIter: (function (func) {\r\n                if (ABORT) return;\r\n                if (Module[\"preMainLoop\"]) {\r\n                    var preRet = Module[\"preMainLoop\"]();\r\n                    if (preRet === false) {\r\n                        return\r\n                    }\r\n                }\r\n                try {\r\n                    func()\r\n                } catch (e) {\r\n                    if (e instanceof ExitStatus) {\r\n                        return\r\n                    } else {\r\n                        if (e && typeof e === \"object\" && e.stack) Module.printErr(\"exception thrown: \" + [e, e.stack]);\r\n                        throw e\r\n                    }\r\n                }\r\n                if (Module[\"postMainLoop\"]) Module[\"postMainLoop\"]()\r\n            })\r\n        },\r\n        isFullScreen: false,\r\n        pointerLock: false,\r\n        moduleContextCreatedCallbacks: [],\r\n        workers: [],\r\n        init: (function () {\r\n            if (!Module[\"preloadPlugins\"]) Module[\"preloadPlugins\"] = [];\r\n            if (Browser.initted) return;\r\n            Browser.initted = true;\r\n            try {\r\n                new Blob;\r\n                Browser.hasBlobConstructor = true\r\n            } catch (e) {\r\n                Browser.hasBlobConstructor = false;\r\n                console.log(\"warning: no blob constructor, cannot create blobs with mimetypes\")\r\n            }\r\n            Browser.BlobBuilder = typeof MozBlobBuilder != \"undefined\" ? MozBlobBuilder : typeof WebKitBlobBuilder != \"undefined\" ? WebKitBlobBuilder : !Browser.hasBlobConstructor ? console.log(\"warning: no BlobBuilder\") : null;\r\n            Browser.URLObject = typeof window != \"undefined\" ? window.URL ? window.URL : window.webkitURL : undefined;\r\n            if (!Module.noImageDecoding && typeof Browser.URLObject === \"undefined\") {\r\n                console.log(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");\r\n                Module.noImageDecoding = true\r\n            }\r\n            var imagePlugin = {};\r\n            imagePlugin[\"canHandle\"] = function imagePlugin_canHandle(name) {\r\n                return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name)\r\n            };\r\n            imagePlugin[\"handle\"] = function imagePlugin_handle(byteArray, name, onload, onerror) {\r\n                var b = null;\r\n                if (Browser.hasBlobConstructor) {\r\n                    try {\r\n                        b = new Blob([byteArray], {type: Browser.getMimetype(name)});\r\n                        if (b.size !== byteArray.length) {\r\n                            b = new Blob([(new Uint8Array(byteArray)).buffer], {type: Browser.getMimetype(name)})\r\n                        }\r\n                    } catch (e) {\r\n                        Runtime.warnOnce(\"Blob constructor present but fails: \" + e + \"; falling back to blob builder\")\r\n                    }\r\n                }\r\n                if (!b) {\r\n                    var bb = new Browser.BlobBuilder;\r\n                    bb.append((new Uint8Array(byteArray)).buffer);\r\n                    b = bb.getBlob()\r\n                }\r\n                var url = Browser.URLObject.createObjectURL(b);\r\n                var img = new Image;\r\n                img.onload = function img_onload() {\r\n                    assert(img.complete, \"Image \" + name + \" could not be decoded\");\r\n                    var canvas = document.createElement(\"canvas\");\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n                    var ctx = canvas.getContext(\"2d\");\r\n                    ctx.drawImage(img, 0, 0);\r\n                    Module[\"preloadedImages\"][name] = canvas;\r\n                    Browser.URLObject.revokeObjectURL(url);\r\n                    if (onload) onload(byteArray)\r\n                };\r\n                img.onerror = function img_onerror(event) {\r\n                    console.log(\"Image \" + url + \" could not be decoded\");\r\n                    if (onerror) onerror()\r\n                };\r\n                img.src = url\r\n            };\r\n            Module[\"preloadPlugins\"].push(imagePlugin);\r\n            var audioPlugin = {};\r\n            audioPlugin[\"canHandle\"] = function audioPlugin_canHandle(name) {\r\n                return !Module.noAudioDecoding && name.substr(-4) in {\".ogg\": 1, \".wav\": 1, \".mp3\": 1}\r\n            };\r\n            audioPlugin[\"handle\"] = function audioPlugin_handle(byteArray, name, onload, onerror) {\r\n                var done = false;\r\n\r\n                function finish(audio) {\r\n                    if (done) return;\r\n                    done = true;\r\n                    Module[\"preloadedAudios\"][name] = audio;\r\n                    if (onload) onload(byteArray)\r\n                }\r\n\r\n                function fail() {\r\n                    if (done) return;\r\n                    done = true;\r\n                    Module[\"preloadedAudios\"][name] = new Audio;\r\n                    if (onerror) onerror()\r\n                }\r\n\r\n                if (Browser.hasBlobConstructor) {\r\n                    try {\r\n                        var b = new Blob([byteArray], {type: Browser.getMimetype(name)})\r\n                    } catch (e) {\r\n                        return fail()\r\n                    }\r\n                    var url = Browser.URLObject.createObjectURL(b);\r\n                    var audio = new Audio;\r\n                    audio.addEventListener(\"canplaythrough\", (function () {\r\n                        finish(audio)\r\n                    }), false);\r\n                    audio.onerror = function audio_onerror(event) {\r\n                        if (done) return;\r\n                        console.log(\"warning: browser could not fully decode audio \" + name + \", trying slower base64 approach\");\r\n\r\n                        function encode64(data) {\r\n                            var BASE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n                            var PAD = \"=\";\r\n                            var ret = \"\";\r\n                            var leftchar = 0;\r\n                            var leftbits = 0;\r\n                            for (var i = 0; i < data.length; i++) {\r\n                                leftchar = leftchar << 8 | data[i];\r\n                                leftbits += 8;\r\n                                while (leftbits >= 6) {\r\n                                    var curr = leftchar >> leftbits - 6 & 63;\r\n                                    leftbits -= 6;\r\n                                    ret += BASE[curr]\r\n                                }\r\n                            }\r\n                            if (leftbits == 2) {\r\n                                ret += BASE[(leftchar & 3) << 4];\r\n                                ret += PAD + PAD\r\n                            } else if (leftbits == 4) {\r\n                                ret += BASE[(leftchar & 15) << 2];\r\n                                ret += PAD\r\n                            }\r\n                            return ret\r\n                        }\r\n\r\n                        audio.src = \"data:audio/x-\" + name.substr(-3) + \";base64,\" + encode64(byteArray);\r\n                        finish(audio)\r\n                    };\r\n                    audio.src = url;\r\n                    Browser.safeSetTimeout((function () {\r\n                        finish(audio)\r\n                    }), 1e4)\r\n                } else {\r\n                    return fail()\r\n                }\r\n            };\r\n            Module[\"preloadPlugins\"].push(audioPlugin);\r\n            var canvas = Module[\"canvas\"];\r\n\r\n            function pointerLockChange() {\r\n                Browser.pointerLock = document[\"pointerLockElement\"] === canvas || document[\"mozPointerLockElement\"] === canvas || document[\"webkitPointerLockElement\"] === canvas || document[\"msPointerLockElement\"] === canvas\r\n            }\r\n\r\n            if (canvas) {\r\n                canvas.requestPointerLock = canvas[\"requestPointerLock\"] || canvas[\"mozRequestPointerLock\"] || canvas[\"webkitRequestPointerLock\"] || canvas[\"msRequestPointerLock\"] || (function () {\r\n                });\r\n                canvas.exitPointerLock = document[\"exitPointerLock\"] || document[\"mozExitPointerLock\"] || document[\"webkitExitPointerLock\"] || document[\"msExitPointerLock\"] || (function () {\r\n                });\r\n                canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\r\n                document.addEventListener(\"pointerlockchange\", pointerLockChange, false);\r\n                document.addEventListener(\"mozpointerlockchange\", pointerLockChange, false);\r\n                document.addEventListener(\"webkitpointerlockchange\", pointerLockChange, false);\r\n                document.addEventListener(\"mspointerlockchange\", pointerLockChange, false);\r\n                if (Module[\"elementPointerLock\"]) {\r\n                    canvas.addEventListener(\"click\", (function (ev) {\r\n                        if (!Browser.pointerLock && canvas.requestPointerLock) {\r\n                            canvas.requestPointerLock();\r\n                            ev.preventDefault()\r\n                        }\r\n                    }), false)\r\n                }\r\n            }\r\n        }),\r\n        createContext: (function (canvas, useWebGL, setInModule, webGLContextAttributes) {\r\n            if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx;\r\n            var ctx;\r\n            var contextHandle;\r\n            if (useWebGL) {\r\n                var contextAttributes = {antialias: false, alpha: false};\r\n                if (webGLContextAttributes) {\r\n                    for (var attribute in webGLContextAttributes) {\r\n                        contextAttributes[attribute] = webGLContextAttributes[attribute]\r\n                    }\r\n                }\r\n                contextHandle = GL.createContext(canvas, contextAttributes);\r\n                if (contextHandle) {\r\n                    ctx = GL.getContext(contextHandle).GLctx\r\n                }\r\n                canvas.style.backgroundColor = \"black\"\r\n            } else {\r\n                ctx = canvas.getContext(\"2d\")\r\n            }\r\n            if (!ctx) return null;\r\n            if (setInModule) {\r\n                if (!useWebGL) assert(typeof GLctx === \"undefined\", \"cannot set in module if GLctx is used, but we are a non-GL context that would replace it\");\r\n                Module.ctx = ctx;\r\n                if (useWebGL) GL.makeContextCurrent(contextHandle);\r\n                Module.useWebGL = useWebGL;\r\n                Browser.moduleContextCreatedCallbacks.forEach((function (callback) {\r\n                    callback()\r\n                }));\r\n                Browser.init()\r\n            }\r\n            return ctx\r\n        }),\r\n        destroyContext: (function (canvas, useWebGL, setInModule) {\r\n        }),\r\n        fullScreenHandlersInstalled: false,\r\n        lockPointer: undefined,\r\n        resizeCanvas: undefined,\r\n        requestFullScreen: (function (lockPointer, resizeCanvas, vrDevice) {\r\n            Browser.lockPointer = lockPointer;\r\n            Browser.resizeCanvas = resizeCanvas;\r\n            Browser.vrDevice = vrDevice;\r\n            if (typeof Browser.lockPointer === \"undefined\") Browser.lockPointer = true;\r\n            if (typeof Browser.resizeCanvas === \"undefined\") Browser.resizeCanvas = false;\r\n            if (typeof Browser.vrDevice === \"undefined\") Browser.vrDevice = null;\r\n            var canvas = Module[\"canvas\"];\r\n\r\n            function fullScreenChange() {\r\n                Browser.isFullScreen = false;\r\n                var canvasContainer = canvas.parentNode;\r\n                if ((document[\"webkitFullScreenElement\"] || document[\"webkitFullscreenElement\"] || document[\"mozFullScreenElement\"] || document[\"mozFullscreenElement\"] || document[\"fullScreenElement\"] || document[\"fullscreenElement\"] || document[\"msFullScreenElement\"] || document[\"msFullscreenElement\"] || document[\"webkitCurrentFullScreenElement\"]) === canvasContainer) {\r\n                    canvas.cancelFullScreen = document[\"cancelFullScreen\"] || document[\"mozCancelFullScreen\"] || document[\"webkitCancelFullScreen\"] || document[\"msExitFullscreen\"] || document[\"exitFullscreen\"] || (function () {\r\n                    });\r\n                    canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);\r\n                    if (Browser.lockPointer) canvas.requestPointerLock();\r\n                    Browser.isFullScreen = true;\r\n                    if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize()\r\n                } else {\r\n                    canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\r\n                    canvasContainer.parentNode.removeChild(canvasContainer);\r\n                    if (Browser.resizeCanvas) Browser.setWindowedCanvasSize()\r\n                }\r\n                if (Module[\"onFullScreen\"]) Module[\"onFullScreen\"](Browser.isFullScreen);\r\n                Browser.updateCanvasDimensions(canvas)\r\n            }\r\n\r\n            if (!Browser.fullScreenHandlersInstalled) {\r\n                Browser.fullScreenHandlersInstalled = true;\r\n                document.addEventListener(\"fullscreenchange\", fullScreenChange, false);\r\n                document.addEventListener(\"mozfullscreenchange\", fullScreenChange, false);\r\n                document.addEventListener(\"webkitfullscreenchange\", fullScreenChange, false);\r\n                document.addEventListener(\"MSFullscreenChange\", fullScreenChange, false)\r\n            }\r\n            var canvasContainer = document.createElement(\"div\");\r\n            canvas.parentNode.insertBefore(canvasContainer, canvas);\r\n            canvasContainer.appendChild(canvas);\r\n            canvasContainer.requestFullScreen = canvasContainer[\"requestFullScreen\"] || canvasContainer[\"mozRequestFullScreen\"] || canvasContainer[\"msRequestFullscreen\"] || (canvasContainer[\"webkitRequestFullScreen\"] ? (function () {\r\n                canvasContainer[\"webkitRequestFullScreen\"](Element[\"ALLOW_KEYBOARD_INPUT\"])\r\n            }) : null);\r\n            if (vrDevice) {\r\n                canvasContainer.requestFullScreen({vrDisplay: vrDevice})\r\n            } else {\r\n                canvasContainer.requestFullScreen()\r\n            }\r\n        }),\r\n        nextRAF: 0,\r\n        fakeRequestAnimationFrame: (function (func) {\r\n            var now = Date.now();\r\n            if (Browser.nextRAF === 0) {\r\n                Browser.nextRAF = now + 1e3 / 60\r\n            } else {\r\n                while (now + 2 >= Browser.nextRAF) {\r\n                    Browser.nextRAF += 1e3 / 60\r\n                }\r\n            }\r\n            var delay = Math.max(Browser.nextRAF - now, 0);\r\n            setTimeout(func, delay)\r\n        }),\r\n        requestAnimationFrame: function requestAnimationFrame(func) {\r\n            if (typeof window === \"undefined\") {\r\n                Browser.fakeRequestAnimationFrame(func)\r\n            } else {\r\n                if (!window.requestAnimationFrame) {\r\n                    window.requestAnimationFrame = window[\"requestAnimationFrame\"] || window[\"mozRequestAnimationFrame\"] || window[\"webkitRequestAnimationFrame\"] || window[\"msRequestAnimationFrame\"] || window[\"oRequestAnimationFrame\"] || Browser.fakeRequestAnimationFrame\r\n                }\r\n                window.requestAnimationFrame(func)\r\n            }\r\n        },\r\n        safeCallback: (function (func) {\r\n            return (function () {\r\n                if (!ABORT) return func.apply(null, arguments)\r\n            })\r\n        }),\r\n        allowAsyncCallbacks: true,\r\n        queuedAsyncCallbacks: [],\r\n        pauseAsyncCallbacks: (function () {\r\n            Browser.allowAsyncCallbacks = false\r\n        }),\r\n        resumeAsyncCallbacks: (function () {\r\n            Browser.allowAsyncCallbacks = true;\r\n            if (Browser.queuedAsyncCallbacks.length > 0) {\r\n                var callbacks = Browser.queuedAsyncCallbacks;\r\n                Browser.queuedAsyncCallbacks = [];\r\n                callbacks.forEach((function (func) {\r\n                    func()\r\n                }))\r\n            }\r\n        }),\r\n        safeRequestAnimationFrame: (function (func) {\r\n            return Browser.requestAnimationFrame((function () {\r\n                if (ABORT) return;\r\n                if (Browser.allowAsyncCallbacks) {\r\n                    func()\r\n                } else {\r\n                    Browser.queuedAsyncCallbacks.push(func)\r\n                }\r\n            }))\r\n        }),\r\n        safeSetTimeout: (function (func, timeout) {\r\n            Module[\"noExitRuntime\"] = true;\r\n            return setTimeout((function () {\r\n                if (ABORT) return;\r\n                if (Browser.allowAsyncCallbacks) {\r\n                    func()\r\n                } else {\r\n                    Browser.queuedAsyncCallbacks.push(func)\r\n                }\r\n            }), timeout)\r\n        }),\r\n        safeSetInterval: (function (func, timeout) {\r\n            Module[\"noExitRuntime\"] = true;\r\n            return setInterval((function () {\r\n                if (ABORT) return;\r\n                if (Browser.allowAsyncCallbacks) {\r\n                    func()\r\n                }\r\n            }), timeout)\r\n        }),\r\n        getMimetype: (function (name) {\r\n            return {\r\n                \"jpg\": \"image/jpeg\",\r\n                \"jpeg\": \"image/jpeg\",\r\n                \"png\": \"image/png\",\r\n                \"bmp\": \"image/bmp\",\r\n                \"ogg\": \"audio/ogg\",\r\n                \"wav\": \"audio/wav\",\r\n                \"mp3\": \"audio/mpeg\"\r\n            }[name.substr(name.lastIndexOf(\".\") + 1)]\r\n        }),\r\n        getUserMedia: (function (func) {\r\n            if (!window.getUserMedia) {\r\n                window.getUserMedia = navigator[\"getUserMedia\"] || navigator[\"mozGetUserMedia\"]\r\n            }\r\n            window.getUserMedia(func)\r\n        }),\r\n        getMovementX: (function (event) {\r\n            return event[\"movementX\"] || event[\"mozMovementX\"] || event[\"webkitMovementX\"] || 0\r\n        }),\r\n        getMovementY: (function (event) {\r\n            return event[\"movementY\"] || event[\"mozMovementY\"] || event[\"webkitMovementY\"] || 0\r\n        }),\r\n        getMouseWheelDelta: (function (event) {\r\n            var delta = 0;\r\n            switch (event.type) {\r\n                case\"DOMMouseScroll\":\r\n                    delta = event.detail;\r\n                    break;\r\n                case\"mousewheel\":\r\n                    delta = event.wheelDelta;\r\n                    break;\r\n                case\"wheel\":\r\n                    delta = event[\"deltaY\"];\r\n                    break;\r\n                default:\r\n                    throw\"unrecognized mouse wheel event: \" + event.type\r\n            }\r\n            return delta\r\n        }),\r\n        mouseX: 0,\r\n        mouseY: 0,\r\n        mouseMovementX: 0,\r\n        mouseMovementY: 0,\r\n        touches: {},\r\n        lastTouches: {},\r\n        calculateMouseEvent: (function (event) {\r\n            if (Browser.pointerLock) {\r\n                if (event.type != \"mousemove\" && \"mozMovementX\" in event) {\r\n                    Browser.mouseMovementX = Browser.mouseMovementY = 0\r\n                } else {\r\n                    Browser.mouseMovementX = Browser.getMovementX(event);\r\n                    Browser.mouseMovementY = Browser.getMovementY(event)\r\n                }\r\n                if (typeof SDL != \"undefined\") {\r\n                    Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\r\n                    Browser.mouseY = SDL.mouseY + Browser.mouseMovementY\r\n                } else {\r\n                    Browser.mouseX += Browser.mouseMovementX;\r\n                    Browser.mouseY += Browser.mouseMovementY\r\n                }\r\n            } else {\r\n                var rect = Module[\"canvas\"].getBoundingClientRect();\r\n                var cw = Module[\"canvas\"].width;\r\n                var ch = Module[\"canvas\"].height;\r\n                var scrollX = typeof window.scrollX !== \"undefined\" ? window.scrollX : window.pageXOffset;\r\n                var scrollY = typeof window.scrollY !== \"undefined\" ? window.scrollY : window.pageYOffset;\r\n                if (event.type === \"touchstart\" || event.type === \"touchend\" || event.type === \"touchmove\") {\r\n                    var touch = event.touch;\r\n                    if (touch === undefined) {\r\n                        return\r\n                    }\r\n                    var adjustedX = touch.pageX - (scrollX + rect.left);\r\n                    var adjustedY = touch.pageY - (scrollY + rect.top);\r\n                    adjustedX = adjustedX * (cw / rect.width);\r\n                    adjustedY = adjustedY * (ch / rect.height);\r\n                    var coords = {x: adjustedX, y: adjustedY};\r\n                    if (event.type === \"touchstart\") {\r\n                        Browser.lastTouches[touch.identifier] = coords;\r\n                        Browser.touches[touch.identifier] = coords\r\n                    } else if (event.type === \"touchend\" || event.type === \"touchmove\") {\r\n                        var last = Browser.touches[touch.identifier];\r\n                        if (!last) last = coords;\r\n                        Browser.lastTouches[touch.identifier] = last;\r\n                        Browser.touches[touch.identifier] = coords\r\n                    }\r\n                    return\r\n                }\r\n                var x = event.pageX - (scrollX + rect.left);\r\n                var y = event.pageY - (scrollY + rect.top);\r\n                x = x * (cw / rect.width);\r\n                y = y * (ch / rect.height);\r\n                Browser.mouseMovementX = x - Browser.mouseX;\r\n                Browser.mouseMovementY = y - Browser.mouseY;\r\n                Browser.mouseX = x;\r\n                Browser.mouseY = y\r\n            }\r\n        }),\r\n        xhrLoad: (function (url, onload, onerror) {\r\n            var xhr = new XMLHttpRequest;\r\n            xhr.open(\"GET\", url, true);\r\n            xhr.responseType = \"arraybuffer\";\r\n            xhr.onload = function xhr_onload() {\r\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\r\n                    onload(xhr.response)\r\n                } else {\r\n                    onerror()\r\n                }\r\n            };\r\n            xhr.onerror = onerror;\r\n            xhr.send(null)\r\n        }),\r\n        asyncLoad: (function (url, onload, onerror, noRunDep) {\r\n            Browser.xhrLoad(url, (function (arrayBuffer) {\r\n                assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\r\n                onload(new Uint8Array(arrayBuffer));\r\n                if (!noRunDep) removeRunDependency(\"al \" + url)\r\n            }), (function (event) {\r\n                if (onerror) {\r\n                    onerror()\r\n                } else {\r\n                    throw'Loading data file \"' + url + '\" failed.'\r\n                }\r\n            }));\r\n            if (!noRunDep) addRunDependency(\"al \" + url)\r\n        }),\r\n        resizeListeners: [],\r\n        updateResizeListeners: (function () {\r\n            var canvas = Module[\"canvas\"];\r\n            Browser.resizeListeners.forEach((function (listener) {\r\n                listener(canvas.width, canvas.height)\r\n            }))\r\n        }),\r\n        setCanvasSize: (function (width, height, noUpdates) {\r\n            var canvas = Module[\"canvas\"];\r\n            Browser.updateCanvasDimensions(canvas, width, height);\r\n            if (!noUpdates) Browser.updateResizeListeners()\r\n        }),\r\n        windowedWidth: 0,\r\n        windowedHeight: 0,\r\n        setFullScreenCanvasSize: (function () {\r\n            if (typeof SDL != \"undefined\") {\r\n                var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];\r\n                flags = flags | 8388608;\r\n                HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags\r\n            }\r\n            Browser.updateResizeListeners()\r\n        }),\r\n        setWindowedCanvasSize: (function () {\r\n            if (typeof SDL != \"undefined\") {\r\n                var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];\r\n                flags = flags & ~8388608;\r\n                HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags\r\n            }\r\n            Browser.updateResizeListeners()\r\n        }),\r\n        updateCanvasDimensions: (function (canvas, wNative, hNative) {\r\n            if (wNative && hNative) {\r\n                canvas.widthNative = wNative;\r\n                canvas.heightNative = hNative\r\n            } else {\r\n                wNative = canvas.widthNative;\r\n                hNative = canvas.heightNative\r\n            }\r\n            var w = wNative;\r\n            var h = hNative;\r\n            if (Module[\"forcedAspectRatio\"] && Module[\"forcedAspectRatio\"] > 0) {\r\n                if (w / h < Module[\"forcedAspectRatio\"]) {\r\n                    w = Math.round(h * Module[\"forcedAspectRatio\"])\r\n                } else {\r\n                    h = Math.round(w / Module[\"forcedAspectRatio\"])\r\n                }\r\n            }\r\n            if ((document[\"webkitFullScreenElement\"] || document[\"webkitFullscreenElement\"] || document[\"mozFullScreenElement\"] || document[\"mozFullscreenElement\"] || document[\"fullScreenElement\"] || document[\"fullscreenElement\"] || document[\"msFullScreenElement\"] || document[\"msFullscreenElement\"] || document[\"webkitCurrentFullScreenElement\"]) === canvas.parentNode && typeof screen != \"undefined\") {\r\n                var factor = Math.min(screen.width / w, screen.height / h);\r\n                w = Math.round(w * factor);\r\n                h = Math.round(h * factor)\r\n            }\r\n            if (Browser.resizeCanvas) {\r\n                if (canvas.width != w) canvas.width = w;\r\n                if (canvas.height != h) canvas.height = h;\r\n                if (typeof canvas.style != \"undefined\") {\r\n                    canvas.style.removeProperty(\"width\");\r\n                    canvas.style.removeProperty(\"height\")\r\n                }\r\n            } else {\r\n                if (canvas.width != wNative) canvas.width = wNative;\r\n                if (canvas.height != hNative) canvas.height = hNative;\r\n                if (typeof canvas.style != \"undefined\") {\r\n                    if (w != wNative || h != hNative) {\r\n                        canvas.style.setProperty(\"width\", w + \"px\", \"important\");\r\n                        canvas.style.setProperty(\"height\", h + \"px\", \"important\")\r\n                    } else {\r\n                        canvas.style.removeProperty(\"width\");\r\n                        canvas.style.removeProperty(\"height\")\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n        wgetRequests: {},\r\n        nextWgetRequestHandle: 0,\r\n        getNextWgetRequestHandle: (function () {\r\n            var handle = Browser.nextWgetRequestHandle;\r\n            Browser.nextWgetRequestHandle++;\r\n            return handle\r\n        })\r\n    };\r\n\r\n    function _time(ptr) {\r\n        var ret = Date.now() / 1e3 | 0;\r\n        if (ptr) {\r\n            HEAP32[ptr >> 2] = ret\r\n        }\r\n        return ret\r\n    }\r\n\r\n    function _pthread_self() {\r\n        return 0\r\n    }\r\n\r\n    Module[\"requestFullScreen\"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) {\r\n        Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice)\r\n    };\r\n    Module[\"requestAnimationFrame\"] = function Module_requestAnimationFrame(func) {\r\n        Browser.requestAnimationFrame(func)\r\n    };\r\n    Module[\"setCanvasSize\"] = function Module_setCanvasSize(width, height, noUpdates) {\r\n        Browser.setCanvasSize(width, height, noUpdates)\r\n    };\r\n    Module[\"pauseMainLoop\"] = function Module_pauseMainLoop() {\r\n        Browser.mainLoop.pause()\r\n    };\r\n    Module[\"resumeMainLoop\"] = function Module_resumeMainLoop() {\r\n        Browser.mainLoop.resume()\r\n    };\r\n    Module[\"getUserMedia\"] = function Module_getUserMedia() {\r\n        Browser.getUserMedia()\r\n    };\r\n    Module[\"createContext\"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) {\r\n        return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes)\r\n    };\r\n    FS.staticInit();\r\n    __ATINIT__.unshift((function () {\r\n        if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init()\r\n    }));\r\n    __ATMAIN__.push((function () {\r\n        FS.ignorePermissions = false\r\n    }));\r\n    __ATEXIT__.push((function () {\r\n        FS.quit()\r\n    }));\r\n    Module[\"FS_createFolder\"] = FS.createFolder;\r\n    Module[\"FS_createPath\"] = FS.createPath;\r\n    Module[\"FS_createDataFile\"] = FS.createDataFile;\r\n    Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\r\n    Module[\"FS_createLazyFile\"] = FS.createLazyFile;\r\n    Module[\"FS_createLink\"] = FS.createLink;\r\n    Module[\"FS_createDevice\"] = FS.createDevice;\r\n    Module[\"FS_unlink\"] = FS.unlink;\r\n    __ATINIT__.unshift((function () {\r\n        TTY.init()\r\n    }));\r\n    __ATEXIT__.push((function () {\r\n        TTY.shutdown()\r\n    }));\r\n    STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);\r\n    staticSealed = true;\r\n    STACK_MAX = STACK_BASE + TOTAL_STACK;\r\n    DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);\r\n    assert(DYNAMIC_BASE < TOTAL_MEMORY, \"TOTAL_MEMORY not big enough for stack\");\r\n    Module.asmGlobalArg = {\r\n        \"Math\": Math,\r\n        \"Int8Array\": Int8Array,\r\n        \"Int16Array\": Int16Array,\r\n        \"Int32Array\": Int32Array,\r\n        \"Uint8Array\": Uint8Array,\r\n        \"Uint16Array\": Uint16Array,\r\n        \"Uint32Array\": Uint32Array,\r\n        \"Float32Array\": Float32Array,\r\n        \"Float64Array\": Float64Array,\r\n        \"NaN\": NaN,\r\n        \"Infinity\": Infinity\r\n    };\r\n    Module.asmLibraryArg = {\r\n        \"abort\": abort,\r\n        \"assert\": assert,\r\n        \"_sysconf\": _sysconf,\r\n        \"_pthread_self\": _pthread_self,\r\n        \"_abort\": _abort,\r\n        \"___setErrNo\": ___setErrNo,\r\n        \"_sbrk\": _sbrk,\r\n        \"_time\": _time,\r\n        \"_emscripten_set_main_loop_timing\": _emscripten_set_main_loop_timing,\r\n        \"_emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n        \"_emscripten_set_main_loop\": _emscripten_set_main_loop,\r\n        \"STACKTOP\": STACKTOP,\r\n        \"STACK_MAX\": STACK_MAX,\r\n        \"tempDoublePtr\": tempDoublePtr,\r\n        \"ABORT\": ABORT\r\n    };// EMSCRIPTEN_START_ASM\r\n    var asm = (function (global, env, buffer) {\r\n        \"use asm\";\r\n        var a = new global.Int8Array(buffer);\r\n        var b = new global.Int16Array(buffer);\r\n        var c = new global.Int32Array(buffer);\r\n        var d = new global.Uint8Array(buffer);\r\n        var e = new global.Uint16Array(buffer);\r\n        var f = new global.Uint32Array(buffer);\r\n        var g = new global.Float32Array(buffer);\r\n        var h = new global.Float64Array(buffer);\r\n        var i = env.STACKTOP | 0;\r\n        var j = env.STACK_MAX | 0;\r\n        var k = env.tempDoublePtr | 0;\r\n        var l = env.ABORT | 0;\r\n        var m = 0;\r\n        var n = 0;\r\n        var o = 0;\r\n        var p = 0;\r\n        var q = global.NaN, r = global.Infinity;\r\n        var s = 0, t = 0, u = 0, v = 0, w = 0.0, x = 0, y = 0, z = 0, A = 0.0;\r\n        var B = 0;\r\n        var C = 0;\r\n        var D = 0;\r\n        var E = 0;\r\n        var F = 0;\r\n        var G = 0;\r\n        var H = 0;\r\n        var I = 0;\r\n        var J = 0;\r\n        var K = 0;\r\n        var L = global.Math.floor;\r\n        var M = global.Math.abs;\r\n        var N = global.Math.sqrt;\r\n        var O = global.Math.pow;\r\n        var P = global.Math.cos;\r\n        var Q = global.Math.sin;\r\n        var R = global.Math.tan;\r\n        var S = global.Math.acos;\r\n        var T = global.Math.asin;\r\n        var U = global.Math.atan;\r\n        var V = global.Math.atan2;\r\n        var W = global.Math.exp;\r\n        var X = global.Math.log;\r\n        var Y = global.Math.ceil;\r\n        var Z = global.Math.imul;\r\n        var _ = global.Math.min;\r\n        var $ = global.Math.clz32;\r\n        var aa = env.abort;\r\n        var ba = env.assert;\r\n        var ca = env._sysconf;\r\n        var da = env._pthread_self;\r\n        var ea = env._abort;\r\n        var fa = env.___setErrNo;\r\n        var ga = env._sbrk;\r\n        var ha = env._time;\r\n        var ia = env._emscripten_set_main_loop_timing;\r\n        var ja = env._emscripten_memcpy_big;\r\n        var ka = env._emscripten_set_main_loop;\r\n        var la = 0.0;\r\n\r\n// EMSCRIPTEN_START_FUNCS\r\n        function ma(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            b = i;\r\n            i = i + a | 0;\r\n            i = i + 15 & -16;\r\n            return b | 0\r\n        }\r\n\r\n        function na() {\r\n            return i | 0\r\n        }\r\n\r\n        function oa(a) {\r\n            a = a | 0;\r\n            i = a\r\n        }\r\n\r\n        function pa(a, b) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            i = a;\r\n            j = b\r\n        }\r\n\r\n        function qa(a, b) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            if (!m) {\r\n                m = a;\r\n                n = b\r\n            }\r\n        }\r\n\r\n        function ra(b) {\r\n            b = b | 0;\r\n            a[k >> 0] = a[b >> 0];\r\n            a[k + 1 >> 0] = a[b + 1 >> 0];\r\n            a[k + 2 >> 0] = a[b + 2 >> 0];\r\n            a[k + 3 >> 0] = a[b + 3 >> 0]\r\n        }\r\n\r\n        function sa(b) {\r\n            b = b | 0;\r\n            a[k >> 0] = a[b >> 0];\r\n            a[k + 1 >> 0] = a[b + 1 >> 0];\r\n            a[k + 2 >> 0] = a[b + 2 >> 0];\r\n            a[k + 3 >> 0] = a[b + 3 >> 0];\r\n            a[k + 4 >> 0] = a[b + 4 >> 0];\r\n            a[k + 5 >> 0] = a[b + 5 >> 0];\r\n            a[k + 6 >> 0] = a[b + 6 >> 0];\r\n            a[k + 7 >> 0] = a[b + 7 >> 0]\r\n        }\r\n\r\n        function ta(a) {\r\n            a = a | 0;\r\n            B = a\r\n        }\r\n\r\n        function ua() {\r\n            return B | 0\r\n        }\r\n\r\n        function va() {\r\n            var a = 0, b = 0;\r\n            b = i;\r\n            i = i + 16 | 0;\r\n            a = b;\r\n            c[a >> 2] = 0;\r\n            Db(a, 31756) | 0;\r\n            i = b;\r\n            return c[a >> 2] | 0\r\n        }\r\n\r\n        function wa(a) {\r\n            a = a | 0;\r\n            var b = 0, d = 0;\r\n            b = i;\r\n            i = i + 16 | 0;\r\n            d = b;\r\n            c[d >> 2] = a;\r\n            Eb(d);\r\n            i = b;\r\n            return\r\n        }\r\n\r\n        function xa(a, b, c, e) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            c = c | 0;\r\n            e = e | 0;\r\n            Ea(a, (e | 0) == 0 ? (d[b >> 0] | 0) >>> 3 & 15 : 15, b + 1 | 0, c, 2) | 0;\r\n            return\r\n        }\r\n\r\n        function ya(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            b = Je(8) | 0;\r\n            Hb(b, b + 4 | 0, a) | 0;\r\n            return b | 0\r\n        }\r\n\r\n        function za(a) {\r\n            a = a | 0;\r\n            Ib(a, a + 4 | 0);\r\n            Ke(a);\r\n            return\r\n        }\r\n\r\n        function Aa(b, e, f, g, h) {\r\n            b = b | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var j = 0;\r\n            h = i;\r\n            i = i + 16 | 0;\r\n            j = h;\r\n            c[j >> 2] = e;\r\n            f = (Jb(c[b >> 2] | 0, c[b + 4 >> 2] | 0, e, f, g, j, 3) | 0) << 16 >> 16;\r\n            a[g >> 0] = d[g >> 0] | 0 | 4;\r\n            i = h;\r\n            return f | 0\r\n        }\r\n\r\n        function Ba(a) {\r\n            a = a | 0;\r\n            if (!a) a = -1; else {\r\n                b[a >> 1] = 4096;\r\n                a = 0\r\n            }\r\n            return a | 0\r\n        }\r\n\r\n        function Ca(a, d, e, f, g, h) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0;\r\n            m = c[h >> 2] | 0;\r\n            q = g << 16 >> 16 > 0;\r\n            if (q) {\r\n                i = 0;\r\n                j = 0;\r\n                do {\r\n                    l = b[e + (i << 1) >> 1] | 0;\r\n                    l = Z(l, l) | 0;\r\n                    if ((l | 0) != 1073741824) {\r\n                        k = (l << 1) + j | 0;\r\n                        if ((l ^ j | 0) > 0 & (k ^ j | 0) < 0) {\r\n                            c[h >> 2] = 1;\r\n                            j = (j >>> 31) + 2147483647 | 0\r\n                        } else j = k\r\n                    } else {\r\n                        c[h >> 2] = 1;\r\n                        j = 2147483647\r\n                    }\r\n                    i = i + 1 | 0\r\n                } while ((i & 65535) << 16 >> 16 != g << 16 >> 16);\r\n                if ((j | 0) == 2147483647) {\r\n                    c[h >> 2] = m;\r\n                    l = 0;\r\n                    k = 0;\r\n                    do {\r\n                        j = b[e + (l << 1) >> 1] >> 2;\r\n                        j = Z(j, j) | 0;\r\n                        if ((j | 0) != 1073741824) {\r\n                            i = (j << 1) + k | 0;\r\n                            if ((j ^ k | 0) > 0 & (i ^ k | 0) < 0) {\r\n                                c[h >> 2] = 1;\r\n                                k = (k >>> 31) + 2147483647 | 0\r\n                            } else k = i\r\n                        } else {\r\n                            c[h >> 2] = 1;\r\n                            k = 2147483647\r\n                        }\r\n                        l = l + 1 | 0\r\n                    } while ((l & 65535) << 16 >> 16 != g << 16 >> 16)\r\n                } else p = 8\r\n            } else {\r\n                j = 0;\r\n                p = 8\r\n            }\r\n            if ((p | 0) == 8) k = j >> 4;\r\n            if (!k) {\r\n                b[a >> 1] = 0;\r\n                return\r\n            }\r\n            o = ((pe(k) | 0) & 65535) + 65535 | 0;\r\n            j = o << 16 >> 16;\r\n            if ((o & 65535) << 16 >> 16 > 0) {\r\n                i = k << j;\r\n                if ((i >> j | 0) == (k | 0)) k = i; else k = k >> 31 ^ 2147483647\r\n            } else {\r\n                j = 0 - j << 16;\r\n                if ((j | 0) < 2031616) k = k >> (j >> 16); else k = 0\r\n            }\r\n            n = Ce(k, h) | 0;\r\n            i = c[h >> 2] | 0;\r\n            if (q) {\r\n                j = 0;\r\n                k = 0;\r\n                do {\r\n                    m = b[d + (j << 1) >> 1] | 0;\r\n                    m = Z(m, m) | 0;\r\n                    if ((m | 0) != 1073741824) {\r\n                        l = (m << 1) + k | 0;\r\n                        if ((m ^ k | 0) > 0 & (l ^ k | 0) < 0) {\r\n                            c[h >> 2] = 1;\r\n                            k = (k >>> 31) + 2147483647 | 0\r\n                        } else k = l\r\n                    } else {\r\n                        c[h >> 2] = 1;\r\n                        k = 2147483647\r\n                    }\r\n                    j = j + 1 | 0\r\n                } while ((j & 65535) << 16 >> 16 != g << 16 >> 16);\r\n                if ((k | 0) == 2147483647) {\r\n                    c[h >> 2] = i;\r\n                    m = 0;\r\n                    k = 0;\r\n                    do {\r\n                        l = b[d + (m << 1) >> 1] >> 2;\r\n                        l = Z(l, l) | 0;\r\n                        if ((l | 0) != 1073741824) {\r\n                            j = (l << 1) + k | 0;\r\n                            if ((l ^ k | 0) > 0 & (j ^ k | 0) < 0) {\r\n                                c[h >> 2] = 1;\r\n                                k = (k >>> 31) + 2147483647 | 0\r\n                            } else k = j\r\n                        } else {\r\n                            c[h >> 2] = 1;\r\n                            k = 2147483647\r\n                        }\r\n                        m = m + 1 | 0\r\n                    } while ((m & 65535) << 16 >> 16 != g << 16 >> 16)\r\n                } else p = 29\r\n            } else {\r\n                k = 0;\r\n                p = 29\r\n            }\r\n            if ((p | 0) == 29) k = k >> 4;\r\n            if (!k) l = 0; else {\r\n                j = (pe(k) | 0) << 16 >> 16;\r\n                i = o - j | 0;\r\n                l = i & 65535;\r\n                k = (Td(n, Ce(k << j, h) | 0) | 0) << 16 >> 16;\r\n                j = k << 7;\r\n                i = i << 16 >> 16;\r\n                if (l << 16 >> 16 > 0) i = l << 16 >> 16 < 31 ? j >> i : 0; else {\r\n                    p = 0 - i << 16 >> 16;\r\n                    i = j << p;\r\n                    i = (i >> p | 0) == (j | 0) ? i : k >> 24 ^ 2147483647\r\n                }\r\n                l = (Z(((ce(i, h) | 0) << 9) + 32768 >> 16, 32767 - (f & 65535) << 16 >> 16) | 0) >>> 15 << 16 >> 16\r\n            }\r\n            i = b[a >> 1] | 0;\r\n            if (q) {\r\n                k = f << 16 >> 16;\r\n                j = 0;\r\n                while (1) {\r\n                    f = ((Z(i << 16 >> 16, k) | 0) >>> 15 & 65535) + l | 0;\r\n                    i = f & 65535;\r\n                    b[e >> 1] = (Z(b[e >> 1] | 0, f << 16 >> 16) | 0) >>> 12;\r\n                    j = j + 1 << 16 >> 16;\r\n                    if (j << 16 >> 16 >= g << 16 >> 16) break; else e = e + 2 | 0\r\n                }\r\n            }\r\n            b[a >> 1] = i;\r\n            return\r\n        }\r\n\r\n        function Da(a, d, e, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0;\r\n            i = c[f >> 2] | 0;\r\n            g = e << 16 >> 16 > 0;\r\n            if (g) {\r\n                j = 0;\r\n                h = 0;\r\n                do {\r\n                    l = b[d + (j << 1) >> 1] | 0;\r\n                    l = Z(l, l) | 0;\r\n                    if ((l | 0) != 1073741824) {\r\n                        k = (l << 1) + h | 0;\r\n                        if ((l ^ h | 0) > 0 & (k ^ h | 0) < 0) {\r\n                            c[f >> 2] = 1;\r\n                            h = (h >>> 31) + 2147483647 | 0\r\n                        } else h = k\r\n                    } else {\r\n                        c[f >> 2] = 1;\r\n                        h = 2147483647\r\n                    }\r\n                    j = j + 1 | 0\r\n                } while ((j & 65535) << 16 >> 16 != e << 16 >> 16);\r\n                if ((h | 0) == 2147483647) {\r\n                    c[f >> 2] = i;\r\n                    l = 0;\r\n                    i = 0;\r\n                    do {\r\n                        k = b[d + (l << 1) >> 1] >> 2;\r\n                        k = Z(k, k) | 0;\r\n                        if ((k | 0) != 1073741824) {\r\n                            j = (k << 1) + i | 0;\r\n                            if ((k ^ i | 0) > 0 & (j ^ i | 0) < 0) {\r\n                                c[f >> 2] = 1;\r\n                                i = (i >>> 31) + 2147483647 | 0\r\n                            } else i = j\r\n                        } else {\r\n                            c[f >> 2] = 1;\r\n                            i = 2147483647\r\n                        }\r\n                        l = l + 1 | 0\r\n                    } while ((l & 65535) << 16 >> 16 != e << 16 >> 16)\r\n                } else o = 8\r\n            } else {\r\n                h = 0;\r\n                o = 8\r\n            }\r\n            if ((o | 0) == 8) i = h >> 4;\r\n            if (!i) return;\r\n            n = ((pe(i) | 0) & 65535) + 65535 | 0;\r\n            k = n << 16 >> 16;\r\n            if ((n & 65535) << 16 >> 16 > 0) {\r\n                j = i << k;\r\n                if ((j >> k | 0) == (i | 0)) i = j; else i = i >> 31 ^ 2147483647\r\n            } else {\r\n                k = 0 - k << 16;\r\n                if ((k | 0) < 2031616) i = i >> (k >> 16); else i = 0\r\n            }\r\n            m = Ce(i, f) | 0;\r\n            i = c[f >> 2] | 0;\r\n            if (g) {\r\n                j = 0;\r\n                h = 0;\r\n                do {\r\n                    l = b[a + (j << 1) >> 1] | 0;\r\n                    l = Z(l, l) | 0;\r\n                    if ((l | 0) != 1073741824) {\r\n                        k = (l << 1) + h | 0;\r\n                        if ((l ^ h | 0) > 0 & (k ^ h | 0) < 0) {\r\n                            c[f >> 2] = 1;\r\n                            h = (h >>> 31) + 2147483647 | 0\r\n                        } else h = k\r\n                    } else {\r\n                        c[f >> 2] = 1;\r\n                        h = 2147483647\r\n                    }\r\n                    j = j + 1 | 0\r\n                } while ((j & 65535) << 16 >> 16 != e << 16 >> 16);\r\n                if ((h | 0) == 2147483647) {\r\n                    c[f >> 2] = i;\r\n                    i = 0;\r\n                    j = 0;\r\n                    do {\r\n                        l = b[a + (i << 1) >> 1] >> 2;\r\n                        l = Z(l, l) | 0;\r\n                        if ((l | 0) != 1073741824) {\r\n                            k = (l << 1) + j | 0;\r\n                            if ((l ^ j | 0) > 0 & (k ^ j | 0) < 0) {\r\n                                c[f >> 2] = 1;\r\n                                j = (j >>> 31) + 2147483647 | 0\r\n                            } else j = k\r\n                        } else {\r\n                            c[f >> 2] = 1;\r\n                            j = 2147483647\r\n                        }\r\n                        i = i + 1 | 0\r\n                    } while ((i & 65535) << 16 >> 16 != e << 16 >> 16)\r\n                } else o = 28\r\n            } else {\r\n                h = 0;\r\n                o = 28\r\n            }\r\n            if ((o | 0) == 28) j = h >> 4;\r\n            if (!j) g = 0; else {\r\n                l = pe(j) | 0;\r\n                k = l << 16 >> 16;\r\n                if (l << 16 >> 16 > 0) {\r\n                    i = j << k;\r\n                    if ((i >> k | 0) == (j | 0)) j = i; else j = j >> 31 ^ 2147483647\r\n                } else {\r\n                    k = 0 - k << 16;\r\n                    if ((k | 0) < 2031616) j = j >> (k >> 16); else j = 0\r\n                }\r\n                i = n - (l & 65535) | 0;\r\n                k = i & 65535;\r\n                h = (Td(m, Ce(j, f) | 0) | 0) << 16 >> 16;\r\n                g = h << 7;\r\n                i = i << 16 >> 16;\r\n                if (k << 16 >> 16 > 0) g = k << 16 >> 16 < 31 ? g >> i : 0; else {\r\n                    n = 0 - i << 16 >> 16;\r\n                    a = g << n;\r\n                    g = (a >> n | 0) == (g | 0) ? a : h >> 24 ^ 2147483647\r\n                }\r\n                g = ce(g, f) | 0;\r\n                if ((g | 0) > 4194303) g = 2147483647; else g = (g | 0) < -4194304 ? -2147483648 : g << 9;\r\n                g = Ce(g, f) | 0\r\n            }\r\n            h = (e & 65535) + 65535 & 65535;\r\n            if (h << 16 >> 16 <= -1) return;\r\n            l = g << 16 >> 16;\r\n            k = e + -1 << 16 >> 16 << 16 >> 16;\r\n            while (1) {\r\n                i = d + (k << 1) | 0;\r\n                g = Z(b[i >> 1] | 0, l) | 0;\r\n                do if ((g | 0) != 1073741824) {\r\n                    j = g << 1;\r\n                    if ((j | 0) <= 268435455) if ((j | 0) < -268435456) {\r\n                        b[i >> 1] = -32768;\r\n                        break\r\n                    } else {\r\n                        b[i >> 1] = g >>> 12;\r\n                        break\r\n                    } else o = 52\r\n                } else {\r\n                    c[f >> 2] = 1;\r\n                    o = 52\r\n                } while (0);\r\n                if ((o | 0) == 52) {\r\n                    o = 0;\r\n                    b[i >> 1] = 32767\r\n                }\r\n                h = h + -1 << 16 >> 16;\r\n                if (h << 16 >> 16 <= -1) break; else k = k + -1 | 0\r\n            }\r\n            return\r\n        }\r\n\r\n        function Ea(a, d, e, f, g) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, j = 0, k = 0, l = 0;\r\n            l = i;\r\n            i = i + 496 | 0;\r\n            k = l;\r\n            j = (g | 0) == 2;\r\n            do if (!(j & 1 | (g | 0) == 4)) {\r\n                if (g) {\r\n                    a = -1;\r\n                    i = l;\r\n                    return a | 0\r\n                }\r\n                j = b[e >> 1] | 0;\r\n                d = e + 490 | 0;\r\n                g = e + 2 | 0;\r\n                h = 0;\r\n                while (1) {\r\n                    b[k + (h << 1) >> 1] = b[g >> 1] | 0;\r\n                    h = h + 1 | 0;\r\n                    if ((h | 0) == 244) break; else g = g + 2 | 0\r\n                }\r\n                h = j << 16 >> 16;\r\n                if (j << 16 >> 16 == 7) {\r\n                    g = 492;\r\n                    d = c[a + 1760 >> 2] | 0;\r\n                    break\r\n                } else {\r\n                    g = 492;\r\n                    d = b[d >> 1] | 0;\r\n                    break\r\n                }\r\n            } else {\r\n                h = a + 1168 | 0;\r\n                if (j) {\r\n                    Gb(d, e, k, h);\r\n                    h = 604\r\n                } else {\r\n                    pb(d, e, k, h);\r\n                    h = 3436\r\n                }\r\n                g = b[h + (d << 1) >> 1] | 0;\r\n                do if (d >>> 0 >= 8) {\r\n                    if ((d | 0) == 8) {\r\n                        d = b[k + 76 >> 1] << 2 | (b[k + 74 >> 1] << 1 | b[k + 72 >> 1]);\r\n                        h = (b[k + 70 >> 1] | 0) == 0 ? 4 : 5;\r\n                        break\r\n                    }\r\n                    if (d >>> 0 < 15) {\r\n                        a = -1;\r\n                        i = l;\r\n                        return a | 0\r\n                    } else {\r\n                        d = c[a + 1760 >> 2] | 0;\r\n                        h = 7;\r\n                        break\r\n                    }\r\n                } else h = 0; while (0);\r\n                if (g << 16 >> 16 == -1) {\r\n                    a = -1;\r\n                    i = l;\r\n                    return a | 0\r\n                }\r\n            } while (0);\r\n            Fb(a, d, k, h, f);\r\n            c[a + 1760 >> 2] = d;\r\n            a = g;\r\n            i = l;\r\n            return a | 0\r\n        }\r\n\r\n        function Fa(a, d, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;\r\n            t = i;\r\n            i = i + 48 | 0;\r\n            r = t + 20 | 0;\r\n            s = t;\r\n            h = r;\r\n            g = h + 20 | 0;\r\n            do {\r\n                b[h >> 1] = b[a >> 1] | 0;\r\n                h = h + 2 | 0;\r\n                a = a + 2 | 0\r\n            } while ((h | 0) < (g | 0));\r\n            a = b[r + 18 >> 1] | 0;\r\n            q = (a & 65535) - ((a & 65535) >>> 15 & 65535) | 0;\r\n            a:do if (((q << 16 >> 31 ^ q) & 65535) << 16 >> 16 <= 4095) {\r\n                g = 9;\r\n                q = 9;\r\n                while (1) {\r\n                    a = a << 16 >> 16;\r\n                    a = (a << 19 >> 19 | 0) == (a | 0) ? a << 3 : a >>> 15 ^ 32767;\r\n                    p = d + (g << 1) | 0;\r\n                    b[p >> 1] = a;\r\n                    a = a << 16 >> 16;\r\n                    a = Z(a, a) | 0;\r\n                    if ((a | 0) == 1073741824) {\r\n                        c[f >> 2] = 1;\r\n                        h = 2147483647\r\n                    } else h = a << 1;\r\n                    a = 2147483647 - h | 0;\r\n                    if ((a & h | 0) < 0) {\r\n                        c[f >> 2] = 1;\r\n                        a = 2147483647\r\n                    }\r\n                    n = pe(a) | 0;\r\n                    o = 15 - (n & 65535) & 65535;\r\n                    j = n << 16 >> 16;\r\n                    if (n << 16 >> 16 > 0) {\r\n                        h = a << j;\r\n                        if ((h >> j | 0) != (a | 0)) h = a >> 31 ^ 2147483647\r\n                    } else {\r\n                        h = 0 - j << 16;\r\n                        if ((h | 0) < 2031616) h = a >> (h >> 16); else h = 0\r\n                    }\r\n                    h = Td(16384, Ce(h, f) | 0) | 0;\r\n                    do if (q << 16 >> 16 > 0) {\r\n                        n = g + -1 | 0;\r\n                        k = h << 16 >> 16;\r\n                        l = q << 16 >> 16;\r\n                        m = 0;\r\n                        while (1) {\r\n                            g = e[r + (m << 1) >> 1] | 0;\r\n                            a = g << 16;\r\n                            j = Z(b[r + (n - m << 1) >> 1] | 0, b[p >> 1] | 0) | 0;\r\n                            if ((j | 0) == 1073741824) {\r\n                                c[f >> 2] = 1;\r\n                                h = 2147483647\r\n                            } else h = j << 1;\r\n                            j = a - h | 0;\r\n                            if (((j ^ a) & (h ^ a) | 0) < 0) {\r\n                                c[f >> 2] = 1;\r\n                                j = (g >>> 15) + 2147483647 | 0\r\n                            }\r\n                            j = Z((Ce(j, f) | 0) << 16 >> 16, k) | 0;\r\n                            if ((j | 0) == 1073741824) {\r\n                                c[f >> 2] = 1;\r\n                                j = 2147483647\r\n                            } else j = j << 1;\r\n                            j = ge(j, o, f) | 0;\r\n                            h = j - (j >>> 31) | 0;\r\n                            if ((h >> 31 ^ h | 0) > 32767) {\r\n                                j = 24;\r\n                                break\r\n                            }\r\n                            b[s + (m << 1) >> 1] = j;\r\n                            m = m + 1 | 0;\r\n                            if ((l | 0) <= (m | 0)) {\r\n                                j = 26;\r\n                                break\r\n                            }\r\n                        }\r\n                        if ((j | 0) == 24) {\r\n                            j = 0;\r\n                            h = d;\r\n                            g = h + 20 | 0;\r\n                            do {\r\n                                b[h >> 1] = 0;\r\n                                h = h + 2 | 0\r\n                            } while ((h | 0) < (g | 0));\r\n                            a = 10\r\n                        } else if ((j | 0) == 26) {\r\n                            j = 0;\r\n                            if (q << 16 >> 16 > 0) a = q; else {\r\n                                j = 28;\r\n                                break\r\n                            }\r\n                        }\r\n                        h = a + -1 << 16 >> 16;\r\n                        Oe(r | 0, s | 0, ((h & 65535) << 1) + 2 | 0) | 0;\r\n                        g = h << 16 >> 16\r\n                    } else j = 28; while (0);\r\n                    if ((j | 0) == 28) {\r\n                        a = q + -1 << 16 >> 16;\r\n                        if (a << 16 >> 16 > -1) {\r\n                            g = a << 16 >> 16;\r\n                            h = 32767\r\n                        } else break\r\n                    }\r\n                    a = b[r + (g << 1) >> 1] | 0;\r\n                    q = (a & 65535) - ((a & 65535) >>> 15 & 65535) | 0;\r\n                    if (((q << 16 >> 31 ^ q) & 65535) << 16 >> 16 > 4095) break a; else q = h\r\n                }\r\n                i = t;\r\n                return\r\n            } while (0);\r\n            h = d;\r\n            g = h + 20 | 0;\r\n            do {\r\n                b[h >> 1] = 0;\r\n                h = h + 2 | 0\r\n            } while ((h | 0) < (g | 0));\r\n            i = t;\r\n            return\r\n        }\r\n\r\n        function Ga(a, b) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            var d = 0, e = 0, f = 0, g = 0, h = 0;\r\n            if (b << 16 >> 16 <= 0) {\r\n                a = 0;\r\n                return a | 0\r\n            }\r\n            e = c[a >> 2] | 0;\r\n            f = 0;\r\n            d = 0;\r\n            do {\r\n                h = e & 1;\r\n                d = h | d << 1 & 131070;\r\n                g = e >> 1;\r\n                e = (h | 0) == (e >>> 28 & 1 | 0) ? g : g | 1073741824;\r\n                f = f + 1 << 16 >> 16\r\n            } while (f << 16 >> 16 < b << 16 >> 16);\r\n            c[a >> 2] = e;\r\n            h = d & 65535;\r\n            return h | 0\r\n        }\r\n\r\n        function Ha(a, d, e) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;\r\n            g = d;\r\n            f = g + 80 | 0;\r\n            do {\r\n                b[g >> 1] = 0;\r\n                g = g + 2 | 0\r\n            } while ((g | 0) < (f | 0));\r\n            f = 0;\r\n            g = c[a >> 2] | 0;\r\n            do {\r\n                k = g & 1;\r\n                j = g >> 1;\r\n                j = (k | 0) == (g >>> 28 & 1 | 0) ? j : j | 1073741824;\r\n                h = j & 1;\r\n                i = j >> 1;\r\n                c[a >> 2] = (h | 0) == (j >>> 28 & 1 | 0) ? i : i | 1073741824;\r\n                h = Rd((Z(k << 1 | h, 1310720) | 0) >>> 17 & 65535, f, e) | 0;\r\n                k = c[a >> 2] | 0;\r\n                i = k & 1;\r\n                j = k >> 1;\r\n                g = (i | 0) == (k >>> 28 & 1 | 0) ? j : j | 1073741824;\r\n                c[a >> 2] = g;\r\n                b[d + (h << 16 >> 16 << 1) >> 1] = ((i & 65535) << 13 & 65535) + -4096 << 16 >> 16;\r\n                f = f + 1 << 16 >> 16\r\n            } while (f << 16 >> 16 < 10);\r\n            return\r\n        }\r\n\r\n        function Ia(a, d, f, g, h, i) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            var j = 0, k = 0;\r\n            j = b[a >> 1] | 0;\r\n            if ((j * 31821 | 0) == 1073741824) {\r\n                c[i >> 2] = 1;\r\n                k = 1073741823\r\n            } else k = j * 63642 >> 1;\r\n            j = k + 13849 | 0;\r\n            if ((k | 0) > -1 & (j ^ k | 0) < 0) {\r\n                c[i >> 2] = 1;\r\n                j = (k >>> 31) + 2147483647 | 0\r\n            }\r\n            b[a >> 1] = j;\r\n            if (d << 16 >> 16 <= 0) return;\r\n            k = 0;\r\n            j = h + ((j & 127) << 1) | 0;\r\n            while (1) {\r\n                b[g + (k << 1) >> 1] = (-65536 << b[f + (k << 1) >> 1] >>> 16 ^ 65535) & e[j >> 1];\r\n                k = k + 1 | 0;\r\n                if ((k & 65535) << 16 >> 16 == d << 16 >> 16) break; else j = j + 2 | 0\r\n            }\r\n            return\r\n        }\r\n\r\n        function Ja(a) {\r\n            a = a | 0;\r\n            var c = 0;\r\n            if (!a) {\r\n                c = -1;\r\n                return c | 0\r\n            }\r\n            c = a + 122 | 0;\r\n            do {\r\n                b[a >> 1] = 0;\r\n                a = a + 2 | 0\r\n            } while ((a | 0) < (c | 0));\r\n            c = 0;\r\n            return c | 0\r\n        }\r\n\r\n        function Ka(a, d, f, g, h) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0;\r\n            k = 159;\r\n            j = 0;\r\n            while (1) {\r\n                m = b[f + (k << 1) >> 1] | 0;\r\n                m = Z(m, m) | 0;\r\n                m = (m | 0) == 1073741824 ? 2147483647 : m << 1;\r\n                i = m + j | 0;\r\n                if ((m ^ j | 0) > -1 & (i ^ j | 0) < 0) {\r\n                    c[h >> 2] = 1;\r\n                    j = (j >>> 31) + 2147483647 | 0\r\n                } else j = i;\r\n                if ((k | 0) > 0) k = k + -1 | 0; else {\r\n                    k = j;\r\n                    break\r\n                }\r\n            }\r\n            h = k >>> 14 & 65535;\r\n            j = 32767;\r\n            i = 59;\r\n            while (1) {\r\n                m = b[a + (i << 1) >> 1] | 0;\r\n                j = m << 16 >> 16 < j << 16 >> 16 ? m : j;\r\n                if ((i | 0) > 0) i = i + -1 | 0; else break\r\n            }\r\n            m = (k | 0) > 536870911 ? 32767 : h;\r\n            h = j << 16 >> 16;\r\n            i = h << 20 >> 16;\r\n            k = j << 16 >> 16 > 0 ? 32767 : -32768;\r\n            f = 55;\r\n            j = b[a >> 1] | 0;\r\n            while (1) {\r\n                l = b[a + (f << 1) >> 1] | 0;\r\n                j = j << 16 >> 16 < l << 16 >> 16 ? l : j;\r\n                if ((f | 0) > 1) f = f + -1 | 0; else break\r\n            }\r\n            f = b[a + 80 >> 1] | 0;\r\n            l = b[a + 82 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 84 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 86 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 88 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 90 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 92 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 94 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 96 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 98 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 100 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 102 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 104 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 106 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 108 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 110 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 112 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 114 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = b[a + 116 >> 1] | 0;\r\n            f = f << 16 >> 16 < l << 16 >> 16 ? l : f;\r\n            l = a + 118 | 0;\r\n            o = b[l >> 1] | 0;\r\n            do if ((m + -21 & 65535) < 17557 & j << 16 >> 16 > 20 ? ((m << 16 >> 16 | 0) < (((h << 4 | 0) == (i | 0) ? i : k) | 0) ? 1 : (f << 16 >> 16 < o << 16 >> 16 ? o : f) << 16 >> 16 < 1953) : 0) {\r\n                j = a + 120 | 0;\r\n                i = b[j >> 1] | 0;\r\n                if (i << 16 >> 16 > 29) {\r\n                    b[j >> 1] = 30;\r\n                    f = j;\r\n                    k = 1;\r\n                    break\r\n                } else {\r\n                    k = (i & 65535) + 1 & 65535;\r\n                    b[j >> 1] = k;\r\n                    f = j;\r\n                    k = k << 16 >> 16 > 1 & 1;\r\n                    break\r\n                }\r\n            } else n = 14; while (0);\r\n            if ((n | 0) == 14) {\r\n                f = a + 120 | 0;\r\n                b[f >> 1] = 0;\r\n                k = 0\r\n            }\r\n            j = 0;\r\n            do {\r\n                o = j;\r\n                j = j + 1 | 0;\r\n                b[a + (o << 1) >> 1] = b[a + (j << 1) >> 1] | 0\r\n            } while ((j | 0) != 59);\r\n            b[l >> 1] = m;\r\n            j = b[f >> 1] | 0;\r\n            j = j << 16 >> 16 > 15 ? 16383 : j << 16 >> 16 > 8 ? 15565 : 13926;\r\n            i = Zd(d + 8 | 0, 5) | 0;\r\n            if ((b[f >> 1] | 0) > 20) {\r\n                if (((Zd(d, 9) | 0) << 16 >> 16 | 0) > (j | 0)) n = 20\r\n            } else if ((i << 16 >> 16 | 0) > (j | 0)) n = 20;\r\n            if ((n | 0) == 20) {\r\n                b[g >> 1] = 0;\r\n                return k | 0\r\n            }\r\n            i = (e[g >> 1] | 0) + 1 & 65535;\r\n            if (i << 16 >> 16 > 10) {\r\n                b[g >> 1] = 10;\r\n                return k | 0\r\n            } else {\r\n                b[g >> 1] = i;\r\n                return k | 0\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function La(a) {\r\n            a = a | 0;\r\n            var c = 0;\r\n            if (!a) {\r\n                c = -1;\r\n                return c | 0\r\n            }\r\n            c = a + 18 | 0;\r\n            do {\r\n                b[a >> 1] = 0;\r\n                a = a + 2 | 0\r\n            } while ((a | 0) < (c | 0));\r\n            c = 0;\r\n            return c | 0\r\n        }\r\n\r\n        function Ma(a, d, f, g, h, i, j, k, l, m, n, o) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            var p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;\r\n            y = a + 2 | 0;\r\n            b[a >> 1] = b[y >> 1] | 0;\r\n            z = a + 4 | 0;\r\n            b[y >> 1] = b[z >> 1] | 0;\r\n            A = a + 6 | 0;\r\n            b[z >> 1] = b[A >> 1] | 0;\r\n            B = a + 8 | 0;\r\n            b[A >> 1] = b[B >> 1] | 0;\r\n            C = a + 10 | 0;\r\n            b[B >> 1] = b[C >> 1] | 0;\r\n            D = a + 12 | 0;\r\n            b[C >> 1] = b[D >> 1] | 0;\r\n            b[D >> 1] = f;\r\n            t = 0;\r\n            x = 0;\r\n            do {\r\n                p = h + (x << 1) | 0;\r\n                r = Ge(b[p >> 1] | 0, b[g + (x << 1) >> 1] | 0, o) | 0;\r\n                r = (r & 65535) - ((r & 65535) >>> 15 & 65535) | 0;\r\n                r = r << 16 >> 31 ^ r;\r\n                w = ((qe(r & 65535) | 0) & 65535) + 65535 | 0;\r\n                q = w << 16 >> 16;\r\n                if ((w & 65535) << 16 >> 16 < 0) {\r\n                    s = 0 - q << 16;\r\n                    if ((s | 0) < 983040) u = r << 16 >> 16 >> (s >> 16) & 65535; else u = 0\r\n                } else {\r\n                    s = r << 16 >> 16;\r\n                    r = s << q;\r\n                    if ((r << 16 >> 16 >> q | 0) == (s | 0)) u = r & 65535; else u = (s >>> 15 ^ 32767) & 65535\r\n                }\r\n                v = qe(b[p >> 1] | 0) | 0;\r\n                r = b[p >> 1] | 0;\r\n                q = v << 16 >> 16;\r\n                if (v << 16 >> 16 < 0) {\r\n                    s = 0 - q << 16;\r\n                    if ((s | 0) < 983040) s = r << 16 >> 16 >> (s >> 16) & 65535; else s = 0\r\n                } else {\r\n                    s = r << 16 >> 16;\r\n                    r = s << q;\r\n                    if ((r << 16 >> 16 >> q | 0) == (s | 0)) s = r & 65535; else s = (s >>> 15 ^ 32767) & 65535\r\n                }\r\n                q = Td(u, s) | 0;\r\n                s = (w & 65535) + 2 - (v & 65535) | 0;\r\n                r = s & 65535;\r\n                do if (s & 32768) {\r\n                    if (r << 16 >> 16 != -32768) {\r\n                        w = 0 - s | 0;\r\n                        s = w << 16 >> 16;\r\n                        if ((w & 65535) << 16 >> 16 < 0) {\r\n                            s = 0 - s << 16;\r\n                            if ((s | 0) >= 983040) {\r\n                                s = 0;\r\n                                break\r\n                            }\r\n                            s = q << 16 >> 16 >> (s >> 16) & 65535;\r\n                            break\r\n                        }\r\n                    } else s = 32767;\r\n                    r = q << 16 >> 16;\r\n                    q = r << s;\r\n                    if ((q << 16 >> 16 >> s | 0) == (r | 0)) s = q & 65535; else s = (r >>> 15 ^ 32767) & 65535\r\n                } else s = De(q, r, o) | 0; while (0);\r\n                t = Rd(t, s, o) | 0;\r\n                x = x + 1 | 0\r\n            } while ((x | 0) != 10);\r\n            s = t & 65535;\r\n            r = t << 16 >> 16 > 5325;\r\n            t = a + 14 | 0;\r\n            if (r) {\r\n                h = (e[t >> 1] | 0) + 1 & 65535;\r\n                b[t >> 1] = h;\r\n                if (h << 16 >> 16 > 10) b[a + 16 >> 1] = 0\r\n            } else b[t >> 1] = 0;\r\n            switch (d | 0) {\r\n                case 0:\r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 6:\r\n                    break;\r\n                default: {\r\n                    D = a + 16 | 0;\r\n                    o = f;\r\n                    f = b[D >> 1] | 0;\r\n                    f = f & 65535;\r\n                    f = f + 1 | 0;\r\n                    f = f & 65535;\r\n                    b[D >> 1] = f;\r\n                    return o | 0\r\n                }\r\n            }\r\n            u = (j | i) << 16 >> 16 == 0;\r\n            v = m << 16 >> 16 == 0;\r\n            w = d >>> 0 < 3;\r\n            t = s + (w & ((v | (u & (k << 16 >> 16 == 0 | l << 16 >> 16 == 0) | n << 16 >> 16 < 2)) ^ 1) ? 61030 : 62259) & 65535;\r\n            t = t << 16 >> 16 > 0 ? t : 0;\r\n            if (t << 16 >> 16 <= 2048) {\r\n                t = t << 16 >> 16;\r\n                if ((t << 18 >> 18 | 0) == (t | 0)) l = t << 2; else l = t >>> 15 ^ 32767\r\n            } else l = 8192;\r\n            k = a + 16 | 0;\r\n            n = r | (b[k >> 1] | 0) < 40;\r\n            t = b[z >> 1] | 0;\r\n            if ((t * 6554 | 0) == 1073741824) {\r\n                c[o >> 2] = 1;\r\n                r = 2147483647\r\n            } else r = t * 13108 | 0;\r\n            t = b[A >> 1] | 0;\r\n            s = t * 6554 | 0;\r\n            if ((s | 0) != 1073741824) {\r\n                t = (t * 13108 | 0) + r | 0;\r\n                if ((s ^ r | 0) > 0 & (t ^ r | 0) < 0) {\r\n                    c[o >> 2] = 1;\r\n                    t = (r >>> 31) + 2147483647 | 0\r\n                }\r\n            } else {\r\n                c[o >> 2] = 1;\r\n                t = 2147483647\r\n            }\r\n            s = b[B >> 1] | 0;\r\n            r = s * 6554 | 0;\r\n            if ((r | 0) != 1073741824) {\r\n                s = (s * 13108 | 0) + t | 0;\r\n                if ((r ^ t | 0) > 0 & (s ^ t | 0) < 0) {\r\n                    c[o >> 2] = 1;\r\n                    s = (t >>> 31) + 2147483647 | 0\r\n                }\r\n            } else {\r\n                c[o >> 2] = 1;\r\n                s = 2147483647\r\n            }\r\n            t = b[C >> 1] | 0;\r\n            r = t * 6554 | 0;\r\n            if ((r | 0) != 1073741824) {\r\n                t = (t * 13108 | 0) + s | 0;\r\n                if ((r ^ s | 0) > 0 & (t ^ s | 0) < 0) {\r\n                    c[o >> 2] = 1;\r\n                    r = (s >>> 31) + 2147483647 | 0\r\n                } else r = t\r\n            } else {\r\n                c[o >> 2] = 1;\r\n                r = 2147483647\r\n            }\r\n            t = b[D >> 1] | 0;\r\n            s = t * 6554 | 0;\r\n            if ((s | 0) != 1073741824) {\r\n                t = (t * 13108 | 0) + r | 0;\r\n                if ((s ^ r | 0) > 0 & (t ^ r | 0) < 0) {\r\n                    c[o >> 2] = 1;\r\n                    t = (r >>> 31) + 2147483647 | 0\r\n                }\r\n            } else {\r\n                c[o >> 2] = 1;\r\n                t = 2147483647\r\n            }\r\n            r = Ce(t, o) | 0;\r\n            if (w & ((u | v) ^ 1)) {\r\n                t = b[a >> 1] | 0;\r\n                if ((t * 4681 | 0) == 1073741824) {\r\n                    c[o >> 2] = 1;\r\n                    r = 2147483647\r\n                } else r = t * 9362 | 0;\r\n                t = b[y >> 1] | 0;\r\n                s = t * 4681 | 0;\r\n                if ((s | 0) != 1073741824) {\r\n                    t = (t * 9362 | 0) + r | 0;\r\n                    if ((s ^ r | 0) > 0 & (t ^ r | 0) < 0) {\r\n                        c[o >> 2] = 1;\r\n                        r = (r >>> 31) + 2147483647 | 0\r\n                    } else r = t\r\n                } else {\r\n                    c[o >> 2] = 1;\r\n                    r = 2147483647\r\n                }\r\n                t = b[z >> 1] | 0;\r\n                s = t * 4681 | 0;\r\n                if ((s | 0) != 1073741824) {\r\n                    t = (t * 9362 | 0) + r | 0;\r\n                    if ((s ^ r | 0) > 0 & (t ^ r | 0) < 0) {\r\n                        c[o >> 2] = 1;\r\n                        r = (r >>> 31) + 2147483647 | 0\r\n                    } else r = t\r\n                } else {\r\n                    c[o >> 2] = 1;\r\n                    r = 2147483647\r\n                }\r\n                t = b[A >> 1] | 0;\r\n                s = t * 4681 | 0;\r\n                if ((s | 0) != 1073741824) {\r\n                    t = (t * 9362 | 0) + r | 0;\r\n                    if ((s ^ r | 0) > 0 & (t ^ r | 0) < 0) {\r\n                        c[o >> 2] = 1;\r\n                        t = (r >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[o >> 2] = 1;\r\n                    t = 2147483647\r\n                }\r\n                s = b[B >> 1] | 0;\r\n                r = s * 4681 | 0;\r\n                if ((r | 0) != 1073741824) {\r\n                    s = (s * 9362 | 0) + t | 0;\r\n                    if ((r ^ t | 0) > 0 & (s ^ t | 0) < 0) {\r\n                        c[o >> 2] = 1;\r\n                        t = (t >>> 31) + 2147483647 | 0\r\n                    } else t = s\r\n                } else {\r\n                    c[o >> 2] = 1;\r\n                    t = 2147483647\r\n                }\r\n                s = b[C >> 1] | 0;\r\n                r = s * 4681 | 0;\r\n                if ((r | 0) != 1073741824) {\r\n                    s = (s * 9362 | 0) + t | 0;\r\n                    if ((r ^ t | 0) > 0 & (s ^ t | 0) < 0) {\r\n                        c[o >> 2] = 1;\r\n                        s = (t >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[o >> 2] = 1;\r\n                    s = 2147483647\r\n                }\r\n                r = b[D >> 1] | 0;\r\n                p = r * 4681 | 0;\r\n                if ((p | 0) != 1073741824) {\r\n                    q = (r * 9362 | 0) + s | 0;\r\n                    if ((p ^ s | 0) > 0 & (q ^ s | 0) < 0) {\r\n                        c[o >> 2] = 1;\r\n                        q = (s >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[o >> 2] = 1;\r\n                    q = 2147483647\r\n                }\r\n                r = Ce(q, o) | 0\r\n            }\r\n            t = n ? 8192 : l << 16 >> 16;\r\n            p = Z(t, f << 16 >> 16) | 0;\r\n            if ((p | 0) == 1073741824) {\r\n                c[o >> 2] = 1;\r\n                s = 2147483647\r\n            } else s = p << 1;\r\n            r = r << 16 >> 16;\r\n            q = r << 13;\r\n            if ((q | 0) != 1073741824) {\r\n                p = s + (r << 14) | 0;\r\n                if ((s ^ q | 0) > 0 & (p ^ s | 0) < 0) {\r\n                    c[o >> 2] = 1;\r\n                    s = (s >>> 31) + 2147483647 | 0\r\n                } else s = p\r\n            } else {\r\n                c[o >> 2] = 1;\r\n                s = 2147483647\r\n            }\r\n            p = Z(r, t) | 0;\r\n            if ((p | 0) == 1073741824) {\r\n                c[o >> 2] = 1;\r\n                q = 2147483647\r\n            } else q = p << 1;\r\n            p = s - q | 0;\r\n            if (((p ^ s) & (q ^ s) | 0) < 0) {\r\n                c[o >> 2] = 1;\r\n                p = (s >>> 31) + 2147483647 | 0\r\n            }\r\n            D = p << 2;\r\n            f = k;\r\n            o = Ce((D >> 2 | 0) == (p | 0) ? D : p >> 31 ^ 2147483647, o) | 0;\r\n            D = b[f >> 1] | 0;\r\n            D = D & 65535;\r\n            D = D + 1 | 0;\r\n            D = D & 65535;\r\n            b[f >> 1] = D;\r\n            return o | 0\r\n        }\r\n\r\n        function Na(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var f = 0, g = 0, h = 0, i = 0;\r\n            f = c;\r\n            g = f + 80 | 0;\r\n            do {\r\n                b[f >> 1] = 0;\r\n                f = f + 2 | 0\r\n            } while ((f | 0) < (g | 0));\r\n            f = 0;\r\n            do {\r\n                i = b[a + (f << 1) >> 1] | 0;\r\n                g = ((i & 8) << 10 & 65535 ^ 8192) + -4096 << 16 >> 16;\r\n                h = f << 16;\r\n                i = ((b[d + ((i & 7) << 1) >> 1] | 0) * 327680 | 0) + h >> 16;\r\n                b[c + (i << 1) >> 1] = g;\r\n                h = ((b[d + ((e[a + (f + 5 << 1) >> 1] & 7) << 1) >> 1] | 0) * 327680 | 0) + h >> 16;\r\n                if ((h | 0) < (i | 0)) g = 0 - (g & 65535) & 65535;\r\n                i = c + (h << 1) | 0;\r\n                b[i >> 1] = (e[i >> 1] | 0) + (g & 65535);\r\n                f = f + 1 | 0\r\n            } while ((f | 0) != 5);\r\n            return\r\n        }\r\n\r\n        function Oa(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var e = 0, f = 0, g = 0;\r\n            f = c << 16 >> 16;\r\n            e = (f << 1 & 2 | 1) + ((f >>> 1 & 7) * 5 | 0) | 0;\r\n            c = f >>> 4 & 3;\r\n            c = ((f >>> 6 & 7) * 5 | 0) + ((c | 0) == 3 ? 4 : c) | 0;\r\n            f = d;\r\n            g = f + 80 | 0;\r\n            do {\r\n                b[f >> 1] = 0;\r\n                f = f + 2 | 0\r\n            } while ((f | 0) < (g | 0));\r\n            a = a << 16 >> 16;\r\n            b[d + (e << 1) >> 1] = (0 - (a & 1) & 16383) + 57344;\r\n            b[d + (c << 1) >> 1] = (0 - (a >>> 1 & 1) & 16383) + 57344;\r\n            return\r\n        }\r\n\r\n        function Pa(a, c, d, f, g, h) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var i = 0, j = 0;\r\n            h = d << 16 >> 16;\r\n            j = h >>> 3;\r\n            a = a << 16 >> 16;\r\n            a = ((a << 17 >> 17 | 0) == (a | 0) ? a << 1 : a >>> 15 ^ 32767) + (j & 8) << 16;\r\n            j = (e[f + (a + 65536 >> 16 << 1) >> 1] | 0) + ((j & 7) * 5 | 0) | 0;\r\n            d = c << 16 >> 16;\r\n            i = (0 - (d & 1) & 16383) + 57344 & 65535;\r\n            a = g + ((e[f + (a >> 16 << 1) >> 1] | 0) + ((h & 7) * 5 | 0) << 16 >> 16 << 1) | 0;\r\n            c = g;\r\n            h = c + 80 | 0;\r\n            do {\r\n                b[c >> 1] = 0;\r\n                c = c + 2 | 0\r\n            } while ((c | 0) < (h | 0));\r\n            b[a >> 1] = i;\r\n            b[g + (j << 16 >> 16 << 1) >> 1] = (0 - (d >>> 1 & 1) & 16383) + 57344;\r\n            return\r\n        }\r\n\r\n        function Qa(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var e = 0, f = 0, g = 0, h = 0;\r\n            c = c << 16 >> 16;\r\n            e = (c & 7) * 5 | 0;\r\n            f = (c >>> 2 & 2 | 1) + ((c >>> 4 & 7) * 5 | 0) | 0;\r\n            c = (c >>> 6 & 2) + 2 + ((c >>> 8 & 7) * 5 | 0) | 0;\r\n            g = d;\r\n            h = g + 80 | 0;\r\n            do {\r\n                b[g >> 1] = 0;\r\n                g = g + 2 | 0\r\n            } while ((g | 0) < (h | 0));\r\n            a = a << 16 >> 16;\r\n            b[d + (e << 1) >> 1] = (0 - (a & 1) & 16383) + 57344;\r\n            b[d + (f << 1) >> 1] = (0 - (a >>> 1 & 1) & 16383) + 57344;\r\n            b[d + (c << 1) >> 1] = (0 - (a >>> 2 & 1) & 16383) + 57344;\r\n            return\r\n        }\r\n\r\n        function Ra(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, i = 0;\r\n            c = c << 16 >> 16;\r\n            h = b[d + ((c & 7) << 1) >> 1] | 0;\r\n            i = b[d + ((c >>> 3 & 7) << 1) >> 1] | 0;\r\n            g = b[d + ((c >>> 6 & 7) << 1) >> 1] | 0;\r\n            d = (c >>> 9 & 1) + 3 + ((b[d + ((c >>> 10 & 7) << 1) >> 1] | 0) * 5 | 0) | 0;\r\n            c = e;\r\n            f = c + 80 | 0;\r\n            do {\r\n                b[c >> 1] = 0;\r\n                c = c + 2 | 0\r\n            } while ((c | 0) < (f | 0));\r\n            a = a << 16 >> 16;\r\n            b[e + (h * 327680 >> 16 << 1) >> 1] = (0 - (a & 1) & 16383) + 57344;\r\n            b[e + ((i * 327680 | 0) + 65536 >> 16 << 1) >> 1] = (0 - (a >>> 1 & 1) & 16383) + 57344;\r\n            b[e + ((g * 327680 | 0) + 131072 >> 16 << 1) >> 1] = (0 - (a >>> 2 & 1) & 16383) + 57344;\r\n            b[e + (d << 16 >> 16 << 1) >> 1] = (0 - (a >>> 3 & 1) & 16383) + 57344;\r\n            return\r\n        }\r\n\r\n        function Sa(a, d, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0;\r\n            q = i;\r\n            i = i + 32 | 0;\r\n            p = q + 16 | 0;\r\n            o = q;\r\n            j = d;\r\n            h = j + 80 | 0;\r\n            do {\r\n                b[j >> 1] = 0;\r\n                j = j + 2 | 0\r\n            } while ((j | 0) < (h | 0));\r\n            h = b[a >> 1] | 0;\r\n            b[p >> 1] = h;\r\n            b[p + 2 >> 1] = b[a + 2 >> 1] | 0;\r\n            b[p + 4 >> 1] = b[a + 4 >> 1] | 0;\r\n            b[p + 6 >> 1] = b[a + 6 >> 1] | 0;\r\n            m = b[a + 8 >> 1] | 0;\r\n            Ta(m >>> 3 & 65535, m & 7, 0, 4, 1, o, f);\r\n            m = b[a + 10 >> 1] | 0;\r\n            Ta(m >>> 3 & 65535, m & 7, 2, 6, 5, o, f);\r\n            m = b[a + 12 >> 1] | 0;\r\n            g = m >> 2;\r\n            do if ((g * 25 | 0) != 1073741824) {\r\n                j = (Z(g, 1638400) | 0) + 786432 >> 21;\r\n                g = j * 6554 >> 15;\r\n                if ((g | 0) > 32767) {\r\n                    c[f >> 2] = 1;\r\n                    k = 1;\r\n                    l = 1;\r\n                    a = 163835;\r\n                    n = 6;\r\n                    break\r\n                }\r\n                a = (g << 16 >> 16) * 5 | 0;\r\n                k = g & 1;\r\n                if ((a | 0) == 1073741824) {\r\n                    c[f >> 2] = 1;\r\n                    l = 0;\r\n                    a = 65535\r\n                } else {\r\n                    l = 0;\r\n                    n = 6\r\n                }\r\n            } else {\r\n                c[f >> 2] = 1;\r\n                k = 0;\r\n                g = 0;\r\n                l = 0;\r\n                j = 0;\r\n                a = 0;\r\n                n = 6\r\n            } while (0);\r\n            if ((n | 0) == 6) a = a & 65535;\r\n            n = j - a | 0;\r\n            k = k << 16 >> 16 == 0 ? n : 4 - n | 0;\r\n            n = k << 16 >> 16;\r\n            b[o + 6 >> 1] = Rd(((k << 17 >> 17 | 0) == (n | 0) ? k << 1 : n >>> 15 ^ 32767) & 65535, m & 1, f) | 0;\r\n            if (l) {\r\n                c[f >> 2] = 1;\r\n                g = 32767\r\n            }\r\n            n = g << 16 >> 16;\r\n            b[o + 14 >> 1] = ((g << 17 >> 17 | 0) == (n | 0) ? g << 1 : n >>> 15 ^ 32767) + (m >>> 1 & 1);\r\n            g = 0;\r\n            while (1) {\r\n                h = h << 16 >> 16 == 0 ? 8191 : -8191;\r\n                n = (b[o + (g << 1) >> 1] << 2) + g << 16;\r\n                j = n >> 16;\r\n                if ((n | 0) < 2621440) b[d + (j << 1) >> 1] = h;\r\n                k = (b[o + (g + 4 << 1) >> 1] << 2) + g << 16;\r\n                a = k >> 16;\r\n                if ((a | 0) < (j | 0)) h = 0 - (h & 65535) & 65535;\r\n                if ((k | 0) < 2621440) {\r\n                    n = d + (a << 1) | 0;\r\n                    b[n >> 1] = (e[n >> 1] | 0) + (h & 65535)\r\n                }\r\n                g = g + 1 | 0;\r\n                if ((g | 0) == 4) break;\r\n                h = b[p + (g << 1) >> 1] | 0\r\n            }\r\n            i = q;\r\n            return\r\n        }\r\n\r\n        function Ta(a, d, e, f, g, h, i) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            var j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;\r\n            k = a << 16 >> 16 > 124 ? 124 : a;\r\n            a = (k << 16 >> 16) * 1311 >> 15;\r\n            p = (a | 0) > 32767;\r\n            if (!p) {\r\n                j = a << 16 >> 16;\r\n                if ((j * 25 | 0) == 1073741824) {\r\n                    c[i >> 2] = 1;\r\n                    j = 1073741823\r\n                } else o = 4\r\n            } else {\r\n                c[i >> 2] = 1;\r\n                j = 32767;\r\n                o = 4\r\n            }\r\n            if ((o | 0) == 4) j = (j * 50 | 0) >>> 1;\r\n            m = (k & 65535) - j | 0;\r\n            j = (m << 16 >> 16) * 6554 >> 15;\r\n            n = (j | 0) > 32767;\r\n            if (!n) {\r\n                k = j << 16 >> 16;\r\n                if ((k * 5 | 0) == 1073741824) {\r\n                    c[i >> 2] = 1;\r\n                    l = 1073741823\r\n                } else o = 9\r\n            } else {\r\n                c[i >> 2] = 1;\r\n                k = 32767;\r\n                o = 9\r\n            }\r\n            if ((o | 0) == 9) l = (k * 10 | 0) >>> 1;\r\n            m = m - l | 0;\r\n            o = m << 16 >> 16;\r\n            k = d << 16 >> 16;\r\n            l = k >> 2;\r\n            k = k - (l << 2) | 0;\r\n            b[h + (e << 16 >> 16 << 1) >> 1] = ((m << 17 >> 17 | 0) == (o | 0) ? m << 1 : o >>> 15 ^ 32767) + (k & 1);\r\n            if (n) {\r\n                c[i >> 2] = 1;\r\n                j = 32767\r\n            }\r\n            e = j << 16 >> 16;\r\n            b[h + (f << 16 >> 16 << 1) >> 1] = ((j << 17 >> 17 | 0) == (e | 0) ? j << 1 : e >>> 15 ^ 32767) + (k << 16 >> 17);\r\n            if (p) {\r\n                c[i >> 2] = 1;\r\n                a = 32767\r\n            }\r\n            f = a << 16 >> 16;\r\n            b[h + (g << 16 >> 16 << 1) >> 1] = Rd(l & 65535, ((a << 17 >> 17 | 0) == (f | 0) ? a << 1 : f >>> 15 ^ 32767) & 65535, i) | 0;\r\n            return\r\n        }\r\n\r\n        function Ua(a) {\r\n            a = a | 0;\r\n            var d = 0, e = 0, f = 0, g = 0;\r\n            if (!a) {\r\n                g = -1;\r\n                return g | 0\r\n            }\r\n            Yd(a + 1168 | 0);\r\n            b[a + 460 >> 1] = 40;\r\n            c[a + 1164 >> 2] = 0;\r\n            d = a + 646 | 0;\r\n            e = a + 1216 | 0;\r\n            f = a + 462 | 0;\r\n            g = f + 22 | 0;\r\n            do {\r\n                b[f >> 1] = 0;\r\n                f = f + 2 | 0\r\n            } while ((f | 0) < (g | 0));\r\n            db(d, c[e >> 2] | 0) | 0;\r\n            mb(a + 686 | 0) | 0;\r\n            ib(a + 700 | 0) | 0;\r\n            La(a + 608 | 0) | 0;\r\n            rb(a + 626 | 0, c[e >> 2] | 0) | 0;\r\n            Ja(a + 484 | 0) | 0;\r\n            tb(a + 730 | 0) | 0;\r\n            eb(a + 748 | 0) | 0;\r\n            Ud(a + 714 | 0) | 0;\r\n            Va(a, 0) | 0;\r\n            g = 0;\r\n            return g | 0\r\n        }\r\n\r\n        function Va(a, d) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            var e = 0, f = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a + 388 >> 2] = a + 308;\r\n            Qe(a | 0, 0, 308) | 0;\r\n            d = (d | 0) != 8;\r\n            if (d) {\r\n                e = a + 412 | 0;\r\n                f = e + 20 | 0;\r\n                do {\r\n                    b[e >> 1] = 0;\r\n                    e = e + 2 | 0\r\n                } while ((e | 0) < (f | 0));\r\n                b[a + 392 >> 1] = 3e4;\r\n                b[a + 394 >> 1] = 26e3;\r\n                b[a + 396 >> 1] = 21e3;\r\n                b[a + 398 >> 1] = 15e3;\r\n                b[a + 400 >> 1] = 8e3;\r\n                b[a + 402 >> 1] = 0;\r\n                b[a + 404 >> 1] = -8e3;\r\n                b[a + 406 >> 1] = -15e3;\r\n                b[a + 408 >> 1] = -21e3;\r\n                b[a + 410 >> 1] = -26e3\r\n            }\r\n            b[a + 432 >> 1] = 0;\r\n            b[a + 434 >> 1] = 40;\r\n            c[a + 1164 >> 2] = 0;\r\n            b[a + 436 >> 1] = 0;\r\n            b[a + 438 >> 1] = 0;\r\n            b[a + 440 >> 1] = 0;\r\n            b[a + 460 >> 1] = 40;\r\n            b[a + 462 >> 1] = 0;\r\n            b[a + 464 >> 1] = 0;\r\n            if (d) {\r\n                e = a + 442 | 0;\r\n                f = e + 18 | 0;\r\n                do {\r\n                    b[e >> 1] = 0;\r\n                    e = e + 2 | 0\r\n                } while ((e | 0) < (f | 0));\r\n                e = a + 466 | 0;\r\n                f = e + 18 | 0;\r\n                do {\r\n                    b[e >> 1] = 0;\r\n                    e = e + 2 | 0\r\n                } while ((e | 0) < (f | 0));\r\n                La(a + 608 | 0) | 0;\r\n                f = a + 1216 | 0;\r\n                rb(a + 626 | 0, c[f >> 2] | 0) | 0;\r\n                db(a + 646 | 0, c[f >> 2] | 0) | 0;\r\n                mb(a + 686 | 0) | 0;\r\n                ib(a + 700 | 0) | 0;\r\n                Ud(a + 714 | 0) | 0\r\n            } else {\r\n                e = a + 466 | 0;\r\n                f = e + 18 | 0;\r\n                do {\r\n                    b[e >> 1] = 0;\r\n                    e = e + 2 | 0\r\n                } while ((e | 0) < (f | 0));\r\n                La(a + 608 | 0) | 0;\r\n                db(a + 646 | 0, c[a + 1216 >> 2] | 0) | 0;\r\n                mb(a + 686 | 0) | 0;\r\n                ib(a + 700 | 0) | 0\r\n            }\r\n            Ja(a + 484 | 0) | 0;\r\n            b[a + 606 >> 1] = 21845;\r\n            tb(a + 730 | 0) | 0;\r\n            if (!d) {\r\n                a = 0;\r\n                return a | 0\r\n            }\r\n            eb(a + 748 | 0) | 0;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function Wa(d, f, g, h, j, k) {\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            var l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0,\r\n                A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0,\r\n                P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, _ = 0, $ = 0, aa = 0, ba = 0,\r\n                ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0, ma = 0, na = 0, oa = 0,\r\n                pa = 0, qa = 0, ra = 0, sa = 0, ta = 0, ua = 0, va = 0, wa = 0, xa = 0, ya = 0, za = 0, Aa = 0, Ba = 0,\r\n                Ca = 0, Ea = 0, Fa = 0, Ga = 0, Ha = 0, Ja = 0, La = 0, Ta = 0, Ua = 0, Wa = 0, bb = 0, db = 0, eb = 0,\r\n                ib = 0, mb = 0, pb = 0, rb = 0, tb = 0, xb = 0, yb = 0, zb = 0, Ab = 0, Bb = 0;\r\n            Bb = i;\r\n            i = i + 336 | 0;\r\n            r = Bb + 236 | 0;\r\n            q = Bb + 216 | 0;\r\n            zb = Bb + 112 | 0;\r\n            yb = Bb + 12 | 0;\r\n            mb = Bb + 256 | 0;\r\n            rb = Bb + 136 | 0;\r\n            pb = Bb + 32 | 0;\r\n            eb = Bb + 8 | 0;\r\n            ib = Bb + 6 | 0;\r\n            xb = Bb + 4 | 0;\r\n            tb = Bb + 2 | 0;\r\n            Ab = Bb;\r\n            Ta = d + 1164 | 0;\r\n            Ua = d + 748 | 0;\r\n            Wa = hb(Ua, h, Ta) | 0;\r\n            if (Wa) {\r\n                Va(d, 8) | 0;\r\n                fb(Ua, d + 412 | 0, d + 646 | 0, d + 714 | 0, d + 608 | 0, Wa, f, g, d + 1168 | 0, j, k, Ta);\r\n                Ab = d + 666 | 0;\r\n                me(Ab, d + 392 | 0, 10, Ta);\r\n                sb(d + 626 | 0, Ab, Ta);\r\n                Ab = d + 1156 | 0;\r\n                c[Ab >> 2] = Wa;\r\n                i = Bb;\r\n                return\r\n            }\r\n            switch (h | 0) {\r\n                case 1: {\r\n                    l = 1;\r\n                    x = 6;\r\n                    break\r\n                }\r\n                case 2:\r\n                case 7: {\r\n                    Ia(d + 606 | 0, b[(c[d + 1256 >> 2] | 0) + (f << 1) >> 1] | 0, c[(c[d + 1260 >> 2] | 0) + (f << 2) >> 2] | 0, g, c[d + 1276 >> 2] | 0, Ta);\r\n                    x = 9;\r\n                    break\r\n                }\r\n                case 3: {\r\n                    x = 9;\r\n                    break\r\n                }\r\n                default: {\r\n                    l = 0;\r\n                    x = 6\r\n                }\r\n            }\r\n            do if ((x | 0) == 6) {\r\n                h = d + 440 | 0;\r\n                if ((b[h >> 1] | 0) == 6) {\r\n                    b[h >> 1] = 5;\r\n                    Ja = 0;\r\n                    La = 0;\r\n                    break\r\n                } else {\r\n                    b[h >> 1] = 0;\r\n                    Ja = 0;\r\n                    La = 0;\r\n                    break\r\n                }\r\n            } else if ((x | 0) == 9) {\r\n                h = d + 440 | 0;\r\n                Ja = (e[h >> 1] | 0) + 1 & 65535;\r\n                b[h >> 1] = Ja << 16 >> 16 > 6 ? 6 : Ja;\r\n                Ja = 1;\r\n                La = 1;\r\n                l = 0\r\n            } while (0);\r\n            Ea = d + 1156 | 0;\r\n            switch (c[Ea >> 2] | 0) {\r\n                case 1: {\r\n                    b[h >> 1] = 5;\r\n                    b[d + 436 >> 1] = 0;\r\n                    break\r\n                }\r\n                case 2: {\r\n                    b[h >> 1] = 5;\r\n                    b[d + 436 >> 1] = 1;\r\n                    break\r\n                }\r\n                default: {\r\n                }\r\n            }\r\n            n = d + 646 | 0;\r\n            Fa = d + 666 | 0;\r\n            m = zb;\r\n            o = Fa;\r\n            p = m + 20 | 0;\r\n            do {\r\n                a[m >> 0] = a[o >> 0] | 0;\r\n                m = m + 1 | 0;\r\n                o = o + 1 | 0\r\n            } while ((m | 0) < (p | 0));\r\n            Ga = (f | 0) != 7;\r\n            Ha = d + 1168 | 0;\r\n            if (Ga) {\r\n                ab(n, f, La, g, Ha, r, Ta);\r\n                m = d + 392 | 0;\r\n                ae(m, r, k, Ta);\r\n                g = g + 6 | 0\r\n            } else {\r\n                cb(n, La, g, Ha, q, r, Ta);\r\n                m = d + 392 | 0;\r\n                _d(m, q, r, k, Ta);\r\n                g = g + 10 | 0\r\n            }\r\n            o = r;\r\n            p = m + 20 | 0;\r\n            do {\r\n                b[m >> 1] = b[o >> 1] | 0;\r\n                m = m + 2 | 0;\r\n                o = o + 2 | 0\r\n            } while ((m | 0) < (p | 0));\r\n            Ca = f >>> 0 > 1;\r\n            B = f >>> 0 < 4 & 1;\r\n            Ba = (f | 0) == 5;\r\n            Aa = Ba ? 10 : 5;\r\n            Ba = Ba ? 19 : 9;\r\n            E = d + 434 | 0;\r\n            F = 143 - Ba & 65535;\r\n            G = d + 460 | 0;\r\n            H = d + 462 | 0;\r\n            I = d + 464 | 0;\r\n            C = f >>> 0 > 2;\r\n            J = d + 388 | 0;\r\n            K = (f | 0) == 0;\r\n            L = f >>> 0 < 2;\r\n            M = d + 1244 | 0;\r\n            N = d + 432 | 0;\r\n            O = f >>> 0 < 6;\r\n            P = d + 1168 | 0;\r\n            Q = (f | 0) == 6;\r\n            R = La << 16 >> 16 == 0;\r\n            S = d + 714 | 0;\r\n            T = d + 686 | 0;\r\n            U = d + 436 | 0;\r\n            V = d + 700 | 0;\r\n            W = (f | 0) == 7;\r\n            X = d + 482 | 0;\r\n            Y = f >>> 0 < 3;\r\n            _ = d + 608 | 0;\r\n            $ = d + 626 | 0;\r\n            aa = d + 438 | 0;\r\n            ba = f >>> 0 < 7;\r\n            ca = d + 730 | 0;\r\n            D = Ja ^ 1;\r\n            da = l << 16 >> 16 != 0;\r\n            za = da ? La ^ 1 : 0;\r\n            ea = d + 442 | 0;\r\n            fa = d + 458 | 0;\r\n            ga = d + 412 | 0;\r\n            ha = d + 80 | 0;\r\n            ia = d + 1236 | 0;\r\n            ja = d + 1240 | 0;\r\n            ka = d + 468 | 0;\r\n            la = d + 466 | 0;\r\n            ma = d + 470 | 0;\r\n            na = d + 472 | 0;\r\n            oa = d + 474 | 0;\r\n            pa = d + 476 | 0;\r\n            qa = d + 478 | 0;\r\n            ra = d + 480 | 0;\r\n            sa = d + 444 | 0;\r\n            ta = d + 446 | 0;\r\n            ua = d + 448 | 0;\r\n            va = d + 450 | 0;\r\n            wa = d + 452 | 0;\r\n            xa = d + 454 | 0;\r\n            ya = d + 456 | 0;\r\n            y = 0;\r\n            z = 0;\r\n            s = 0;\r\n            t = 0;\r\n            A = -1;\r\n            while (1) {\r\n                A = (A << 16 >> 16) + 1 | 0;\r\n                p = A & 65535;\r\n                z = 1 - (z << 16 >> 16) | 0;\r\n                v = z & 65535;\r\n                q = Ca & s << 16 >> 16 == 80 ? 0 : s;\r\n                u = g + 2 | 0;\r\n                r = b[g >> 1] | 0;\r\n                a:do if (Ga) {\r\n                    w = b[E >> 1] | 0;\r\n                    m = (w & 65535) - Aa & 65535;\r\n                    m = m << 16 >> 16 < 20 ? 20 : m;\r\n                    o = (m & 65535) + Ba & 65535;\r\n                    n = o << 16 >> 16 > 143;\r\n                    Ya(r, n ? F : m, n ? 143 : o, q, w, eb, ib, B, Ta);\r\n                    q = b[eb >> 1] | 0;\r\n                    b[G >> 1] = q;\r\n                    if (Ja) {\r\n                        r = b[E >> 1] | 0;\r\n                        if (r << 16 >> 16 < 143) {\r\n                            r = (r & 65535) + 1 & 65535;\r\n                            b[E >> 1] = r\r\n                        }\r\n                        b[eb >> 1] = r;\r\n                        b[ib >> 1] = 0;\r\n                        if ((b[H >> 1] | 0) != 0 ? !(C | (b[I >> 1] | 0) < 5) : 0) {\r\n                            b[eb >> 1] = q;\r\n                            r = q;\r\n                            q = 0\r\n                        } else q = 0\r\n                    } else {\r\n                        r = q;\r\n                        q = b[ib >> 1] | 0\r\n                    }\r\n                    se(c[J >> 2] | 0, r, q, 40, 1, Ta);\r\n                    if (L) {\r\n                        q = g + 6 | 0;\r\n                        Pa(p, b[g + 4 >> 1] | 0, b[u >> 1] | 0, c[M >> 2] | 0, mb, Ta);\r\n                        g = b[N >> 1] | 0;\r\n                        w = g << 16 >> 16;\r\n                        r = w << 1;\r\n                        if ((r | 0) == (w << 17 >> 16 | 0)) {\r\n                            o = K;\r\n                            break\r\n                        }\r\n                        o = K;\r\n                        r = g << 16 >> 16 > 0 ? 32767 : -32768;\r\n                        break\r\n                    }\r\n                    switch (f | 0) {\r\n                        case 2: {\r\n                            q = g + 6 | 0;\r\n                            Oa(b[g + 4 >> 1] | 0, b[u >> 1] | 0, mb);\r\n                            g = b[N >> 1] | 0;\r\n                            w = g << 16 >> 16;\r\n                            r = w << 1;\r\n                            if ((r | 0) == (w << 17 >> 16 | 0)) {\r\n                                o = K;\r\n                                break a\r\n                            }\r\n                            o = K;\r\n                            r = g << 16 >> 16 > 0 ? 32767 : -32768;\r\n                            break a\r\n                        }\r\n                        case 3: {\r\n                            q = g + 6 | 0;\r\n                            Qa(b[g + 4 >> 1] | 0, b[u >> 1] | 0, mb);\r\n                            g = b[N >> 1] | 0;\r\n                            w = g << 16 >> 16;\r\n                            r = w << 1;\r\n                            if ((r | 0) == (w << 17 >> 16 | 0)) {\r\n                                o = K;\r\n                                break a\r\n                            }\r\n                            o = K;\r\n                            r = g << 16 >> 16 > 0 ? 32767 : -32768;\r\n                            break a\r\n                        }\r\n                        default: {\r\n                            if (O) {\r\n                                q = g + 6 | 0;\r\n                                Ra(b[g + 4 >> 1] | 0, b[u >> 1] | 0, c[P >> 2] | 0, mb);\r\n                                g = b[N >> 1] | 0;\r\n                                w = g << 16 >> 16;\r\n                                r = w << 1;\r\n                                if ((r | 0) == (w << 17 >> 16 | 0)) {\r\n                                    o = K;\r\n                                    break a\r\n                                }\r\n                                o = K;\r\n                                r = g << 16 >> 16 > 0 ? 32767 : -32768;\r\n                                break a\r\n                            }\r\n                            if (!Q) {\r\n                                o = K;\r\n                                x = 44;\r\n                                break a\r\n                            }\r\n                            Sa(u, mb, Ta);\r\n                            r = g + 16 | 0;\r\n                            g = b[N >> 1] | 0;\r\n                            w = g << 16 >> 16;\r\n                            p = w << 1;\r\n                            if ((p | 0) == (w << 17 >> 16 | 0)) {\r\n                                q = r;\r\n                                o = K;\r\n                                r = p;\r\n                                break a\r\n                            }\r\n                            q = r;\r\n                            o = K;\r\n                            r = g << 16 >> 16 > 0 ? 32767 : -32768;\r\n                            break a\r\n                        }\r\n                    }\r\n                } else {\r\n                    Za(r, 18, 143, q, eb, ib, Ta);\r\n                    if (R ? q << 16 >> 16 == 0 | r << 16 >> 16 < 61 : 0) {\r\n                        r = b[eb >> 1] | 0;\r\n                        q = b[ib >> 1] | 0\r\n                    } else {\r\n                        b[G >> 1] = b[eb >> 1] | 0;\r\n                        r = b[E >> 1] | 0;\r\n                        b[eb >> 1] = r;\r\n                        b[ib >> 1] = 0;\r\n                        q = 0\r\n                    }\r\n                    se(c[J >> 2] | 0, r, q, 40, 0, Ta);\r\n                    o = 0;\r\n                    x = 44\r\n                } while (0);\r\n                if ((x | 0) == 44) {\r\n                    x = 0;\r\n                    if (Ja) lb(T, b[h >> 1] | 0, xb, Ta); else b[xb >> 1] = $a(f, b[u >> 1] | 0, c[ja >> 2] | 0) | 0;\r\n                    nb(T, La, b[U >> 1] | 0, xb, Ta);\r\n                    Na(g + 4 | 0, mb, c[P >> 2] | 0);\r\n                    r = g + 24 | 0;\r\n                    g = b[xb >> 1] | 0;\r\n                    w = g << 16 >> 16;\r\n                    p = w << 1;\r\n                    if ((p | 0) == (w << 17 >> 16 | 0)) {\r\n                        q = r;\r\n                        r = p\r\n                    } else {\r\n                        q = r;\r\n                        r = g << 16 >> 16 > 0 ? 32767 : -32768\r\n                    }\r\n                }\r\n                g = b[eb >> 1] | 0;\r\n                b:do if (g << 16 >> 16 < 40) {\r\n                    m = r << 16 >> 16;\r\n                    n = g;\r\n                    r = g << 16 >> 16;\r\n                    while (1) {\r\n                        p = mb + (r << 1) | 0;\r\n                        g = (Z(b[mb + (r - (n << 16 >> 16) << 1) >> 1] | 0, m) | 0) >> 15;\r\n                        if ((g | 0) > 32767) {\r\n                            c[Ta >> 2] = 1;\r\n                            g = 32767\r\n                        }\r\n                        w = g & 65535;\r\n                        b[Ab >> 1] = w;\r\n                        b[p >> 1] = Rd(b[p >> 1] | 0, w, Ta) | 0;\r\n                        r = r + 1 | 0;\r\n                        if ((r & 65535) << 16 >> 16 == 40) break b;\r\n                        n = b[eb >> 1] | 0\r\n                    }\r\n                } while (0);\r\n                c:do if (o) {\r\n                    o = (z & 65535 | 0) == 0;\r\n                    if (o) {\r\n                        g = q;\r\n                        p = t\r\n                    } else {\r\n                        g = q + 2 | 0;\r\n                        p = b[q >> 1] | 0\r\n                    }\r\n                    if (R) Xa(S, f, p, mb, v, xb, tb, Ha, Ta); else {\r\n                        lb(T, b[h >> 1] | 0, xb, Ta);\r\n                        jb(V, S, b[h >> 1] | 0, tb, Ta)\r\n                    }\r\n                    nb(T, La, b[U >> 1] | 0, xb, Ta);\r\n                    kb(V, La, b[U >> 1] | 0, tb, Ta);\r\n                    q = b[xb >> 1] | 0;\r\n                    r = q << 16 >> 16 > 13017 ? 13017 : q;\r\n                    if (o) x = 80; else w = p\r\n                } else {\r\n                    g = q + 2 | 0;\r\n                    r = b[q >> 1] | 0;\r\n                    switch (f | 0) {\r\n                        case 1:\r\n                        case 2:\r\n                        case 3:\r\n                        case 4:\r\n                        case 6: {\r\n                            if (R) Xa(S, f, r, mb, v, xb, tb, Ha, Ta); else {\r\n                                lb(T, b[h >> 1] | 0, xb, Ta);\r\n                                jb(V, S, b[h >> 1] | 0, tb, Ta)\r\n                            }\r\n                            nb(T, La, b[U >> 1] | 0, xb, Ta);\r\n                            kb(V, La, b[U >> 1] | 0, tb, Ta);\r\n                            q = b[xb >> 1] | 0;\r\n                            r = q << 16 >> 16 > 13017 ? 13017 : q;\r\n                            if (!Q) {\r\n                                p = t;\r\n                                x = 80;\r\n                                break c\r\n                            }\r\n                            if ((b[E >> 1] | 0) <= 45) {\r\n                                p = t;\r\n                                x = 80;\r\n                                break c\r\n                            }\r\n                            p = t;\r\n                            r = r << 16 >> 16 >>> 2 & 65535;\r\n                            x = 80;\r\n                            break c\r\n                        }\r\n                        case 5: {\r\n                            if (Ja) lb(T, b[h >> 1] | 0, xb, Ta); else b[xb >> 1] = $a(5, r, c[ja >> 2] | 0) | 0;\r\n                            nb(T, La, b[U >> 1] | 0, xb, Ta);\r\n                            if (R) _a(S, 5, b[g >> 1] | 0, mb, c[ia >> 2] | 0, tb, Ta); else jb(V, S, b[h >> 1] | 0, tb, Ta);\r\n                            kb(V, La, b[U >> 1] | 0, tb, Ta);\r\n                            r = b[xb >> 1] | 0;\r\n                            g = q + 4 | 0;\r\n                            q = r;\r\n                            p = t;\r\n                            r = r << 16 >> 16 > 13017 ? 13017 : r;\r\n                            x = 80;\r\n                            break c\r\n                        }\r\n                        default: {\r\n                            if (R) _a(S, f, r, mb, c[ia >> 2] | 0, tb, Ta); else jb(V, S, b[h >> 1] | 0, tb, Ta);\r\n                            kb(V, La, b[U >> 1] | 0, tb, Ta);\r\n                            r = b[xb >> 1] | 0;\r\n                            q = r;\r\n                            p = t;\r\n                            x = 80;\r\n                            break c\r\n                        }\r\n                    }\r\n                } while (0);\r\n                if ((x | 0) == 80) {\r\n                    x = 0;\r\n                    b[N >> 1] = q << 16 >> 16 > 13017 ? 13017 : q;\r\n                    w = p\r\n                }\r\n                r = r << 16 >> 16;\r\n                r = (r << 17 >> 17 | 0) == (r | 0) ? r << 1 : r >>> 15 ^ 32767;\r\n                v = (r & 65535) << 16 >> 16 > 16384;\r\n                d:do if (v) {\r\n                    u = r << 16 >> 16;\r\n                    if (W) q = 0; else {\r\n                        q = 0;\r\n                        while (1) {\r\n                            r = (Z(b[(c[J >> 2] | 0) + (q << 1) >> 1] | 0, u) | 0) >> 15;\r\n                            if ((r | 0) > 32767) {\r\n                                c[Ta >> 2] = 1;\r\n                                r = 32767\r\n                            }\r\n                            b[Ab >> 1] = r;\r\n                            r = Z(b[xb >> 1] | 0, r << 16 >> 16) | 0;\r\n                            if ((r | 0) == 1073741824) {\r\n                                c[Ta >> 2] = 1;\r\n                                r = 2147483647\r\n                            } else r = r << 1;\r\n                            b[rb + (q << 1) >> 1] = Ce(r, Ta) | 0;\r\n                            q = q + 1 | 0;\r\n                            if ((q | 0) == 40) break d\r\n                        }\r\n                    }\r\n                    do {\r\n                        r = (Z(b[(c[J >> 2] | 0) + (q << 1) >> 1] | 0, u) | 0) >> 15;\r\n                        if ((r | 0) > 32767) {\r\n                            c[Ta >> 2] = 1;\r\n                            r = 32767\r\n                        }\r\n                        b[Ab >> 1] = r;\r\n                        r = Z(b[xb >> 1] | 0, r << 16 >> 16) | 0;\r\n                        if ((r | 0) != 1073741824) {\r\n                            r = r << 1;\r\n                            if ((r | 0) < 0) r = ~((r ^ -2) >> 1); else x = 88\r\n                        } else {\r\n                            c[Ta >> 2] = 1;\r\n                            r = 2147483647;\r\n                            x = 88\r\n                        }\r\n                        if ((x | 0) == 88) {\r\n                            x = 0;\r\n                            r = r >> 1\r\n                        }\r\n                        b[rb + (q << 1) >> 1] = Ce(r, Ta) | 0;\r\n                        q = q + 1 | 0\r\n                    } while ((q | 0) != 40)\r\n                } while (0);\r\n                if (R) {\r\n                    b[la >> 1] = b[ka >> 1] | 0;\r\n                    b[ka >> 1] = b[ma >> 1] | 0;\r\n                    b[ma >> 1] = b[na >> 1] | 0;\r\n                    b[na >> 1] = b[oa >> 1] | 0;\r\n                    b[oa >> 1] = b[pa >> 1] | 0;\r\n                    b[pa >> 1] = b[qa >> 1] | 0;\r\n                    b[qa >> 1] = b[ra >> 1] | 0;\r\n                    b[ra >> 1] = b[X >> 1] | 0;\r\n                    b[X >> 1] = b[xb >> 1] | 0\r\n                }\r\n                if ((Ja | (b[U >> 1] | 0) != 0 ? Y & (b[H >> 1] | 0) != 0 : 0) ? (bb = b[xb >> 1] | 0, bb << 16 >> 16 > 12288) : 0) {\r\n                    x = (((bb << 16 >> 16) + 118784 | 0) >>> 1) + 12288 & 65535;\r\n                    b[xb >> 1] = x << 16 >> 16 > 14745 ? 14745 : x\r\n                }\r\n                qb(zb, Fa, s, yb, Ta);\r\n                r = Ma(_, f, b[tb >> 1] | 0, yb, $, La, b[U >> 1] | 0, l, b[aa >> 1] | 0, b[H >> 1] | 0, b[I >> 1] | 0, Ta) | 0;\r\n                switch (f | 0) {\r\n                    case 0:\r\n                    case 1:\r\n                    case 2:\r\n                    case 3:\r\n                    case 6: {\r\n                        p = b[xb >> 1] | 0;\r\n                        u = 1;\r\n                        break\r\n                    }\r\n                    default: {\r\n                        r = b[tb >> 1] | 0;\r\n                        p = b[xb >> 1] | 0;\r\n                        if (ba) u = 1; else {\r\n                            q = p << 16 >> 16;\r\n                            if (p << 16 >> 16 < 0) q = ~((q ^ -2) >> 1); else q = q >>> 1;\r\n                            p = q & 65535;\r\n                            u = 2\r\n                        }\r\n                    }\r\n                }\r\n                m = p << 16 >> 16;\r\n                s = u & 65535;\r\n                q = c[J >> 2] | 0;\r\n                t = 0;\r\n                do {\r\n                    q = q + (t << 1) | 0;\r\n                    b[pb + (t << 1) >> 1] = b[q >> 1] | 0;\r\n                    q = Z(b[q >> 1] | 0, m) | 0;\r\n                    if ((q | 0) == 1073741824) {\r\n                        c[Ta >> 2] = 1;\r\n                        n = 2147483647\r\n                    } else n = q << 1;\r\n                    o = Z(b[tb >> 1] | 0, b[mb + (t << 1) >> 1] | 0) | 0;\r\n                    if ((o | 0) != 1073741824) {\r\n                        q = (o << 1) + n | 0;\r\n                        if ((o ^ n | 0) > 0 & (q ^ n | 0) < 0) {\r\n                            c[Ta >> 2] = 1;\r\n                            q = (n >>> 31) + 2147483647 | 0\r\n                        }\r\n                    } else {\r\n                        c[Ta >> 2] = 1;\r\n                        q = 2147483647\r\n                    }\r\n                    x = q << s;\r\n                    x = Ce((x >> s | 0) == (q | 0) ? x : q >> 31 ^ 2147483647, Ta) | 0;\r\n                    q = c[J >> 2] | 0;\r\n                    b[q + (t << 1) >> 1] = x;\r\n                    t = t + 1 | 0\r\n                } while ((t | 0) != 40);\r\n                vb(ca);\r\n                if ((Y ? (b[I >> 1] | 0) > 3 : 0) ? !((b[H >> 1] | 0) == 0 | D) : 0) ub(ca);\r\n                wb(ca, f, pb, r, b[xb >> 1] | 0, mb, p, u, Ha, Ta);\r\n                r = 0;\r\n                o = 0;\r\n                do {\r\n                    q = b[pb + (o << 1) >> 1] | 0;\r\n                    q = Z(q, q) | 0;\r\n                    if ((q | 0) != 1073741824) {\r\n                        p = (q << 1) + r | 0;\r\n                        if ((q ^ r | 0) > 0 & (p ^ r | 0) < 0) {\r\n                            c[Ta >> 2] = 1;\r\n                            r = (r >>> 31) + 2147483647 | 0\r\n                        } else r = p\r\n                    } else {\r\n                        c[Ta >> 2] = 1;\r\n                        r = 2147483647\r\n                    }\r\n                    o = o + 1 | 0\r\n                } while ((o | 0) != 40);\r\n                if ((r | 0) < 0) r = ~((r ^ -2) >> 1); else r = r >> 1;\r\n                r = Fe(r, Ab, Ta) | 0;\r\n                p = ((b[Ab >> 1] | 0) >>> 1) + 15 | 0;\r\n                q = p & 65535;\r\n                p = p << 16 >> 16;\r\n                if (q << 16 >> 16 > 0) if (q << 16 >> 16 < 31) {\r\n                    r = r >> p;\r\n                    x = 135\r\n                } else {\r\n                    r = 0;\r\n                    x = 137\r\n                } else {\r\n                    u = 0 - p << 16 >> 16;\r\n                    x = r << u;\r\n                    r = (x >> u | 0) == (r | 0) ? x : r >> 31 ^ 2147483647;\r\n                    x = 135\r\n                }\r\n                if ((x | 0) == 135) {\r\n                    x = 0;\r\n                    if ((r | 0) < 0) r = ~((r ^ -4) >> 2); else x = 137\r\n                }\r\n                if ((x | 0) == 137) {\r\n                    x = 0;\r\n                    r = r >>> 2\r\n                }\r\n                r = r & 65535;\r\n                do if (Y ? (db = b[I >> 1] | 0, db << 16 >> 16 > 5) : 0) if (b[H >> 1] | 0) if ((b[h >> 1] | 0) < 4) {\r\n                    if (da) {\r\n                        if (!(Ja | (b[aa >> 1] | 0) != 0)) x = 145\r\n                    } else if (!Ja) x = 145;\r\n                    if ((x | 0) == 145 ? (0, (b[U >> 1] | 0) == 0) : 0) {\r\n                        x = 147;\r\n                        break\r\n                    }\r\n                    ob(pb, r, ea, db, b[U >> 1] | 0, za, Ta) | 0;\r\n                    x = 147\r\n                } else x = 147; else x = 151; else x = 147; while (0);\r\n                do if ((x | 0) == 147) {\r\n                    x = 0;\r\n                    if (b[H >> 1] | 0) {\r\n                        if (!Ja ? (b[U >> 1] | 0) == 0 : 0) {\r\n                            x = 151;\r\n                            break\r\n                        }\r\n                        if ((b[h >> 1] | 0) >= 4) x = 151\r\n                    } else x = 151\r\n                } while (0);\r\n                if ((x | 0) == 151) {\r\n                    x = 0;\r\n                    b[ea >> 1] = b[sa >> 1] | 0;\r\n                    b[sa >> 1] = b[ta >> 1] | 0;\r\n                    b[ta >> 1] = b[ua >> 1] | 0;\r\n                    b[ua >> 1] = b[va >> 1] | 0;\r\n                    b[va >> 1] = b[wa >> 1] | 0;\r\n                    b[wa >> 1] = b[xa >> 1] | 0;\r\n                    b[xa >> 1] = b[ya >> 1] | 0;\r\n                    b[ya >> 1] = b[fa >> 1] | 0;\r\n                    b[fa >> 1] = r\r\n                }\r\n                if (v) {\r\n                    r = 0;\r\n                    do {\r\n                        v = rb + (r << 1) | 0;\r\n                        b[v >> 1] = Rd(b[v >> 1] | 0, b[pb + (r << 1) >> 1] | 0, Ta) | 0;\r\n                        r = r + 1 | 0\r\n                    } while ((r | 0) != 40);\r\n                    Da(pb, rb, 40, Ta);\r\n                    c[Ta >> 2] = 0;\r\n                    He(k, rb, j + (y << 1) | 0, 40, ga, 0)\r\n                } else {\r\n                    c[Ta >> 2] = 0;\r\n                    He(k, pb, j + (y << 1) | 0, 40, ga, 0)\r\n                }\r\n                if (!(c[Ta >> 2] | 0)) Pe(ga | 0, j + (y + 30 << 1) | 0, 20) | 0; else {\r\n                    p = 193;\r\n                    while (1) {\r\n                        q = d + (p << 1) | 0;\r\n                        v = b[q >> 1] | 0;\r\n                        r = v << 16 >> 16;\r\n                        if (v << 16 >> 16 < 0) r = ~((r ^ -4) >> 2); else r = r >>> 2;\r\n                        b[q >> 1] = r;\r\n                        if ((p | 0) > 0) p = p + -1 | 0; else {\r\n                            p = 39;\r\n                            break\r\n                        }\r\n                    }\r\n                    while (1) {\r\n                        q = pb + (p << 1) | 0;\r\n                        v = b[q >> 1] | 0;\r\n                        r = v << 16 >> 16;\r\n                        if (v << 16 >> 16 < 0) r = ~((r ^ -4) >> 2); else r = r >>> 2;\r\n                        b[q >> 1] = r;\r\n                        if ((p | 0) > 0) p = p + -1 | 0; else break\r\n                    }\r\n                    He(k, pb, j + (y << 1) | 0, 40, ga, 1)\r\n                }\r\n                Pe(d | 0, ha | 0, 308) | 0;\r\n                b[E >> 1] = b[eb >> 1] | 0;\r\n                r = y + 40 | 0;\r\n                s = r & 65535;\r\n                if (s << 16 >> 16 >= 160) break; else {\r\n                    y = r << 16 >> 16;\r\n                    k = k + 22 | 0;\r\n                    t = w\r\n                }\r\n            }\r\n            b[H >> 1] = Ka(d + 484 | 0, d + 466 | 0, j, I, Ta) | 0;\r\n            gb(Ua, Fa, j, Ta);\r\n            b[U >> 1] = La;\r\n            b[aa >> 1] = l;\r\n            sb(d + 626 | 0, Fa, Ta);\r\n            Ab = Ea;\r\n            c[Ab >> 2] = Wa;\r\n            i = Bb;\r\n            return\r\n        }\r\n\r\n        function Xa(a, d, f, g, h, j, k, l, m) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            var n = 0, o = 0, p = 0, q = 0, r = 0;\r\n            r = i;\r\n            i = i + 16 | 0;\r\n            p = r + 2 | 0;\r\n            q = r;\r\n            f = f << 16 >> 16;\r\n            f = (f << 18 >> 18 | 0) == (f | 0) ? f << 2 : f >>> 15 ^ 32767;\r\n            switch (d | 0) {\r\n                case 3:\r\n                case 4:\r\n                case 6: {\r\n                    o = f << 16 >> 16;\r\n                    f = c[l + 84 >> 2] | 0;\r\n                    b[j >> 1] = b[f + (o << 1) >> 1] | 0;\r\n                    l = b[f + (o + 1 << 1) >> 1] | 0;\r\n                    n = b[f + (o + 3 << 1) >> 1] | 0;\r\n                    j = b[f + (o + 2 << 1) >> 1] | 0;\r\n                    break\r\n                }\r\n                case 0: {\r\n                    l = (f & 65535) + (h << 16 >> 16 << 1 ^ 2) | 0;\r\n                    l = (l & 65535) << 16 >> 16 > 1022 ? 1022 : l << 16 >> 16;\r\n                    b[j >> 1] = b[782 + (l << 1) >> 1] | 0;\r\n                    j = b[782 + (l + 1 << 1) >> 1] | 0;\r\n                    de(j << 16 >> 16, q, p, m);\r\n                    b[q >> 1] = (e[q >> 1] | 0) + 65524;\r\n                    l = Ee(b[p >> 1] | 0, 5, m) | 0;\r\n                    o = b[q >> 1] | 0;\r\n                    o = Rd(l, ((o << 26 >> 26 | 0) == (o | 0) ? o << 10 : o >>> 15 ^ 32767) & 65535, m) | 0;\r\n                    l = b[p >> 1] | 0;\r\n                    f = b[q >> 1] | 0;\r\n                    if ((f * 24660 | 0) == 1073741824) {\r\n                        c[m >> 2] = 1;\r\n                        h = 2147483647\r\n                    } else h = f * 49320 | 0;\r\n                    n = (l << 16 >> 16) * 24660 >> 15;\r\n                    f = h + (n << 1) | 0;\r\n                    if ((h ^ n | 0) > 0 & (f ^ h | 0) < 0) {\r\n                        c[m >> 2] = 1;\r\n                        f = (h >>> 31) + 2147483647 | 0\r\n                    }\r\n                    n = f << 13;\r\n                    l = j;\r\n                    n = Ce((n >> 13 | 0) == (f | 0) ? n : f >> 31 ^ 2147483647, m) | 0;\r\n                    j = o;\r\n                    break\r\n                }\r\n                default: {\r\n                    o = f << 16 >> 16;\r\n                    f = c[l + 80 >> 2] | 0;\r\n                    b[j >> 1] = b[f + (o << 1) >> 1] | 0;\r\n                    l = b[f + (o + 1 << 1) >> 1] | 0;\r\n                    n = b[f + (o + 3 << 1) >> 1] | 0;\r\n                    j = b[f + (o + 2 << 1) >> 1] | 0\r\n                }\r\n            }\r\n            Vd(a, d, g, q, p, 0, 0, m);\r\n            h = Z((re(14, b[p >> 1] | 0, m) | 0) << 16 >> 16, l << 16 >> 16) | 0;\r\n            if ((h | 0) == 1073741824) {\r\n                c[m >> 2] = 1;\r\n                f = 2147483647\r\n            } else f = h << 1;\r\n            l = 10 - (e[q >> 1] | 0) | 0;\r\n            h = l & 65535;\r\n            l = l << 16 >> 16;\r\n            if (h << 16 >> 16 > 0) {\r\n                q = h << 16 >> 16 < 31 ? f >> l : 0;\r\n                q = q >>> 16;\r\n                q = q & 65535;\r\n                b[k >> 1] = q;\r\n                Wd(a, j, n);\r\n                i = r;\r\n                return\r\n            } else {\r\n                m = 0 - l << 16 >> 16;\r\n                q = f << m;\r\n                q = (q >> m | 0) == (f | 0) ? q : f >> 31 ^ 2147483647;\r\n                q = q >>> 16;\r\n                q = q & 65535;\r\n                b[k >> 1] = q;\r\n                Wd(a, j, n);\r\n                i = r;\r\n                return\r\n            }\r\n        }\r\n\r\n        function Ya(a, d, e, f, g, h, i, j, k) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            if (!(f << 16 >> 16)) {\r\n                j = a << 16 >> 16;\r\n                if (a << 16 >> 16 >= 197) {\r\n                    b[h >> 1] = j + 65424;\r\n                    b[i >> 1] = 0;\r\n                    return\r\n                }\r\n                g = ((j << 16) + 131072 >> 16) * 10923 >> 15;\r\n                if ((g | 0) > 32767) {\r\n                    c[k >> 2] = 1;\r\n                    g = 32767\r\n                }\r\n                a = (g & 65535) + 19 | 0;\r\n                b[h >> 1] = a;\r\n                b[i >> 1] = j + 58 - ((a * 196608 | 0) >>> 16);\r\n                return\r\n            }\r\n            if (!(j << 16 >> 16)) {\r\n                k = a << 16 >> 16 << 16;\r\n                a = ((k + 131072 >> 16) * 21846 | 0) + -65536 >> 16;\r\n                b[h >> 1] = a + (d & 65535);\r\n                b[i >> 1] = ((k + -131072 | 0) >>> 16) - ((a * 196608 | 0) >>> 16);\r\n                return\r\n            }\r\n            if ((Ge(g, d, k) | 0) << 16 >> 16 > 5) g = (d & 65535) + 5 & 65535;\r\n            j = e << 16 >> 16;\r\n            j = (j - (g & 65535) & 65535) << 16 >> 16 > 4 ? j + 65532 & 65535 : g;\r\n            g = a << 16 >> 16;\r\n            if (a << 16 >> 16 < 4) {\r\n                b[h >> 1] = ((((j & 65535) << 16) + -327680 | 0) >>> 16) + g;\r\n                b[i >> 1] = 0;\r\n                return\r\n            }\r\n            g = g << 16;\r\n            if (a << 16 >> 16 < 12) {\r\n                k = (((g + -327680 >> 16) * 10923 | 0) >>> 15 << 16) + -65536 | 0;\r\n                a = k >> 16;\r\n                b[h >> 1] = (j & 65535) + a;\r\n                b[i >> 1] = ((g + -589824 | 0) >>> 16) - (k >>> 15) - a;\r\n                return\r\n            } else {\r\n                b[h >> 1] = ((g + -786432 + ((j & 65535) << 16) | 0) >>> 16) + 1;\r\n                b[i >> 1] = 0;\r\n                return\r\n            }\r\n        }\r\n\r\n        function Za(a, c, d, f, g, h, i) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            if (f << 16 >> 16) {\r\n                i = (e[g >> 1] | 0) + 65531 | 0;\r\n                i = (i << 16 >> 16 | 0) < (c << 16 >> 16 | 0) ? c : i & 65535;\r\n                d = d << 16 >> 16;\r\n                c = a << 16 >> 16 << 16;\r\n                a = ((c + 327680 >> 16) * 10924 | 0) + -65536 >> 16;\r\n                b[g >> 1] = (((((i & 65535) << 16) + 589824 >> 16 | 0) > (d | 0) ? d + 65527 & 65535 : i) & 65535) + a;\r\n                b[h >> 1] = ((c + -196608 | 0) >>> 16) - ((a * 393216 | 0) >>> 16);\r\n                return\r\n            }\r\n            f = a << 16 >> 16;\r\n            if (a << 16 >> 16 < 463) {\r\n                a = ((((f << 16) + 327680 >> 16) * 10924 | 0) >>> 16) + 17 | 0;\r\n                b[g >> 1] = a;\r\n                b[h >> 1] = f + 105 - ((a * 393216 | 0) >>> 16);\r\n                return\r\n            } else {\r\n                b[g >> 1] = f + 65168;\r\n                b[h >> 1] = 0;\r\n                return\r\n            }\r\n        }\r\n\r\n        function _a(a, d, e, f, g, h, j) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            var k = 0, l = 0, m = 0, n = 0;\r\n            n = i;\r\n            i = i + 16 | 0;\r\n            l = n + 6 | 0;\r\n            k = n + 4 | 0;\r\n            Vd(a, d, f, l, k, n + 2 | 0, n, j);\r\n            m = (e & 31) * 3 | 0;\r\n            f = g + (m << 1) | 0;\r\n            if (!((Ge(d & 65535, 7, j) | 0) << 16 >> 16)) {\r\n                l = re(b[l >> 1] | 0, b[k >> 1] | 0, j) | 0;\r\n                k = l << 16 >> 16;\r\n                k = (Z(((l << 20 >> 20 | 0) == (k | 0) ? l << 4 : k >>> 15 ^ 32767) << 16 >> 16, b[f >> 1] | 0) | 0) >> 15;\r\n                if ((k | 0) > 32767) {\r\n                    c[j >> 2] = 1;\r\n                    k = 32767\r\n                }\r\n                f = k << 16;\r\n                e = f >> 16;\r\n                if ((k << 17 >> 17 | 0) == (e | 0)) k = f >> 15; else k = e >>> 15 ^ 32767\r\n            } else {\r\n                e = re(14, b[k >> 1] | 0, j) | 0;\r\n                e = Z(e << 16 >> 16, b[f >> 1] | 0) | 0;\r\n                if ((e | 0) == 1073741824) {\r\n                    c[j >> 2] = 1;\r\n                    f = 2147483647\r\n                } else f = e << 1;\r\n                e = Ge(9, b[l >> 1] | 0, j) | 0;\r\n                k = e << 16 >> 16;\r\n                if (e << 16 >> 16 > 0) k = e << 16 >> 16 < 31 ? f >> k : 0; else {\r\n                    j = 0 - k << 16 >> 16;\r\n                    k = f << j;\r\n                    k = (k >> j | 0) == (f | 0) ? k : f >> 31 ^ 2147483647\r\n                }\r\n                k = k >>> 16\r\n            }\r\n            b[h >> 1] = k;\r\n            Wd(a, b[g + (m + 1 << 1) >> 1] | 0, b[g + (m + 2 << 1) >> 1] | 0);\r\n            i = n;\r\n            return\r\n        }\r\n\r\n        function $a(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            c = b[d + (c << 16 >> 16 << 1) >> 1] | 0;\r\n            if ((a | 0) != 7) {\r\n                a = c;\r\n                return a | 0\r\n            }\r\n            a = c & 65532;\r\n            return a | 0\r\n        }\r\n\r\n        function ab(d, e, f, g, h, j, k) {\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            var l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0;\r\n            v = i;\r\n            i = i + 48 | 0;\r\n            r = v + 20 | 0;\r\n            u = v;\r\n            t = c[h + 44 >> 2] | 0;\r\n            s = c[h + 64 >> 2] | 0;\r\n            l = c[h + 4 >> 2] | 0;\r\n            q = c[h + 12 >> 2] | 0;\r\n            n = c[h + 20 >> 2] | 0;\r\n            m = c[h + 56 >> 2] | 0;\r\n            if (!(f << 16 >> 16)) {\r\n                o = e >>> 0 < 2;\r\n                if (o) {\r\n                    f = 765;\r\n                    p = 508;\r\n                    n = c[h + 52 >> 2] | 0\r\n                } else {\r\n                    h = (e | 0) == 5;\r\n                    f = h ? 1533 : 765;\r\n                    p = 2044;\r\n                    l = h ? m : l\r\n                }\r\n                m = b[g >> 1] | 0;\r\n                f = ((m * 196608 >> 16 | 0) > (f & 65535 | 0) ? f : m * 3 & 65535) << 16 >> 16;\r\n                m = b[l + (f << 1) >> 1] | 0;\r\n                b[r >> 1] = m;\r\n                b[r + 2 >> 1] = b[l + (f + 1 << 1) >> 1] | 0;\r\n                b[r + 4 >> 1] = b[l + (f + 2 << 1) >> 1] | 0;\r\n                f = b[g + 2 >> 1] | 0;\r\n                if (o) f = f << 16 >> 16 << 1 & 65535;\r\n                o = (f << 16 >> 16) * 196608 | 0;\r\n                o = (o | 0) > 100466688 ? 1533 : o >> 16;\r\n                b[r + 6 >> 1] = b[q + (o << 1) >> 1] | 0;\r\n                b[r + 8 >> 1] = b[q + (o + 1 << 1) >> 1] | 0;\r\n                b[r + 10 >> 1] = b[q + (o + 2 << 1) >> 1] | 0;\r\n                g = b[g + 4 >> 1] | 0;\r\n                g = ((g << 18 >> 16 | 0) > (p & 65535 | 0) ? p : g << 2 & 65535) << 16 >> 16;\r\n                b[r + 12 >> 1] = b[n + (g << 1) >> 1] | 0;\r\n                b[r + 14 >> 1] = b[n + ((g | 1) << 1) >> 1] | 0;\r\n                b[r + 16 >> 1] = b[n + ((g | 2) << 1) >> 1] | 0;\r\n                b[r + 18 >> 1] = b[n + ((g | 3) << 1) >> 1] | 0;\r\n                if ((e | 0) == 8) {\r\n                    f = 0;\r\n                    while (1) {\r\n                        s = d + (f << 1) | 0;\r\n                        b[u + (f << 1) >> 1] = Rd(m, Rd(b[t + (f << 1) >> 1] | 0, b[s >> 1] | 0, k) | 0, k) | 0;\r\n                        b[s >> 1] = m;\r\n                        f = f + 1 | 0;\r\n                        if ((f | 0) == 10) break;\r\n                        m = b[r + (f << 1) >> 1] | 0\r\n                    }\r\n                    Ae(u, 205, 10, k);\r\n                    l = d + 20 | 0;\r\n                    m = u;\r\n                    f = l + 20 | 0;\r\n                    do {\r\n                        a[l >> 0] = a[m >> 0] | 0;\r\n                        l = l + 1 | 0;\r\n                        m = m + 1 | 0\r\n                    } while ((l | 0) < (f | 0));\r\n                    me(u, j, 10, k);\r\n                    i = v;\r\n                    return\r\n                } else l = 0;\r\n                do {\r\n                    m = d + (l << 1) | 0;\r\n                    f = (Z(b[s + (l << 1) >> 1] | 0, b[m >> 1] | 0) | 0) >> 15;\r\n                    if ((f | 0) > 32767) {\r\n                        c[k >> 2] = 1;\r\n                        f = 32767\r\n                    }\r\n                    g = Rd(b[t + (l << 1) >> 1] | 0, f & 65535, k) | 0;\r\n                    e = b[r + (l << 1) >> 1] | 0;\r\n                    b[u + (l << 1) >> 1] = Rd(e, g, k) | 0;\r\n                    b[m >> 1] = e;\r\n                    l = l + 1 | 0\r\n                } while ((l | 0) != 10);\r\n                Ae(u, 205, 10, k);\r\n                l = d + 20 | 0;\r\n                m = u;\r\n                f = l + 20 | 0;\r\n                do {\r\n                    a[l >> 0] = a[m >> 0] | 0;\r\n                    l = l + 1 | 0;\r\n                    m = m + 1 | 0\r\n                } while ((l | 0) < (f | 0));\r\n                me(u, j, 10, k);\r\n                i = v;\r\n                return\r\n            } else {\r\n                l = 0;\r\n                do {\r\n                    f = (b[d + 20 + (l << 1) >> 1] | 0) * 29491 >> 15;\r\n                    if ((f | 0) > 32767) {\r\n                        c[k >> 2] = 1;\r\n                        f = 32767\r\n                    }\r\n                    m = (b[t + (l << 1) >> 1] | 0) * 3277 >> 15;\r\n                    if ((m | 0) > 32767) {\r\n                        c[k >> 2] = 1;\r\n                        m = 32767\r\n                    }\r\n                    b[u + (l << 1) >> 1] = Rd(m & 65535, f & 65535, k) | 0;\r\n                    l = l + 1 | 0\r\n                } while ((l | 0) != 10);\r\n                if ((e | 0) == 8) {\r\n                    l = 0;\r\n                    do {\r\n                        s = d + (l << 1) | 0;\r\n                        r = Rd(b[t + (l << 1) >> 1] | 0, b[s >> 1] | 0, k) | 0;\r\n                        b[s >> 1] = Ge(b[u + (l << 1) >> 1] | 0, r, k) | 0;\r\n                        l = l + 1 | 0\r\n                    } while ((l | 0) != 10);\r\n                    Ae(u, 205, 10, k);\r\n                    l = d + 20 | 0;\r\n                    m = u;\r\n                    f = l + 20 | 0;\r\n                    do {\r\n                        a[l >> 0] = a[m >> 0] | 0;\r\n                        l = l + 1 | 0;\r\n                        m = m + 1 | 0\r\n                    } while ((l | 0) < (f | 0));\r\n                    me(u, j, 10, k);\r\n                    i = v;\r\n                    return\r\n                } else l = 0;\r\n                do {\r\n                    m = d + (l << 1) | 0;\r\n                    f = (Z(b[s + (l << 1) >> 1] | 0, b[m >> 1] | 0) | 0) >> 15;\r\n                    if ((f | 0) > 32767) {\r\n                        c[k >> 2] = 1;\r\n                        f = 32767\r\n                    }\r\n                    r = Rd(b[t + (l << 1) >> 1] | 0, f & 65535, k) | 0;\r\n                    b[m >> 1] = Ge(b[u + (l << 1) >> 1] | 0, r, k) | 0;\r\n                    l = l + 1 | 0\r\n                } while ((l | 0) != 10);\r\n                Ae(u, 205, 10, k);\r\n                l = d + 20 | 0;\r\n                m = u;\r\n                f = l + 20 | 0;\r\n                do {\r\n                    a[l >> 0] = a[m >> 0] | 0;\r\n                    l = l + 1 | 0;\r\n                    m = m + 1 | 0\r\n                } while ((l | 0) < (f | 0));\r\n                me(u, j, 10, k);\r\n                i = v;\r\n                return\r\n            }\r\n        }\r\n\r\n        function bb(a, b, c) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            c = c | 0;\r\n            Pe(a | 0, c + ((b << 16 >> 16) * 10 << 1) | 0, 20) | 0;\r\n            return\r\n        }\r\n\r\n        function cb(d, e, f, g, h, j, k) {\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            var l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0;\r\n            v = i;\r\n            i = i + 80 | 0;\r\n            q = v + 60 | 0;\r\n            r = v + 40 | 0;\r\n            t = v + 20 | 0;\r\n            u = v;\r\n            s = c[g + 48 >> 2] | 0;\r\n            n = c[g + 24 >> 2] | 0;\r\n            o = c[g + 28 >> 2] | 0;\r\n            p = c[g + 32 >> 2] | 0;\r\n            if (e << 16 >> 16) {\r\n                l = 0;\r\n                do {\r\n                    q = s + (l << 1) | 0;\r\n                    f = Rd(((b[q >> 1] | 0) * 1639 | 0) >>> 15 & 65535, ((b[d + 20 + (l << 1) >> 1] | 0) * 31128 | 0) >>> 15 & 65535, k) | 0;\r\n                    b[t + (l << 1) >> 1] = f;\r\n                    b[u + (l << 1) >> 1] = f;\r\n                    r = d + (l << 1) | 0;\r\n                    b[r >> 1] = Ge(f, Rd(b[q >> 1] | 0, ((b[r >> 1] | 0) * 21299 | 0) >>> 15 & 65535, k) | 0, k) | 0;\r\n                    l = l + 1 | 0\r\n                } while ((l | 0) != 10);\r\n                Ae(t, 205, 10, k);\r\n                Ae(u, 205, 10, k);\r\n                l = d + 20 | 0;\r\n                g = u;\r\n                e = l + 20 | 0;\r\n                do {\r\n                    a[l >> 0] = a[g >> 0] | 0;\r\n                    l = l + 1 | 0;\r\n                    g = g + 1 | 0\r\n                } while ((l | 0) < (e | 0));\r\n                me(t, h, 10, k);\r\n                me(u, j, 10, k);\r\n                i = v;\r\n                return\r\n            }\r\n            e = c[g + 16 >> 2] | 0;\r\n            g = c[g + 8 >> 2] | 0;\r\n            m = b[f >> 1] | 0;\r\n            m = ((m << 18 >> 18 | 0) == (m | 0) ? m << 2 : m >>> 15 ^ 32767) << 16 >> 16;\r\n            b[q >> 1] = b[g + (m << 1) >> 1] | 0;\r\n            b[q + 2 >> 1] = b[g + (m + 1 << 1) >> 1] | 0;\r\n            b[r >> 1] = b[g + (m + 2 << 1) >> 1] | 0;\r\n            b[r + 2 >> 1] = b[g + (m + 3 << 1) >> 1] | 0;\r\n            m = b[f + 2 >> 1] | 0;\r\n            m = ((m << 18 >> 18 | 0) == (m | 0) ? m << 2 : m >>> 15 ^ 32767) << 16 >> 16;\r\n            b[q + 4 >> 1] = b[e + (m << 1) >> 1] | 0;\r\n            b[q + 6 >> 1] = b[e + (m + 1 << 1) >> 1] | 0;\r\n            b[r + 4 >> 1] = b[e + (m + 2 << 1) >> 1] | 0;\r\n            b[r + 6 >> 1] = b[e + (m + 3 << 1) >> 1] | 0;\r\n            m = b[f + 4 >> 1] | 0;\r\n            g = m << 16 >> 16;\r\n            if (m << 16 >> 16 < 0) e = ~((g ^ -2) >> 1); else e = g >>> 1;\r\n            m = e << 16 >> 16;\r\n            m = ((e << 18 >> 18 | 0) == (m | 0) ? e << 2 : m >>> 15 ^ 32767) << 16 >> 16;\r\n            l = n + (m + 1 << 1) | 0;\r\n            e = b[n + (m << 1) >> 1] | 0;\r\n            if (!(g & 1)) {\r\n                b[q + 8 >> 1] = e;\r\n                b[q + 10 >> 1] = b[l >> 1] | 0;\r\n                b[r + 8 >> 1] = b[n + (m + 2 << 1) >> 1] | 0;\r\n                b[r + 10 >> 1] = b[n + (m + 3 << 1) >> 1] | 0\r\n            } else {\r\n                if (e << 16 >> 16 == -32768) e = 32767; else e = 0 - (e & 65535) & 65535;\r\n                b[q + 8 >> 1] = e;\r\n                e = b[l >> 1] | 0;\r\n                if (e << 16 >> 16 == -32768) e = 32767; else e = 0 - (e & 65535) & 65535;\r\n                b[q + 10 >> 1] = e;\r\n                e = b[n + (m + 2 << 1) >> 1] | 0;\r\n                if (e << 16 >> 16 == -32768) e = 32767; else e = 0 - (e & 65535) & 65535;\r\n                b[r + 8 >> 1] = e;\r\n                e = b[n + (m + 3 << 1) >> 1] | 0;\r\n                if (e << 16 >> 16 == -32768) e = 32767; else e = 0 - (e & 65535) & 65535;\r\n                b[r + 10 >> 1] = e\r\n            }\r\n            l = b[f + 6 >> 1] | 0;\r\n            l = ((l << 18 >> 18 | 0) == (l | 0) ? l << 2 : l >>> 15 ^ 32767) << 16 >> 16;\r\n            b[q + 12 >> 1] = b[o + (l << 1) >> 1] | 0;\r\n            b[q + 14 >> 1] = b[o + (l + 1 << 1) >> 1] | 0;\r\n            b[r + 12 >> 1] = b[o + (l + 2 << 1) >> 1] | 0;\r\n            b[r + 14 >> 1] = b[o + (l + 3 << 1) >> 1] | 0;\r\n            l = b[f + 8 >> 1] | 0;\r\n            l = ((l << 18 >> 18 | 0) == (l | 0) ? l << 2 : l >>> 15 ^ 32767) << 16 >> 16;\r\n            b[q + 16 >> 1] = b[p + (l << 1) >> 1] | 0;\r\n            b[q + 18 >> 1] = b[p + (l + 1 << 1) >> 1] | 0;\r\n            b[r + 16 >> 1] = b[p + (l + 2 << 1) >> 1] | 0;\r\n            b[r + 18 >> 1] = b[p + (l + 3 << 1) >> 1] | 0;\r\n            l = 0;\r\n            do {\r\n                g = d + (l << 1) | 0;\r\n                e = (b[g >> 1] | 0) * 21299 >> 15;\r\n                if ((e | 0) > 32767) {\r\n                    c[k >> 2] = 1;\r\n                    e = 32767\r\n                }\r\n                p = Rd(b[s + (l << 1) >> 1] | 0, e & 65535, k) | 0;\r\n                b[t + (l << 1) >> 1] = Rd(b[q + (l << 1) >> 1] | 0, p, k) | 0;\r\n                f = b[r + (l << 1) >> 1] | 0;\r\n                b[u + (l << 1) >> 1] = Rd(f, p, k) | 0;\r\n                b[g >> 1] = f;\r\n                l = l + 1 | 0\r\n            } while ((l | 0) != 10);\r\n            Ae(t, 205, 10, k);\r\n            Ae(u, 205, 10, k);\r\n            l = d + 20 | 0;\r\n            g = u;\r\n            e = l + 20 | 0;\r\n            do {\r\n                a[l >> 0] = a[g >> 0] | 0;\r\n                l = l + 1 | 0;\r\n                g = g + 1 | 0\r\n            } while ((l | 0) < (e | 0));\r\n            me(t, h, 10, k);\r\n            me(u, j, 10, k);\r\n            i = v;\r\n            return\r\n        }\r\n\r\n        function db(a, c) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            var d = 0, e = 0;\r\n            if (!a) {\r\n                e = -1;\r\n                return e | 0\r\n            }\r\n            d = a;\r\n            e = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = 0;\r\n                d = d + 2 | 0\r\n            } while ((d | 0) < (e | 0));\r\n            Pe(a + 20 | 0, c | 0, 20) | 0;\r\n            e = 0;\r\n            return e | 0\r\n        }\r\n\r\n        function eb(d) {\r\n            d = d | 0;\r\n            var e = 0, f = 0, g = 0, h = 0, i = 0;\r\n            if (!d) {\r\n                i = -1;\r\n                return i | 0\r\n            }\r\n            b[d >> 1] = 0;\r\n            b[d + 2 >> 1] = 8192;\r\n            e = d + 4 | 0;\r\n            b[e >> 1] = 3500;\r\n            b[d + 6 >> 1] = 3500;\r\n            c[d + 8 >> 2] = 1887529304;\r\n            b[d + 12 >> 1] = 3e4;\r\n            b[d + 14 >> 1] = 26e3;\r\n            b[d + 16 >> 1] = 21e3;\r\n            b[d + 18 >> 1] = 15e3;\r\n            b[d + 20 >> 1] = 8e3;\r\n            b[d + 22 >> 1] = 0;\r\n            b[d + 24 >> 1] = -8e3;\r\n            b[d + 26 >> 1] = -15e3;\r\n            b[d + 28 >> 1] = -21e3;\r\n            b[d + 30 >> 1] = -26e3;\r\n            b[d + 32 >> 1] = 3e4;\r\n            b[d + 34 >> 1] = 26e3;\r\n            b[d + 36 >> 1] = 21e3;\r\n            b[d + 38 >> 1] = 15e3;\r\n            b[d + 40 >> 1] = 8e3;\r\n            b[d + 42 >> 1] = 0;\r\n            b[d + 44 >> 1] = -8e3;\r\n            b[d + 46 >> 1] = -15e3;\r\n            b[d + 48 >> 1] = -21e3;\r\n            b[d + 50 >> 1] = -26e3;\r\n            b[d + 212 >> 1] = 0;\r\n            b[d + 374 >> 1] = 0;\r\n            b[d + 392 >> 1] = 0;\r\n            f = d + 52 | 0;\r\n            b[f >> 1] = 1384;\r\n            b[d + 54 >> 1] = 2077;\r\n            b[d + 56 >> 1] = 3420;\r\n            b[d + 58 >> 1] = 5108;\r\n            b[d + 60 >> 1] = 6742;\r\n            b[d + 62 >> 1] = 8122;\r\n            b[d + 64 >> 1] = 9863;\r\n            b[d + 66 >> 1] = 11092;\r\n            b[d + 68 >> 1] = 12714;\r\n            b[d + 70 >> 1] = 13701;\r\n            g = d + 72 | 0;\r\n            h = f;\r\n            i = g + 20 | 0;\r\n            do {\r\n                a[g >> 0] = a[h >> 0] | 0;\r\n                g = g + 1 | 0;\r\n                h = h + 1 | 0\r\n            } while ((g | 0) < (i | 0));\r\n            g = d + 92 | 0;\r\n            h = f;\r\n            i = g + 20 | 0;\r\n            do {\r\n                a[g >> 0] = a[h >> 0] | 0;\r\n                g = g + 1 | 0;\r\n                h = h + 1 | 0\r\n            } while ((g | 0) < (i | 0));\r\n            g = d + 112 | 0;\r\n            h = f;\r\n            i = g + 20 | 0;\r\n            do {\r\n                a[g >> 0] = a[h >> 0] | 0;\r\n                g = g + 1 | 0;\r\n                h = h + 1 | 0\r\n            } while ((g | 0) < (i | 0));\r\n            g = d + 132 | 0;\r\n            h = f;\r\n            i = g + 20 | 0;\r\n            do {\r\n                a[g >> 0] = a[h >> 0] | 0;\r\n                g = g + 1 | 0;\r\n                h = h + 1 | 0\r\n            } while ((g | 0) < (i | 0));\r\n            g = d + 152 | 0;\r\n            h = f;\r\n            i = g + 20 | 0;\r\n            do {\r\n                a[g >> 0] = a[h >> 0] | 0;\r\n                g = g + 1 | 0;\r\n                h = h + 1 | 0\r\n            } while ((g | 0) < (i | 0));\r\n            g = d + 172 | 0;\r\n            h = f;\r\n            i = g + 20 | 0;\r\n            do {\r\n                a[g >> 0] = a[h >> 0] | 0;\r\n                g = g + 1 | 0;\r\n                h = h + 1 | 0\r\n            } while ((g | 0) < (i | 0));\r\n            g = d + 192 | 0;\r\n            h = f;\r\n            i = g + 20 | 0;\r\n            do {\r\n                a[g >> 0] = a[h >> 0] | 0;\r\n                g = g + 1 | 0;\r\n                h = h + 1 | 0\r\n            } while ((g | 0) < (i | 0));\r\n            Qe(d + 214 | 0, 0, 160) | 0;\r\n            b[d + 376 >> 1] = 3500;\r\n            b[d + 378 >> 1] = 3500;\r\n            i = b[e >> 1] | 0;\r\n            b[d + 380 >> 1] = i;\r\n            b[d + 382 >> 1] = i;\r\n            b[d + 384 >> 1] = i;\r\n            b[d + 386 >> 1] = i;\r\n            b[d + 388 >> 1] = i;\r\n            b[d + 390 >> 1] = i;\r\n            b[d + 394 >> 1] = 0;\r\n            b[d + 396 >> 1] = 7;\r\n            b[d + 398 >> 1] = 32767;\r\n            b[d + 400 >> 1] = 0;\r\n            b[d + 402 >> 1] = 0;\r\n            b[d + 404 >> 1] = 0;\r\n            c[d + 408 >> 2] = 1;\r\n            b[d + 412 >> 1] = 0;\r\n            i = 0;\r\n            return i | 0\r\n        }\r\n\r\n        function fb(d, f, g, h, j, k, l, m, n, o, p, q) {\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            p = p | 0;\r\n            q = q | 0;\r\n            var r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0,\r\n                G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0,\r\n                V = 0, W = 0, X = 0, Y = 0, _ = 0;\r\n            _ = i;\r\n            i = i + 304 | 0;\r\n            Q = _ + 192 | 0;\r\n            N = _ + 168 | 0;\r\n            S = _ + 148 | 0;\r\n            W = _ + 216 | 0;\r\n            T = _ + 146 | 0;\r\n            U = _ + 144 | 0;\r\n            O = _ + 124 | 0;\r\n            P = _ + 104 | 0;\r\n            R = _ + 84 | 0;\r\n            V = _ + 60 | 0;\r\n            L = _ + 40 | 0;\r\n            K = _;\r\n            Y = d + 404 | 0;\r\n            X = d + 400 | 0;\r\n            if ((b[Y >> 1] | 0) != 0 ? (b[X >> 1] | 0) != 0 : 0) {\r\n                J = d + 394 | 0;\r\n                b[J >> 1] = b[636 + (l << 1) >> 1] | 0;\r\n                z = b[d + 212 >> 1] | 0;\r\n                y = z + 10 | 0;\r\n                Pe(d + 52 + (((y & 65535 | 0) == 80 ? 0 : y << 16 >> 16) << 1) | 0, d + 52 + (z << 1) | 0, 20) | 0;\r\n                z = b[d + 392 >> 1] | 0;\r\n                y = z + 1 | 0;\r\n                b[d + 376 + (((y & 65535 | 0) == 8 ? 0 : y << 16 >> 16) << 1) >> 1] = b[d + 376 + (z << 1) >> 1] | 0;\r\n                y = d + 4 | 0;\r\n                b[y >> 1] = 0;\r\n                z = K + 36 | 0;\r\n                A = K + 32 | 0;\r\n                B = K + 28 | 0;\r\n                C = K + 24 | 0;\r\n                D = K + 20 | 0;\r\n                E = K + 16 | 0;\r\n                F = K + 12 | 0;\r\n                G = K + 8 | 0;\r\n                H = K + 4 | 0;\r\n                I = d + 52 | 0;\r\n                t = K;\r\n                M = t + 40 | 0;\r\n                do {\r\n                    c[t >> 2] = 0;\r\n                    t = t + 4 | 0\r\n                } while ((t | 0) < (M | 0));\r\n                s = 0;\r\n                r = 7;\r\n                while (1) {\r\n                    M = b[d + 376 + (r << 1) >> 1] | 0;\r\n                    x = M << 16 >> 16;\r\n                    if (M << 16 >> 16 < 0) x = ~((x ^ -8) >> 3); else x = x >>> 3;\r\n                    s = Rd(s, x & 65535, q) | 0;\r\n                    b[y >> 1] = s;\r\n                    v = r * 10 | 0;\r\n                    t = 9;\r\n                    while (1) {\r\n                        u = K + (t << 2) | 0;\r\n                        w = c[u >> 2] | 0;\r\n                        M = b[d + 52 + (t + v << 1) >> 1] | 0;\r\n                        x = M + w | 0;\r\n                        if ((M ^ w | 0) > -1 & (x ^ w | 0) < 0) {\r\n                            c[q >> 2] = 1;\r\n                            x = (w >>> 31) + 2147483647 | 0\r\n                        }\r\n                        c[u >> 2] = x;\r\n                        if ((t | 0) > 0) t = t + -1 | 0; else break\r\n                    }\r\n                    if ((r | 0) <= 0) break; else r = r + -1 | 0\r\n                }\r\n                b[L + 18 >> 1] = (c[z >> 2] | 0) >>> 3;\r\n                b[L + 16 >> 1] = (c[A >> 2] | 0) >>> 3;\r\n                b[L + 14 >> 1] = (c[B >> 2] | 0) >>> 3;\r\n                b[L + 12 >> 1] = (c[C >> 2] | 0) >>> 3;\r\n                b[L + 10 >> 1] = (c[D >> 2] | 0) >>> 3;\r\n                b[L + 8 >> 1] = (c[E >> 2] | 0) >>> 3;\r\n                b[L + 6 >> 1] = (c[F >> 2] | 0) >>> 3;\r\n                b[L + 4 >> 1] = (c[G >> 2] | 0) >>> 3;\r\n                b[L + 2 >> 1] = (c[H >> 2] | 0) >>> 3;\r\n                b[L >> 1] = (c[K >> 2] | 0) >>> 3;\r\n                me(L, d + 12 | 0, 10, q);\r\n                b[y >> 1] = Ge(b[y >> 1] | 0, b[J >> 1] | 0, q) | 0;\r\n                Oe(d + 214 | 0, I | 0, 160) | 0;\r\n                L = 9;\r\n                while (1) {\r\n                    M = b[d + 214 + (L + 70 << 1) >> 1] | 0;\r\n                    u = M << 16 >> 16;\r\n                    K = b[d + 214 + (L + 60 << 1) >> 1] | 0;\r\n                    t = (K << 16 >> 16) + u | 0;\r\n                    if ((K ^ M) << 16 >> 16 > -1 & (t ^ u | 0) < 0) {\r\n                        c[q >> 2] = 1;\r\n                        t = (u >>> 31) + 2147483647 | 0\r\n                    }\r\n                    M = b[d + 214 + (L + 50 << 1) >> 1] | 0;\r\n                    u = M + t | 0;\r\n                    if ((M ^ t | 0) > -1 & (u ^ t | 0) < 0) {\r\n                        c[q >> 2] = 1;\r\n                        u = (t >>> 31) + 2147483647 | 0\r\n                    }\r\n                    M = b[d + 214 + (L + 40 << 1) >> 1] | 0;\r\n                    t = M + u | 0;\r\n                    if ((M ^ u | 0) > -1 & (t ^ u | 0) < 0) {\r\n                        c[q >> 2] = 1;\r\n                        t = (u >>> 31) + 2147483647 | 0\r\n                    }\r\n                    M = b[d + 214 + (L + 30 << 1) >> 1] | 0;\r\n                    u = M + t | 0;\r\n                    if ((M ^ t | 0) > -1 & (u ^ t | 0) < 0) {\r\n                        c[q >> 2] = 1;\r\n                        u = (t >>> 31) + 2147483647 | 0\r\n                    }\r\n                    M = b[d + 214 + (L + 20 << 1) >> 1] | 0;\r\n                    t = M + u | 0;\r\n                    if ((M ^ u | 0) > -1 & (t ^ u | 0) < 0) {\r\n                        c[q >> 2] = 1;\r\n                        t = (u >>> 31) + 2147483647 | 0\r\n                    }\r\n                    M = b[d + 214 + (L + 10 << 1) >> 1] | 0;\r\n                    u = M + t | 0;\r\n                    if ((M ^ t | 0) > -1 & (u ^ t | 0) < 0) {\r\n                        c[q >> 2] = 1;\r\n                        t = (t >>> 31) + 2147483647 | 0\r\n                    } else t = u;\r\n                    M = b[d + 214 + (L << 1) >> 1] | 0;\r\n                    u = M + t | 0;\r\n                    if ((M ^ t | 0) > -1 & (u ^ t | 0) < 0) {\r\n                        c[q >> 2] = 1;\r\n                        u = (t >>> 31) + 2147483647 | 0\r\n                    }\r\n                    if ((u | 0) < 0) u = ~((u ^ -8) >> 3); else u = u >>> 3;\r\n                    x = u & 65535;\r\n                    v = b[654 + (L << 1) >> 1] | 0;\r\n                    w = 7;\r\n                    while (1) {\r\n                        r = d + 214 + ((w * 10 | 0) + L << 1) | 0;\r\n                        u = Ge(b[r >> 1] | 0, x, q) | 0;\r\n                        b[r >> 1] = u;\r\n                        u = (Z(v, u << 16 >> 16) | 0) >> 15;\r\n                        if ((u | 0) > 32767) {\r\n                            c[q >> 2] = 1;\r\n                            u = 32767\r\n                        }\r\n                        b[r >> 1] = u;\r\n                        s = (u & 65535) - (u >>> 15 & 1) | 0;\r\n                        s = s << 16 >> 31 ^ s;\r\n                        t = s & 65535;\r\n                        if (t << 16 >> 16 > 655) t = (((s << 16 >> 16) + 261489 | 0) >>> 2) + 655 & 65535;\r\n                        t = t << 16 >> 16 > 1310 ? 1310 : t;\r\n                        if (!(u & 32768)) u = t; else u = 0 - (t & 65535) & 65535;\r\n                        b[r >> 1] = u;\r\n                        if ((w | 0) > 0) w = w + -1 | 0; else break\r\n                    }\r\n                    if ((L | 0) > 0) L = L + -1 | 0; else break\r\n                }\r\n            }\r\n            if (b[X >> 1] | 0) {\r\n                x = d + 32 | 0;\r\n                w = d + 12 | 0;\r\n                t = x;\r\n                v = w;\r\n                M = t + 20 | 0;\r\n                do {\r\n                    a[t >> 0] = a[v >> 0] | 0;\r\n                    t = t + 1 | 0;\r\n                    v = v + 1 | 0\r\n                } while ((t | 0) < (M | 0));\r\n                v = d + 4 | 0;\r\n                s = b[v >> 1] | 0;\r\n                r = d + 6 | 0;\r\n                b[r >> 1] = s;\r\n                do if (b[d + 402 >> 1] | 0) {\r\n                    t = b[d >> 1] | 0;\r\n                    b[d >> 1] = 0;\r\n                    t = t << 16 >> 16 < 32 ? t : 32;\r\n                    M = t << 16 >> 16;\r\n                    u = M << 10;\r\n                    if ((u | 0) != (M << 26 >> 16 | 0)) {\r\n                        c[q >> 2] = 1;\r\n                        u = t << 16 >> 16 > 0 ? 32767 : -32768\r\n                    }\r\n                    if (t << 16 >> 16 > 1) u = Td(1024, u & 65535) | 0; else u = 16384;\r\n                    b[d + 2 >> 1] = u;\r\n                    bb(g, b[m >> 1] | 0, c[n + 60 >> 2] | 0);\r\n                    ab(g, 8, 0, m + 2 | 0, n, w, q);\r\n                    t = g;\r\n                    M = t + 20 | 0;\r\n                    do {\r\n                        a[t >> 0] = 0;\r\n                        t = t + 1 | 0\r\n                    } while ((t | 0) < (M | 0));\r\n                    s = b[m + 8 >> 1] | 0;\r\n                    s = s << 16 >> 16 == 0 ? -32768 : ((s + 64 & 65535) > 127 ? (s << 16 >> 16 > 0 ? 32767 : 32768) : s << 16 >> 16 << 9) + 60416 & 65535;\r\n                    b[v >> 1] = s;\r\n                    if ((b[d + 412 >> 1] | 0) != 0 ? (c[d + 408 >> 2] | 0) != 0 : 0) break;\r\n                    t = x;\r\n                    v = w;\r\n                    M = t + 20 | 0;\r\n                    do {\r\n                        a[t >> 0] = a[v >> 0] | 0;\r\n                        t = t + 1 | 0;\r\n                        v = v + 1 | 0\r\n                    } while ((t | 0) < (M | 0));\r\n                    b[r >> 1] = s\r\n                } while (0);\r\n                t = s << 16 >> 16;\r\n                if (s << 16 >> 16 < 0) t = ~((t ^ -2) >> 1); else t = t >>> 1;\r\n                t = t + 56536 | 0;\r\n                u = t << 16;\r\n                if ((u | 0) > 0) t = 0; else t = (u | 0) < -946077696 ? -14436 : t & 65535;\r\n                b[h >> 1] = t;\r\n                b[h + 2 >> 1] = t;\r\n                b[h + 4 >> 1] = t;\r\n                b[h + 6 >> 1] = t;\r\n                m = ((t << 16 >> 16) * 5443 | 0) >>> 15 & 65535;\r\n                b[h + 8 >> 1] = m;\r\n                b[h + 10 >> 1] = m;\r\n                b[h + 12 >> 1] = m;\r\n                b[h + 14 >> 1] = m\r\n            }\r\n            t = ((b[636 + (l << 1) >> 1] | 0) * 104864 | 0) >>> 15 << 16;\r\n            if ((t | 0) < 0) t = ~((t >> 16 ^ -32) >> 5); else t = t >> 21;\r\n            l = d + 394 | 0;\r\n            b[l >> 1] = Rd(((b[l >> 1] | 0) * 29491 | 0) >>> 15 & 65535, t & 65535, q) | 0;\r\n            h = (e[d >> 1] << 16) + 65536 | 0;\r\n            t = h >> 16;\r\n            n = d + 2 | 0;\r\n            t = (Z(((h << 10 >> 26 | 0) == (t | 0) ? h >>> 6 : t >>> 15 ^ 32767) << 16 >> 16, b[n >> 1] | 0) | 0) >> 15;\r\n            if ((t | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                t = 32767\r\n            }\r\n            s = t & 65535;\r\n            if (s << 16 >> 16 <= 1024) if (s << 16 >> 16 < -2048) w = -32768; else w = t << 4 & 65535; else w = 16384;\r\n            m = d + 4 | 0;\r\n            x = w << 16 >> 16;\r\n            u = Z(b[m >> 1] | 0, x) | 0;\r\n            if ((u | 0) == 1073741824) {\r\n                c[q >> 2] = 1;\r\n                L = 2147483647\r\n            } else L = u << 1;\r\n            u = (Z(b[d + 30 >> 1] | 0, x) | 0) >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            y = u & 65535;\r\n            b[Q + 18 >> 1] = y;\r\n            u = (Z(b[d + 28 >> 1] | 0, x) | 0) >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            b[Q + 16 >> 1] = u;\r\n            u = (Z(b[d + 26 >> 1] | 0, x) | 0) >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            b[Q + 14 >> 1] = u;\r\n            u = (Z(b[d + 24 >> 1] | 0, x) | 0) >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            b[Q + 12 >> 1] = u;\r\n            u = (Z(b[d + 22 >> 1] | 0, x) | 0) >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            b[Q + 10 >> 1] = u;\r\n            u = (Z(b[d + 20 >> 1] | 0, x) | 0) >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            b[Q + 8 >> 1] = u;\r\n            u = (Z(b[d + 18 >> 1] | 0, x) | 0) >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            b[Q + 6 >> 1] = u;\r\n            u = (Z(b[d + 16 >> 1] | 0, x) | 0) >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            b[Q + 4 >> 1] = u;\r\n            u = (Z(b[d + 14 >> 1] | 0, x) | 0) >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            b[Q + 2 >> 1] = u;\r\n            u = (Z(b[d + 12 >> 1] | 0, x) | 0) >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            b[Q >> 1] = u;\r\n            h = d + 6 | 0;\r\n            x = 16384 - (w & 65535) << 16 >> 16;\r\n            u = Z(b[h >> 1] | 0, x) | 0;\r\n            if ((u | 0) != 1073741824) {\r\n                t = (u << 1) + L | 0;\r\n                if ((u ^ L | 0) > 0 & (t ^ L | 0) < 0) {\r\n                    c[q >> 2] = 1;\r\n                    K = (L >>> 31) + 2147483647 | 0\r\n                } else K = t\r\n            } else {\r\n                c[q >> 2] = 1;\r\n                K = 2147483647\r\n            }\r\n            t = y;\r\n            v = 9;\r\n            while (1) {\r\n                s = Q + (v << 1) | 0;\r\n                u = (Z(b[d + 32 + (v << 1) >> 1] | 0, x) | 0) >> 15;\r\n                if ((u | 0) > 32767) {\r\n                    c[q >> 2] = 1;\r\n                    u = 32767\r\n                }\r\n                t = Rd(t, u & 65535, q) | 0;\r\n                b[s >> 1] = t;\r\n                M = t << 16 >> 16;\r\n                u = M << 1;\r\n                if ((u | 0) != (M << 17 >> 16 | 0)) {\r\n                    c[q >> 2] = 1;\r\n                    u = t << 16 >> 16 > 0 ? 32767 : -32768\r\n                }\r\n                b[s >> 1] = u;\r\n                u = v + -1 | 0;\r\n                if ((v | 0) <= 0) break;\r\n                t = b[Q + (u << 1) >> 1] | 0;\r\n                v = u\r\n            }\r\n            L = d + 374 | 0;\r\n            u = ((e[L >> 1] << 16) + -161021952 >> 16) * 9830 >> 15;\r\n            if ((u | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                u = 32767\r\n            }\r\n            u = 4096 - (u & 65535) | 0;\r\n            t = u << 16;\r\n            if ((t | 0) > 268369920) x = 32767; else x = (t | 0) < 0 ? 0 : u << 19 >> 16;\r\n            J = d + 8 | 0;\r\n            u = Ga(J, 3) | 0;\r\n            ne(Q, O, 10, q);\r\n            t = P;\r\n            v = O;\r\n            M = t + 20 | 0;\r\n            do {\r\n                b[t >> 1] = b[v >> 1] | 0;\r\n                t = t + 2 | 0;\r\n                v = v + 2 | 0\r\n            } while ((t | 0) < (M | 0));\r\n            t = (u << 16 >> 16) * 10 | 0;\r\n            v = 9;\r\n            while (1) {\r\n                s = P + (v << 1) | 0;\r\n                r = b[s >> 1] | 0;\r\n                u = (Z(b[d + 214 + (v + t << 1) >> 1] | 0, x) | 0) >> 15;\r\n                if ((u | 0) > 32767) {\r\n                    c[q >> 2] = 1;\r\n                    u = 32767\r\n                }\r\n                b[s >> 1] = Rd(r, u & 65535, q) | 0;\r\n                if ((v | 0) > 0) v = v + -1 | 0; else break\r\n            }\r\n            Ae(O, 205, 10, q);\r\n            Ae(P, 205, 10, q);\r\n            t = g + 20 | 0;\r\n            v = O;\r\n            M = t + 20 | 0;\r\n            do {\r\n                a[t >> 0] = a[v >> 0] | 0;\r\n                t = t + 1 | 0;\r\n                v = v + 1 | 0\r\n            } while ((t | 0) < (M | 0));\r\n            me(O, Q, 10, q);\r\n            me(P, R, 10, q);\r\n            he(Q, N, q);\r\n            he(R, V, q);\r\n            t = p;\r\n            v = N;\r\n            M = t + 22 | 0;\r\n            do {\r\n                a[t >> 0] = a[v >> 0] | 0;\r\n                t = t + 1 | 0;\r\n                v = v + 1 | 0\r\n            } while ((t | 0) < (M | 0));\r\n            t = p + 22 | 0;\r\n            v = N;\r\n            M = t + 22 | 0;\r\n            do {\r\n                a[t >> 0] = a[v >> 0] | 0;\r\n                t = t + 1 | 0;\r\n                v = v + 1 | 0\r\n            } while ((t | 0) < (M | 0));\r\n            t = p + 44 | 0;\r\n            v = N;\r\n            M = t + 22 | 0;\r\n            do {\r\n                a[t >> 0] = a[v >> 0] | 0;\r\n                t = t + 1 | 0;\r\n                v = v + 1 | 0\r\n            } while ((t | 0) < (M | 0));\r\n            t = p + 66 | 0;\r\n            v = N;\r\n            M = t + 22 | 0;\r\n            do {\r\n                a[t >> 0] = a[v >> 0] | 0;\r\n                t = t + 1 | 0;\r\n                v = v + 1 | 0\r\n            } while ((t | 0) < (M | 0));\r\n            Fa(N + 2 | 0, S, q);\r\n            u = 0;\r\n            t = 32767;\r\n            do {\r\n                s = b[S + (u << 1) >> 1] | 0;\r\n                s = Z(s, s) | 0;\r\n                if (s >>> 0 < 1073741824) s = 32767 - (s >>> 15) | 0; else {\r\n                    c[q >> 2] = 1;\r\n                    s = 0\r\n                }\r\n                t = (Z(s << 16 >> 16, t << 16 >> 16) | 0) >> 15;\r\n                if ((t | 0) > 32767) {\r\n                    c[q >> 2] = 1;\r\n                    t = 32767\r\n                }\r\n                u = u + 1 | 0\r\n            } while ((u | 0) != 10);\r\n            de(t << 16 >> 16, T, U, q);\r\n            t = (e[T >> 1] << 16) + -983040 | 0;\r\n            s = t >> 16;\r\n            s = De(Ge(0, Rd(((t << 12 >> 28 | 0) == (s | 0) ? t >>> 4 : s >>> 15 ^ 32767) & 65535, De(b[U >> 1] | 0, 3, q) | 0, q) | 0, q) | 0, 1, q) | 0;\r\n            t = (b[L >> 1] | 0) * 29491 >> 15;\r\n            if ((t | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                t = 32767\r\n            }\r\n            u = s << 16 >> 16;\r\n            s = u * 3277 >> 15;\r\n            if ((s | 0) > 32767) {\r\n                c[q >> 2] = 1;\r\n                s = 32767\r\n            }\r\n            b[L >> 1] = Rd(t & 65535, s & 65535, q) | 0;\r\n            s = K >> 10;\r\n            r = s + 262144 | 0;\r\n            if ((s | 0) > -1 & (r ^ s | 0) < 0) {\r\n                c[q >> 2] = 1;\r\n                r = (s >>> 31) + 2147483647 | 0\r\n            }\r\n            U = u << 4;\r\n            s = r - U | 0;\r\n            if (((s ^ r) & (r ^ U) | 0) < 0) {\r\n                c[q >> 2] = 1;\r\n                r = (r >>> 31) + 2147483647 | 0\r\n            } else r = s;\r\n            U = b[l >> 1] << 5;\r\n            s = U + r | 0;\r\n            if ((U ^ r | 0) > -1 & (s ^ r | 0) < 0) {\r\n                c[q >> 2] = 1;\r\n                s = (r >>> 31) + 2147483647 | 0\r\n            }\r\n            u = (re(s >>> 16 & 65535, s >>> 1 & 32767, q) | 0) << 16 >> 16;\r\n            Ha(J, W, q);\r\n            r = 39;\r\n            while (1) {\r\n                t = W + (r << 1) | 0;\r\n                s = (Z(b[t >> 1] | 0, u) | 0) >> 15;\r\n                if ((s | 0) > 32767) {\r\n                    c[q >> 2] = 1;\r\n                    s = 32767\r\n                }\r\n                b[t >> 1] = s;\r\n                if ((r | 0) > 0) r = r + -1 | 0; else break\r\n            }\r\n            He(V, W, o, 40, f, 1);\r\n            Ha(J, W, q);\r\n            r = 39;\r\n            while (1) {\r\n                t = W + (r << 1) | 0;\r\n                s = (Z(b[t >> 1] | 0, u) | 0) >> 15;\r\n                if ((s | 0) > 32767) {\r\n                    c[q >> 2] = 1;\r\n                    s = 32767\r\n                }\r\n                b[t >> 1] = s;\r\n                if ((r | 0) > 0) r = r + -1 | 0; else break\r\n            }\r\n            He(V, W, o + 80 | 0, 40, f, 1);\r\n            Ha(J, W, q);\r\n            r = 39;\r\n            while (1) {\r\n                t = W + (r << 1) | 0;\r\n                s = (Z(b[t >> 1] | 0, u) | 0) >> 15;\r\n                if ((s | 0) > 32767) {\r\n                    c[q >> 2] = 1;\r\n                    s = 32767\r\n                }\r\n                b[t >> 1] = s;\r\n                if ((r | 0) > 0) r = r + -1 | 0; else break\r\n            }\r\n            He(V, W, o + 160 | 0, 40, f, 1);\r\n            Ha(J, W, q);\r\n            t = 39;\r\n            while (1) {\r\n                r = W + (t << 1) | 0;\r\n                s = (Z(b[r >> 1] | 0, u) | 0) >> 15;\r\n                if ((s | 0) > 32767) {\r\n                    c[q >> 2] = 1;\r\n                    s = 32767\r\n                }\r\n                b[r >> 1] = s;\r\n                if ((t | 0) > 0) t = t + -1 | 0; else break\r\n            }\r\n            He(V, W, o + 240 | 0, 40, f, 1);\r\n            b[j + 14 >> 1] = 20;\r\n            b[j + 16 >> 1] = 0;\r\n            if ((k | 0) == 2) {\r\n                s = b[d >> 1] | 0;\r\n                s = s << 16 >> 16 > 32 ? 32 : s << 16 >> 16 < 1 ? 8 : s;\r\n                o = s << 16 >> 16;\r\n                r = o << 10;\r\n                if ((r | 0) != (o << 26 >> 16 | 0)) {\r\n                    c[q >> 2] = 1;\r\n                    r = s << 16 >> 16 > 0 ? 32767 : -32768\r\n                }\r\n                b[n >> 1] = Td(1024, r & 65535) | 0;\r\n                b[d >> 1] = 0;\r\n                t = d + 32 | 0;\r\n                v = d + 12 | 0;\r\n                M = t + 20 | 0;\r\n                do {\r\n\r\n                    a[t >> 0] = a[v >> 0] | 0;\r\n                    t = t + 1 | 0;\r\n                    v = v + 1 | 0\r\n                } while ((t | 0) < (M | 0));\r\n                q = b[m >> 1] | 0;\r\n                b[h >> 1] = q;\r\n                b[m >> 1] = (q & 65535) + 65280\r\n            }\r\n            if (!(b[X >> 1] | 0)) {\r\n                i = _;\r\n                return\r\n            }\r\n            do if (!(b[d + 402 >> 1] | 0)) {\r\n                if (b[Y >> 1] | 0) break;\r\n                i = _;\r\n                return\r\n            } while (0);\r\n            b[d >> 1] = 0;\r\n            b[d + 412 >> 1] = 1;\r\n            i = _;\r\n            return\r\n        }\r\n\r\n        function gb(a, d, f, g) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, j = 0, k = 0, l = 0, m = 0, n = 0;\r\n            m = i;\r\n            i = i + 16 | 0;\r\n            k = m + 2 | 0;\r\n            l = m;\r\n            b[l >> 1] = 0;\r\n            j = a + 212 | 0;\r\n            h = (e[j >> 1] | 0) + 10 | 0;\r\n            h = (h & 65535 | 0) == 80 ? 0 : h & 65535;\r\n            b[j >> 1] = h;\r\n            Pe(a + 52 + (h << 16 >> 16 << 1) | 0, d | 0, 20) | 0;\r\n            h = 0;\r\n            j = 159;\r\n            while (1) {\r\n                n = b[f + (j << 1) >> 1] | 0;\r\n                n = Z(n, n) | 0;\r\n                n = (n | 0) == 1073741824 ? 2147483647 : n << 1;\r\n                d = n + h | 0;\r\n                if ((n ^ h | 0) > -1 & (d ^ h | 0) < 0) {\r\n                    c[g >> 2] = 1;\r\n                    h = (h >>> 31) + 2147483647 | 0\r\n                } else h = d;\r\n                if ((j | 0) > 0) j = j + -1 | 0; else break\r\n            }\r\n            de(h, k, l, g);\r\n            h = b[k >> 1] | 0;\r\n            n = h << 16 >> 16;\r\n            d = n << 10;\r\n            if ((d | 0) != (n << 26 >> 16 | 0)) {\r\n                c[g >> 2] = 1;\r\n                d = h << 16 >> 16 > 0 ? 32767 : -32768\r\n            }\r\n            b[k >> 1] = d;\r\n            n = b[l >> 1] | 0;\r\n            h = n << 16 >> 16;\r\n            if (n << 16 >> 16 < 0) h = ~((h ^ -32) >> 5); else h = h >>> 5;\r\n            l = a + 392 | 0;\r\n            n = (e[l >> 1] | 0) + 1 | 0;\r\n            n = (n & 65535 | 0) == 8 ? 0 : n & 65535;\r\n            b[l >> 1] = n;\r\n            b[a + 376 + (n << 16 >> 16 << 1) >> 1] = h + 57015 + d;\r\n            i = m;\r\n            return\r\n        }\r\n\r\n        function hb(a, d, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0;\r\n            l = (d | 0) == 4;\r\n            m = (d | 0) == 5;\r\n            n = (d | 0) == 6;\r\n            g = c[a + 408 >> 2] | 0;\r\n            a:do if ((d + -4 | 0) >>> 0 < 3) k = 4; else {\r\n                if ((g + -1 | 0) >>> 0 < 2) switch (d | 0) {\r\n                    case 2:\r\n                    case 3:\r\n                    case 7: {\r\n                        k = 4;\r\n                        break a\r\n                    }\r\n                    default: {\r\n                    }\r\n                }\r\n                b[a >> 1] = 0;\r\n                j = 0\r\n            } while (0);\r\n            if ((k | 0) == 4) {\r\n                b:do if ((g | 0) == 2) {\r\n                    switch (d | 0) {\r\n                        case 2:\r\n                        case 4:\r\n                        case 6:\r\n                        case 7:\r\n                            break;\r\n                        default: {\r\n                            h = 1;\r\n                            break b\r\n                        }\r\n                    }\r\n                    h = 2\r\n                } else h = 1; while (0);\r\n                j = (e[a >> 1] | 0) + 1 & 65535;\r\n                b[a >> 1] = j;\r\n                j = (d | 0) != 5 & j << 16 >> 16 > 50 ? 2 : h\r\n            }\r\n            i = a + 398 | 0;\r\n            if (m & (b[a + 412 >> 1] | 0) == 0) {\r\n                b[i >> 1] = 0;\r\n                h = 0\r\n            } else h = b[i >> 1] | 0;\r\n            h = Rd(h, 1, f) | 0;\r\n            b[i >> 1] = h;\r\n            f = a + 404 | 0;\r\n            b[f >> 1] = 0;\r\n            c:do switch (d | 0) {\r\n                case 2:\r\n                case 4:\r\n                case 5:\r\n                case 6:\r\n                case 7: {\r\n                    if (!((d | 0) == 7 & (j | 0) == 0)) {\r\n                        if (h << 16 >> 16 > 30) {\r\n                            b[f >> 1] = 1;\r\n                            b[i >> 1] = 0;\r\n                            b[a + 396 >> 1] = 0;\r\n                            break c\r\n                        }\r\n                        h = a + 396 | 0;\r\n                        g = b[h >> 1] | 0;\r\n                        if (!(g << 16 >> 16)) {\r\n                            b[i >> 1] = 0;\r\n                            break c\r\n                        } else {\r\n                            b[h >> 1] = (g & 65535) + 65535;\r\n                            break c\r\n                        }\r\n                    } else k = 14;\r\n                    break\r\n                }\r\n                default:\r\n                    k = 14\r\n            } while (0);\r\n            if ((k | 0) == 14) b[a + 396 >> 1] = 7;\r\n            if (!j) return j | 0;\r\n            h = a + 400 | 0;\r\n            b[h >> 1] = 0;\r\n            g = a + 402 | 0;\r\n            b[g >> 1] = 0;\r\n            if (l) {\r\n                b[h >> 1] = 1;\r\n                return j | 0\r\n            }\r\n            if (m) {\r\n                b[h >> 1] = 1;\r\n                b[g >> 1] = 1;\r\n                return j | 0\r\n            }\r\n            if (!n) return j | 0;\r\n            b[h >> 1] = 1;\r\n            b[f >> 1] = 0;\r\n            return j | 0\r\n        }\r\n\r\n        function ib(a) {\r\n            a = a | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            b[a >> 1] = 1;\r\n            b[a + 2 >> 1] = 1;\r\n            b[a + 4 >> 1] = 1;\r\n            b[a + 6 >> 1] = 1;\r\n            b[a + 8 >> 1] = 1;\r\n            b[a + 10 >> 1] = 0;\r\n            b[a + 12 >> 1] = 1;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function jb(a, d, e, f, g) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, j = 0, k = 0, l = 0;\r\n            l = i;\r\n            i = i + 16 | 0;\r\n            k = l + 2 | 0;\r\n            j = l;\r\n            h = Zd(a, 5) | 0;\r\n            a = a + 10 | 0;\r\n            if ((Ge(h, b[a >> 1] | 0, g) | 0) << 16 >> 16 > 0) h = b[a >> 1] | 0;\r\n            h = (Z(b[674 + (e << 16 >> 16 << 1) >> 1] | 0, h << 16 >> 16) | 0) >> 15;\r\n            if ((h | 0) > 32767) {\r\n                c[g >> 2] = 1;\r\n                h = 32767\r\n            }\r\n            b[f >> 1] = h;\r\n            Xd(d, k, j, g);\r\n            Wd(d, b[k >> 1] | 0, b[j >> 1] | 0);\r\n            i = l;\r\n            return\r\n        }\r\n\r\n        function kb(a, c, d, e, f) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            if (!(c << 16 >> 16)) {\r\n                if (d << 16 >> 16) {\r\n                    c = a + 12 | 0;\r\n                    if ((Ge(b[e >> 1] | 0, b[c >> 1] | 0, f) | 0) << 16 >> 16 > 0) b[e >> 1] = b[c >> 1] | 0\r\n                } else c = a + 12 | 0;\r\n                b[c >> 1] = b[e >> 1] | 0\r\n            }\r\n            b[a + 10 >> 1] = b[e >> 1] | 0;\r\n            f = a + 2 | 0;\r\n            b[a >> 1] = b[f >> 1] | 0;\r\n            d = a + 4 | 0;\r\n            b[f >> 1] = b[d >> 1] | 0;\r\n            f = a + 6 | 0;\r\n            b[d >> 1] = b[f >> 1] | 0;\r\n            a = a + 8 | 0;\r\n            b[f >> 1] = b[a >> 1] | 0;\r\n            b[a >> 1] = b[e >> 1] | 0;\r\n            return\r\n        }\r\n\r\n        function lb(a, d, e, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            var g = 0;\r\n            g = Zd(a, 5) | 0;\r\n            a = a + 10 | 0;\r\n            if ((Ge(g, b[a >> 1] | 0, f) | 0) << 16 >> 16 > 0) g = b[a >> 1] | 0;\r\n            g = (Z(b[688 + (d << 16 >> 16 << 1) >> 1] | 0, g << 16 >> 16) | 0) >> 15;\r\n            if ((g | 0) <= 32767) {\r\n                f = g;\r\n                f = f & 65535;\r\n                b[e >> 1] = f;\r\n                return\r\n            }\r\n            c[f >> 2] = 1;\r\n            f = 32767;\r\n            f = f & 65535;\r\n            b[e >> 1] = f;\r\n            return\r\n        }\r\n\r\n        function mb(a) {\r\n            a = a | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            b[a >> 1] = 1640;\r\n            b[a + 2 >> 1] = 1640;\r\n            b[a + 4 >> 1] = 1640;\r\n            b[a + 6 >> 1] = 1640;\r\n            b[a + 8 >> 1] = 1640;\r\n            b[a + 10 >> 1] = 0;\r\n            b[a + 12 >> 1] = 16384;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function nb(a, c, d, e, f) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            if (!(c << 16 >> 16)) {\r\n                if (d << 16 >> 16) {\r\n                    c = a + 12 | 0;\r\n                    if ((Ge(b[e >> 1] | 0, b[c >> 1] | 0, f) | 0) << 16 >> 16 > 0) b[e >> 1] = b[c >> 1] | 0\r\n                } else c = a + 12 | 0;\r\n                b[c >> 1] = b[e >> 1] | 0\r\n            }\r\n            e = b[e >> 1] | 0;\r\n            c = a + 10 | 0;\r\n            b[c >> 1] = e;\r\n            if ((Ge(e, 16384, f) | 0) << 16 >> 16 > 0) {\r\n                b[c >> 1] = 16384;\r\n                c = 16384\r\n            } else c = b[c >> 1] | 0;\r\n            f = a + 2 | 0;\r\n            b[a >> 1] = b[f >> 1] | 0;\r\n            e = a + 4 | 0;\r\n            b[f >> 1] = b[e >> 1] | 0;\r\n            f = a + 6 | 0;\r\n            b[e >> 1] = b[f >> 1] | 0;\r\n            a = a + 8 | 0;\r\n            b[f >> 1] = b[a >> 1] | 0;\r\n            b[a >> 1] = c;\r\n            return\r\n        }\r\n\r\n        function ob(a, d, e, f, g, h, i) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            var j = 0, k = 0, l = 0;\r\n            k = Zd(e, 9) | 0;\r\n            l = b[e + 16 >> 1] | 0;\r\n            j = l << 16 >> 16;\r\n            e = (j + (b[e + 14 >> 1] | 0) | 0) >>> 1;\r\n            e = (j | 0) < (e << 16 >> 16 | 0) ? l : e & 65535;\r\n            if (!(d << 16 >> 16 > 5 ? k << 16 >> 16 > d << 16 >> 16 : 0)) return 0;\r\n            j = e << 16 >> 16;\r\n            j = ((j << 18 >> 18 | 0) == (j | 0) ? j << 2 : j >>> 15 ^ 32767) & 65535;\r\n            if (!(f << 16 >> 16 > 6 & g << 16 >> 16 == 0)) j = Ge(j, e, i) | 0;\r\n            k = k << 16 >> 16 > j << 16 >> 16 ? j : k;\r\n            l = qe(d) | 0;\r\n            j = l << 16 >> 16;\r\n            if (l << 16 >> 16 < 0) {\r\n                e = 0 - j << 16;\r\n                if ((e | 0) < 983040) j = d << 16 >> 16 >> (e >> 16) & 65535; else j = 0\r\n            } else {\r\n                e = d << 16 >> 16;\r\n                g = e << j;\r\n                if ((g << 16 >> 16 >> j | 0) == (e | 0)) j = g & 65535; else j = (e >>> 15 ^ 32767) & 65535\r\n            }\r\n            f = Z((Td(16383, j) | 0) << 16 >> 16, k << 16 >> 16) | 0;\r\n            if ((f | 0) == 1073741824) {\r\n                c[i >> 2] = 1;\r\n                g = 2147483647\r\n            } else g = f << 1;\r\n            f = Ge(20, l, i) | 0;\r\n            j = f << 16 >> 16;\r\n            if (f << 16 >> 16 > 0) f = f << 16 >> 16 < 31 ? g >> j : 0; else {\r\n                d = 0 - j << 16 >> 16;\r\n                f = g << d;\r\n                f = (f >> d | 0) == (g | 0) ? f : g >> 31 ^ 2147483647\r\n            }\r\n            f = (f | 0) > 32767 ? 32767 : f & 65535;\r\n            f = h << 16 >> 16 != 0 & f << 16 >> 16 > 3072 ? 3072 : f << 16 >> 16;\r\n            e = 0;\r\n            do {\r\n                g = a + (e << 1) | 0;\r\n                j = Z(b[g >> 1] | 0, f) | 0;\r\n                if ((j | 0) == 1073741824) {\r\n                    c[i >> 2] = 1;\r\n                    j = 2147483647\r\n                } else j = j << 1;\r\n                b[g >> 1] = j >>> 11;\r\n                e = e + 1 | 0\r\n            } while ((e | 0) != 40);\r\n            return 0\r\n        }\r\n\r\n        function pb(a, e, f, g) {\r\n            a = a | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, i = 0, j = 0, k = 0;\r\n            h = c[g + 104 >> 2] | 0;\r\n            i = c[g + 96 >> 2] | 0;\r\n            if (a >>> 0 >= 8) {\r\n                b[f >> 1] = (d[e >> 0] | 0) >>> 4 & 1;\r\n                b[f + 2 >> 1] = (d[e >> 0] | 0) >>> 5 & 1;\r\n                b[f + 4 >> 1] = (d[e >> 0] | 0) >>> 6 & 1;\r\n                b[f + 6 >> 1] = (d[e >> 0] | 0) >>> 7 & 255;\r\n                h = h + (a << 1) | 0;\r\n                if ((b[h >> 1] | 0) > 1) {\r\n                    a = 1;\r\n                    g = 1;\r\n                    i = 4\r\n                } else return;\r\n                while (1) {\r\n                    j = e + a | 0;\r\n                    a = i | 1;\r\n                    b[f + (i << 16 >> 16 << 1) >> 1] = d[j >> 0] & 1;\r\n                    b[f + (a << 16 >> 16 << 1) >> 1] = (d[j >> 0] | 0) >>> 1 & 1;\r\n                    k = i | 3;\r\n                    b[f + (a + 1 << 16 >> 16 << 16 >> 16 << 1) >> 1] = (d[j >> 0] | 0) >>> 2 & 1;\r\n                    b[f + (k << 16 >> 16 << 1) >> 1] = (d[j >> 0] | 0) >>> 3 & 1;\r\n                    b[f + (k + 1 << 16 >> 16 << 16 >> 16 << 1) >> 1] = (d[j >> 0] | 0) >>> 4 & 1;\r\n                    b[f + (k + 2 << 16 >> 16 << 16 >> 16 << 1) >> 1] = (d[j >> 0] | 0) >>> 5 & 1;\r\n                    b[f + (k + 3 << 16 >> 16 << 16 >> 16 << 1) >> 1] = (d[j >> 0] | 0) >>> 6 & 1;\r\n                    b[f + (k + 4 << 16 >> 16 << 16 >> 16 << 1) >> 1] = (d[j >> 0] | 0) >>> 7 & 255;\r\n                    g = g + 1 << 16 >> 16;\r\n                    if (g << 16 >> 16 < (b[h >> 1] | 0)) {\r\n                        a = g << 16 >> 16;\r\n                        i = i + 8 << 16 >> 16\r\n                    } else break\r\n                }\r\n                return\r\n            }\r\n            k = c[(c[g + 100 >> 2] | 0) + (a << 2) >> 2] | 0;\r\n            b[f + (b[k >> 1] << 1) >> 1] = (d[e >> 0] | 0) >>> 4 & 1;\r\n            b[f + (b[k + 2 >> 1] << 1) >> 1] = (d[e >> 0] | 0) >>> 5 & 1;\r\n            b[f + (b[k + 4 >> 1] << 1) >> 1] = (d[e >> 0] | 0) >>> 6 & 1;\r\n            b[f + (b[k + 6 >> 1] << 1) >> 1] = (d[e >> 0] | 0) >>> 7 & 255;\r\n            j = h + (a << 1) | 0;\r\n            if ((b[j >> 1] | 0) <= 1) return;\r\n            g = i + (a << 1) | 0;\r\n            h = 1;\r\n            a = 1;\r\n            i = 4;\r\n            while (1) {\r\n                h = e + h | 0;\r\n                i = i << 16 >> 16;\r\n                if ((i | 0) < (b[g >> 1] | 0)) {\r\n                    b[f + (b[k + (i << 1) >> 1] << 1) >> 1] = d[h >> 0] & 1;\r\n                    i = i + 1 | 0;\r\n                    if ((i | 0) < (b[g >> 1] | 0)) {\r\n                        b[f + (b[k + (i << 1) >> 1] << 1) >> 1] = (d[h >> 0] | 0) >>> 1 & 1;\r\n                        i = i + 1 | 0;\r\n                        if ((i | 0) < (b[g >> 1] | 0)) {\r\n                            b[f + (b[k + (i << 1) >> 1] << 1) >> 1] = (d[h >> 0] | 0) >>> 2 & 1;\r\n                            i = i + 1 | 0;\r\n                            if ((i | 0) < (b[g >> 1] | 0)) {\r\n                                b[f + (b[k + (i << 1) >> 1] << 1) >> 1] = (d[h >> 0] | 0) >>> 3 & 1;\r\n                                i = i + 1 | 0;\r\n                                if ((i | 0) < (b[g >> 1] | 0)) {\r\n                                    b[f + (b[k + (i << 1) >> 1] << 1) >> 1] = (d[h >> 0] | 0) >>> 4 & 1;\r\n                                    i = i + 1 | 0;\r\n                                    if ((i | 0) < (b[g >> 1] | 0)) {\r\n                                        b[f + (b[k + (i << 1) >> 1] << 1) >> 1] = (d[h >> 0] | 0) >>> 5 & 1;\r\n                                        i = i + 1 | 0;\r\n                                        if ((i | 0) < (b[g >> 1] | 0)) {\r\n                                            b[f + (b[k + (i << 1) >> 1] << 1) >> 1] = (d[h >> 0] | 0) >>> 6 & 1;\r\n                                            i = i + 1 | 0;\r\n                                            if ((i | 0) < (b[g >> 1] | 0)) {\r\n\r\n                                                b[f + (b[k + (i << 1) >> 1] << 1) >> 1] = (d[h >> 0] | 0) >>> 7 & 1;\r\n                                                i = i + 1 | 0\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                a = a + 1 << 16 >> 16;\r\n                if (a << 16 >> 16 < (b[j >> 1] | 0)) h = a << 16 >> 16; else break\r\n            }\r\n            return\r\n        }\r\n\r\n        function qb(a, c, d, e, f) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, i = 0, j = 0;\r\n            switch (d << 16 >> 16) {\r\n                case 0: {\r\n                    j = 9;\r\n                    while (1) {\r\n                        i = b[a + (j << 1) >> 1] | 0;\r\n                        d = i << 16 >> 16;\r\n                        if (i << 16 >> 16 < 0) d = ~((d ^ -4) >> 2); else d = d >>> 2;\r\n                        h = b[c + (j << 1) >> 1] | 0;\r\n                        g = h << 16 >> 16;\r\n                        if (h << 16 >> 16 < 0) h = ~((g ^ -4) >> 2); else h = g >>> 2;\r\n                        b[e + (j << 1) >> 1] = Rd((i & 65535) - d & 65535, h & 65535, f) | 0;\r\n                        if ((j | 0) > 0) j = j + -1 | 0; else break\r\n                    }\r\n                    return\r\n                }\r\n                case 40: {\r\n                    h = 9;\r\n                    while (1) {\r\n                        f = b[a + (h << 1) >> 1] | 0;\r\n                        d = f << 16 >> 16;\r\n                        if (f << 16 >> 16 < 0) g = ~((d ^ -2) >> 1); else g = d >>> 1;\r\n                        f = b[c + (h << 1) >> 1] | 0;\r\n                        d = f << 16 >> 16;\r\n                        if (f << 16 >> 16 < 0) d = ~((d ^ -2) >> 1); else d = d >>> 1;\r\n                        b[e + (h << 1) >> 1] = d + g;\r\n                        if ((h | 0) > 0) h = h + -1 | 0; else break\r\n                    }\r\n                    return\r\n                }\r\n                case 80: {\r\n                    j = 9;\r\n                    while (1) {\r\n                        i = b[a + (j << 1) >> 1] | 0;\r\n                        d = i << 16 >> 16;\r\n                        if (i << 16 >> 16 < 0) i = ~((d ^ -4) >> 2); else i = d >>> 2;\r\n                        d = b[c + (j << 1) >> 1] | 0;\r\n                        g = d << 16 >> 16;\r\n                        if (d << 16 >> 16 < 0) h = ~((g ^ -4) >> 2); else h = g >>> 2;\r\n                        b[e + (j << 1) >> 1] = Rd(i & 65535, (d & 65535) - h & 65535, f) | 0;\r\n                        if ((j | 0) > 0) j = j + -1 | 0; else break\r\n                    }\r\n                    return\r\n                }\r\n                case 120: {\r\n                    b[e + 18 >> 1] = b[c + 18 >> 1] | 0;\r\n                    b[e + 16 >> 1] = b[c + 16 >> 1] | 0;\r\n                    b[e + 14 >> 1] = b[c + 14 >> 1] | 0;\r\n                    b[e + 12 >> 1] = b[c + 12 >> 1] | 0;\r\n                    b[e + 10 >> 1] = b[c + 10 >> 1] | 0;\r\n                    b[e + 8 >> 1] = b[c + 8 >> 1] | 0;\r\n                    b[e + 6 >> 1] = b[c + 6 >> 1] | 0;\r\n                    b[e + 4 >> 1] = b[c + 4 >> 1] | 0;\r\n                    b[e + 2 >> 1] = b[c + 2 >> 1] | 0;\r\n                    b[e >> 1] = b[c >> 1] | 0;\r\n                    return\r\n                }\r\n                default:\r\n                    return\r\n            }\r\n        }\r\n\r\n        function rb(a, b) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            Pe(a | 0, b | 0, 20) | 0;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function sb(a, d, e) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;\r\n            l = 0;\r\n            do {\r\n                k = a + (l << 1) | 0;\r\n                f = b[k >> 1] | 0;\r\n                i = f & 65535;\r\n                j = i << 16;\r\n                f = f << 16 >> 16;\r\n                if ((f * 5243 | 0) == 1073741824) {\r\n                    c[e >> 2] = 1;\r\n                    h = 2147483647\r\n                } else h = f * 10486 | 0;\r\n                g = j - h | 0;\r\n                if (((g ^ j) & (h ^ j) | 0) < 0) {\r\n                    c[e >> 2] = 1;\r\n                    h = (i >>> 15) + 2147483647 | 0\r\n                } else h = g;\r\n                f = b[d + (l << 1) >> 1] | 0;\r\n                g = f * 5243 | 0;\r\n                if ((g | 0) != 1073741824) {\r\n                    f = (f * 10486 | 0) + h | 0;\r\n                    if ((g ^ h | 0) > 0 & (f ^ h | 0) < 0) {\r\n                        c[e >> 2] = 1;\r\n                        f = (h >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[e >> 2] = 1;\r\n                    f = 2147483647\r\n                }\r\n                b[k >> 1] = Ce(f, e) | 0;\r\n                l = l + 1 | 0\r\n            } while ((l | 0) != 10);\r\n            return\r\n        }\r\n\r\n        function tb(a) {\r\n            a = a | 0;\r\n            var c = 0;\r\n            if (!a) {\r\n                c = -1;\r\n                return c | 0\r\n            }\r\n            c = a + 18 | 0;\r\n            do {\r\n                b[a >> 1] = 0;\r\n                a = a + 2 | 0\r\n            } while ((a | 0) < (c | 0));\r\n            c = 0;\r\n            return c | 0\r\n        }\r\n\r\n        function ub(a) {\r\n            a = a | 0;\r\n            b[a + 14 >> 1] = 1;\r\n            return\r\n        }\r\n\r\n        function vb(a) {\r\n            a = a | 0;\r\n            b[a + 14 >> 1] = 0;\r\n            return\r\n        }\r\n\r\n        function wb(a, d, e, f, g, h, j, k, l, m) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            var n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0,\r\n                C = 0;\r\n            C = i;\r\n            i = i + 160 | 0;\r\n            z = C + 80 | 0;\r\n            A = C;\r\n            v = c[l + 120 >> 2] | 0;\r\n            w = c[l + 124 >> 2] | 0;\r\n            x = c[l + 128 >> 2] | 0;\r\n            u = c[l + 132 >> 2] | 0;\r\n            o = a + 6 | 0;\r\n            t = a + 8 | 0;\r\n            b[t >> 1] = b[o >> 1] | 0;\r\n            r = a + 4 | 0;\r\n            b[o >> 1] = b[r >> 1] | 0;\r\n            s = a + 2 | 0;\r\n            b[r >> 1] = b[s >> 1] | 0;\r\n            b[s >> 1] = b[a >> 1] | 0;\r\n            b[a >> 1] = g;\r\n            l = g << 16 >> 16 < 14746 ? g << 16 >> 16 > 9830 & 1 : 2;\r\n            n = a + 12 | 0;\r\n            g = b[n >> 1] | 0;\r\n            p = g << 15;\r\n            do if ((p | 0) <= 536870911) if ((p | 0) < -536870912) {\r\n                c[m >> 2] = 1;\r\n                g = -2147483648;\r\n                break\r\n            } else {\r\n                g = g << 17;\r\n                break\r\n            } else {\r\n                c[m >> 2] = 1;\r\n                g = 2147483647\r\n            } while (0);\r\n            y = f << 16 >> 16;\r\n            q = a + 16 | 0;\r\n            if ((Ce(g, m) | 0) << 16 >> 16 >= f << 16 >> 16) {\r\n                p = b[q >> 1] | 0;\r\n                if (p << 16 >> 16 > 0) {\r\n                    p = (p & 65535) + 65535 & 65535;\r\n                    b[q >> 1] = p\r\n                }\r\n                if (!(p << 16 >> 16)) {\r\n                    g = (b[a >> 1] | 0) < 9830;\r\n                    g = (b[s >> 1] | 0) < 9830 ? (g ? 2 : 1) : g & 1;\r\n                    if ((b[r >> 1] | 0) < 9830) g = (g & 65535) + 1 & 65535;\r\n                    if ((b[o >> 1] | 0) < 9830) g = (g & 65535) + 1 & 65535;\r\n                    if ((b[t >> 1] | 0) < 9830) g = (g & 65535) + 1 & 65535;\r\n                    p = 0;\r\n                    l = g << 16 >> 16 > 2 ? 0 : l\r\n                }\r\n            } else {\r\n                b[q >> 1] = 2;\r\n                p = 2\r\n            }\r\n            s = l << 16 >> 16;\r\n            t = a + 10 | 0;\r\n            s = (p << 16 >> 16 == 0 ? (s | 0) > ((b[t >> 1] | 0) + 1 | 0) : 0) ? s + 65535 & 65535 : l;\r\n            a = (b[a + 14 >> 1] | 0) == 1 ? 0 : f << 16 >> 16 < 10 ? 2 : s << 16 >> 16 < 2 & p << 16 >> 16 > 0 ? (s & 65535) + 1 & 65535 : s;\r\n            b[t >> 1] = a;\r\n            b[n >> 1] = f;\r\n            switch (d | 0) {\r\n                case 4:\r\n                case 6:\r\n                case 7:\r\n                    break;\r\n                default:\r\n                    if (a << 16 >> 16 < 2) {\r\n                        p = 0;\r\n                        l = 0;\r\n                        o = h;\r\n                        n = z;\r\n                        while (1) {\r\n                            if (!(b[o >> 1] | 0)) g = 0; else {\r\n                                l = l << 16 >> 16;\r\n                                b[A + (l << 1) >> 1] = p;\r\n                                g = b[o >> 1] | 0;\r\n                                l = l + 1 & 65535\r\n                            }\r\n                            b[n >> 1] = g;\r\n                            b[o >> 1] = 0;\r\n                            p = p + 1 << 16 >> 16;\r\n                            if (p << 16 >> 16 >= 40) {\r\n                                t = l;\r\n                                break\r\n                            } else {\r\n                                o = o + 2 | 0;\r\n                                n = n + 2 | 0\r\n                            }\r\n                        }\r\n                        s = a << 16 >> 16 == 0;\r\n                        s = (d | 0) == 5 ? (s ? v : w) : s ? x : u;\r\n                        if (t << 16 >> 16 > 0) {\r\n                            r = 0;\r\n                            do {\r\n                                q = b[A + (r << 1) >> 1] | 0;\r\n                                l = q << 16 >> 16;\r\n                                a = b[z + (l << 1) >> 1] | 0;\r\n                                if (q << 16 >> 16 < 40) {\r\n                                    p = a << 16 >> 16;\r\n                                    o = 39 - q & 65535;\r\n                                    n = q;\r\n                                    l = h + (l << 1) | 0;\r\n                                    g = s;\r\n                                    while (1) {\r\n                                        d = (Z(b[g >> 1] | 0, p) | 0) >>> 15 & 65535;\r\n                                        b[l >> 1] = Rd(b[l >> 1] | 0, d, m) | 0;\r\n                                        n = n + 1 << 16 >> 16;\r\n                                        if (n << 16 >> 16 >= 40) break; else {\r\n                                            l = l + 2 | 0;\r\n                                            g = g + 2 | 0\r\n                                        }\r\n                                    }\r\n                                    if (q << 16 >> 16 > 0) {\r\n                                        l = s + (o + 1 << 1) | 0;\r\n                                        B = 36\r\n                                    }\r\n                                } else {\r\n                                    l = s;\r\n                                    B = 36\r\n                                }\r\n                                if ((B | 0) == 36) {\r\n                                    B = 0;\r\n                                    g = a << 16 >> 16;\r\n                                    p = 0;\r\n                                    o = h;\r\n                                    while (1) {\r\n                                        d = (Z(b[l >> 1] | 0, g) | 0) >>> 15 & 65535;\r\n                                        b[o >> 1] = Rd(b[o >> 1] | 0, d, m) | 0;\r\n                                        p = p + 1 << 16 >> 16;\r\n                                        if (p << 16 >> 16 >= q << 16 >> 16) break; else {\r\n                                            o = o + 2 | 0;\r\n                                            l = l + 2 | 0\r\n                                        }\r\n                                    }\r\n                                }\r\n                                r = r + 1 | 0\r\n                            } while ((r & 65535) << 16 >> 16 != t << 16 >> 16)\r\n                        }\r\n                    }\r\n            }\r\n            r = j << 16 >> 16;\r\n            s = y << 1;\r\n            g = k << 16 >> 16;\r\n            n = 0 - g << 16;\r\n            l = n >> 16;\r\n            if (k << 16 >> 16 > 0) {\r\n                p = 0;\r\n                o = e;\r\n                while (1) {\r\n                    a = Z(b[e + (p << 1) >> 1] | 0, r) | 0;\r\n                    if ((a | 0) == 1073741824) {\r\n                        c[m >> 2] = 1;\r\n                        n = 2147483647\r\n                    } else n = a << 1;\r\n                    k = Z(s, b[h >> 1] | 0) | 0;\r\n                    a = k + n | 0;\r\n                    if ((k ^ n | 0) > -1 & (a ^ n | 0) < 0) {\r\n                        c[m >> 2] = 1;\r\n                        a = (n >>> 31) + 2147483647 | 0\r\n                    }\r\n                    k = a << g;\r\n                    b[o >> 1] = Ce((k >> g | 0) == (a | 0) ? k : a >> 31 ^ 2147483647, m) | 0;\r\n                    p = p + 1 | 0;\r\n                    if ((p | 0) == 40) break; else {\r\n                        h = h + 2 | 0;\r\n                        o = o + 2 | 0\r\n                    }\r\n                }\r\n                i = C;\r\n                return\r\n            }\r\n            if ((n | 0) < 2031616) {\r\n                p = 0;\r\n                o = e;\r\n                while (1) {\r\n                    a = Z(b[e + (p << 1) >> 1] | 0, r) | 0;\r\n                    if ((a | 0) == 1073741824) {\r\n                        c[m >> 2] = 1;\r\n                        n = 2147483647\r\n                    } else n = a << 1;\r\n                    k = Z(s, b[h >> 1] | 0) | 0;\r\n                    a = k + n | 0;\r\n                    if ((k ^ n | 0) > -1 & (a ^ n | 0) < 0) {\r\n                        c[m >> 2] = 1;\r\n                        a = (n >>> 31) + 2147483647 | 0\r\n                    }\r\n                    b[o >> 1] = Ce(a >> l, m) | 0;\r\n                    p = p + 1 | 0;\r\n                    if ((p | 0) == 40) break; else {\r\n                        h = h + 2 | 0;\r\n                        o = o + 2 | 0\r\n                    }\r\n                }\r\n                i = C;\r\n                return\r\n            } else {\r\n                o = 0;\r\n                n = e;\r\n                while (1) {\r\n                    a = Z(b[e + (o << 1) >> 1] | 0, r) | 0;\r\n                    if ((a | 0) == 1073741824) {\r\n                        c[m >> 2] = 1;\r\n                        a = 2147483647\r\n                    } else a = a << 1;\r\n                    k = Z(s, b[h >> 1] | 0) | 0;\r\n                    if ((k ^ a | 0) > -1 & (k + a ^ a | 0) < 0) c[m >> 2] = 1;\r\n                    b[n >> 1] = Ce(0, m) | 0;\r\n                    o = o + 1 | 0;\r\n                    if ((o | 0) == 40) break; else {\r\n                        h = h + 2 | 0;\r\n                        n = n + 2 | 0\r\n                    }\r\n                }\r\n                i = C;\r\n                return\r\n            }\r\n        }\r\n\r\n        function xb(a) {\r\n            a = a | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            ;b[a >> 1] = 0;\r\n            b[a + 2 >> 1] = 0;\r\n            b[a + 4 >> 1] = 0;\r\n            b[a + 6 >> 1] = 0;\r\n            b[a + 8 >> 1] = 0;\r\n            b[a + 10 >> 1] = 0;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function yb(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;\r\n            if (d << 16 >> 16 <= 0) return;\r\n            f = a + 10 | 0;\r\n            j = a + 8 | 0;\r\n            l = a + 4 | 0;\r\n            m = a + 6 | 0;\r\n            n = a + 2 | 0;\r\n            g = b[l >> 1] | 0;\r\n            h = b[m >> 1] | 0;\r\n            i = b[a >> 1] | 0;\r\n            k = b[n >> 1] | 0;\r\n            o = 0;\r\n            while (1) {\r\n                p = b[f >> 1] | 0;\r\n                q = b[j >> 1] | 0;\r\n                b[f >> 1] = q;\r\n                r = b[c >> 1] | 0;\r\n                b[j >> 1] = r;\r\n                p = ((r << 16 >> 16) * 7699 | 0) + ((Z(i << 16 >> 16, -7667) | 0) + (((g << 16 >> 16) * 15836 | 0) + ((h << 16 >> 16) * 15836 >> 15)) + ((Z(k << 16 >> 16, -7667) | 0) >> 15)) + (Z(q << 16 >> 16, -15398) | 0) + ((p << 16 >> 16) * 7699 | 0) | 0;\r\n                q = p << 3;\r\n                p = (q >> 3 | 0) == (p | 0) ? q : p >> 31 ^ 2147483647;\r\n                q = p << 1;\r\n                b[c >> 1] = Ce((q >> 1 | 0) == (p | 0) ? q : p >> 31 ^ 2147483647, e) | 0;\r\n                i = b[l >> 1] | 0;\r\n                b[a >> 1] = i;\r\n                k = b[m >> 1] | 0;\r\n                b[n >> 1] = k;\r\n                g = p >>> 16 & 65535;\r\n                b[l >> 1] = g;\r\n                h = (p >>> 1) - (p >> 16 << 15) & 65535;\r\n                b[m >> 1] = h;\r\n                o = o + 1 << 16 >> 16;\r\n                if (o << 16 >> 16 >= d << 16 >> 16) break; else c = c + 2 | 0\r\n            }\r\n            return\r\n        }\r\n\r\n        function zb(a) {\r\n            a = a | 0;\r\n            if (!a) a = -1; else {\r\n                b[a >> 1] = 0;\r\n                a = 0\r\n            }\r\n            return a | 0\r\n        }\r\n\r\n        function Ab(a, d, e, f, g) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, i = 0, j = 0, k = 0;\r\n            j = f << 16 >> 16;\r\n            h = d + (j + -1 << 1) | 0;\r\n            j = j + -2 | 0;\r\n            k = b[h >> 1] | 0;\r\n            if (f << 16 >> 16 < 2) f = e << 16 >> 16; else {\r\n                f = e << 16 >> 16;\r\n                i = 0;\r\n                d = d + (j << 1) | 0;\r\n                while (1) {\r\n                    e = (Z(b[d >> 1] | 0, f) | 0) >> 15;\r\n                    if ((e | 0) > 32767) {\r\n                        c[g >> 2] = 1;\r\n                        e = 32767\r\n                    }\r\n                    b[h >> 1] = Ge(b[h >> 1] | 0, e & 65535, g) | 0;\r\n                    h = h + -2 | 0;\r\n                    i = i + 1 << 16 >> 16;\r\n                    if ((i << 16 >> 16 | 0) > (j | 0)) break; else d = d + -2 | 0\r\n                }\r\n            }\r\n            f = (Z(b[a >> 1] | 0, f) | 0) >> 15;\r\n            if ((f | 0) <= 32767) {\r\n                j = f;\r\n                j = j & 65535;\r\n                i = b[h >> 1] | 0;\r\n                g = Ge(i, j, g) | 0;\r\n                b[h >> 1] = g;\r\n                b[a >> 1] = k;\r\n                return\r\n            }\r\n            c[g >> 2] = 1;\r\n            j = 32767;\r\n            j = j & 65535;\r\n            i = b[h >> 1] | 0;\r\n            g = Ge(i, j, g) | 0;\r\n            b[h >> 1] = g;\r\n            b[a >> 1] = k;\r\n            return\r\n        }\r\n\r\n        function Bb(a) {\r\n            a = a | 0;\r\n            var c = 0, d = 0, e = 0;\r\n            if (!a) {\r\n                e = -1;\r\n                return e | 0\r\n            }\r\n            Qe(a + 104 | 0, 0, 340) | 0;\r\n            c = a + 102 | 0;\r\n            d = a;\r\n            e = d + 100 | 0;\r\n            do {\r\n                b[d >> 1] = 0;\r\n                d = d + 2 | 0\r\n            } while ((d | 0) < (e | 0));\r\n            Ba(c) | 0;\r\n            zb(a + 100 | 0) | 0;\r\n            e = 0;\r\n            return e | 0\r\n        }\r\n\r\n        function Cb(d, e, f, g, h) {\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0;\r\n            w = i;\r\n            i = i + 96 | 0;\r\n            s = w + 22 | 0;\r\n            t = w;\r\n            u = w + 44 | 0;\r\n            Pe(d + 124 | 0, f | 0, 320) | 0;\r\n            o = u + 22 | 0;\r\n            p = d + 100 | 0;\r\n            q = d + 80 | 0;\r\n            r = d + 102 | 0;\r\n            if ((e & -2 | 0) == 6) {\r\n                n = 0;\r\n                while (1) {\r\n                    Ie(g, 702, s);\r\n                    Ie(g, 722, t);\r\n                    m = d + 104 + (n + 10 << 1) | 0;\r\n                    Be(s, m, d, 40);\r\n                    k = u;\r\n                    j = s;\r\n                    e = k + 22 | 0;\r\n                    do {\r\n                        b[k >> 1] = b[j >> 1] | 0;\r\n                        k = k + 2 | 0;\r\n                        j = j + 2 | 0\r\n                    } while ((k | 0) < (e | 0));\r\n                    k = o;\r\n                    e = k + 22 | 0;\r\n                    do {\r\n                        b[k >> 1] = 0;\r\n                        k = k + 2 | 0\r\n                    } while ((k | 0) < (e | 0));\r\n                    He(t, u, u, 22, o, 0);\r\n                    e = 0;\r\n                    k = 21;\r\n                    do {\r\n                        j = b[u + (k << 16 >> 16 << 1) >> 1] | 0;\r\n                        j = Z(j, j) | 0;\r\n                        if ((j | 0) == 1073741824) {\r\n                            v = 7;\r\n                            break\r\n                        }\r\n                        l = j << 1;\r\n                        j = l + e | 0;\r\n                        if ((l ^ e | 0) > -1 & (j ^ e | 0) < 0) {\r\n                            c[h >> 2] = 1;\r\n                            e = (e >>> 31) + 2147483647 | 0\r\n                        } else e = j;\r\n                        k = k + -1 << 16 >> 16\r\n                    } while (k << 16 >> 16 > -1);\r\n                    if ((v | 0) == 7) {\r\n                        v = 0;\r\n                        c[h >> 2] = 1\r\n                    }\r\n                    l = e >>> 16 & 65535;\r\n                    j = 20;\r\n                    e = 0;\r\n                    k = 20;\r\n                    while (1) {\r\n                        j = Z(b[u + (j + 1 << 1) >> 1] | 0, b[u + (j << 1) >> 1] | 0) | 0;\r\n                        if ((j | 0) == 1073741824) {\r\n                            v = 13;\r\n                            break\r\n                        }\r\n                        x = j << 1;\r\n                        j = x + e | 0;\r\n                        if ((x ^ e | 0) > -1 & (j ^ e | 0) < 0) {\r\n                            c[h >> 2] = 1;\r\n                            e = (e >>> 31) + 2147483647 | 0\r\n                        } else e = j;\r\n                        j = (k & 65535) + -1 << 16 >> 16;\r\n                        if (j << 16 >> 16 > -1) {\r\n                            j = j << 16 >> 16;\r\n                            k = k + -1 | 0\r\n                        } else break\r\n                    }\r\n                    if ((v | 0) == 13) {\r\n                        v = 0;\r\n                        c[h >> 2] = 1\r\n                    }\r\n                    e = e >> 16;\r\n                    if ((e | 0) < 1) e = 0; else e = Td((e * 26214 | 0) >>> 15 & 65535, l) | 0;\r\n                    Ab(p, d, e, 40, h);\r\n                    e = f + (n << 1) | 0;\r\n                    He(t, d, e, 40, q, 1);\r\n                    Ca(r, m, e, 29491, 40, h);\r\n                    e = (n << 16) + 2621440 | 0;\r\n                    if ((e | 0) < 10485760) {\r\n                        n = e >> 16;\r\n                        g = g + 22 | 0\r\n                    } else break\r\n                }\r\n                k = d + 104 | 0;\r\n                j = d + 424 | 0;\r\n                e = k + 20 | 0;\r\n                do {\r\n                    a[k >> 0] = a[j >> 0] | 0;\r\n                    k = k + 1 | 0;\r\n                    j = j + 1 | 0\r\n                } while ((k | 0) < (e | 0));\r\n                i = w;\r\n                return\r\n            } else {\r\n                n = 0;\r\n                while (1) {\r\n                    Ie(g, 742, s);\r\n                    Ie(g, 762, t);\r\n                    m = d + 104 + (n + 10 << 1) | 0;\r\n                    Be(s, m, d, 40);\r\n                    k = u;\r\n                    j = s;\r\n                    e = k + 22 | 0;\r\n                    do {\r\n                        b[k >> 1] = b[j >> 1] | 0;\r\n                        k = k + 2 | 0;\r\n                        j = j + 2 | 0\r\n                    } while ((k | 0) < (e | 0));\r\n                    k = o;\r\n                    e = k + 22 | 0;\r\n                    do {\r\n                        b[k >> 1] = 0;\r\n                        k = k + 2 | 0\r\n                    } while ((k | 0) < (e | 0));\r\n                    He(t, u, u, 22, o, 0);\r\n                    e = 0;\r\n                    k = 21;\r\n                    do {\r\n                        j = b[u + (k << 16 >> 16 << 1) >> 1] | 0;\r\n                        j = Z(j, j) | 0;\r\n                        if ((j | 0) == 1073741824) {\r\n                            v = 22;\r\n                            break\r\n                        }\r\n                        x = j << 1;\r\n                        j = x + e | 0;\r\n                        if ((x ^ e | 0) > -1 & (j ^ e | 0) < 0) {\r\n                            c[h >> 2] = 1;\r\n                            e = (e >>> 31) + 2147483647 | 0\r\n                        } else e = j;\r\n                        k = k + -1 << 16 >> 16\r\n                    } while (k << 16 >> 16 > -1);\r\n                    if ((v | 0) == 22) {\r\n                        v = 0;\r\n                        c[h >> 2] = 1\r\n                    }\r\n                    l = e >>> 16 & 65535;\r\n                    j = 20;\r\n                    e = 0;\r\n                    k = 20;\r\n                    while (1) {\r\n                        j = Z(b[u + (j + 1 << 1) >> 1] | 0, b[u + (j << 1) >> 1] | 0) | 0;\r\n                        if ((j | 0) == 1073741824) {\r\n                            v = 28;\r\n                            break\r\n                        }\r\n                        x = j << 1;\r\n                        j = x + e | 0;\r\n                        if ((x ^ e | 0) > -1 & (j ^ e | 0) < 0) {\r\n                            c[h >> 2] = 1;\r\n                            e = (e >>> 31) + 2147483647 | 0\r\n                        } else e = j;\r\n                        j = (k & 65535) + -1 << 16 >> 16;\r\n                        if (j << 16 >> 16 > -1) {\r\n                            j = j << 16 >> 16;\r\n                            k = k + -1 | 0\r\n                        } else break\r\n                    }\r\n                    if ((v | 0) == 28) {\r\n                        v = 0;\r\n                        c[h >> 2] = 1\r\n                    }\r\n                    e = e >> 16;\r\n                    if ((e | 0) < 1) e = 0; else e = Td((e * 26214 | 0) >>> 15 & 65535, l) | 0;\r\n                    Ab(p, d, e, 40, h);\r\n                    e = f + (n << 1) | 0;\r\n                    He(t, d, e, 40, q, 1);\r\n                    Ca(r, m, e, 29491, 40, h);\r\n                    e = (n << 16) + 2621440 | 0;\r\n                    if ((e | 0) < 10485760) {\r\n                        n = e >> 16;\r\n                        g = g + 22 | 0\r\n                    } else break\r\n                }\r\n                k = d + 104 | 0;\r\n                j = d + 424 | 0;\r\n                e = k + 20 | 0;\r\n                do {\r\n                    a[k >> 0] = a[j >> 0] | 0;\r\n                    k = k + 1 | 0;\r\n                    j = j + 1 | 0\r\n                } while ((k | 0) < (e | 0));\r\n                i = w;\r\n                return\r\n            }\r\n        }\r\n\r\n        function Db(a, b) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            var d = 0, e = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(1764) | 0;\r\n            if (!d) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            if ((Ua(d) | 0) << 16 >> 16 == 0 ? (e = d + 1748 | 0, (xb(e) | 0) << 16 >> 16 == 0) : 0) {\r\n                Va(d, 0) | 0;\r\n                Bb(d + 1304 | 0) | 0;\r\n                xb(e) | 0;\r\n                c[d + 1760 >> 2] = 0;\r\n                c[a >> 2] = d;\r\n                a = 0;\r\n                return a | 0\r\n            }\r\n            b = c[d >> 2] | 0;\r\n            if (!b) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            Ke(b);\r\n            c[d >> 2] = 0;\r\n            a = -1;\r\n            return a | 0\r\n        }\r\n\r\n        function Eb(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function Fb(a, d, f, g, h) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0;\r\n            v = i;\r\n            i = i + 208 | 0;\r\n            u = v + 88 | 0;\r\n            t = v;\r\n            s = a + 1164 | 0;\r\n            j = c[a + 1256 >> 2] | 0;\r\n            if ((g + -5 | 0) >>> 0 < 2) {\r\n                r = j + 16 | 0;\r\n                if ((b[r >> 1] | 0) > 0) {\r\n                    q = c[(c[a + 1260 >> 2] | 0) + 32 >> 2] | 0;\r\n                    p = 0;\r\n                    j = 0;\r\n                    while (1) {\r\n                        o = q + (p << 1) | 0;\r\n                        m = b[o >> 1] | 0;\r\n                        if (m << 16 >> 16 > 0) {\r\n                            l = f;\r\n                            n = 0;\r\n                            k = 0;\r\n                            while (1) {\r\n                                k = e[l >> 1] | k << 1 & 131070;\r\n                                n = n + 1 << 16 >> 16;\r\n                                if (n << 16 >> 16 >= m << 16 >> 16) break; else l = l + 2 | 0\r\n                            }\r\n                            k = k & 65535\r\n                        } else k = 0;\r\n                        b[u + (p << 1) >> 1] = k;\r\n                        j = j + 1 << 16 >> 16;\r\n                        if (j << 16 >> 16 < (b[r >> 1] | 0)) {\r\n                            f = f + (b[o >> 1] << 1) | 0;\r\n                            p = j << 16 >> 16\r\n                        } else break\r\n                    }\r\n                }\r\n            } else {\r\n                q = j + (d << 1) | 0;\r\n                if ((b[q >> 1] | 0) > 0) {\r\n                    r = c[(c[a + 1260 >> 2] | 0) + (d << 2) >> 2] | 0;\r\n                    o = 0;\r\n                    j = 0;\r\n                    while (1) {\r\n                        p = r + (o << 1) | 0;\r\n                        m = b[p >> 1] | 0;\r\n                        if (m << 16 >> 16 > 0) {\r\n                            l = f;\r\n                            n = 0;\r\n                            k = 0;\r\n                            while (1) {\r\n                                k = e[l >> 1] | k << 1 & 131070;\r\n                                n = n + 1 << 16 >> 16;\r\n                                if (n << 16 >> 16 >= m << 16 >> 16) break; else l = l + 2 | 0\r\n                            }\r\n                            k = k & 65535\r\n                        } else k = 0;\r\n                        b[u + (o << 1) >> 1] = k;\r\n                        j = j + 1 << 16 >> 16;\r\n                        if (j << 16 >> 16 < (b[q >> 1] | 0)) {\r\n                            f = f + (b[p >> 1] << 1) | 0;\r\n                            o = j << 16 >> 16\r\n                        } else break\r\n                    }\r\n                }\r\n            }\r\n            Wa(a, d, u, g, h, t);\r\n            Cb(a + 1304 | 0, d, h, t, s);\r\n            yb(a + 1748 | 0, h, 160, s);\r\n            j = 0;\r\n            do {\r\n                a = h + (j << 1) | 0;\r\n                b[a >> 1] = e[a >> 1] & 65528;\r\n                j = j + 1 | 0\r\n            } while ((j | 0) != 160);\r\n            i = v;\r\n            return\r\n        }\r\n\r\n        function Gb(a, f, g, h) {\r\n            a = a | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var i = 0, j = 0, k = 0;\r\n            j = c[h + 100 >> 2] | 0;\r\n            k = (e[(c[h + 96 >> 2] | 0) + (a << 1) >> 1] | 0) + 65535 | 0;\r\n            h = k & 65535;\r\n            i = h << 16 >> 16 > -1;\r\n            if (a >>> 0 < 8) {\r\n                if (!i) return;\r\n                j = c[j + (a << 2) >> 2] | 0;\r\n                i = k << 16 >> 16;\r\n                while (1) {\r\n                    b[g + (b[j + (i << 1) >> 1] << 1) >> 1] = (d[f + (i >> 3) >> 0] | 0) >>> (i & 7 ^ 7) & 1;\r\n                    h = h + -1 << 16 >> 16;\r\n                    if (h << 16 >> 16 > -1) i = h << 16 >> 16; else break\r\n                }\r\n                return\r\n            } else {\r\n                if (!i) return;\r\n                i = k << 16 >> 16;\r\n                while (1) {\r\n                    b[g + (i << 1) >> 1] = (d[f + (i >> 3) >> 0] | 0) >>> (i & 7 ^ 7) & 1;\r\n                    h = h + -1 << 16 >> 16;\r\n                    if (h << 16 >> 16 > -1) i = h << 16 >> 16; else break\r\n                }\r\n                return\r\n            }\r\n        }\r\n\r\n        function Hb(a, b, c) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            c = c | 0;\r\n            a = vd(a, c, 31764) | 0;\r\n            return ((sd(b) | 0 | a) << 16 >> 16 != 0) << 31 >> 31 | 0\r\n        }\r\n\r\n        function Ib(a, b) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            wd(a);\r\n            td(b);\r\n            return\r\n        }\r\n\r\n        function Jb(d, f, g, h, j, k, l) {\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            var m = 0, n = 0, o = 0, p = 0, q = 0;\r\n            q = i;\r\n            i = i + 512 | 0;\r\n            m = q + 8 | 0;\r\n            n = q + 4 | 0;\r\n            o = q;\r\n            c[o >> 2] = 0;\r\n            p = l << 16 >> 16 == 3;\r\n            if (!((l & 65535) < 2 | p & 1)) {\r\n                if (l << 16 >> 16 != 2) {\r\n                    j = -1;\r\n                    i = q;\r\n                    return j | 0\r\n                }\r\n                xd(d, g, h, m + 2 | 0, o);\r\n                d = c[o >> 2] | 0;\r\n                c[k >> 2] = d;\r\n                ud(f, d, n);\r\n                f = c[n >> 2] | 0;\r\n                b[m >> 1] = f;\r\n                b[m + 490 >> 1] = (f | 0) == 3 ? -1 : g & 65535;\r\n                a[j >> 0] = f;\r\n                f = 1;\r\n                do {\r\n                    m = m + 1 | 0;\r\n                    a[j + f >> 0] = a[m >> 0] | 0;\r\n                    f = f + 1 | 0\r\n                } while ((f | 0) != 492);\r\n                m = 492;\r\n                i = q;\r\n                return m | 0\r\n            }\r\n            xd(d, g, h, m, o);\r\n            ud(f, c[o >> 2] | 0, n);\r\n            h = c[n >> 2] | 0;\r\n            if ((h | 0) != 3) {\r\n                f = c[o >> 2] | 0;\r\n                c[k >> 2] = f;\r\n                if ((f | 0) == 8) {\r\n                    switch (h | 0) {\r\n                        case 1: {\r\n                            b[m + 70 >> 1] = 0;\r\n                            break\r\n                        }\r\n                        case 2: {\r\n                            o = m + 70 | 0;\r\n                            b[o >> 1] = e[o >> 1] | 0 | 1;\r\n                            break\r\n                        }\r\n                        default: {\r\n                        }\r\n                    }\r\n                    b[m + 72 >> 1] = g & 1;\r\n                    b[m + 74 >> 1] = g >>> 1 & 1;\r\n                    b[m + 76 >> 1] = g >>> 2 & 1;\r\n                    f = 8\r\n                }\r\n            } else {\r\n                c[k >> 2] = 15;\r\n                f = 15\r\n            }\r\n            if (p) {\r\n                tc(f, m, j, (c[d + 4 >> 2] | 0) + 2392 | 0);\r\n                j = b[3404 + (c[k >> 2] << 16 >> 16 << 1) >> 1] | 0;\r\n                i = q;\r\n                return j | 0\r\n            }\r\n            switch (l << 16 >> 16) {\r\n                case 0: {\r\n                    sc(f, m, j, (c[d + 4 >> 2] | 0) + 2392 | 0);\r\n                    j = b[3404 + (c[k >> 2] << 16 >> 16 << 1) >> 1] | 0;\r\n                    i = q;\r\n                    return j | 0\r\n                }\r\n                case 1: {\r\n                    rc(f, m, j, (c[d + 4 >> 2] | 0) + 2392 | 0);\r\n                    j = b[3436 + (c[k >> 2] << 16 >> 16 << 1) >> 1] | 0;\r\n                    i = q;\r\n                    return j | 0\r\n                }\r\n                default: {\r\n                    j = -1;\r\n                    i = q;\r\n                    return j | 0\r\n                }\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function Kb(a, c, d, e, f, g) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0,\r\n                x = 0, y = 0;\r\n            y = i;\r\n            i = i + 480 | 0;\r\n            x = y;\r\n            g = 240;\r\n            l = f;\r\n            k = a;\r\n            j = x;\r\n            h = 0;\r\n            while (1) {\r\n                w = ((Z(b[l >> 1] | 0, b[k >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n                b[j >> 1] = w;\r\n                w = w << 16;\r\n                h = (Z(w >> 15, w >> 16) | 0) + h | 0;\r\n                if ((h | 0) < 0) {\r\n                    m = 4;\r\n                    break\r\n                }\r\n                g = g + -1 | 0;\r\n                if (!((g & 65535) << 16 >> 16)) {\r\n                    g = 0;\r\n                    break\r\n                } else {\r\n                    l = l + 2 | 0;\r\n                    k = k + 2 | 0;\r\n                    j = j + 2 | 0\r\n                }\r\n            }\r\n            if ((m | 0) == 4) {\r\n                h = g & 65535;\r\n                j = 240 - g | 0;\r\n                if (!(h << 16 >> 16)) g = 0; else {\r\n                    l = h;\r\n                    k = f + (j << 1) | 0;\r\n                    g = a + (j << 1) | 0;\r\n                    h = x + (j << 1) | 0;\r\n                    while (1) {\r\n                        b[h >> 1] = ((Z(b[k >> 1] | 0, b[g >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n                        l = l + -1 << 16 >> 16;\r\n                        if (!(l << 16 >> 16)) {\r\n                            g = 0;\r\n                            break\r\n                        } else {\r\n                            k = k + 2 | 0;\r\n                            g = g + 2 | 0;\r\n                            h = h + 2 | 0\r\n                        }\r\n                    }\r\n                }\r\n                do {\r\n                    k = g & 65535;\r\n                    g = 120;\r\n                    j = x;\r\n                    h = 0;\r\n                    while (1) {\r\n                        w = (b[j >> 1] | 0) >>> 2;\r\n                        u = j + 2 | 0;\r\n                        b[j >> 1] = w;\r\n                        w = w << 16 >> 16;\r\n                        w = Z(w, w) | 0;\r\n                        v = (b[u >> 1] | 0) >>> 2;\r\n                        b[u >> 1] = v;\r\n                        v = v << 16 >> 16;\r\n                        h = ((Z(v, v) | 0) + w << 1) + h | 0;\r\n                        g = g + -1 << 16 >> 16;\r\n                        if (!(g << 16 >> 16)) break; else j = j + 4 | 0\r\n                    }\r\n                    g = k + 4 | 0\r\n                } while ((h | 0) < 1)\r\n            }\r\n            w = h + 1 | 0;\r\n            v = (pe(w) | 0) << 16 >> 16;\r\n            w = w << v;\r\n            b[d >> 1] = w >>> 16;\r\n            b[e >> 1] = (w >>> 1) - (w >> 16 << 15);\r\n            w = x + 478 | 0;\r\n            l = c << 16 >> 16;\r\n            if (c << 16 >> 16 <= 0) {\r\n                x = v - g | 0;\r\n                x = x & 65535;\r\n                i = y;\r\n                return x | 0\r\n            }\r\n            r = x + 476 | 0;\r\n            s = v + 1 | 0;\r\n            t = 239 - l | 0;\r\n            u = x + (236 - l << 1) | 0;\r\n            c = l;\r\n            d = d + (l << 1) | 0;\r\n            e = e + (l << 1) | 0;\r\n            while (1) {\r\n                m = Z((t >>> 1) + 65535 & 65535, -2) | 0;\r\n                k = x + (m + 236 << 1) | 0;\r\n                m = u + (m << 1) | 0;\r\n                f = 240 - c | 0;\r\n                q = f + -1 | 0;\r\n                j = x + (q << 1) | 0;\r\n                a = q >>> 1 & 65535;\r\n                f = x + (f + -2 << 1) | 0;\r\n                l = Z(b[w >> 1] | 0, b[j >> 1] | 0) | 0;\r\n                if (!(a << 16 >> 16)) {\r\n                    m = f;\r\n                    k = r\r\n                } else {\r\n                    p = r;\r\n                    o = w;\r\n                    while (1) {\r\n                        h = j + -4 | 0;\r\n                        n = o + -4 | 0;\r\n                        l = (Z(b[p >> 1] | 0, b[f >> 1] | 0) | 0) + l | 0;\r\n                        a = a + -1 << 16 >> 16;\r\n                        l = (Z(b[n >> 1] | 0, b[h >> 1] | 0) | 0) + l | 0;\r\n                        if (!(a << 16 >> 16)) break; else {\r\n                            f = j + -6 | 0;\r\n                            p = o + -6 | 0;\r\n                            j = h;\r\n                            o = n\r\n                        }\r\n                    }\r\n                }\r\n                if (q & 1) l = (Z(b[k >> 1] | 0, b[m >> 1] | 0) | 0) + l | 0;\r\n                q = l << s;\r\n                b[d >> 1] = q >>> 16;\r\n                b[e >> 1] = (q >>> 1) - (q >> 16 << 15);\r\n                if ((c & 65535) + -1 << 16 >> 16 << 16 >> 16 > 0) {\r\n                    t = t + 1 | 0;\r\n                    u = u + 2 | 0;\r\n                    c = c + -1 | 0;\r\n                    d = d + -2 | 0;\r\n                    e = e + -2 | 0\r\n                } else break\r\n            }\r\n            x = v - g | 0;\r\n            x = x & 65535;\r\n            i = y;\r\n            return x | 0\r\n        }\r\n\r\n        function Lb(a, c, d, f, g, h, j, k) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            var l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0,\r\n                A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0;\r\n            E = i;\r\n            i = i + 3440 | 0;\r\n            D = E + 3420 | 0;\r\n            z = E + 3400 | 0;\r\n            A = E + 3224 | 0;\r\n            C = E;\r\n            x = E + 3320 | 0;\r\n            B = E + 3240 | 0;\r\n            y = E + 24 | 0;\r\n            hc(d, a, x, 2, k);\r\n            rd(x, c, B, A, 5, z, 5, k);\r\n            fc(d, B, y, k);\r\n            pd(10, 5, 5, x, y, z, A, C, k);\r\n            c = f;\r\n            k = c + 80 | 0;\r\n            do {\r\n                b[c >> 1] = 0;\r\n                c = c + 2 | 0\r\n            } while ((c | 0) < (k | 0));\r\n            b[h >> 1] = 65535;\r\n            b[h + 2 >> 1] = 65535;\r\n            b[h + 4 >> 1] = 65535;\r\n            b[h + 6 >> 1] = 65535;\r\n            b[h + 8 >> 1] = 65535;\r\n            p = 0;\r\n            q = C;\r\n            r = D;\r\n            do {\r\n                a = b[q >> 1] | 0;\r\n                q = q + 2 | 0;\r\n                l = (a * 6554 | 0) >>> 15;\r\n                m = l << 16 >> 16;\r\n                c = f + (a << 1) | 0;\r\n                k = b[c >> 1] | 0;\r\n                if ((b[B + (a << 1) >> 1] | 0) > 0) {\r\n                    b[c >> 1] = k + 4096;\r\n                    b[r >> 1] = 8192;\r\n                    n = l\r\n                } else {\r\n                    b[c >> 1] = k + 61440;\r\n                    b[r >> 1] = -8192;\r\n                    n = m + 8 | 0\r\n                }\r\n                r = r + 2 | 0;\r\n                o = n & 65535;\r\n                c = a - (l << 2) - m << 16 >> 16;\r\n                l = h + (c << 1) | 0;\r\n                k = b[l >> 1] | 0;\r\n                a = k << 16 >> 16;\r\n                do if (k << 16 >> 16 >= 0) {\r\n                    m = n << 16 >> 16;\r\n                    if (!((m ^ a) & 8)) {\r\n                        c = h + (c + 5 << 1) | 0;\r\n                        if ((a | 0) > (m | 0)) {\r\n                            b[c >> 1] = k;\r\n                            b[l >> 1] = o;\r\n                            break\r\n                        } else {\r\n                            b[c >> 1] = o;\r\n                            break\r\n                        }\r\n                    } else {\r\n                        c = h + (c + 5 << 1) | 0;\r\n                        if ((a & 7) >>> 0 > (m & 7) >>> 0) {\r\n                            b[c >> 1] = o;\r\n                            break\r\n                        } else {\r\n                            b[c >> 1] = k;\r\n\r\n                            b[l >> 1] = o;\r\n                            break\r\n                        }\r\n                    }\r\n                } else b[l >> 1] = o; while (0);\r\n                p = p + 1 << 16 >> 16\r\n            } while (p << 16 >> 16 < 10);\r\n            r = D + 2 | 0;\r\n            p = D + 4 | 0;\r\n            n = D + 6 | 0;\r\n            m = D + 8 | 0;\r\n            l = D + 10 | 0;\r\n            c = D + 12 | 0;\r\n            k = D + 14 | 0;\r\n            a = D + 16 | 0;\r\n            s = D + 18 | 0;\r\n            t = 40;\r\n            u = d + (0 - (b[C >> 1] | 0) << 1) | 0;\r\n            v = d + (0 - (b[C + 2 >> 1] | 0) << 1) | 0;\r\n            w = d + (0 - (b[C + 4 >> 1] | 0) << 1) | 0;\r\n            x = d + (0 - (b[C + 6 >> 1] | 0) << 1) | 0;\r\n            y = d + (0 - (b[C + 8 >> 1] | 0) << 1) | 0;\r\n            z = d + (0 - (b[C + 10 >> 1] | 0) << 1) | 0;\r\n            A = d + (0 - (b[C + 12 >> 1] | 0) << 1) | 0;\r\n            B = d + (0 - (b[C + 14 >> 1] | 0) << 1) | 0;\r\n            f = d + (0 - (b[C + 16 >> 1] | 0) << 1) | 0;\r\n            q = d + (0 - (b[C + 18 >> 1] | 0) << 1) | 0;\r\n            o = g;\r\n            while (1) {\r\n                K = (Z(b[D >> 1] | 0, b[u >> 1] | 0) | 0) >> 7;\r\n                J = (Z(b[r >> 1] | 0, b[v >> 1] | 0) | 0) >> 7;\r\n                I = (Z(b[p >> 1] | 0, b[w >> 1] | 0) | 0) >> 7;\r\n                H = (Z(b[n >> 1] | 0, b[x >> 1] | 0) | 0) >> 7;\r\n                G = (Z(b[m >> 1] | 0, b[y >> 1] | 0) | 0) >> 7;\r\n                F = (Z(b[l >> 1] | 0, b[z >> 1] | 0) | 0) >> 7;\r\n                C = (Z(b[c >> 1] | 0, b[A >> 1] | 0) | 0) >> 7;\r\n                d = (Z(b[k >> 1] | 0, b[B >> 1] | 0) | 0) >>> 7;\r\n                g = (Z(b[a >> 1] | 0, b[f >> 1] | 0) | 0) >>> 7;\r\n                b[o >> 1] = (K + 128 + J + I + H + G + F + C + d + g + ((Z(b[s >> 1] | 0, b[q >> 1] | 0) | 0) >>> 7) | 0) >>> 8;\r\n                t = t + -1 << 16 >> 16;\r\n                if (!(t << 16 >> 16)) break; else {\r\n                    u = u + 2 | 0;\r\n                    v = v + 2 | 0;\r\n                    w = w + 2 | 0;\r\n                    x = x + 2 | 0;\r\n                    y = y + 2 | 0;\r\n                    z = z + 2 | 0;\r\n                    A = A + 2 | 0;\r\n                    B = B + 2 | 0;\r\n                    f = f + 2 | 0;\r\n                    q = q + 2 | 0;\r\n                    o = o + 2 | 0\r\n                }\r\n            }\r\n            c = 0;\r\n            do {\r\n                k = h + (c << 1) | 0;\r\n                a = b[k >> 1] | 0;\r\n                if ((c | 0) < 5) a = (e[j + ((a & 7) << 1) >> 1] | a & 8) & 65535; else a = b[j + ((a & 7) << 1) >> 1] | 0;\r\n                b[k >> 1] = a;\r\n                c = c + 1 | 0\r\n            } while ((c | 0) != 10);\r\n            i = E;\r\n            return\r\n        }\r\n\r\n        function Mb(a, d, e, f, g, h, j, k) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            var l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0,\r\n                A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0;\r\n            N = i;\r\n            i = i + 3456 | 0;\r\n            I = N + 3448 | 0;\r\n            G = N + 3360 | 0;\r\n            E = N + 3368 | 0;\r\n            p = N + 3280 | 0;\r\n            H = N + 3200 | 0;\r\n            F = N;\r\n            K = (f & 65535) << 17;\r\n            M = e << 16 >> 16;\r\n            J = e << 16 >> 16 < 40;\r\n            if (J) {\r\n                f = K >> 16;\r\n                e = M;\r\n                do {\r\n                    m = (Z(b[d + (e - M << 1) >> 1] | 0, f) | 0) >> 15;\r\n                    if ((m | 0) > 32767) {\r\n                        c[k >> 2] = 1;\r\n                        m = 32767\r\n                    }\r\n                    D = d + (e << 1) | 0;\r\n                    b[D >> 1] = Rd(b[D >> 1] | 0, m & 65535, k) | 0;\r\n                    e = e + 1 | 0\r\n                } while ((e & 65535) << 16 >> 16 != 40)\r\n            }\r\n            hc(d, a, E, 1, k);\r\n            qd(E, H, p, 8);\r\n            fc(d, H, F, k);\r\n            D = G + 2 | 0;\r\n            b[G >> 1] = 0;\r\n            b[D >> 1] = 1;\r\n            a = 1;\r\n            m = 0;\r\n            o = 1;\r\n            p = 0;\r\n            n = -1;\r\n            do {\r\n                B = b[2830 + (p << 1) >> 1] | 0;\r\n                C = B << 16 >> 16;\r\n                A = 0;\r\n                do {\r\n                    y = b[2834 + (A << 1) >> 1] | 0;\r\n                    z = y << 16 >> 16;\r\n                    x = a;\r\n                    v = C;\r\n                    u = o;\r\n                    w = B;\r\n                    t = n;\r\n                    while (1) {\r\n                        l = b[E + (v << 1) >> 1] | 0;\r\n                        r = b[F + (v * 80 | 0) + (v << 1) >> 1] | 0;\r\n                        e = z;\r\n                        o = 1;\r\n                        s = y;\r\n                        a = y;\r\n                        n = -1;\r\n                        while (1) {\r\n                            f = Rd(l, b[E + (e << 1) >> 1] | 0, k) | 0;\r\n                            f = f << 16 >> 16;\r\n                            f = (Z(f, f) | 0) >>> 15;\r\n                            q = (b[F + (v * 80 | 0) + (e << 1) >> 1] << 15) + 32768 + ((b[F + (e * 80 | 0) + (e << 1) >> 1] | 0) + r << 14) | 0;\r\n                            if (((Z(f << 16 >> 16, o << 16 >> 16) | 0) - (Z(q >> 16, n << 16 >> 16) | 0) << 1 | 0) > 0) {\r\n                                o = q >>> 16 & 65535;\r\n                                a = s;\r\n                                n = f & 65535\r\n                            }\r\n                            q = e + 5 | 0;\r\n                            s = q & 65535;\r\n                            if (s << 16 >> 16 >= 40) break; else e = q << 16 >> 16\r\n                        }\r\n                        if (((Z(n << 16 >> 16, u << 16 >> 16) | 0) - (Z(o << 16 >> 16, t << 16 >> 16) | 0) << 1 | 0) > 0) {\r\n                            b[G >> 1] = w;\r\n                            b[D >> 1] = a;\r\n                            m = w\r\n                        } else {\r\n                            a = x;\r\n                            o = u;\r\n                            n = t\r\n                        }\r\n                        q = v + 5 | 0;\r\n                        w = q & 65535;\r\n                        if (w << 16 >> 16 >= 40) break; else {\r\n                            x = a;\r\n                            v = q << 16 >> 16;\r\n                            u = o;\r\n                            t = n\r\n                        }\r\n                    }\r\n                    A = A + 1 | 0\r\n                } while ((A | 0) != 4);\r\n                p = p + 1 | 0\r\n            } while ((p | 0) != 2);\r\n            r = a;\r\n            s = m;\r\n            f = g;\r\n            e = f + 80 | 0;\r\n            do {\r\n                b[f >> 1] = 0;\r\n                f = f + 2 | 0\r\n            } while ((f | 0) < (e | 0));\r\n            o = s;\r\n            e = 0;\r\n            q = 0;\r\n            f = 0;\r\n            while (1) {\r\n                m = o << 16 >> 16;\r\n                l = b[H + (m << 1) >> 1] | 0;\r\n                a = (m * 6554 | 0) >>> 15;\r\n                o = a << 16;\r\n                p = o >> 15;\r\n                n = m - (p + (a << 3) << 16 >> 17) | 0;\r\n                switch (n << 16 >> 16 | 0) {\r\n                    case 0: {\r\n                        p = o >> 10;\r\n                        a = 1;\r\n                        break\r\n                    }\r\n                    case 1: {\r\n                        if (!((e & 65535) << 16 >> 16)) a = 0; else {\r\n                            p = a << 22 >> 16 | 16;\r\n                            a = 1\r\n                        }\r\n                        break\r\n                    }\r\n                    case 2: {\r\n                        p = a << 22 >> 16 | 32;\r\n                        a = 1;\r\n                        break\r\n                    }\r\n                    case 3: {\r\n                        p = a << 17 >> 16 | 1;\r\n                        a = 0;\r\n                        break\r\n                    }\r\n                    case 4: {\r\n                        p = a << 22 >> 16 | 48;\r\n                        a = 1;\r\n                        break\r\n                    }\r\n                    default: {\r\n                        p = a;\r\n                        a = n & 65535\r\n                    }\r\n                }\r\n                p = p & 65535;\r\n                n = g + (m << 1) | 0;\r\n                if (l << 16 >> 16 > 0) {\r\n                    b[n >> 1] = 8191;\r\n                    b[I + (e << 1) >> 1] = 32767;\r\n                    m = a << 16 >> 16;\r\n                    if (a << 16 >> 16 < 0) {\r\n                        m = 0 - m << 16;\r\n                        if ((m | 0) < 983040) m = 1 >>> (m >> 16) & 65535; else m = 0\r\n                    } else {\r\n                        F = 1 << m;\r\n                        m = (F << 16 >> 16 >> m | 0) == 1 ? F & 65535 : 32767\r\n                    }\r\n                    f = Rd(f, m, k) | 0\r\n                } else {\r\n                    b[n >> 1] = -8192;\r\n                    b[I + (e << 1) >> 1] = -32768\r\n                }\r\n                m = Rd(q, p, k) | 0;\r\n                e = e + 1 | 0;\r\n                if ((e | 0) == 2) {\r\n                    q = m;\r\n                    break\r\n                }\r\n                o = b[G + (e << 1) >> 1] | 0;\r\n                q = m\r\n            }\r\n            b[j >> 1] = f;\r\n            p = I + 2 | 0;\r\n            o = b[I >> 1] | 0;\r\n            a = 0;\r\n            n = d + (0 - (s << 16 >> 16) << 1) | 0;\r\n            m = d + (0 - (r << 16 >> 16) << 1) | 0;\r\n            do {\r\n                f = Z(b[n >> 1] | 0, o) | 0;\r\n                n = n + 2 | 0;\r\n                if ((f | 0) != 1073741824 ? (L = f << 1, !((f | 0) > 0 & (L | 0) < 0)) : 0) l = L; else {\r\n                    c[k >> 2] = 1;\r\n                    l = 2147483647\r\n                }\r\n                e = Z(b[p >> 1] | 0, b[m >> 1] | 0) | 0;\r\n                m = m + 2 | 0;\r\n                if ((e | 0) != 1073741824) {\r\n                    f = (e << 1) + l | 0;\r\n                    if ((e ^ l | 0) > 0 & (f ^ l | 0) < 0) {\r\n                        c[k >> 2] = 1;\r\n                        f = (l >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[k >> 2] = 1;\r\n                    f = 2147483647\r\n                }\r\n                b[h + (a << 1) >> 1] = Ce(f, k) | 0;\r\n                a = a + 1 | 0\r\n            } while ((a | 0) != 40);\r\n            if (!J) {\r\n                i = N;\r\n                return q | 0\r\n            }\r\n            e = K >> 16;\r\n            f = M;\r\n            do {\r\n                l = (Z(b[g + (f - M << 1) >> 1] | 0, e) | 0) >> 15;\r\n                if ((l | 0) > 32767) {\r\n                    c[k >> 2] = 1;\r\n                    l = 32767\r\n                }\r\n                h = g + (f << 1) | 0;\r\n                b[h >> 1] = Rd(b[h >> 1] | 0, l & 65535, k) | 0;\r\n                f = f + 1 | 0\r\n            } while ((f & 65535) << 16 >> 16 != 40);\r\n            i = N;\r\n            return q | 0\r\n        }\r\n\r\n        function Nb(a, d, e, f, g, h, j, k, l, m) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            var n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0;\r\n            x = i;\r\n            i = i + 3456 | 0;\r\n            r = x + 3360 | 0;\r\n            s = x + 3368 | 0;\r\n            t = x + 3280 | 0;\r\n            u = x + 3200 | 0;\r\n            v = x;\r\n            w = g << 16 >> 16;\r\n            p = w << 1;\r\n            if ((p | 0) == (w << 17 >> 16 | 0)) q = p; else {\r\n                c[m >> 2] = 1;\r\n                q = g << 16 >> 16 > 0 ? 32767 : -32768\r\n            }\r\n            w = f << 16 >> 16;\r\n            n = f << 16 >> 16 < 40;\r\n            if (n) {\r\n                g = q << 16 >> 16;\r\n                o = w;\r\n                do {\r\n                    f = e + (o << 1) | 0;\r\n                    p = (Z(b[e + (o - w << 1) >> 1] | 0, g) | 0) >> 15;\r\n                    if ((p | 0) > 32767) {\r\n                        c[m >> 2] = 1;\r\n                        p = 32767\r\n                    }\r\n                    b[f >> 1] = Rd(b[f >> 1] | 0, p & 65535, m) | 0;\r\n                    o = o + 1 | 0\r\n                } while ((o & 65535) << 16 >> 16 != 40)\r\n            }\r\n            hc(e, d, s, 1, m);\r\n            qd(s, u, t, 8);\r\n            fc(e, u, v, m);\r\n            Ob(a, s, v, l, r);\r\n            p = Pb(a, r, u, h, e, j, k, m) | 0;\r\n            if (!n) {\r\n                i = x;\r\n                return p | 0\r\n            }\r\n            o = q << 16 >> 16;\r\n            g = w;\r\n            do {\r\n                f = h + (g << 1) | 0;\r\n                n = (Z(b[h + (g - w << 1) >> 1] | 0, o) | 0) >> 15;\r\n                if ((n | 0) > 32767) {\r\n                    c[m >> 2] = 1;\r\n                    n = 32767\r\n                }\r\n                b[f >> 1] = Rd(b[f >> 1] | 0, n & 65535, m) | 0;\r\n                g = g + 1 | 0\r\n            } while ((g & 65535) << 16 >> 16 != 40);\r\n            i = x;\r\n            return p | 0\r\n        }\r\n\r\n        function Ob(a, c, d, f, g) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0,\r\n                w = 0, x = 0;\r\n            x = g + 2 | 0;\r\n            b[g >> 1] = 0;\r\n            b[x >> 1] = 1;\r\n            v = a << 16 >> 16 << 1;\r\n            h = 1;\r\n            w = 0;\r\n            a = -1;\r\n            do {\r\n                u = (w << 3) + v << 16 >> 16;\r\n                k = b[f + (u << 1) >> 1] | 0;\r\n                u = b[f + ((u | 1) << 1) >> 1] | 0;\r\n                i = k << 16 >> 16;\r\n                a:do if (k << 16 >> 16 < 40) {\r\n                    t = u << 16 >> 16;\r\n                    if (u << 16 >> 16 < 40) s = h; else while (1) {\r\n                        if ((a << 16 >> 16 | 0) < (0 - (h << 16 >> 16) | 0)) {\r\n                            b[g >> 1] = k;\r\n                            b[x >> 1] = u;\r\n                            j = 1;\r\n                            a = -1\r\n                        } else j = h;\r\n                        h = i + 5 | 0;\r\n                        k = h & 65535;\r\n                        if (k << 16 >> 16 >= 40) {\r\n                            h = j;\r\n                            break a\r\n                        } else {\r\n                            i = h << 16 >> 16;\r\n                            h = j\r\n                        }\r\n                    }\r\n                    while (1) {\r\n                        q = b[d + (i * 80 | 0) + (i << 1) >> 1] | 0;\r\n                        p = e[c + (i << 1) >> 1] | 0;\r\n                        o = t;\r\n                        h = 1;\r\n                        r = u;\r\n                        j = u;\r\n                        l = -1;\r\n                        while (1) {\r\n                            n = (e[c + (o << 1) >> 1] | 0) + p << 16 >> 16;\r\n                            n = (Z(n, n) | 0) >>> 15;\r\n                            m = (b[d + (i * 80 | 0) + (o << 1) >> 1] << 15) + 32768 + ((b[d + (o * 80 | 0) + (o << 1) >> 1] | 0) + q << 14) | 0;\r\n                            if (((Z(n << 16 >> 16, h << 16 >> 16) | 0) - (Z(m >> 16, l << 16 >> 16) | 0) << 1 | 0) > 0) {\r\n                                h = m >>> 16 & 65535;\r\n                                j = r;\r\n                                l = n & 65535\r\n                            }\r\n                            m = o + 5 | 0;\r\n                            r = m & 65535;\r\n                            if (r << 16 >> 16 >= 40) break; else o = m << 16 >> 16\r\n                        }\r\n                        if (((Z(l << 16 >> 16, s << 16 >> 16) | 0) - (Z(h << 16 >> 16, a << 16 >> 16) | 0) << 1 | 0) > 0) {\r\n                            b[g >> 1] = k;\r\n                            b[x >> 1] = j;\r\n                            a = l\r\n                        } else h = s;\r\n                        i = i + 5 | 0;\r\n                        k = i & 65535;\r\n                        if (k << 16 >> 16 >= 40) break; else {\r\n                            i = i << 16 >> 16;\r\n                            s = h\r\n                        }\r\n                    }\r\n                } while (0);\r\n                w = w + 1 | 0\r\n            } while ((w | 0) != 2);\r\n            return\r\n        }\r\n\r\n        function Pb(a, d, e, f, g, h, i, j) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            j = j | 0;\r\n            var k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;\r\n            k = f;\r\n            l = k + 80 | 0;\r\n            do {\r\n                b[k >> 1] = 0;\r\n                k = k + 2 | 0\r\n            } while ((k | 0) < (l | 0));\r\n            k = b[d >> 1] | 0;\r\n            o = (k * 6554 | 0) >>> 15;\r\n            l = o << 16 >> 16;\r\n            n = (748250 >>> ((k + (Z(l, -5) | 0) << 16 >> 16) + ((a << 16 >> 16) * 5 | 0) | 0) & 1 | 0) == 0;\r\n            m = (b[e + (k << 1) >> 1] | 0) > 0;\r\n            p = m ? 32767 : -32768;\r\n            b[f + (k << 1) >> 1] = m ? 8191 : -8192;\r\n            k = d + 2 | 0;\r\n            a = b[k >> 1] | 0;\r\n            f = f + (a << 1) | 0;\r\n            if ((b[e + (a << 1) >> 1] | 0) > 0) {\r\n                b[f >> 1] = 8191;\r\n                e = 32767;\r\n                f = (m & 1 | 2) & 65535\r\n            } else {\r\n                b[f >> 1] = -8192;\r\n                e = -32768;\r\n                f = m & 1\r\n            }\r\n            o = ((a * 6554 | 0) >>> 15 << 3) + (n ? o : l + 64 | 0) & 65535;\r\n            b[i >> 1] = f;\r\n            n = 0;\r\n            m = g + (0 - (b[d >> 1] | 0) << 1) | 0;\r\n            f = g + (0 - (b[k >> 1] | 0) << 1) | 0;\r\n            do {\r\n                k = Z(p, b[m >> 1] | 0) | 0;\r\n                m = m + 2 | 0;\r\n                if ((k | 0) == 1073741824) {\r\n                    c[j >> 2] = 1;\r\n                    a = 2147483647\r\n                } else a = k << 1;\r\n                l = Z(e, b[f >> 1] | 0) | 0;\r\n                f = f + 2 | 0;\r\n                if ((l | 0) != 1073741824) {\r\n                    k = (l << 1) + a | 0;\r\n                    if ((l ^ a | 0) > 0 & (k ^ a | 0) < 0) {\r\n                        c[j >> 2] = 1;\r\n                        k = (a >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[j >> 2] = 1;\r\n                    k = 2147483647\r\n                }\r\n                b[h + (n << 1) >> 1] = Ce(k, j) | 0;\r\n                n = n + 1 | 0\r\n            } while ((n | 0) != 40);\r\n            return o | 0\r\n        }\r\n\r\n        function Qb(a, d, f, g, h, j, k, l) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            var m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0,\r\n                B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0,\r\n                Q = 0, R = 0, S = 0, T = 0, U = 0;\r\n            U = i;\r\n            i = i + 3440 | 0;\r\n            M = U + 3360 | 0;\r\n            N = U + 3280 | 0;\r\n            P = U + 3200 | 0;\r\n            O = U;\r\n            R = (g & 65535) << 17;\r\n            T = f << 16 >> 16;\r\n            Q = f << 16 >> 16 < 40;\r\n            if (Q) {\r\n                f = R >> 16;\r\n                m = T;\r\n                do {\r\n                    g = (Z(b[d + (m - T << 1) >> 1] | 0, f) | 0) >> 15;\r\n                    if ((g | 0) > 32767) {\r\n                        c[l >> 2] = 1;\r\n                        g = 32767\r\n                    }\r\n                    L = d + (m << 1) | 0;\r\n                    b[L >> 1] = Rd(b[L >> 1] | 0, g & 65535, l) | 0;\r\n                    m = m + 1 | 0\r\n                } while ((m & 65535) << 16 >> 16 != 40)\r\n            }\r\n            hc(d, a, M, 1, l);\r\n            qd(M, P, N, 6);\r\n            fc(d, P, O, l);\r\n            L = 1;\r\n            n = 2;\r\n            o = 1;\r\n            g = 0;\r\n            m = 1;\r\n            a = -1;\r\n            p = 1;\r\n            while (1) {\r\n                K = 2;\r\n                s = 2;\r\n                while (1) {\r\n                    H = 0;\r\n                    I = 0;\r\n                    J = p;\r\n                    G = s;\r\n                    while (1) {\r\n                        if (I << 16 >> 16 < 40) {\r\n                            C = J << 16 >> 16;\r\n                            D = J << 16 >> 16 < 40;\r\n                            E = G << 16 >> 16;\r\n                            F = G << 16 >> 16 < 40;\r\n                            A = I << 16 >> 16;\r\n                            B = I;\r\n                            while (1) {\r\n                                if ((b[N + (A << 1) >> 1] | 0) > -1) {\r\n                                    x = b[O + (A * 80 | 0) + (A << 1) >> 1] | 0;\r\n                                    if (D) {\r\n                                        y = e[M + (A << 1) >> 1] | 0;\r\n                                        w = C;\r\n                                        r = 1;\r\n                                        z = J;\r\n                                        f = J;\r\n                                        s = 0;\r\n                                        q = -1;\r\n                                        while (1) {\r\n                                            u = (e[M + (w << 1) >> 1] | 0) + y | 0;\r\n                                            v = u << 16 >> 16;\r\n                                            v = (Z(v, v) | 0) >>> 15;\r\n                                            t = (b[O + (A * 80 | 0) + (w << 1) >> 1] << 15) + 32768 + ((b[O + (w * 80 | 0) + (w << 1) >> 1] | 0) + x << 14) | 0;\r\n                                            if (((Z(v << 16 >> 16, r << 16 >> 16) | 0) - (Z(t >> 16, q << 16 >> 16) | 0) << 1 | 0) > 0) {\r\n                                                r = t >>> 16 & 65535;\r\n                                                f = z;\r\n                                                s = u & 65535;\r\n                                                q = v & 65535\r\n                                            }\r\n                                            t = w + 5 | 0;\r\n                                            z = t & 65535;\r\n                                            if (z << 16 >> 16 >= 40) break; else w = t << 16 >> 16\r\n                                        }\r\n                                    } else {\r\n                                        r = 1;\r\n                                        f = J;\r\n                                        s = 0\r\n                                    }\r\n                                    if (F) {\r\n                                        y = s & 65535;\r\n                                        z = f << 16 >> 16;\r\n                                        w = (r << 16 >> 16 << 14) + 32768 | 0;\r\n                                        v = E;\r\n                                        s = 1;\r\n                                        x = G;\r\n                                        q = G;\r\n                                        r = -1;\r\n                                        while (1) {\r\n                                            u = (e[M + (v << 1) >> 1] | 0) + y << 16 >> 16;\r\n                                            u = (Z(u, u) | 0) >>> 15;\r\n                                            t = w + (b[O + (v * 80 | 0) + (v << 1) >> 1] << 12) + ((b[O + (A * 80 | 0) + (v << 1) >> 1] | 0) + (b[O + (z * 80 | 0) + (v << 1) >> 1] | 0) << 13) | 0;\r\n                                            if (((Z(u << 16 >> 16, s << 16 >> 16) | 0) - (Z(t >> 16, r << 16 >> 16) | 0) << 1 | 0) > 0) {\r\n                                                s = t >>> 16 & 65535;\r\n                                                q = x;\r\n                                                r = u & 65535\r\n                                            }\r\n                                            t = v + 5 | 0;\r\n                                            x = t & 65535;\r\n                                            if (x << 16 >> 16 >= 40) {\r\n                                                w = s;\r\n                                                v = r;\r\n                                                break\r\n                                            } else v = t << 16 >> 16\r\n                                        }\r\n                                    } else {\r\n                                        w = 1;\r\n                                        q = G;\r\n                                        v = -1\r\n                                    }\r\n                                    s = Z(v << 16 >> 16, m << 16 >> 16) | 0;\r\n                                    if ((s | 0) == 1073741824) {\r\n                                        c[l >> 2] = 1;\r\n                                        t = 2147483647\r\n                                    } else t = s << 1;\r\n                                    s = Z(w << 16 >> 16, a << 16 >> 16) | 0;\r\n                                    if ((s | 0) == 1073741824) {\r\n                                        c[l >> 2] = 1;\r\n                                        r = 2147483647\r\n                                    } else r = s << 1;\r\n                                    s = t - r | 0;\r\n                                    if (((s ^ t) & (r ^ t) | 0) < 0) {\r\n                                        c[l >> 2] = 1;\r\n                                        s = (t >>> 31) + 2147483647 | 0\r\n                                    }\r\n                                    z = (s | 0) > 0;\r\n                                    n = z ? q : n;\r\n                                    o = z ? f : o;\r\n                                    g = z ? B : g;\r\n                                    m = z ? w : m;\r\n                                    a = z ? v : a\r\n                                }\r\n                                s = A + 5 | 0;\r\n                                B = s & 65535;\r\n                                if (B << 16 >> 16 >= 40) break; else A = s << 16 >> 16\r\n                            }\r\n                        }\r\n                        H = H + 1 << 16 >> 16;\r\n                        if (H << 16 >> 16 >= 3) break; else {\r\n                            F = G;\r\n                            G = J;\r\n                            J = I;\r\n                            I = F\r\n                        }\r\n                    }\r\n                    f = K + 2 | 0;\r\n                    s = f & 65535;\r\n                    if (s << 16 >> 16 >= 5) break; else K = f & 65535\r\n                }\r\n                f = L + 2 | 0;\r\n                p = f & 65535;\r\n                if (p << 16 >> 16 < 4) L = f & 65535; else {\r\n                    s = n;\r\n                    n = o;\r\n                    break\r\n                }\r\n            }\r\n            f = h;\r\n            m = f + 80 | 0;\r\n            do {\r\n                b[f >> 1] = 0;\r\n                f = f + 2 | 0\r\n            } while ((f | 0) < (m | 0));\r\n            v = g << 16 >> 16;\r\n            a = b[P + (v << 1) >> 1] | 0;\r\n            g = (v * 6554 | 0) >>> 15;\r\n            f = g << 16;\r\n            m = v - (((f >> 16) * 327680 | 0) >>> 16) | 0;\r\n            switch (m << 16 >> 16 | 0) {\r\n                case 1: {\r\n                    g = f >> 12;\r\n                    break\r\n                }\r\n                case 2: {\r\n                    g = f >> 8;\r\n                    m = 2;\r\n                    break\r\n                }\r\n                case 3: {\r\n                    g = g << 20 >> 16 | 8;\r\n                    m = 1;\r\n                    break\r\n                }\r\n                case 4: {\r\n                    g = g << 24 >> 16 | 128;\r\n                    m = 2;\r\n                    break\r\n                }\r\n                default: {\r\n                }\r\n            }\r\n            f = h + (v << 1) | 0;\r\n            if (a << 16 >> 16 > 0) {\r\n                b[f >> 1] = 8191;\r\n                z = 32767;\r\n                o = 65536 << (m << 16 >> 16) >>> 16 & 65535\r\n            } else {\r\n                b[f >> 1] = -8192;\r\n                z = -32768;\r\n                o = 0\r\n            }\r\n            t = n << 16 >> 16;\r\n            n = b[P + (t << 1) >> 1] | 0;\r\n            f = (t * 6554 | 0) >>> 15;\r\n            m = f << 16;\r\n            a = t - (((m >> 16) * 327680 | 0) >>> 16) | 0;\r\n            switch (a << 16 >> 16 | 0) {\r\n                case 1: {\r\n                    f = m >> 12;\r\n                    break\r\n                }\r\n                case 2: {\r\n                    f = m >> 8;\r\n                    a = 2;\r\n                    break\r\n                }\r\n                case 3: {\r\n                    f = f << 20 >> 16 | 8;\r\n                    a = 1;\r\n                    break\r\n                }\r\n                case 4: {\r\n                    f = f << 24 >> 16 | 128;\r\n                    a = 2;\r\n                    break\r\n                }\r\n                default: {\r\n                }\r\n            }\r\n            m = h + (t << 1) | 0;\r\n            if (n << 16 >> 16 > 0) {\r\n                b[m >> 1] = 8191;\r\n                u = 32767;\r\n                o = (65536 << (a << 16 >> 16) >>> 16) + (o & 65535) & 65535\r\n            } else {\r\n                b[m >> 1] = -8192;\r\n                u = -32768\r\n            }\r\n            p = f + g | 0;\r\n            r = s << 16 >> 16;\r\n            n = b[P + (r << 1) >> 1] | 0;\r\n            g = (r * 6554 | 0) >>> 15;\r\n            f = g << 16;\r\n            m = r - (((f >> 16) * 327680 | 0) >>> 16) | 0;\r\n            switch (m << 16 >> 16 | 0) {\r\n                case 1: {\r\n                    f = f >> 12;\r\n                    break\r\n                }\r\n                case 2: {\r\n                    f = f >> 8;\r\n                    m = 2;\r\n                    break\r\n                }\r\n                case 3: {\r\n                    f = g << 20 >> 16 | 8;\r\n                    m = 1;\r\n                    break\r\n                }\r\n                case 4: {\r\n                    f = g << 24 >> 16 | 128;\r\n                    m = 2;\r\n                    break\r\n                }\r\n                default:\r\n                    f = g\r\n            }\r\n            g = h + (r << 1) | 0;\r\n            if (n << 16 >> 16 > 0) {\r\n                b[g >> 1] = 8191;\r\n                s = 32767;\r\n                g = (65536 << (m << 16 >> 16) >>> 16) + (o & 65535) & 65535\r\n            } else {\r\n                b[g >> 1] = -8192;\r\n                s = -32768;\r\n                g = o\r\n            }\r\n            q = p + f | 0;\r\n            b[k >> 1] = g;\r\n            o = 0;\r\n            p = d + (0 - v << 1) | 0;\r\n            a = d + (0 - t << 1) | 0;\r\n            n = d + (0 - r << 1) | 0;\r\n            do {\r\n                g = Z(b[p >> 1] | 0, z) | 0;\r\n                p = p + 2 | 0;\r\n                if ((g | 0) != 1073741824 ? (S = g << 1, !((g | 0) > 0 & (S | 0) < 0)) : 0) m = S; else {\r\n                    c[l >> 2] = 1;\r\n                    m = 2147483647\r\n                }\r\n                g = Z(b[a >> 1] | 0, u) | 0;\r\n                a = a + 2 | 0;\r\n                if ((g | 0) != 1073741824) {\r\n                    f = (g << 1) + m | 0;\r\n                    if ((g ^ m | 0) > 0 & (f ^ m | 0) < 0) {\r\n                        c[l >> 2] = 1;\r\n                        f = (m >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[l >> 2] = 1;\r\n                    f = 2147483647\r\n                }\r\n                m = Z(b[n >> 1] | 0, s) | 0;\r\n                n = n + 2 | 0;\r\n                if ((m | 0) != 1073741824) {\r\n                    g = (m << 1) + f | 0;\r\n                    if ((m ^ f | 0) > 0 & (g ^ f | 0) < 0) {\r\n                        c[l >> 2] = 1;\r\n                        g = (f >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[l >> 2] = 1;\r\n                    g = 2147483647\r\n                }\r\n                b[j + (o << 1) >> 1] = Ce(g, l) | 0;\r\n                o = o + 1 | 0\r\n            } while ((o | 0) != 40);\r\n            g = q & 65535;\r\n            if (!Q) {\r\n                i = U;\r\n                return g | 0\r\n            }\r\n            m = R >> 16;\r\n            f = T;\r\n            do {\r\n                a = (Z(b[h + (f - T << 1) >> 1] | 0, m) | 0) >> 15;\r\n                if ((a | 0) > 32767) {\r\n                    c[l >> 2] = 1;\r\n                    a = 32767\r\n                }\r\n                j = h + (f << 1) | 0;\r\n                b[j >> 1] = Rd(b[j >> 1] | 0, a & 65535, l) | 0;\r\n                f = f + 1 | 0\r\n            } while ((f & 65535) << 16 >> 16 != 40);\r\n            i = U;\r\n            return g | 0\r\n        }\r\n\r\n        function Rb(a, d, f, g, h, j, k, l, m) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            var n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0,\r\n                C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0,\r\n                R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0;\r\n            da = i;\r\n            i = i + 3456 | 0;\r\n            _ = da + 3448 | 0;\r\n            X = da + 3360 | 0;\r\n            U = da + 3368 | 0;\r\n            V = da + 3280 | 0;\r\n            Y = da + 3200 | 0;\r\n            W = da;\r\n            aa = (g & 65535) << 17;\r\n            ca = f << 16 >> 16;\r\n            $ = f << 16 >> 16 < 40;\r\n            if ($) {\r\n                f = aa >> 16;\r\n                n = ca;\r\n                do {\r\n                    g = (Z(b[d + (n - ca << 1) >> 1] | 0, f) | 0) >> 15;\r\n                    if ((g | 0) > 32767) {\r\n                        c[m >> 2] = 1;\r\n                        g = 32767\r\n                    }\r\n                    T = d + (n << 1) | 0;\r\n                    b[T >> 1] = Rd(b[T >> 1] | 0, g & 65535, m) | 0;\r\n                    n = n + 1 | 0\r\n                } while ((n & 65535) << 16 >> 16 != 40)\r\n            }\r\n            hc(d, a, U, 1, m);\r\n            qd(U, Y, V, 4);\r\n            fc(d, Y, W, m);\r\n            R = X + 2 | 0;\r\n            b[X >> 1] = 0;\r\n            S = X + 4 | 0;\r\n            b[R >> 1] = 1;\r\n            T = X + 6 | 0;\r\n            b[S >> 1] = 2;\r\n            b[T >> 1] = 3;\r\n            r = 3;\r\n            p = 2;\r\n            o = 1;\r\n            g = 0;\r\n            f = 1;\r\n            n = -1;\r\n            q = 3;\r\n            do {\r\n                M = 0;\r\n                N = 0;\r\n                O = q;\r\n                P = 1;\r\n                Q = 2;\r\n                while (1) {\r\n                    if (N << 16 >> 16 < 40) {\r\n                        G = P << 16 >> 16;\r\n                        H = P << 16 >> 16 < 40;\r\n                        I = Q << 16 >> 16;\r\n                        J = Q << 16 >> 16 < 40;\r\n                        K = O << 16 >> 16;\r\n                        L = O << 16 >> 16 < 40;\r\n                        F = N << 16 >> 16;\r\n                        E = p;\r\n                        C = o;\r\n                        B = f;\r\n                        D = N;\r\n                        while (1) {\r\n                            if ((b[V + (F << 1) >> 1] | 0) > -1) {\r\n                                t = b[W + (F * 80 | 0) + (F << 1) >> 1] | 0;\r\n                                if (H) {\r\n                                    s = e[U + (F << 1) >> 1] | 0;\r\n                                    u = G;\r\n                                    z = 1;\r\n                                    p = P;\r\n                                    o = P;\r\n                                    x = 0;\r\n                                    y = -1;\r\n                                    while (1) {\r\n                                        w = (e[U + (u << 1) >> 1] | 0) + s | 0;\r\n                                        v = w << 16 >> 16;\r\n                                        v = (Z(v, v) | 0) >>> 15;\r\n                                        A = (b[W + (F * 80 | 0) + (u << 1) >> 1] << 15) + 32768 + ((b[W + (u * 80 | 0) + (u << 1) >> 1] | 0) + t << 14) | 0;\r\n                                        if (((Z(v << 16 >> 16, z << 16 >> 16) | 0) - (Z(A >> 16, y << 16 >> 16) | 0) << 1 | 0) > 0) {\r\n                                            z = A >>> 16 & 65535;\r\n                                            o = p;\r\n                                            x = w & 65535;\r\n                                            y = v & 65535\r\n                                        }\r\n                                        A = u + 5 | 0;\r\n                                        p = A & 65535;\r\n                                        if (p << 16 >> 16 >= 40) break; else u = A << 16 >> 16\r\n                                    }\r\n                                } else {\r\n                                    z = 1;\r\n                                    o = P;\r\n                                    x = 0\r\n                                }\r\n                                if (J) {\r\n                                    f = x & 65535;\r\n                                    a = o << 16 >> 16;\r\n                                    t = (z << 16 >> 16 << 14) + 32768 | 0;\r\n                                    u = I;\r\n                                    A = 1;\r\n                                    s = Q;\r\n                                    p = Q;\r\n                                    y = 0;\r\n                                    x = -1;\r\n                                    while (1) {\r\n                                        w = (e[U + (u << 1) >> 1] | 0) + f | 0;\r\n                                        v = w << 16 >> 16;\r\n                                        v = (Z(v, v) | 0) >>> 15;\r\n                                        z = t + (b[W + (u * 80 | 0) + (u << 1) >> 1] << 12) + ((b[W + (F * 80 | 0) + (u << 1) >> 1] | 0) + (b[W + (a * 80 | 0) + (u << 1) >> 1] | 0) << 13) | 0;\r\n                                        if (((Z(v << 16 >> 16, A << 16 >> 16) | 0) - (Z(z >> 16, x << 16 >> 16) | 0) << 1 | 0) > 0) {\r\n                                            A = z >>> 16 & 65535;\r\n                                            p = s;\r\n                                            y = w & 65535;\r\n                                            x = v & 65535\r\n                                        }\r\n                                        z = u + 5 | 0;\r\n                                        s = z & 65535;\r\n                                        if (s << 16 >> 16 >= 40) break; else u = z << 16 >> 16\r\n                                    }\r\n                                } else {\r\n                                    A = 1;\r\n                                    p = Q;\r\n                                    y = 0\r\n                                }\r\n                                if (L) {\r\n                                    t = y & 65535;\r\n                                    s = p << 16 >> 16;\r\n                                    a = o << 16 >> 16;\r\n                                    v = (A & 65535) << 16 | 32768;\r\n                                    w = K;\r\n                                    f = 1;\r\n                                    u = O;\r\n                                    z = O;\r\n                                    A = -1;\r\n                                    while (1) {\r\n                                        x = (e[U + (w << 1) >> 1] | 0) + t << 16 >> 16;\r\n                                        x = (Z(x, x) | 0) >>> 15;\r\n                                        y = (b[W + (w * 80 | 0) + (w << 1) >> 1] << 12) + v + ((b[W + (a * 80 | 0) + (w << 1) >> 1] | 0) + (b[W + (s * 80 | 0) + (w << 1) >> 1] | 0) + (b[W + (F * 80 | 0) + (w << 1) >> 1] | 0) << 13) | 0;\r\n                                        if (((Z(x << 16 >> 16, f << 16 >> 16) | 0) - (Z(y >> 16, A << 16 >> 16) | 0) << 1 | 0) > 0) {\r\n                                            f = y >>> 16 & 65535;\r\n                                            z = u;\r\n                                            A = x & 65535\r\n                                        }\r\n                                        y = w + 5 | 0;\r\n                                        u = y & 65535;\r\n                                        if (u << 16 >> 16 >= 40) break; else w = y << 16 >> 16\r\n                                    }\r\n                                } else {\r\n                                    f = 1;\r\n                                    z = O;\r\n                                    A = -1\r\n                                }\r\n                                if (((Z(A << 16 >> 16, B << 16 >> 16) | 0) - (Z(f << 16 >> 16, n << 16 >> 16) | 0) << 1 | 0) > 0) {\r\n                                    b[X >> 1] = D;\r\n                                    b[R >> 1] = o;\r\n                                    b[S >> 1] = p;\r\n                                    b[T >> 1] = z;\r\n                                    r = z;\r\n                                    g = D;\r\n                                    n = A\r\n                                } else {\r\n                                    p = E;\r\n                                    o = C;\r\n                                    f = B\r\n                                }\r\n                            } else {\r\n                                p = E;\r\n                                o = C;\r\n                                f = B\r\n                            }\r\n                            w = F + 5 | 0;\r\n                            D = w & 65535;\r\n                            if (D << 16 >> 16 >= 40) break; else {\r\n                                F = w << 16 >> 16;\r\n                                E = p;\r\n                                C = o;\r\n                                B = f\r\n                            }\r\n                        }\r\n                    }\r\n                    M = M + 1 << 16 >> 16;\r\n                    if (M << 16 >> 16 >= 4) break; else {\r\n                        K = Q;\r\n                        L = O;\r\n                        Q = P;\r\n                        P = N;\r\n                        O = K;\r\n                        N = L\r\n                    }\r\n                }\r\n                q = q + 1 << 16 >> 16\r\n            } while (q << 16 >> 16 < 5);\r\n            A = r;\r\n            z = p;\r\n            y = o;\r\n            x = g;\r\n            g = h;\r\n            f = g + 80 | 0;\r\n            do {\r\n                b[g >> 1] = 0;\r\n                g = g + 2 | 0\r\n            } while ((g | 0) < (f | 0));\r\n            a = x;\r\n            f = 0;\r\n            n = 0;\r\n            g = 0;\r\n            while (1) {\r\n                p = a << 16 >> 16;\r\n                q = b[Y + (p << 1) >> 1] | 0;\r\n                a = p * 13108 >> 16;\r\n                o = p - ((a * 327680 | 0) >>> 16) | 0;\r\n                a = b[l + (a << 1) >> 1] | 0;\r\n                switch (o << 16 >> 16 | 0) {\r\n                    case 1: {\r\n                        r = a << 16 >> 16 << 3 & 65535;\r\n                        break\r\n                    }\r\n                    case 2: {\r\n                        r = a << 16 >> 16 << 6 & 65535;\r\n                        break\r\n                    }\r\n                    case 3: {\r\n                        r = a << 16 >> 16 << 10 & 65535;\r\n                        break\r\n                    }\r\n                    case 4: {\r\n                        r = ((a & 65535) << 10 | 512) & 65535;\r\n                        o = 3;\r\n                        break\r\n                    }\r\n                    default:\r\n                        r = a\r\n                }\r\n                a = h + (p << 1) | 0;\r\n                if (q << 16 >> 16 > 0) {\r\n                    b[a >> 1] = 8191;\r\n                    a = 32767;\r\n                    g = (65536 << (o << 16 >> 16) >>> 16) + (g & 65535) & 65535\r\n                } else {\r\n                    b[a >> 1] = -8192;\r\n                    a = -32768\r\n                }\r\n                b[_ + (f << 1) >> 1] = a;\r\n                n = (r & 65535) + (n & 65535) | 0;\r\n                f = f + 1 | 0;\r\n                if ((f | 0) == 4) {\r\n                    w = n;\r\n                    break\r\n                }\r\n                a = b[X + (f << 1) >> 1] | 0\r\n            }\r\n            b[k >> 1] = g;\r\n            t = _ + 2 | 0;\r\n            u = _ + 4 | 0;\r\n            v = _ + 6 | 0;\r\n            a = b[_ >> 1] | 0;\r\n            s = 0;\r\n            o = d + (0 - (x << 16 >> 16) << 1) | 0;\r\n            p = d + (0 - (y << 16 >> 16) << 1) | 0;\r\n            q = d + (0 - (z << 16 >> 16) << 1) | 0;\r\n            r = d + (0 - (A << 16 >> 16) << 1) | 0;\r\n            do {\r\n                g = Z(b[o >> 1] | 0, a) | 0;\r\n                o = o + 2 | 0;\r\n                if ((g | 0) != 1073741824 ? (ba = g << 1, !((g | 0) > 0 & (ba | 0) < 0)) : 0) n = ba; else {\r\n                    c[m >> 2] = 1;\r\n                    n = 2147483647\r\n                }\r\n                g = Z(b[t >> 1] | 0, b[p >> 1] | 0) | 0;\r\n                p = p + 2 | 0;\r\n                if ((g | 0) != 1073741824) {\r\n                    f = (g << 1) + n | 0;\r\n                    if ((g ^ n | 0) > 0 & (f ^ n | 0) < 0) {\r\n                        c[m >> 2] = 1;\r\n                        f = (n >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[m >> 2] = 1;\r\n                    f = 2147483647\r\n                }\r\n                g = Z(b[u >> 1] | 0, b[q >> 1] | 0) | 0;\r\n                q = q + 2 | 0;\r\n                if ((g | 0) != 1073741824) {\r\n                    n = (g << 1) + f | 0;\r\n                    if ((g ^ f | 0) > 0 & (n ^ f | 0) < 0) {\r\n                        c[m >> 2] = 1;\r\n                        n = (f >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[m >> 2] = 1;\r\n                    n = 2147483647\r\n                }\r\n                f = Z(b[v >> 1] | 0, b[r >> 1] | 0) | 0;\r\n                r = r + 2 | 0;\r\n                if ((f | 0) != 1073741824) {\r\n                    g = (f << 1) + n | 0;\r\n                    if ((f ^ n | 0) > 0 & (g ^ n | 0) < 0) {\r\n                        c[m >> 2] = 1;\r\n                        g = (n >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[m >> 2] = 1;\r\n                    g = 2147483647\r\n                }\r\n                b[j + (s << 1) >> 1] = Ce(g, m) | 0;\r\n                s = s + 1 | 0\r\n            } while ((s | 0) != 40);\r\n            g = w & 65535;\r\n            if (((ca << 16) + -2621440 | 0) > -1 | $ ^ 1) {\r\n                i = da;\r\n                return g | 0\r\n            }\r\n            n = aa >> 16;\r\n            f = ca;\r\n            do {\r\n                a = (Z(b[h + (f - ca << 1) >> 1] | 0, n) | 0) >> 15;\r\n                if ((a | 0) > 32767) {\r\n                    c[m >> 2] = 1;\r\n                    a = 32767\r\n                }\r\n                j = h + (f << 1) | 0;\r\n                b[j >> 1] = Rd(b[j >> 1] | 0, a & 65535, m) | 0;\r\n                f = f + 1 | 0\r\n            } while ((f & 65535) << 16 >> 16 != 40);\r\n            i = da;\r\n            return g | 0\r\n        }\r\n\r\n        function Sb(a, d, f, g, h, j, k) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            var l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0,\r\n                A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0;\r\n            L = i;\r\n            i = i + 3440 | 0;\r\n            t = L + 3424 | 0;\r\n            G = L + 3408 | 0;\r\n            H = L + 3240 | 0;\r\n            u = L + 3224 | 0;\r\n            E = L + 3328 | 0;\r\n            s = L + 3248 | 0;\r\n            F = L + 24 | 0;\r\n            K = L + 16 | 0;\r\n            J = L;\r\n            gc(f, a, E, 2, 4, 4, k);\r\n            rd(E, d, s, H, 4, G, 4, k);\r\n            fc(f, s, F, k);\r\n            pd(8, 4, 4, E, F, G, H, u, k);\r\n            d = g;\r\n            a = d + 80 | 0;\r\n            do {\r\n                b[d >> 1] = 0;\r\n                d = d + 2 | 0\r\n            } while ((d | 0) < (a | 0));\r\n            b[J >> 1] = -1;\r\n            b[K >> 1] = -1;\r\n            C = J + 2 | 0;\r\n            b[C >> 1] = -1;\r\n            D = K + 2 | 0;\r\n            b[D >> 1] = -1;\r\n            E = J + 4 | 0;\r\n            b[E >> 1] = -1;\r\n            F = K + 4 | 0;\r\n            b[F >> 1] = -1;\r\n            H = J + 6 | 0;\r\n            b[H >> 1] = -1;\r\n            G = K + 6 | 0;\r\n            b[G >> 1] = -1;\r\n            q = 0;\r\n            do {\r\n                o = b[u + (q << 1) >> 1] | 0;\r\n                d = o >>> 2;\r\n                m = d & 65535;\r\n                a = o & 3;\r\n                n = (b[s + (o << 1) >> 1] | 0) > 0;\r\n                o = g + (o << 1) | 0;\r\n                r = n & 1 ^ 1;\r\n                b[o >> 1] = (e[o >> 1] | 0) + (n ? 8191 : 57345);\r\n                b[t + (q << 1) >> 1] = n ? 32767 : -32768;\r\n                n = J + (a << 1) | 0;\r\n                o = b[n >> 1] | 0;\r\n                do if (o << 16 >> 16 >= 0) {\r\n                    p = K + (a << 1) | 0;\r\n                    l = (o << 16 >> 16 | 0) <= (d << 16 >> 16 | 0);\r\n                    d = J + ((a | 4) << 1) | 0;\r\n                    if ((r & 65535 | 0) == (e[p >> 1] & 1 | 0)) if (l) {\r\n                        b[d >> 1] = m;\r\n                        break\r\n                    } else {\r\n                        b[d >> 1] = o;\r\n                        b[n >> 1] = m;\r\n                        b[p >> 1] = r;\r\n                        break\r\n                    } else if (l) {\r\n                        b[d >> 1] = o;\r\n                        b[n >> 1] = m;\r\n                        b[p >> 1] = r;\r\n                        break\r\n                    } else {\r\n                        b[d >> 1] = m;\r\n                        break\r\n                    }\r\n                } else {\r\n                    b[n >> 1] = m;\r\n                    b[K + (a << 1) >> 1] = r\r\n                } while (0);\r\n                q = q + 1 | 0\r\n            } while ((q | 0) != 8);\r\n            v = t + 2 | 0;\r\n            w = t + 4 | 0;\r\n            x = t + 6 | 0;\r\n            y = t + 8 | 0;\r\n            z = t + 10 | 0;\r\n            A = t + 12 | 0;\r\n            B = t + 14 | 0;\r\n            t = b[t >> 1] | 0;\r\n            q = 0;\r\n            p = f + (0 - (b[u >> 1] | 0) << 1) | 0;\r\n            o = f + (0 - (b[u + 2 >> 1] | 0) << 1) | 0;\r\n            n = f + (0 - (b[u + 4 >> 1] | 0) << 1) | 0;\r\n            m = f + (0 - (b[u + 6 >> 1] | 0) << 1) | 0;\r\n            d = f + (0 - (b[u + 8 >> 1] | 0) << 1) | 0;\r\n            a = f + (0 - (b[u + 10 >> 1] | 0) << 1) | 0;\r\n            l = f + (0 - (b[u + 12 >> 1] | 0) << 1) | 0;\r\n            f = f + (0 - (b[u + 14 >> 1] | 0) << 1) | 0;\r\n            do {\r\n                r = Z(b[p >> 1] | 0, t) | 0;\r\n                p = p + 2 | 0;\r\n                if ((r | 0) != 1073741824 ? (I = r << 1, !((r | 0) > 0 & (I | 0) < 0)) : 0) r = I; else {\r\n                    c[k >> 2] = 1;\r\n                    r = 2147483647\r\n                }\r\n                s = Z(b[v >> 1] | 0, b[o >> 1] | 0) | 0;\r\n                o = o + 2 | 0;\r\n                if ((s | 0) != 1073741824) {\r\n                    g = (s << 1) + r | 0;\r\n                    if ((s ^ r | 0) > 0 & (g ^ r | 0) < 0) {\r\n                        c[k >> 2] = 1;\r\n                        r = (r >>> 31) + 2147483647 | 0\r\n                    } else r = g\r\n                } else {\r\n                    c[k >> 2] = 1;\r\n                    r = 2147483647\r\n                }\r\n                s = Z(b[w >> 1] | 0, b[n >> 1] | 0) | 0;\r\n                n = n + 2 | 0;\r\n                if ((s | 0) != 1073741824) {\r\n                    g = (s << 1) + r | 0;\r\n                    if ((s ^ r | 0) > 0 & (g ^ r | 0) < 0) {\r\n                        c[k >> 2] = 1;\r\n                        g = (r >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[k >> 2] = 1;\r\n                    g = 2147483647\r\n                }\r\n                s = Z(b[x >> 1] | 0, b[m >> 1] | 0) | 0;\r\n                m = m + 2 | 0;\r\n                if ((s | 0) != 1073741824) {\r\n                    r = (s << 1) + g | 0;\r\n                    if ((s ^ g | 0) > 0 & (r ^ g | 0) < 0) {\r\n                        c[k >> 2] = 1;\r\n                        r = (g >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[k >> 2] = 1;\r\n                    r = 2147483647\r\n                }\r\n                s = Z(b[y >> 1] | 0, b[d >> 1] | 0) | 0;\r\n                d = d + 2 | 0;\r\n                if ((s | 0) != 1073741824) {\r\n                    g = (s << 1) + r | 0;\r\n                    if ((s ^ r | 0) > 0 & (g ^ r | 0) < 0) {\r\n                        c[k >> 2] = 1;\r\n                        g = (r >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[k >> 2] = 1;\r\n                    g = 2147483647\r\n                }\r\n                s = Z(b[z >> 1] | 0, b[a >> 1] | 0) | 0;\r\n                a = a + 2 | 0;\r\n                if ((s | 0) != 1073741824) {\r\n                    r = (s << 1) + g | 0;\r\n                    if ((s ^ g | 0) > 0 & (r ^ g | 0) < 0) {\r\n                        c[k >> 2] = 1;\r\n                        r = (g >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[k >> 2] = 1;\r\n                    r = 2147483647\r\n                }\r\n                s = Z(b[A >> 1] | 0, b[l >> 1] | 0) | 0;\r\n                l = l + 2 | 0;\r\n                if ((s | 0) != 1073741824) {\r\n                    g = (s << 1) + r | 0;\r\n                    if ((s ^ r | 0) > 0 & (g ^ r | 0) < 0) {\r\n                        c[k >> 2] = 1;\r\n                        g = (r >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[k >> 2] = 1;\r\n                    g = 2147483647\r\n                }\r\n                s = Z(b[B >> 1] | 0, b[f >> 1] | 0) | 0;\r\n                f = f + 2 | 0;\r\n                if ((s | 0) != 1073741824) {\r\n                    r = (s << 1) + g | 0;\r\n                    if ((s ^ g | 0) > 0 & (r ^ g | 0) < 0) {\r\n                        c[k >> 2] = 1;\r\n                        r = (g >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[k >> 2] = 1;\r\n                    r = 2147483647\r\n                }\r\n                b[h + (q << 1) >> 1] = Ce(r, k) | 0;\r\n                q = q + 1 | 0\r\n            } while ((q | 0) != 40);\r\n            b[j >> 1] = b[K >> 1] | 0;\r\n            b[j + 2 >> 1] = b[D >> 1] | 0;\r\n            b[j + 4 >> 1] = b[F >> 1] | 0;\r\n            b[j + 6 >> 1] = b[G >> 1] | 0;\r\n            a = b[J >> 1] | 0;\r\n            d = b[J + 8 >> 1] | 0;\r\n            l = b[C >> 1] | 0;\r\n            b[j + 8 >> 1] = d << 1 & 2 | a & 1 | l << 2 & 4 | (((d >> 1) * 327680 | 0) + (a >>> 1 << 16) + (Z(l >> 1, 1638400) | 0) | 0) >>> 13 & 65528;\r\n            l = b[E >> 1] | 0;\r\n            a = b[J + 12 >> 1] | 0;\r\n            d = b[J + 10 >> 1] | 0;\r\n            b[j + 10 >> 1] = a << 1 & 2 | l & 1 | d << 2 & 4 | (((a >> 1) * 327680 | 0) + (l >>> 1 << 16) + (Z(d >> 1, 1638400) | 0) | 0) >>> 13 & 65528;\r\n            d = b[J + 14 >> 1] | 0;\r\n            l = b[H >> 1] | 0;\r\n            a = l << 16 >> 16 >>> 1;\r\n            if (!(d & 2)) {\r\n                h = a;\r\n                k = d << 16 >> 16;\r\n                K = k >> 1;\r\n                K = K * 327680 | 0;\r\n                h = h << 16;\r\n                K = h + K | 0;\r\n                K = K << 5;\r\n                K = K >> 16;\r\n                K = K | 12;\r\n                K = K * 2622 | 0;\r\n                K = K >>> 16;\r\n                h = l & 65535;\r\n                h = h & 1;\r\n                k = k << 17;\r\n                k = k & 131072;\r\n                K = K << 18;\r\n                k = K | k;\r\n                k = k >>> 16;\r\n                h = k | h;\r\n                h = h & 65535;\r\n                j = j + 12 | 0;\r\n                b[j >> 1] = h;\r\n                i = L;\r\n                return\r\n            }\r\n            h = 4 - (a << 16 >> 16) | 0;\r\n            k = d << 16 >> 16;\r\n            K = k >> 1;\r\n            K = K * 327680 | 0;\r\n            h = h << 16;\r\n            K = h + K | 0;\r\n            K = K << 5;\r\n            K = K >> 16;\r\n            K = K | 12;\r\n            K = K * 2622 | 0;\r\n            K = K >>> 16;\r\n            h = l & 65535;\r\n            h = h & 1;\r\n            k = k << 17;\r\n            k = k & 131072;\r\n\r\n            K = K << 18;\r\n            k = K | k;\r\n            k = k >>> 16;\r\n            h = k | h;\r\n            h = h & 65535;\r\n            j = j + 12 | 0;\r\n            b[j >> 1] = h;\r\n            i = L;\r\n            return\r\n        }\r\n\r\n        function Tb(a, d, e, f, g) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;\r\n            r = e << 16 >> 16;\r\n            h = 0 - r | 0;\r\n            e = g + (h << 2) | 0;\r\n            g = ((r - (f << 16 >> 16) | 0) >>> 2) + 1 & 65535;\r\n            if (g << 16 >> 16 <= 0) return;\r\n            r = d << 16 >> 16 >>> 1 & 65535;\r\n            if (!(r << 16 >> 16)) {\r\n                while (1) {\r\n                    c[e >> 2] = 0;\r\n                    c[e + 4 >> 2] = 0;\r\n                    c[e + 8 >> 2] = 0;\r\n                    c[e + 12 >> 2] = 0;\r\n                    if (g << 16 >> 16 > 1) {\r\n                        e = e + 16 | 0;\r\n                        g = g + -1 << 16 >> 16\r\n                    } else break\r\n                }\r\n                return\r\n            }\r\n            q = a + (h << 1) | 0;\r\n            while (1) {\r\n                l = q + 4 | 0;\r\n                n = b[l >> 1] | 0;\r\n                j = b[q >> 1] | 0;\r\n                m = n;\r\n                k = r;\r\n                o = a;\r\n                p = q;\r\n                q = q + 8 | 0;\r\n                i = 0;\r\n                h = 0;\r\n                f = 0;\r\n                d = 0;\r\n                while (1) {\r\n                    t = b[o >> 1] | 0;\r\n                    s = (Z(j << 16 >> 16, t) | 0) + i | 0;\r\n                    i = b[p + 2 >> 1] | 0;\r\n                    h = (Z(i, t) | 0) + h | 0;\r\n                    j = (Z(m << 16 >> 16, t) | 0) + f | 0;\r\n                    f = b[p + 6 >> 1] | 0;\r\n                    m = (Z(f, t) | 0) + d | 0;\r\n                    d = b[o + 2 >> 1] | 0;\r\n                    i = s + (Z(d, i) | 0) | 0;\r\n                    h = h + (Z(n << 16 >> 16, d) | 0) | 0;\r\n                    l = l + 4 | 0;\r\n                    f = j + (Z(d, f) | 0) | 0;\r\n                    j = b[l >> 1] | 0;\r\n                    d = m + (Z(j << 16 >> 16, d) | 0) | 0;\r\n                    k = k + -1 << 16 >> 16;\r\n                    if (!(k << 16 >> 16)) break;\r\n                    t = n;\r\n                    m = j;\r\n                    n = b[p + 8 >> 1] | 0;\r\n                    o = o + 4 | 0;\r\n                    p = p + 4 | 0;\r\n                    j = t\r\n                }\r\n                c[e >> 2] = i << 1;\r\n                c[e + 4 >> 2] = h << 1;\r\n                c[e + 8 >> 2] = f << 1;\r\n                c[e + 12 >> 2] = d << 1;\r\n                if (g << 16 >> 16 <= 1) break; else {\r\n                    e = e + 16 | 0;\r\n                    g = g + -1 << 16 >> 16\r\n                }\r\n            }\r\n            return\r\n        }\r\n\r\n        function Ub(a, d, f, g, h, j, k, l, m) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            var n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;\r\n            y = i;\r\n            i = i + 16 | 0;\r\n            w = y + 2 | 0;\r\n            x = y;\r\n            do if (h << 16 >> 16 > 0) {\r\n                s = g << 16 >> 16;\r\n                u = 0;\r\n                p = 0;\r\n                g = 0;\r\n                o = 0;\r\n                t = 0;\r\n                while (1) {\r\n                    n = b[a + (u << 1) >> 1] | 0;\r\n                    q = n << 16 >> 16;\r\n                    p = (Z(q, q) | 0) + p | 0;\r\n                    q = b[d + (u << 1) >> 1] | 0;\r\n                    g = (Z(q, q) | 0) + g | 0;\r\n                    o = (Z(b[f + (u << 1) >> 1] | 0, q) | 0) + o | 0;\r\n                    q = Z(q, s) | 0;\r\n                    if ((q | 0) == 1073741824) {\r\n                        c[m >> 2] = 1;\r\n                        r = 2147483647\r\n                    } else r = q << 1;\r\n                    q = r << 1;\r\n                    q = (Ge(n, Ce((q >> 1 | 0) == (r | 0) ? q : r >> 31 ^ 2147483647, m) | 0, m) | 0) << 16 >> 16;\r\n                    q = Z(q, q) | 0;\r\n                    if ((q | 0) != 1073741824) {\r\n                        n = (q << 1) + t | 0;\r\n                        if ((q ^ t | 0) > 0 & (n ^ t | 0) < 0) {\r\n                            c[m >> 2] = 1;\r\n                            n = (t >>> 31) + 2147483647 | 0\r\n                        }\r\n                    } else {\r\n                        c[m >> 2] = 1;\r\n                        n = 2147483647\r\n                    }\r\n                    u = u + 1 | 0;\r\n                    if ((u & 65535) << 16 >> 16 == h << 16 >> 16) {\r\n                        t = n;\r\n                        break\r\n                    } else t = n\r\n                }\r\n                p = p << 1;\r\n                g = g << 1;\r\n                o = o << 1;\r\n                if ((p | 0) >= 0) {\r\n                    if ((p | 0) < 400) {\r\n                        n = t;\r\n                        v = 14;\r\n                        break\r\n                    }\r\n                } else {\r\n                    c[m >> 2] = 1;\r\n                    p = 2147483647\r\n                }\r\n                r = pe(p) | 0;\r\n                q = r << 16 >> 16;\r\n                if (r << 16 >> 16 > 0) {\r\n                    n = p << q;\r\n                    if ((n >> q | 0) != (p | 0)) n = p >> 31 ^ 2147483647\r\n                } else {\r\n                    n = 0 - q << 16;\r\n                    if ((n | 0) < 2031616) n = p >> (n >> 16); else n = 0\r\n                }\r\n                b[j >> 1] = n >>> 16;\r\n                p = g;\r\n                s = o;\r\n                n = t;\r\n                g = 15 - (r & 65535) & 65535\r\n            } else {\r\n                g = 0;\r\n                o = 0;\r\n                n = 0;\r\n                v = 14\r\n            } while (0);\r\n            if ((v | 0) == 14) {\r\n                b[j >> 1] = 0;\r\n                p = g;\r\n                s = o;\r\n                g = -15\r\n            }\r\n            b[k >> 1] = g;\r\n            if ((p | 0) < 0) {\r\n                c[m >> 2] = 1;\r\n                p = 2147483647\r\n            }\r\n            q = pe(p) | 0;\r\n            o = q << 16 >> 16;\r\n            if (q << 16 >> 16 > 0) {\r\n                g = p << o;\r\n                if ((g >> o | 0) != (p | 0)) g = p >> 31 ^ 2147483647\r\n            } else {\r\n                g = 0 - o << 16;\r\n                if ((g | 0) < 2031616) g = p >> (g >> 16); else g = 0\r\n            }\r\n            b[j + 2 >> 1] = g >>> 16;\r\n            b[k + 2 >> 1] = 15 - (q & 65535);\r\n            p = pe(s) | 0;\r\n            o = p << 16 >> 16;\r\n            if (p << 16 >> 16 > 0) {\r\n                g = s << o;\r\n                if ((g >> o | 0) != (s | 0)) g = s >> 31 ^ 2147483647\r\n            } else {\r\n                g = 0 - o << 16;\r\n                if ((g | 0) < 2031616) g = s >> (g >> 16); else g = 0\r\n            }\r\n            b[j + 4 >> 1] = g >>> 16;\r\n            b[k + 4 >> 1] = 2 - (p & 65535);\r\n            p = pe(n) | 0;\r\n            g = p << 16 >> 16;\r\n            if (p << 16 >> 16 > 0) {\r\n                o = n << g;\r\n                if ((o >> g | 0) != (n | 0)) o = n >> 31 ^ 2147483647\r\n            } else {\r\n                g = 0 - g << 16;\r\n                if ((g | 0) < 2031616) o = n >> (g >> 16); else o = 0\r\n            }\r\n            g = o >>> 16 & 65535;\r\n            n = 15 - (p & 65535) & 65535;\r\n            b[j + 6 >> 1] = g;\r\n            b[k + 6 >> 1] = n;\r\n            if ((o >> 16 | 0) <= 0) {\r\n                m = 0;\r\n                b[l >> 1] = m;\r\n                i = y;\r\n                return\r\n            }\r\n            o = b[j >> 1] | 0;\r\n            if (!(o << 16 >> 16)) {\r\n                m = 0;\r\n                b[l >> 1] = m;\r\n                i = y;\r\n                return\r\n            }\r\n            g = Td(De(o, 1, m) | 0, g) | 0;\r\n            g = (g & 65535) << 16;\r\n            o = ((Ge(n, b[k >> 1] | 0, m) | 0) & 65535) + 3 | 0;\r\n            n = o & 65535;\r\n            o = o << 16 >> 16;\r\n            if (n << 16 >> 16 > 0) n = n << 16 >> 16 < 31 ? g >> o : 0; else {\r\n                k = 0 - o << 16 >> 16;\r\n                n = g << k;\r\n                n = (n >> k | 0) == (g | 0) ? n : g >> 31 ^ 2147483647\r\n            }\r\n            de(n, w, x, m);\r\n            x = Ic((e[w >> 1] | 0) + 65509 & 65535, b[x >> 1] | 0, m) | 0;\r\n            w = x << 13;\r\n            m = Ce((w >> 13 | 0) == (x | 0) ? w : x >> 31 ^ 2147483647, m) | 0;\r\n            b[l >> 1] = m;\r\n            i = y;\r\n            return\r\n        }\r\n\r\n        function Vb(a, d, f, g, h, j, k, l, m, n, o) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            var p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;\r\n            y = i;\r\n            i = i + 80 | 0;\r\n            v = y;\r\n            b[k >> 1] = b[j >> 1] | 0;\r\n            b[l >> 1] = b[j + 2 >> 1] | 0;\r\n            r = b[j + 4 >> 1] | 0;\r\n            if (r << 16 >> 16 == -32768) r = 32767; else r = 0 - (r & 65535) & 65535;\r\n            b[k + 2 >> 1] = r;\r\n            b[l + 2 >> 1] = (e[j + 6 >> 1] | 0) + 1;\r\n            switch (a | 0) {\r\n                case 0:\r\n                case 5: {\r\n                    u = 0;\r\n                    q = 0;\r\n                    p = 0;\r\n                    t = 0;\r\n                    break\r\n                }\r\n                default: {\r\n                    u = 0;\r\n                    q = 1;\r\n                    p = 1;\r\n                    t = 1\r\n                }\r\n            }\r\n            while (1) {\r\n                s = (b[h + (u << 1) >> 1] | 0) >>> 3;\r\n                b[v + (u << 1) >> 1] = s;\r\n                s = s << 16 >> 16;\r\n                r = Z(s, s) | 0;\r\n                if ((r | 0) != 1073741824) {\r\n                    j = (r << 1) + q | 0;\r\n                    if ((r ^ q | 0) > 0 & (j ^ q | 0) < 0) {\r\n                        c[o >> 2] = 1;\r\n                        q = (q >>> 31) + 2147483647 | 0\r\n                    } else q = j\r\n                } else {\r\n                    c[o >> 2] = 1;\r\n                    q = 2147483647\r\n                }\r\n                r = Z(b[d + (u << 1) >> 1] | 0, s) | 0;\r\n                if ((r | 0) != 1073741824) {\r\n                    j = (r << 1) + p | 0;\r\n                    if ((r ^ p | 0) > 0 & (j ^ p | 0) < 0) {\r\n                        c[o >> 2] = 1;\r\n                        p = (p >>> 31) + 2147483647 | 0\r\n                    } else p = j\r\n                } else {\r\n                    c[o >> 2] = 1;\r\n                    p = 2147483647\r\n                }\r\n                r = Z(b[g + (u << 1) >> 1] | 0, s) | 0;\r\n                if ((r | 0) != 1073741824) {\r\n                    j = (r << 1) + t | 0;\r\n                    if ((r ^ t | 0) > 0 & (j ^ t | 0) < 0) {\r\n                        c[o >> 2] = 1;\r\n                        j = (t >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[o >> 2] = 1;\r\n                    j = 2147483647\r\n                }\r\n                u = u + 1 | 0;\r\n                if ((u | 0) == 40) {\r\n                    g = j;\r\n                    s = p;\r\n                    break\r\n                } else t = j\r\n            }\r\n            p = pe(q) | 0;\r\n            j = p << 16 >> 16;\r\n            if (p << 16 >> 16 > 0) {\r\n                r = q << j;\r\n                if ((r >> j | 0) != (q | 0)) r = q >> 31 ^ 2147483647\r\n            } else {\r\n                r = 0 - j << 16;\r\n                if ((r | 0) < 2031616) r = q >> (r >> 16); else r = 0\r\n            }\r\n            h = k + 4 | 0;\r\n            b[h >> 1] = r >>> 16;\r\n            d = l + 4 | 0;\r\n            b[d >> 1] = -3 - (p & 65535);\r\n            q = pe(s) | 0;\r\n            j = q << 16 >> 16;\r\n            if (q << 16 >> 16 > 0) {\r\n                r = s << j;\r\n                if ((r >> j | 0) != (s | 0)) r = s >> 31 ^ 2147483647\r\n            } else {\r\n                r = 0 - j << 16;\r\n                if ((r | 0) < 2031616) r = s >> (r >> 16); else r = 0\r\n            }\r\n            j = r >>> 16;\r\n            b[k + 6 >> 1] = (j | 0) == 32768 ? 32767 : 0 - j & 65535;\r\n            b[l + 6 >> 1] = 7 - (q & 65535);\r\n            q = pe(g) | 0;\r\n            j = q << 16 >> 16;\r\n            if (q << 16 >> 16 > 0) {\r\n                r = g << j;\r\n                if ((r >> j | 0) != (g | 0)) r = g >> 31 ^ 2147483647\r\n            } else {\r\n                r = 0 - j << 16;\r\n                if ((r | 0) < 2031616) r = g >> (r >> 16); else r = 0\r\n            }\r\n            b[k + 8 >> 1] = r >>> 16;\r\n            b[l + 8 >> 1] = 7 - (q & 65535);\r\n            switch (a | 0) {\r\n                case 0:\r\n                case 5: {\r\n                    r = 0;\r\n                    p = 0;\r\n                    break\r\n                }\r\n                default: {\r\n                    i = y;\r\n                    return\r\n                }\r\n            }\r\n            do {\r\n                p = (Z(b[v + (r << 1) >> 1] | 0, b[f + (r << 1) >> 1] | 0) | 0) + p | 0;\r\n                r = r + 1 | 0\r\n            } while ((r | 0) != 40);\r\n            j = p << 1;\r\n            r = pe(j) | 0;\r\n            q = r << 16 >> 16;\r\n            if (r << 16 >> 16 > 0) {\r\n                p = j << q;\r\n                if ((p >> q | 0) == (j | 0)) {\r\n                    w = p;\r\n                    x = 40\r\n                } else {\r\n                    w = j >> 31 ^ 2147483647;\r\n                    x = 40\r\n                }\r\n            } else {\r\n                p = 0 - q << 16;\r\n                if ((p | 0) < 2031616) {\r\n                    w = j >> (p >> 16);\r\n                    x = 40\r\n                }\r\n            }\r\n            if ((x | 0) == 40 ? (w >> 16 | 0) >= 1 : 0) {\r\n                o = De(w >>> 16 & 65535, 1, o) | 0;\r\n                b[m >> 1] = Td(o, b[h >> 1] | 0) | 0;\r\n                b[n >> 1] = 65528 - (r & 65535) - (e[d >> 1] | 0);\r\n                i = y;\r\n                return\r\n            }\r\n            b[m >> 1] = 0;\r\n            b[n >> 1] = 0;\r\n            i = y;\r\n            return\r\n        }\r\n\r\n        function Wb(a, d, e, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, i = 0;\r\n            h = 0;\r\n            g = 0;\r\n            do {\r\n                i = b[a + (h << 1) >> 1] | 0;\r\n                g = (Z(i, i) | 0) + g | 0;\r\n                h = h + 1 | 0\r\n            } while ((h | 0) != 40);\r\n            if ((g | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                g = 2147483647\r\n            }\r\n            f = pe(g) | 0;\r\n            a = f << 16 >> 16;\r\n            if (f << 16 >> 16 > 0) {\r\n                h = g << a;\r\n                if ((h >> a | 0) == (g | 0)) g = h; else g = g >> 31 ^ 2147483647\r\n            } else {\r\n                a = 0 - a << 16;\r\n                if ((a | 0) < 2031616) g = g >> (a >> 16); else g = 0\r\n            }\r\n            b[e >> 1] = g >>> 16;\r\n            b[d >> 1] = 16 - (f & 65535);\r\n            return\r\n        }\r\n\r\n        function Xb(a, d, e, f, g, h, j, k, l, m, n, o, p) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            p = p | 0;\r\n            var q = 0, r = 0, s = 0, t = 0;\r\n            r = i;\r\n            i = i + 16 | 0;\r\n            q = r;\r\n            if (m >>> 0 < 2) {\r\n                j = Nb(n, a, d, e, f, j, k, q, c[o + 76 >> 2] | 0, p) | 0;\r\n                p = c[l >> 2] | 0;\r\n                b[p >> 1] = j;\r\n                j = b[q >> 1] | 0;\r\n                c[l >> 2] = p + 4;\r\n                b[p + 2 >> 1] = j;\r\n                i = r;\r\n                return\r\n            }\r\n            switch (m | 0) {\r\n                case 2: {\r\n                    j = Mb(a, d, e, f, j, k, q, p) | 0;\r\n                    p = c[l >> 2] | 0;\r\n                    b[p >> 1] = j;\r\n                    j = b[q >> 1] | 0;\r\n                    c[l >> 2] = p + 4;\r\n                    b[p + 2 >> 1] = j;\r\n                    i = r;\r\n                    return\r\n                }\r\n                case 3: {\r\n                    j = Qb(a, d, e, f, j, k, q, p) | 0;\r\n                    p = c[l >> 2] | 0;\r\n                    b[p >> 1] = j;\r\n                    j = b[q >> 1] | 0;\r\n                    c[l >> 2] = p + 4;\r\n                    b[p + 2 >> 1] = j;\r\n                    i = r;\r\n                    return\r\n                }\r\n                default: {\r\n                    if ((m & -2 | 0) == 4) {\r\n                        j = Rb(a, d, e, f, j, k, q, c[o + 36 >> 2] | 0, p) | 0;\r\n                        p = c[l >> 2] | 0;\r\n                        b[p >> 1] = j;\r\n                        j = b[q >> 1] | 0;\r\n                        c[l >> 2] = p + 4;\r\n                        b[p + 2 >> 1] = j;\r\n                        i = r;\r\n                        return\r\n                    }\r\n                    if ((m | 0) != 6) {\r\n                        n = g << 16 >> 16;\r\n                        n = (n << 17 >> 17 | 0) == (n | 0) ? n << 1 : n >>> 15 ^ 32767;\r\n                        g = e << 16 >> 16 < 40;\r\n                        if (!g) {\r\n                            Lb(a, h, d, j, k, c[l >> 2] | 0, c[o + 36 >> 2] | 0, p);\r\n                            c[l >> 2] = (c[l >> 2] | 0) + 20;\r\n                            i = r;\r\n                            return\r\n                        }\r\n                        q = e << 16 >> 16;\r\n                        m = n << 16 >> 16;\r\n                        f = q;\r\n                        do {\r\n                            t = (Z(b[d + (f - q << 1) >> 1] | 0, m) | 0) >>> 15 & 65535;\r\n                            s = d + (f << 1) | 0;\r\n                            b[s >> 1] = Rd(b[s >> 1] | 0, t, p) | 0;\r\n                            f = f + 1 | 0\r\n                        } while ((f & 65535) << 16 >> 16 != 40);\r\n                        Lb(a, h, d, j, k, c[l >> 2] | 0, c[o + 36 >> 2] | 0, p);\r\n                        c[l >> 2] = (c[l >> 2] | 0) + 20;\r\n                        if (!g) {\r\n                            i = r;\r\n                            return\r\n                        }\r\n                        g = e << 16 >> 16;\r\n                        m = n << 16 >> 16;\r\n                        q = g;\r\n                        do {\r\n                            f = (Z(b[j + (q - g << 1) >> 1] | 0, m) | 0) >> 15;\r\n                            if ((f | 0) > 32767) {\r\n                                c[p >> 2] = 1;\r\n                                f = 32767\r\n                            }\r\n                            t = j + (q << 1) | 0;\r\n                            b[t >> 1] = Rd(b[t >> 1] | 0, f & 65535, p) | 0;\r\n                            q = q + 1 | 0\r\n                        } while ((q & 65535) << 16 >> 16 != 40);\r\n                        i = r;\r\n                        return\r\n                    }\r\n                    o = f << 16 >> 16;\r\n                    o = (o << 17 >> 17 | 0) == (o | 0) ? o << 1 : o >>> 15 ^ 32767;\r\n                    n = e << 16 >> 16 < 40;\r\n                    if (!n) {\r\n                        Sb(a, h, d, j, k, c[l >> 2] | 0, p);\r\n                        c[l >> 2] = (c[l >> 2] | 0) + 14;\r\n                        i = r;\r\n                        return\r\n                    }\r\n                    q = e << 16 >> 16;\r\n                    m = o << 16 >> 16;\r\n                    f = q;\r\n                    do {\r\n                        g = (Z(b[d + (f - q << 1) >> 1] | 0, m) | 0) >> 15;\r\n                        if ((g | 0) > 32767) {\r\n                            c[p >> 2] = 1;\r\n                            g = 32767\r\n                        }\r\n                        t = d + (f << 1) | 0;\r\n                        b[t >> 1] = Rd(b[t >> 1] | 0, g & 65535, p) | 0;\r\n                        f = f + 1 | 0\r\n                    } while ((f & 65535) << 16 >> 16 != 40);\r\n                    Sb(a, h, d, j, k, c[l >> 2] | 0, p);\r\n                    c[l >> 2] = (c[l >> 2] | 0) + 14;\r\n                    if (!n) {\r\n                        i = r;\r\n                        return\r\n                    }\r\n                    g = e << 16 >> 16;\r\n                    m = o << 16 >> 16;\r\n                    q = g;\r\n                    do {\r\n                        f = (Z(b[j + (q - g << 1) >> 1] | 0, m) | 0) >> 15;\r\n                        if ((f | 0) > 32767) {\r\n                            c[p >> 2] = 1;\r\n                            f = 32767\r\n                        }\r\n                        t = j + (q << 1) | 0;\r\n                        b[t >> 1] = Rd(b[t >> 1] | 0, f & 65535, p) | 0;\r\n                        q = q + 1 | 0\r\n                    } while ((q & 65535) << 16 >> 16 != 40);\r\n                    i = r;\r\n                    return\r\n                }\r\n            }\r\n        }\r\n\r\n        function Yb(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            b = Je(4) | 0;\r\n            if (!b) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            if (!((Uc(b) | 0) << 16 >> 16)) {\r\n                Vc(c[b >> 2] | 0) | 0;\r\n                c[a >> 2] = b;\r\n                a = 0;\r\n                return a | 0\r\n            } else {\r\n                Wc(b);\r\n                Ke(b);\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function Zb(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Wc(b);\r\n            Ke(c[a >> 2] | 0);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function _b(a) {\r\n            a = a | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            Vc(c[a >> 2] | 0) | 0;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function $b(a, d, f, g, h, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            p = p | 0;\r\n            q = q | 0;\r\n            r = r | 0;\r\n            s = s | 0;\r\n            t = t | 0;\r\n            u = u | 0;\r\n            v = v | 0;\r\n            w = w | 0;\r\n            x = x | 0;\r\n            var y = 0, z = 0, A = 0, B = 0;\r\n            z = i;\r\n            i = i + 16 | 0;\r\n            B = z + 2 | 0;\r\n            A = z;\r\n            b[q >> 1] = Xc(c[a >> 2] | 0, f, h, k, m, j, 40, g, r, A, B, x) | 0;\r\n            a = b[B >> 1] | 0;\r\n            g = c[u >> 2] | 0;\r\n            c[u >> 2] = g + 2;\r\n            b[g >> 1] = a;\r\n            se(k, b[q >> 1] | 0, b[r >> 1] | 0, 40, b[A >> 1] | 0, x);\r\n            ec(k, j, p, 40);\r\n            b[s >> 1] = Dc(f, m, p, t, 40, x) | 0;\r\n            b[v >> 1] = 32767;\r\n            if (n << 16 >> 16 != 0 ? (y = b[s >> 1] | 0, y << 16 >> 16 > 15565) : 0) y = Ed(d, y, x) | 0; else y = 0;\r\n            if (f >>> 0 < 2) {\r\n                B = b[s >> 1] | 0;\r\n                b[s >> 1] = B << 16 >> 16 > 13926 ? 13926 : B;\r\n                if (y << 16 >> 16) b[v >> 1] = 15565\r\n            } else {\r\n                if (y << 16 >> 16) {\r\n                    b[v >> 1] = 15565;\r\n                    b[s >> 1] = 15565\r\n                }\r\n                if ((f | 0) == 7) {\r\n                    A = nd(7, b[v >> 1] | 0, s, 0, 0, w, x) | 0;\r\n                    B = c[u >> 2] | 0;\r\n                    c[u >> 2] = B + 2;\r\n                    b[B >> 1] = A\r\n                }\r\n            }\r\n            q = b[s >> 1] | 0;\r\n            y = 0;\r\n            while (1) {\r\n                A = Z(b[p >> 1] | 0, q) | 0;\r\n                b[o >> 1] = (e[m >> 1] | 0) - (A >>> 14);\r\n                A = (Z(b[k >> 1] | 0, q) | 0) >>> 14;\r\n                B = l + (y << 1) | 0;\r\n                b[B >> 1] = (e[B >> 1] | 0) - A;\r\n                y = y + 1 | 0;\r\n                if ((y | 0) == 40) break; else {\r\n                    k = k + 2 | 0;\r\n                    m = m + 2 | 0;\r\n                    o = o + 2 | 0;\r\n                    p = p + 2 | 0\r\n                }\r\n            }\r\n            i = z;\r\n            return\r\n        }\r\n\r\n        function ac(a, b) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            var d = 0, e = 0, f = 0, g = 0;\r\n            g = i;\r\n            i = i + 16 | 0;\r\n            f = g;\r\n            if (!a) {\r\n                a = -1;\r\n                i = g;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(2532) | 0;\r\n            c[f >> 2] = d;\r\n            if (!d) {\r\n                a = -1;\r\n                i = g;\r\n                return a | 0\r\n            }\r\n            Yd(d + 2392 | 0);\r\n            c[d + 2188 >> 2] = 0;\r\n            c[(c[f >> 2] | 0) + 2192 >> 2] = 0;\r\n            c[(c[f >> 2] | 0) + 2196 >> 2] = 0;\r\n            c[(c[f >> 2] | 0) + 2200 >> 2] = 0;\r\n            c[(c[f >> 2] | 0) + 2204 >> 2] = 0;\r\n            c[(c[f >> 2] | 0) + 2208 >> 2] = 0;\r\n            c[(c[f >> 2] | 0) + 2212 >> 2] = 0;\r\n            c[(c[f >> 2] | 0) + 2220 >> 2] = 0;\r\n            e = c[f >> 2] | 0;\r\n            c[e + 2216 >> 2] = b;\r\n            c[e + 2528 >> 2] = 0;\r\n            d = e;\r\n            if ((((((((Yb(e + 2196 | 0) | 0) << 16 >> 16 == 0 ? (ie(e + 2192 | 0) | 0) << 16 >> 16 == 0 : 0) ? (yc(e + 2200 | 0) | 0) << 16 >> 16 == 0 : 0) ? (_c(e + 2204 | 0) | 0) << 16 >> 16 == 0 : 0) ? (Ad(e + 2208 | 0) | 0) << 16 >> 16 == 0 : 0) ? (Gd(e + 2212 | 0) | 0) << 16 >> 16 == 0 : 0) ? (jc(e + 2220 | 0, c[e + 2432 >> 2] | 0) | 0) << 16 >> 16 == 0 : 0) ? (Pc(e + 2188 | 0) | 0) << 16 >> 16 == 0 : 0) {\r\n                cc(e) | 0;\r\n                c[a >> 2] = d;\r\n                a = 0;\r\n                i = g;\r\n                return a | 0\r\n            }\r\n            bc(f);\r\n            a = -1;\r\n            i = g;\r\n            return a | 0\r\n        }\r\n\r\n        function bc(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Qc(b + 2188 | 0);\r\n            ke((c[a >> 2] | 0) + 2192 | 0);\r\n            zc((c[a >> 2] | 0) + 2200 | 0);\r\n            Zb((c[a >> 2] | 0) + 2196 | 0);\r\n            ad((c[a >> 2] | 0) + 2204 | 0);\r\n            Cd((c[a >> 2] | 0) + 2208 | 0);\r\n            Id((c[a >> 2] | 0) + 2212 | 0);\r\n            lc((c[a >> 2] | 0) + 2220 | 0);\r\n            Ke(c[a >> 2] | 0);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function cc(a) {\r\n            a = a | 0;\r\n            var d = 0, e = 0, f = 0, g = 0;\r\n            if (!a) {\r\n                g = -1;\r\n                return g | 0\r\n            }\r\n            c[a + 652 >> 2] = a + 320;\r\n            c[a + 640 >> 2] = a + 240;\r\n            c[a + 644 >> 2] = a + 160;\r\n            c[a + 648 >> 2] = a + 80;\r\n            c[a + 1264 >> 2] = a + 942;\r\n            c[a + 1912 >> 2] = a + 1590;\r\n            f = a + 1938 | 0;\r\n            c[a + 2020 >> 2] = f;\r\n            c[a + 2384 >> 2] = a + 2304;\r\n            d = a + 2028 | 0;\r\n            c[a + 2024 >> 2] = a + 2108;\r\n            c[a + 2528 >> 2] = 0;\r\n            Qe(a | 0, 0, 640) | 0;\r\n            Qe(a + 1282 | 0, 0, 308) | 0;\r\n            Qe(a + 656 | 0, 0, 286) | 0;\r\n            e = a + 2224 | 0;\r\n            g = f + 80 | 0;\r\n            do {\r\n                b[f >> 1] = 0;\r\n                f = f + 2 | 0\r\n            } while ((f | 0) < (g | 0));\r\n            f = d;\r\n            g = f + 80 | 0;\r\n            do {\r\n                b[f >> 1] = 0;\r\n                f = f + 2 | 0\r\n            } while ((f | 0) < (g | 0));\r\n            d = a + 1268 | 0;\r\n            f = e;\r\n            g = f + 80 | 0;\r\n            do {\r\n                b[f >> 1] = 0;\r\n                f = f + 2 | 0\r\n            } while ((f | 0) < (g | 0));\r\n            b[d >> 1] = 40;\r\n            b[a + 1270 >> 1] = 40;\r\n            b[a + 1272 >> 1] = 40;\r\n            b[a + 1274 >> 1] = 40;\r\n            b[a + 1276 >> 1] = 40;\r\n            Rc(c[a + 2188 >> 2] | 0) | 0;\r\n            je(c[a + 2192 >> 2] | 0) | 0;\r\n            _b(c[a + 2196 >> 2] | 0) | 0;\r\n            Ac(c[a + 2200 >> 2] | 0) | 0;\r\n            $c(c[a + 2204 >> 2] | 0) | 0;\r\n            Bd(c[a + 2208 >> 2] | 0) | 0;\r\n            Hd(c[a + 2212 >> 2] | 0) | 0;\r\n            kc(c[a + 2220 >> 2] | 0, c[a + 2432 >> 2] | 0) | 0;\r\n            b[a + 2388 >> 1] = 0;\r\n            g = 0;\r\n            return g | 0\r\n        }\r\n\r\n        function dc(a, d, e, f, g, h) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0,\r\n                y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0,\r\n                N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0,\r\n                aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0, ma = 0,\r\n                na = 0, oa = 0, pa = 0, qa = 0;\r\n            qa = i;\r\n            i = i + 1184 | 0;\r\n            T = qa;\r\n            n = qa + 1096 | 0;\r\n            o = qa + 1008 | 0;\r\n            l = qa + 904 | 0;\r\n            ka = qa + 928 | 0;\r\n            la = qa + 824 | 0;\r\n            X = qa + 744 | 0;\r\n            na = qa + 664 | 0;\r\n            oa = qa + 584 | 0;\r\n            Z = qa + 328 | 0;\r\n            ha = qa + 504 | 0;\r\n            ia = qa + 424 | 0;\r\n            ma = qa + 344 | 0;\r\n            pa = qa + 248 | 0;\r\n            Y = qa + 168 | 0;\r\n            da = qa + 88 | 0;\r\n            fa = qa + 68 | 0;\r\n            ga = qa + 48 | 0;\r\n            ea = qa + 28 | 0;\r\n            ja = qa + 24 | 0;\r\n            ba = qa + 22 | 0;\r\n            $ = qa + 20 | 0;\r\n            W = qa + 16 | 0;\r\n            U = qa + 12 | 0;\r\n            V = qa + 10 | 0;\r\n            aa = qa + 8 | 0;\r\n            _ = qa + 6 | 0;\r\n            ca = qa + 4 | 0;\r\n            c[T >> 2] = f;\r\n            S = a + 2528 | 0;\r\n            j = a + 652 | 0;\r\n            Oe(c[j >> 2] | 0, e | 0, 320) | 0;\r\n            c[g >> 2] = d;\r\n            m = a + 2216 | 0;\r\n            if (!(c[m >> 2] | 0)) {\r\n                e = a + 2220 | 0;\r\n                f = 0\r\n            } else {\r\n                f = Nd(c[a + 2212 >> 2] | 0, c[j >> 2] | 0, S) | 0;\r\n                R = a + 2220 | 0;\r\n                e = R;\r\n                f = oc(c[R >> 2] | 0, f, g, S) | 0\r\n            }\r\n            R = a + 2392 | 0;\r\n            Sc(c[a + 2188 >> 2] | 0, d, c[a + 644 >> 2] | 0, c[a + 648 >> 2] | 0, n, R, S);\r\n            k = a + 2192 | 0;\r\n            le(c[k >> 2] | 0, d, c[g >> 2] | 0, n, o, l, T, S);\r\n            nc(c[e >> 2] | 0, l, c[j >> 2] | 0, S);\r\n            if ((c[g >> 2] | 0) == 8) {\r\n                mc(c[e >> 2] | 0, f, c[(c[k >> 2] | 0) + 40 >> 2] | 0, (c[a + 2200 >> 2] | 0) + 32 | 0, T, S);\r\n                Qe(a + 1282 | 0, 0, 308) | 0;\r\n                j = a + 2244 | 0;\r\n                q = j + 20 | 0;\r\n                do {\r\n                    b[j >> 1] = 0;\r\n                    j = j + 2 | 0\r\n                } while ((j | 0) < (q | 0));\r\n                j = a + 2284 | 0;\r\n                q = j + 20 | 0;\r\n                do {\r\n                    b[j >> 1] = 0;\r\n                    j = j + 2 | 0\r\n                } while ((j | 0) < (q | 0));\r\n                j = c[a + 2020 >> 2] | 0;\r\n                q = j + 80 | 0;\r\n                do {\r\n                    b[j >> 1] = 0;\r\n                    j = j + 2 | 0\r\n                } while ((j | 0) < (q | 0));\r\n                j = a + 2028 | 0;\r\n                q = j + 80 | 0;\r\n                do {\r\n                    b[j >> 1] = 0;\r\n                    j = j + 2 | 0\r\n                } while ((j | 0) < (q | 0));\r\n                je(c[k >> 2] | 0) | 0;\r\n                j = c[k >> 2] | 0;\r\n                e = l;\r\n                q = j + 20 | 0;\r\n                do {\r\n                    b[j >> 1] = b[e >> 1] | 0;\r\n                    j = j + 2 | 0;\r\n                    e = e + 2 | 0\r\n                } while ((j | 0) < (q | 0));\r\n                j = (c[k >> 2] | 0) + 20 | 0;\r\n                e = l;\r\n                q = j + 20 | 0;\r\n                do {\r\n                    b[j >> 1] = b[e >> 1] | 0;\r\n                    j = j + 2 | 0;\r\n                    e = e + 2 | 0\r\n                } while ((j | 0) < (q | 0));\r\n                _b(c[a + 2196 >> 2] | 0) | 0;\r\n                b[a + 2388 >> 1] = 0;\r\n                Q = 0\r\n            } else Q = Dd(c[a + 2208 >> 2] | 0, c[k >> 2] | 0, S) | 0;\r\n            N = a + 640 | 0;\r\n            k = a + 2264 | 0;\r\n            j = a + 1264 | 0;\r\n            e = a + 2204 | 0;\r\n            f = a + 2212 | 0;\r\n            O = a + 1268 | 0;\r\n            P = a + 1278 | 0;\r\n            cd(d, 2842, 2862, 2882, n, 0, c[N >> 2] | 0, k, c[j >> 2] | 0, S);\r\n            if (d >>> 0 > 1) {\r\n                Tc(c[e >> 2] | 0, c[f >> 2] | 0, d, c[j >> 2] | 0, W, O, P, 0, c[m >> 2] | 0, S);\r\n                cd(d, 2842, 2862, 2882, n, 80, c[N >> 2] | 0, k, c[j >> 2] | 0, S);\r\n                Tc(c[e >> 2] | 0, c[f >> 2] | 0, d, (c[j >> 2] | 0) + 160 | 0, W + 2 | 0, O, P, 1, c[m >> 2] | 0, S)\r\n            } else {\r\n                cd(d, 2842, 2862, 2882, n, 80, c[N >> 2] | 0, k, c[j >> 2] | 0, S);\r\n                Tc(c[e >> 2] | 0, c[f >> 2] | 0, d, c[j >> 2] | 0, W, O, P, 1, c[m >> 2] | 0, S);\r\n                b[W + 2 >> 1] = b[W >> 1] | 0\r\n            }\r\n            if (c[m >> 2] | 0) Md(c[f >> 2] | 0, W, S);\r\n            if ((c[g >> 2] | 0) == 8) {\r\n                oa = a + 656 | 0;\r\n                pa = a + 976 | 0;\r\n                Oe(oa | 0, pa | 0, 286) | 0;\r\n                pa = a + 320 | 0;\r\n                Oe(a | 0, pa | 0, 320) | 0;\r\n                i = qa;\r\n                return 0\r\n            }\r\n            z = a + 2224 | 0;\r\n            A = a + 2244 | 0;\r\n            B = a + 2284 | 0;\r\n            C = a + 2388 | 0;\r\n            D = a + 2020 | 0;\r\n            E = a + 1916 | 0;\r\n            F = a + 1912 | 0;\r\n            G = a + 2024 | 0;\r\n            H = a + 2384 | 0;\r\n            I = a + 2196 | 0;\r\n            J = a + 2208 | 0;\r\n            K = a + 2464 | 0;\r\n            L = a + 2200 | 0;\r\n            M = a + 2224 | 0;\r\n            w = a + 2244 | 0;\r\n            x = a + 1270 | 0;\r\n            y = a + 1280 | 0;\r\n            v = 0;\r\n            m = 0;\r\n            l = 0;\r\n            s = 0;\r\n            t = 0;\r\n            k = 0;\r\n            u = -1;\r\n            while (1) {\r\n                p = u;\r\n                u = u + 1 << 16 >> 16;\r\n                s = 1 - (s << 16 >> 16) | 0;\r\n                f = s & 65535;\r\n                r = (s & 65535 | 0) != 0;\r\n                e = c[g >> 2] | 0;\r\n                j = (e | 0) == 0;\r\n                do if (r) if (j) {\r\n                    j = fa;\r\n                    e = z;\r\n                    q = j + 20 | 0;\r\n                    do {\r\n                        b[j >> 1] = b[e >> 1] | 0;\r\n                        j = j + 2 | 0;\r\n                        e = e + 2 | 0\r\n                    } while ((j | 0) < (q | 0));\r\n                    j = ga;\r\n                    e = A;\r\n                    q = j + 20 | 0;\r\n                    do {\r\n                        b[j >> 1] = b[e >> 1] | 0;\r\n                        j = j + 2 | 0;\r\n                        e = e + 2 | 0\r\n                    } while ((j | 0) < (q | 0));\r\n                    j = ea;\r\n                    e = B;\r\n                    q = j + 20 | 0;\r\n                    do {\r\n                        b[j >> 1] = b[e >> 1] | 0;\r\n                        j = j + 2 | 0;\r\n                        e = e + 2 | 0\r\n                    } while ((j | 0) < (q | 0));\r\n                    b[ja >> 1] = b[C >> 1] | 0;\r\n                    d = (c[N >> 2] | 0) + (v << 1) | 0;\r\n                    j = 20;\r\n                    break\r\n                } else {\r\n                    d = (c[N >> 2] | 0) + (v << 1) | 0;\r\n                    j = 19;\r\n                    break\r\n                } else {\r\n                    d = (c[N >> 2] | 0) + (v << 1) | 0;\r\n                    if (j) j = 20; else j = 19\r\n                } while (0);\r\n                if ((j | 0) == 19) yd(e, 2842, 2862, 2882, n, o, d, B, w, c[D >> 2] | 0, E, (c[F >> 2] | 0) + (v << 1) | 0, c[G >> 2] | 0, ka, ha, c[H >> 2] | 0); else if ((j | 0) == 20 ? (0, yd(0, 2842, 2862, 2882, n, o, d, B, ga, c[D >> 2] | 0, E, (c[F >> 2] | 0) + (v << 1) | 0, c[G >> 2] | 0, ka, ha, c[H >> 2] | 0), r) : 0) {\r\n                    j = da;\r\n                    e = c[G >> 2] | 0;\r\n                    q = j + 80 | 0;\r\n                    do {\r\n                        b[j >> 1] = b[e >> 1] | 0;\r\n                        j = j + 2 | 0;\r\n                        e = e + 2 | 0\r\n                    } while ((j | 0) < (q | 0))\r\n                }\r\n                j = ia;\r\n                e = ha;\r\n                q = j + 80 | 0;\r\n                do {\r\n                    b[j >> 1] = b[e >> 1] | 0;\r\n                    j = j + 2 | 0;\r\n                    e = e + 2 | 0\r\n                } while ((j | 0) < (q | 0));\r\n                $b(c[I >> 2] | 0, c[J >> 2] | 0, c[g >> 2] | 0, t, W, c[G >> 2] | 0, (c[F >> 2] | 0) + (v << 1) | 0, ia, ka, Q, la, na, U, V, aa, Z, T, ca, c[K >> 2] | 0, S);\r\n                switch (p << 16 >> 16) {\r\n                    case -1: {\r\n                        if ((b[P >> 1] | 0) > 0) b[x >> 1] = b[U >> 1] | 0;\r\n                        break\r\n                    }\r\n                    case 2: {\r\n                        if ((b[y >> 1] | 0) > 0) b[O >> 1] = b[U >> 1] | 0;\r\n                        break\r\n                    }\r\n                    default: {\r\n                    }\r\n                }\r\n                Xb(la, c[G >> 2] | 0, b[U >> 1] | 0, b[C >> 1] | 0, b[aa >> 1] | 0, ia, X, oa, T, c[g >> 2] | 0, u, R, S);\r\n                Bc(c[L >> 2] | 0, c[g >> 2] | 0, ha, (c[F >> 2] | 0) + (v << 1) | 0, X, ka, la, na, oa, Z, f, b[ca >> 1] | 0, ba, $, aa, _, T, R, S);\r\n                Fd(c[J >> 2] | 0, b[aa >> 1] | 0, S);\r\n                d = c[g >> 2] | 0;\r\n                do if (!d) if (r) {\r\n                    j = ma;\r\n                    e = ka;\r\n                    q = j + 80 | 0;\r\n                    do {\r\n                        b[j >> 1] = b[e >> 1] | 0;\r\n                        j = j + 2 | 0;\r\n                        e = e + 2 | 0\r\n                    } while ((j | 0) < (q | 0));\r\n                    j = pa;\r\n                    e = oa;\r\n                    q = j + 80 | 0;\r\n                    do {\r\n                        b[j >> 1] = b[e >> 1] | 0;\r\n                        j = j + 2 | 0;\r\n                        e = e + 2 | 0\r\n                    } while ((j | 0) < (q | 0));\r\n                    j = Y;\r\n                    e = X;\r\n                    q = j + 80 | 0;\r\n                    do {\r\n                        b[j >> 1] = b[e >> 1] | 0;\r\n                        j = j + 2 | 0;\r\n                        e = e + 2 | 0\r\n                    } while ((j | 0) < (q | 0));\r\n                    l = b[U >> 1] | 0;\r\n                    m = b[V >> 1] | 0;\r\n                    zd(c[N >> 2] | 0, 0, t, b[aa >> 1] | 0, b[_ >> 1] | 0, o, h, ka, X, na, oa, fa, B, ga, c[F >> 2] | 0, C, S);\r\n                    b[C >> 1] = b[ja >> 1] | 0;\r\n                    k = t;\r\n                    break\r\n                } else {\r\n                    j = B;\r\n                    e = ea;\r\n                    q = j + 20 | 0;\r\n                    do {\r\n                        b[j >> 1] = b[e >> 1] | 0;\r\n                        j = j + 2 | 0;\r\n                        e = e + 2 | 0\r\n                    } while ((j | 0) < (q | 0));\r\n                    r = k << 16 >> 16;\r\n                    se((c[F >> 2] | 0) + (r << 1) | 0, l, m, 40, 1, S);\r\n                    ec((c[F >> 2] | 0) + (r << 1) | 0, da, na, 40);\r\n                    zd(c[N >> 2] | 0, c[g >> 2] | 0, k, b[ba >> 1] | 0, b[$ >> 1] | 0, o + -22 | 0, h, ma, Y, na, pa, M, B, w, c[F >> 2] | 0, ja, S);\r\n                    yd(c[g >> 2] | 0, 2842, 2862, 2882, n, o, (c[N >> 2] | 0) + (v << 1) | 0, B, w, c[D >> 2] | 0, E, (c[F >> 2] | 0) + (v << 1) | 0, c[G >> 2] | 0, ka, ha, c[H >> 2] | 0);\r\n                    se((c[F >> 2] | 0) + (v << 1) | 0, b[U >> 1] | 0, b[V >> 1] | 0, 40, 1, S);\r\n                    ec((c[F >> 2] | 0) + (v << 1) | 0, c[G >> 2] | 0, na, 40);\r\n                    zd(c[N >> 2] | 0, c[g >> 2] | 0, t, b[aa >> 1] | 0, b[_ >> 1] | 0, o, h, ka, X, na, oa, M, B, w, c[F >> 2] | 0, C, S);\r\n                    break\r\n                } else zd(c[N >> 2] | 0, d, t, b[aa >> 1] | 0, b[_ >> 1] | 0, o, h, ka, X, na, oa, M, B, w, c[F >> 2] | 0, C, S); while (0);\r\n                d = v + 40 | 0;\r\n                t = d & 65535;\r\n                if (t << 16 >> 16 >= 160) break; else {\r\n                    v = d << 16 >> 16;\r\n                    n = n + 22 | 0;\r\n                    o = o + 22 | 0\r\n                }\r\n            }\r\n            Oe(a + 1282 | 0, a + 1602 | 0, 308) | 0;\r\n            oa = a + 656 | 0;\r\n            pa = a + 976 | 0;\r\n            Oe(oa | 0, pa | 0, 286) | 0;\r\n            pa = a + 320 | 0;\r\n            Oe(a | 0, pa | 0, 320) | 0;\r\n            i = qa;\r\n            return 0\r\n        }\r\n\r\n        function ec(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0;\r\n            o = e << 16 >> 16;\r\n            if (e << 16 >> 16 > 1) n = 1; else return;\r\n            while (1) {\r\n                f = b[a >> 1] | 0;\r\n                i = c + (n + -1 << 1) | 0;\r\n                e = Z(b[c + (n << 1) >> 1] | 0, f) | 0;\r\n                k = b[i >> 1] | 0;\r\n                f = Z(k << 16 >> 16, f) | 0;\r\n                h = (n + 131071 | 0) >>> 1;\r\n                j = h & 65535;\r\n                g = b[a + 2 >> 1] | 0;\r\n                if (!(j << 16 >> 16)) {\r\n                    c = i;\r\n                    h = k\r\n                } else {\r\n                    l = (h << 1) + 131070 & 131070;\r\n                    m = n - l | 0;\r\n                    h = a;\r\n                    do {\r\n                        q = (Z(k << 16 >> 16, g) | 0) + e | 0;\r\n                        p = h;\r\n                        h = h + 4 | 0;\r\n                        e = b[i + -2 >> 1] | 0;\r\n                        g = (Z(e, g) | 0) + f | 0;\r\n                        f = b[h >> 1] | 0;\r\n                        i = i + -4 | 0;\r\n                        e = q + (Z(f, e) | 0) | 0;\r\n                        k = b[i >> 1] | 0;\r\n                        f = g + (Z(k << 16 >> 16, f) | 0) | 0;\r\n                        j = j + -1 << 16 >> 16;\r\n                        g = b[p + 6 >> 1] | 0\r\n                    } while (j << 16 >> 16 != 0);\r\n                    h = c + (m + -3 << 1) | 0;\r\n                    a = a + (l + 2 << 1) | 0;\r\n                    c = h;\r\n                    h = b[h >> 1] | 0\r\n                }\r\n                e = (Z(h << 16 >> 16, g) | 0) + e | 0;\r\n                b[d >> 1] = f >>> 12;\r\n                b[d + 2 >> 1] = e >>> 12;\r\n                e = (n << 16) + 131072 >> 16;\r\n                if ((e | 0) < (o | 0)) {\r\n                    d = d + 4 | 0;\r\n                    a = a + (1 - n << 1) | 0;\r\n                    n = e\r\n                } else break\r\n            }\r\n            return\r\n        }\r\n\r\n        function fc(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0,\r\n                v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0;\r\n            z = i;\r\n            i = i + 80 | 0;\r\n            y = z;\r\n            h = 20;\r\n            g = a;\r\n            f = 1;\r\n            while (1) {\r\n                x = b[g >> 1] | 0;\r\n                x = (Z(x, x) | 0) + f | 0;\r\n                f = b[g + 2 >> 1] | 0;\r\n                f = x + (Z(f, f) | 0) | 0;\r\n                h = h + -1 << 16 >> 16;\r\n                if (!(h << 16 >> 16)) break; else g = g + 4 | 0\r\n            }\r\n            f = f << 1;\r\n            if ((f | 0) < 0) {\r\n                g = 20;\r\n                f = a;\r\n                e = y;\r\n                while (1) {\r\n                    b[e >> 1] = (b[f >> 1] | 0) >>> 1;\r\n                    b[e + 2 >> 1] = (b[f + 2 >> 1] | 0) >>> 1;\r\n                    g = g + -1 << 16 >> 16;\r\n                    if (!(g << 16 >> 16)) {\r\n                        x = y;\r\n                        break\r\n                    } else {\r\n                        f = f + 4 | 0;\r\n                        e = e + 4 | 0\r\n                    }\r\n                }\r\n            } else {\r\n                f = ce(f >> 1, e) | 0;\r\n                if ((f | 0) < 16777215) f = ((f >> 9) * 32440 | 0) >>> 15 << 16 >> 16; else f = 32440;\r\n                h = 20;\r\n                g = a;\r\n                e = y;\r\n                while (1) {\r\n                    b[e >> 1] = ((Z(b[g >> 1] | 0, f) | 0) + 32 | 0) >>> 6;\r\n                    b[e + 2 >> 1] = ((Z(b[g + 2 >> 1] | 0, f) | 0) + 32 | 0) >>> 6;\r\n                    h = h + -1 << 16 >> 16;\r\n                    if (!(h << 16 >> 16)) {\r\n                        x = y;\r\n                        break\r\n                    } else {\r\n                        g = g + 4 | 0;\r\n                        e = e + 4 | 0\r\n                    }\r\n                }\r\n            }\r\n            h = 20;\r\n            g = x;\r\n            e = d + 3198 | 0;\r\n            f = 0;\r\n            while (1) {\r\n                w = b[g >> 1] | 0;\r\n                w = (Z(w, w) | 0) + f | 0;\r\n                b[e >> 1] = (w + 16384 | 0) >>> 15;\r\n                v = b[g + 2 >> 1] | 0;\r\n                f = (Z(v, v) | 0) + w | 0;\r\n                b[e + -82 >> 1] = (f + 16384 | 0) >>> 15;\r\n                h = h + -1 << 16 >> 16;\r\n                if (!(h << 16 >> 16)) break; else {\r\n                    g = g + 4 | 0;\r\n                    e = e + -164 | 0\r\n                }\r\n            }\r\n            w = c + 78 | 0;\r\n            v = 1;\r\n            while (1) {\r\n                f = 39 - v | 0;\r\n                a = d + 3120 + (f << 1) | 0;\r\n                e = d + (f * 80 | 0) + 78 | 0;\r\n                f = c + (f << 1) | 0;\r\n                k = y + (v << 1) | 0;\r\n                g = 65575 - v | 0;\r\n                j = g & 65535;\r\n                h = b[x >> 1] | 0;\r\n                if (!(j << 16 >> 16)) {\r\n                    j = w;\r\n                    g = 0\r\n                } else {\r\n                    r = g + 65535 & 65535;\r\n                    t = r * 41 | 0;\r\n                    u = (Z(v, -40) | 0) - t | 0;\r\n                    s = 0 - v | 0;\r\n                    t = s - t | 0;\r\n                    s = s - r | 0;\r\n                    q = v + r | 0;\r\n                    p = b[k >> 1] | 0;\r\n                    n = x;\r\n                    o = w;\r\n                    l = d + ((38 - v | 0) * 80 | 0) + 78 | 0;\r\n                    g = 0;\r\n                    m = 0;\r\n                    while (1) {\r\n                        k = k + 2 | 0;\r\n                        g = (Z(p << 16 >> 16, h) | 0) + g | 0;\r\n                        n = n + 2 | 0;\r\n                        p = b[k >> 1] | 0;\r\n                        m = (Z(p << 16 >> 16, h) | 0) + m | 0;\r\n                        B = f;\r\n                        f = f + -2 | 0;\r\n                        h = b[f >> 1] | 0;\r\n                        A = b[o >> 1] << 1;\r\n                        B = (Z((Z(A, b[B >> 1] | 0) | 0) >> 16, (g << 1) + 32768 >> 16) | 0) >>> 15 & 65535;\r\n                        b[e >> 1] = B;\r\n                        b[a >> 1] = B;\r\n                        h = (Z((Z(A, h) | 0) >> 16, (m << 1) + 32768 >> 16) | 0) >>> 15 & 65535;\r\n                        b[a + -2 >> 1] = h;\r\n                        b[l >> 1] = h;\r\n                        j = j + -1 << 16 >> 16;\r\n                        h = b[n >> 1] | 0;\r\n                        if (!(j << 16 >> 16)) break; else {\r\n                            o = o + -2 | 0;\r\n                            a = a + -82 | 0;\r\n                            e = e + -82 | 0;\r\n                            l = l + -82 | 0\r\n                        }\r\n                    }\r\n                    k = y + (q + 1 << 1) | 0;\r\n                    j = c + (38 - r << 1) | 0;\r\n                    f = c + (s + 38 << 1) | 0;\r\n                    a = d + 3040 + (t + 38 << 1) | 0;\r\n                    e = d + 3040 + (u + 38 << 1) | 0\r\n                }\r\n                B = (Z(b[k >> 1] | 0, h) | 0) + g | 0;\r\n                B = (Z((B << 1) + 32768 >> 16, (Z(b[j >> 1] << 1, b[f >> 1] | 0) | 0) >> 16) | 0) >>> 15 & 65535;\r\n                b[a >> 1] = B;\r\n                b[e >> 1] = B;\r\n                e = (v << 16) + 131072 | 0;\r\n                if ((e | 0) < 2621440) v = e >> 16; else break\r\n            }\r\n            i = z;\r\n            return\r\n        }\r\n\r\n        function gc(a, d, e, f, g, h, j) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            var k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;\r\n            r = i;\r\n            i = i + 160 | 0;\r\n            q = r;\r\n            if (g << 16 >> 16 > 0) {\r\n                o = h & 65535;\r\n                p = 0;\r\n                k = 5;\r\n                do {\r\n                    if ((p | 0) < 40) {\r\n                        n = p;\r\n                        m = p & 65535;\r\n                        h = 0;\r\n                        while (1) {\r\n                            if (m << 16 >> 16 < 40) {\r\n                                m = m << 16 >> 16;\r\n                                l = 0;\r\n                                do {\r\n                                    l = (Z(b[a + (m - n << 1) >> 1] | 0, b[d + (m << 1) >> 1] | 0) | 0) + l | 0;\r\n                                    m = m + 1 | 0\r\n                                } while ((m & 65535) << 16 >> 16 != 40)\r\n                            } else l = 0;\r\n                            l = l << 1;\r\n                            c[q + (n << 2) >> 2] = l;\r\n                            l = Gc(l) | 0;\r\n                            h = (l | 0) > (h | 0) ? l : h;\r\n                            l = n + o | 0;\r\n                            m = l & 65535;\r\n                            if (m << 16 >> 16 >= 40) break; else n = l << 16 >> 16\r\n                        }\r\n                    } else h = 0;\r\n                    k = (h >> 1) + k | 0;\r\n                    p = p + 1 | 0\r\n                } while ((p & 65535) << 16 >> 16 != g << 16 >> 16)\r\n            } else k = 5;\r\n            f = ((pe(k) | 0) & 65535) - (f & 65535) | 0;\r\n            h = f << 16 >> 16;\r\n            l = 0 - h << 16;\r\n            k = (l | 0) < 2031616;\r\n            l = l >> 16;\r\n            if ((f & 65535) << 16 >> 16 > 0) if (k) {\r\n                k = 0;\r\n                do {\r\n                    f = c[q + (k << 2) >> 2] | 0;\r\n                    d = f << h;\r\n                    b[e + (k << 1) >> 1] = Ce((d >> h | 0) == (f | 0) ? d : f >> 31 ^ 2147483647, j) | 0;\r\n                    k = k + 1 | 0\r\n                } while ((k | 0) != 40);\r\n                i = r;\r\n                return\r\n            } else {\r\n                k = 0;\r\n                do {\r\n                    f = c[q + (k << 2) >> 2] | 0;\r\n                    d = f << h;\r\n                    b[e + (k << 1) >> 1] = Ce((d >> h | 0) == (f | 0) ? d : f >> 31 ^ 2147483647, j) | 0;\r\n                    k = k + 1 | 0\r\n                } while ((k | 0) != 40);\r\n                i = r;\r\n                return\r\n            } else if (k) {\r\n                k = 0;\r\n                do {\r\n                    b[e + (k << 1) >> 1] = Ce(c[q + (k << 2) >> 2] >> l, j) | 0;\r\n                    k = k + 1 | 0\r\n                } while ((k | 0) != 40);\r\n                i = r;\r\n                return\r\n            } else {\r\n                k = 0;\r\n                do {\r\n                    b[e + (k << 1) >> 1] = Ce(0, j) | 0;\r\n                    k = k + 1 | 0\r\n                } while ((k | 0) != 40);\r\n                i = r;\r\n                return\r\n            }\r\n        }\r\n\r\n        function hc(a, d, e, f, g) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0,\r\n                x = 0, y = 0, z = 0;\r\n            z = i;\r\n            i = i + 160 | 0;\r\n            y = z;\r\n            v = a + 2 | 0;\r\n            w = b[a >> 1] | 0;\r\n            x = 0;\r\n            g = 5;\r\n            do {\r\n                u = x;\r\n                k = 0;\r\n                while (1) {\r\n                    n = d + (u << 1) | 0;\r\n                    t = 40 - u | 0;\r\n                    h = (t + 131071 | 0) >>> 1 & 65535;\r\n                    l = d + (u + 1 << 1) | 0;\r\n                    j = Z(b[n >> 1] << 1, w) | 0;\r\n                    if (!(h << 16 >> 16)) h = v; else {\r\n                        s = 131111 - u + 131070 & 131070;\r\n                        r = u + s | 0;\r\n                        q = v;\r\n                        p = a;\r\n                        o = n;\r\n                        while (1) {\r\n                            m = o + 4 | 0;\r\n                            n = p + 4 | 0;\r\n                            j = (Z(b[l >> 1] << 1, b[q >> 1] | 0) | 0) + j | 0;\r\n                            h = h + -1 << 16 >> 16;\r\n                            j = (Z(b[m >> 1] << 1, b[n >> 1] | 0) | 0) + j | 0;\r\n                            if (!(h << 16 >> 16)) break; else {\r\n                                l = o + 6 | 0;\r\n                                q = p + 6 | 0;\r\n                                p = n;\r\n                                o = m\r\n                            }\r\n                        }\r\n                        l = d + (r + 3 << 1) | 0;\r\n                        h = a + (s + 3 << 1) | 0\r\n                    }\r\n                    if (!(t & 1)) j = (Z(b[l >> 1] << 1, b[h >> 1] | 0) | 0) + j | 0;\r\n                    c[y + (u << 2) >> 2] = j;\r\n                    j = (j | 0) < 0 ? 0 - j | 0 : j;\r\n                    k = (j | 0) > (k | 0) ? j : k;\r\n                    j = u + 5 | 0;\r\n                    if ((j & 65535) << 16 >> 16 < 40) u = j << 16 >> 16; else break\r\n                }\r\n                g = (k >> 1) + g | 0;\r\n                x = x + 1 | 0\r\n            } while ((x | 0) != 5);\r\n            f = ((pe(g) | 0) & 65535) - (f & 65535) | 0;\r\n            j = f << 16 >> 16;\r\n            g = 0 - j << 16;\r\n            k = g >> 16;\r\n            if ((f & 65535) << 16 >> 16 > 0) {\r\n                h = 20;\r\n                g = y;\r\n                while (1) {\r\n                    y = c[g >> 2] | 0;\r\n                    f = y << j;\r\n                    b[e >> 1] = (((f >> j | 0) == (y | 0) ? f : y >> 31 ^ 2147483647) + 32768 | 0) >>> 16;\r\n                    y = c[g + 4 >> 2] | 0;\r\n                    f = y << j;\r\n                    b[e + 2 >> 1] = (((f >> j | 0) == (y | 0) ? f : y >> 31 ^ 2147483647) + 32768 | 0) >>> 16;\r\n                    h = h + -1 << 16 >> 16;\r\n                    if (!(h << 16 >> 16)) break; else {\r\n                        e = e + 4 | 0;\r\n                        g = g + 8 | 0\r\n                    }\r\n                }\r\n                i = z;\r\n                return\r\n            }\r\n            if ((g | 0) < 2031616) {\r\n                h = 20;\r\n                g = y;\r\n                while (1) {\r\n                    b[e >> 1] = ((c[g >> 2] >> k) + 32768 | 0) >>> 16;\r\n                    b[e + 2 >> 1] = ((c[g + 4 >> 2] >> k) + 32768 | 0) >>> 16;\r\n                    h = h + -1 << 16 >> 16;\r\n                    if (!(h << 16 >> 16)) break; else {\r\n                        e = e + 4 | 0;\r\n                        g = g + 8 | 0\r\n                    }\r\n                }\r\n                i = z;\r\n                return\r\n            } else {\r\n                b[e >> 1] = 0;\r\n                y = e + 4 | 0;\r\n                b[e + 2 >> 1] = 0;\r\n                b[y >> 1] = 0;\r\n                f = y + 4 | 0;\r\n                b[y + 2 >> 1] = 0;\r\n                b[f >> 1] = 0;\r\n                y = f + 4 | 0;\r\n                b[f + 2 >> 1] = 0;\r\n                b[y >> 1] = 0;\r\n                f = y + 4 | 0;\r\n                b[y + 2 >> 1] = 0;\r\n                b[f >> 1] = 0;\r\n                y = f + 4 | 0;\r\n                b[f + 2 >> 1] = 0;\r\n                b[y >> 1] = 0;\r\n                f = y + 4 | 0;\r\n                b[y + 2 >> 1] = 0;\r\n                b[f >> 1] = 0;\r\n                y = f + 4 | 0;\r\n                b[f + 2 >> 1] = 0;\r\n                b[y >> 1] = 0;\r\n                f = y + 4 | 0;\r\n                b[y + 2 >> 1] = 0;\r\n                b[f >> 1] = 0;\r\n                y = f + 4 | 0;\r\n                b[f + 2 >> 1] = 0;\r\n                b[y >> 1] = 0;\r\n                f = y + 4 | 0;\r\n                b[y + 2 >> 1] = 0;\r\n                b[f >> 1] = 0;\r\n                y = f + 4 | 0;\r\n                b[f + 2 >> 1] = 0;\r\n                b[y >> 1] = 0;\r\n                f = y + 4 | 0;\r\n                b[y + 2 >> 1] = 0;\r\n                b[f >> 1] = 0;\r\n                y = f + 4 | 0;\r\n                b[f + 2 >> 1] = 0;\r\n                b[y >> 1] = 0;\r\n                f = y + 4 | 0;\r\n                b[y + 2 >> 1] = 0;\r\n                b[f >> 1] = 0;\r\n                y = f + 4 | 0;\r\n                b[f + 2 >> 1] = 0;\r\n                b[y >> 1] = 0;\r\n                f = y + 4 | 0;\r\n                b[y + 2 >> 1] = 0;\r\n                b[f >> 1] = 0;\r\n                y = f + 4 | 0;\r\n                b[f + 2 >> 1] = 0;\r\n                b[y >> 1] = 0;\r\n                f = y + 4 | 0;\r\n                b[y + 2 >> 1] = 0;\r\n                b[f >> 1] = 0;\r\n                y = f + 4 | 0;\r\n                b[f + 2 >> 1] = 0;\r\n                b[y >> 1] = 0;\r\n                b[y + 2 >> 1] = 0;\r\n                i = z;\r\n                return\r\n            }\r\n        }\r\n\r\n        function ic(a, b, d, e) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0;\r\n            h = (Td(16383, b) | 0) << 16 >> 16;\r\n            b = Z(h, b << 16 >> 16) | 0;\r\n            if ((b | 0) == 1073741824) {\r\n                c[e >> 2] = 1;\r\n                f = 2147483647\r\n            } else f = b << 1;\r\n            g = (Z(h, d << 16 >> 16) | 0) >> 15;\r\n            b = f + (g << 1) | 0;\r\n            if ((f ^ g | 0) > 0 & (b ^ f | 0) < 0) {\r\n                c[e >> 2] = 1;\r\n                b = (f >>> 31) + 2147483647 | 0\r\n            }\r\n            f = 2147483647 - b | 0;\r\n            d = f >> 16;\r\n            b = Z(d, h) | 0;\r\n            if ((b | 0) == 1073741824) {\r\n                c[e >> 2] = 1;\r\n                g = 2147483647\r\n            } else g = b << 1;\r\n            h = (Z((f >>> 1) - (d << 15) << 16 >> 16, h) | 0) >> 15;\r\n            b = g + (h << 1) | 0;\r\n            if ((g ^ h | 0) > 0 & (b ^ g | 0) < 0) {\r\n                c[e >> 2] = 1;\r\n                b = (g >>> 31) + 2147483647 | 0\r\n            }\r\n            g = b >> 16;\r\n            h = a >> 16;\r\n            d = Z(g, h) | 0;\r\n            d = (d | 0) == 1073741824 ? 2147483647 : d << 1;\r\n            f = (Z((b >>> 1) - (g << 15) << 16 >> 16, h) | 0) >> 15;\r\n            e = (f << 1) + d | 0;\r\n            e = (f ^ d | 0) > 0 & (e ^ d | 0) < 0 ? (d >>> 31) + 2147483647 | 0 : e;\r\n            h = (Z(g, (a >>> 1) - (h << 15) << 16 >> 16) | 0) >> 15;\r\n            a = e + (h << 1) | 0;\r\n            a = (e ^ h | 0) > 0 & (a ^ e | 0) < 0 ? (e >>> 31) + 2147483647 | 0 : a;\r\n            e = a << 2;\r\n            return ((e >> 2 | 0) == (a | 0) ? e : a >> 31 ^ 2147483647) | 0\r\n        }\r\n\r\n        function jc(a, d) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            var e = 0, f = 0, g = 0, h = 0;\r\n            if (!a) {\r\n                h = -1;\r\n                return h | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            e = Je(192) | 0;\r\n            if (!e) {\r\n                h = -1;\r\n                return h | 0\r\n            }\r\n            f = e + 176 | 0;\r\n            b[f >> 1] = 0;\r\n            b[f + 2 >> 1] = 0;\r\n            b[f + 4 >> 1] = 0;\r\n            b[f + 6 >> 1] = 0;\r\n            b[f + 8 >> 1] = 0;\r\n            b[f + 10 >> 1] = 0;\r\n            f = e;\r\n            g = d;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = b[g >> 1] | 0;\r\n                f = f + 2 | 0;\r\n                g = g + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            f = e + 20 | 0;\r\n            g = d;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = b[g >> 1] | 0;\r\n                f = f + 2 | 0;\r\n                g = g + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            f = e + 40 | 0;\r\n            g = d;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = b[g >> 1] | 0;\r\n                f = f + 2 | 0;\r\n                g = g + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            f = e + 60 | 0;\r\n            g = d;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = b[g >> 1] | 0;\r\n                f = f + 2 | 0;\r\n                g = g + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            f = e + 80 | 0;\r\n            g = d;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = b[g >> 1] | 0;\r\n                f = f + 2 | 0;\r\n                g = g + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            f = e + 100 | 0;\r\n            g = d;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = b[g >> 1] | 0;\r\n                f = f + 2 | 0;\r\n                g = g + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            f = e + 120 | 0;\r\n            g = d;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = b[g >> 1] | 0;\r\n                f = f + 2 | 0;\r\n                g = g + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            f = e + 140 | 0;\r\n            g = d;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = b[g >> 1] | 0;\r\n                f = f + 2 | 0;\r\n                g = g + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            f = e + 160 | 0;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = 0;\r\n                f = f + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            b[e + 188 >> 1] = 7;\r\n            b[e + 190 >> 1] = 32767;\r\n            c[a >> 2] = e;\r\n            h = 0;\r\n            return h | 0\r\n        }\r\n\r\n        function kc(a, c) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            var d = 0, e = 0, f = 0;\r\n            if (!a) {\r\n                f = -1;\r\n                return f | 0\r\n            }\r\n            d = a + 176 | 0;\r\n            b[d >> 1] = 0;\r\n            b[d + 2 >> 1] = 0;\r\n            b[d + 4 >> 1] = 0;\r\n            b[d + 6 >> 1] = 0;\r\n            b[d + 8 >> 1] = 0;\r\n            b[d + 10 >> 1] = 0;\r\n            d = a;\r\n            e = c;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = b[e >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                e = e + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            d = a + 20 | 0;\r\n            e = c;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = b[e >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                e = e + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            d = a + 40 | 0;\r\n            e = c;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = b[e >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                e = e + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            d = a + 60 | 0;\r\n            e = c;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = b[e >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                e = e + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            d = a + 80 | 0;\r\n            e = c;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = b[e >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                e = e + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            d = a + 100 | 0;\r\n            e = c;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = b[e >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                e = e + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            d = a + 120 | 0;\r\n            e = c;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = b[e >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                e = e + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            d = a + 140 | 0;\r\n            e = c;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = b[e >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                e = e + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            d = a + 160 | 0;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = 0;\r\n                d = d + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            b[a + 188 >> 1] = 7;\r\n            b[a + 190 >> 1] = 32767;\r\n            f = 1;\r\n            return f | 0\r\n        }\r\n\r\n        function lc(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function mc(a, d, e, f, g, h) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0,\r\n                y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;\r\n            C = i;\r\n            i = i + 112 | 0;\r\n            z = C + 80 | 0;\r\n            A = C + 60 | 0;\r\n            B = C + 40 | 0;\r\n            y = C;\r\n            if (d << 16 >> 16 == 0 ? (j = a + 178 | 0, (b[j >> 1] | 0) != 0) : 0) {\r\n                B = a + 180 | 0;\r\n                h = a + 182 | 0;\r\n                e = j;\r\n                B = b[B >> 1] | 0;\r\n                f = c[g >> 2] | 0;\r\n                A = f + 2 | 0;\r\n                b[f >> 1] = B;\r\n                h = b[h >> 1] | 0;\r\n                B = f + 4 | 0;\r\n                b[A >> 1] = h;\r\n                A = a + 184 | 0;\r\n                A = b[A >> 1] | 0;\r\n                h = f + 6 | 0;\r\n                b[B >> 1] = A;\r\n                B = a + 186 | 0;\r\n                B = b[B >> 1] | 0;\r\n                a = f + 8 | 0;\r\n                b[h >> 1] = B;\r\n                e = b[e >> 1] | 0;\r\n                f = f + 10 | 0;\r\n                c[g >> 2] = f;\r\n                b[a >> 1] = e;\r\n                i = C;\r\n                return\r\n            }\r\n            s = y + 36 | 0;\r\n            t = y + 32 | 0;\r\n            u = y + 28 | 0;\r\n            v = y + 24 | 0;\r\n            w = y + 20 | 0;\r\n            x = y + 16 | 0;\r\n            p = y + 12 | 0;\r\n            q = y + 8 | 0;\r\n            r = y + 4 | 0;\r\n            d = y;\r\n            j = d + 40 | 0;\r\n            do {\r\n                c[d >> 2] = 0;\r\n                d = d + 4 | 0\r\n            } while ((d | 0) < (j | 0));\r\n            o = 7;\r\n            d = 0;\r\n            while (1) {\r\n                n = b[a + 160 + (o << 1) >> 1] | 0;\r\n                j = n << 16 >> 16;\r\n                if (n << 16 >> 16 < 0) j = ~((j ^ -4) >> 2); else j = j >>> 2;\r\n                d = Rd(d, j & 65535, h) | 0;\r\n                l = o * 10 | 0;\r\n                n = 9;\r\n                while (1) {\r\n                    m = y + (n << 2) | 0;\r\n                    k = c[m >> 2] | 0;\r\n                    D = b[a + (n + l << 1) >> 1] | 0;\r\n                    j = D + k | 0;\r\n                    if ((D ^ k | 0) > -1 & (j ^ k | 0) < 0) {\r\n                        c[h >> 2] = 1;\r\n                        j = (k >>> 31) + 2147483647 | 0\r\n                    }\r\n                    c[m >> 2] = j;\r\n                    if ((n | 0) > 0) n = n + -1 | 0; else break\r\n                }\r\n                if ((o | 0) > 0) o = o + -1 | 0; else break\r\n            }\r\n            j = d << 16 >> 16;\r\n            if (d << 16 >> 16 < 0) j = ~((j ^ -2) >> 1); else j = j >>> 1;\r\n            b[A + 18 >> 1] = (c[s >> 2] | 0) >>> 3;\r\n            b[A + 16 >> 1] = (c[t >> 2] | 0) >>> 3;\r\n            b[A + 14 >> 1] = (c[u >> 2] | 0) >>> 3;\r\n            b[A + 12 >> 1] = (c[v >> 2] | 0) >>> 3;\r\n            b[A + 10 >> 1] = (c[w >> 2] | 0) >>> 3;\r\n            b[A + 8 >> 1] = (c[x >> 2] | 0) >>> 3;\r\n            b[A + 6 >> 1] = (c[p >> 2] | 0) >>> 3;\r\n            b[A + 4 >> 1] = (c[q >> 2] | 0) >>> 3;\r\n            b[A + 2 >> 1] = (c[r >> 2] | 0) >>> 3;\r\n            b[A >> 1] = (c[y >> 2] | 0) >>> 3;\r\n            d = a + 178 | 0;\r\n            j = (((j << 16) + 167772160 | 0) >>> 16) + 128 | 0;\r\n            b[d >> 1] = j;\r\n            j = j << 16;\r\n            if ((j | 0) < 0) j = ~((j >> 16 ^ -256) >> 8); else j = j >> 24;\r\n            b[d >> 1] = j;\r\n            if ((j | 0) <= 63) {\r\n                if ((j | 0) < 0) {\r\n                    b[d >> 1] = 0;\r\n                    j = 0\r\n                }\r\n            } else {\r\n                b[d >> 1] = 63;\r\n                j = 63\r\n            }\r\n            D = Ge(j << 8 & 65535, 11560, h) | 0;\r\n            D = D << 16 >> 16 > 0 ? 0 : D << 16 >> 16 < -14436 ? -14436 : D;\r\n            b[f >> 1] = D;\r\n            b[f + 2 >> 1] = D;\r\n            b[f + 4 >> 1] = D;\r\n            b[f + 6 >> 1] = D;\r\n            D = ((D << 16 >> 16) * 5443 | 0) >>> 15 & 65535;\r\n            b[f + 8 >> 1] = D;\r\n            b[f + 10 >> 1] = D;\r\n            b[f + 12 >> 1] = D;\r\n            b[f + 14 >> 1] = D;\r\n            ne(A, z, 10, h);\r\n            Ae(z, 205, 10, h);\r\n            me(z, A, 10, h);\r\n            f = a + 182 | 0;\r\n            D = a + 180 | 0;\r\n            te(e, 8, A, B, f, D, h);\r\n            h = f;\r\n            f = d;\r\n            D = b[D >> 1] | 0;\r\n            e = c[g >> 2] | 0;\r\n            B = e + 2 | 0;\r\n            b[e >> 1] = D;\r\n            h = b[h >> 1] | 0;\r\n            D = e + 4 | 0;\r\n            b[B >> 1] = h;\r\n            B = a + 184 | 0;\r\n            B = b[B >> 1] | 0;\r\n            h = e + 6 | 0;\r\n            b[D >> 1] = B;\r\n            a = a + 186 | 0;\r\n            a = b[a >> 1] | 0;\r\n            D = e + 8 | 0;\r\n            b[h >> 1] = a;\r\n            a = b[f >> 1] | 0;\r\n            e = e + 10 | 0;\r\n            c[g >> 2] = e;\r\n            b[D >> 1] = a;\r\n            i = C;\r\n            return\r\n        }\r\n\r\n        function nc(a, d, f, g) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, j = 0, k = 0, l = 0, m = 0, n = 0;\r\n            n = i;\r\n            i = i + 16 | 0;\r\n            k = n + 2 | 0;\r\n            m = n;\r\n            l = a + 176 | 0;\r\n            j = (e[l >> 1] | 0) + 1 | 0;\r\n            j = (j & 65535 | 0) == 8 ? 0 : j & 65535;\r\n            b[l >> 1] = j;\r\n            j = a + ((j << 16 >> 16) * 10 << 1) | 0;\r\n            h = j + 20 | 0;\r\n            do {\r\n                b[j >> 1] = b[d >> 1] | 0;\r\n                j = j + 2 | 0;\r\n                d = d + 2 | 0\r\n            } while ((j | 0) < (h | 0));\r\n            d = 0;\r\n            h = 160;\r\n            while (1) {\r\n                j = b[f >> 1] | 0;\r\n                d = (Z(j << 1, j) | 0) + d | 0;\r\n                if ((d | 0) < 0) {\r\n                    d = 2147483647;\r\n                    break\r\n                }\r\n                h = h + -1 << 16 >> 16;\r\n                if (!(h << 16 >> 16)) break; else f = f + 2 | 0\r\n            }\r\n            de(d, k, m, g);\r\n            d = b[k >> 1] | 0;\r\n            k = d << 16 >> 16;\r\n            f = k << 10;\r\n            if ((f | 0) != (k << 26 >> 16 | 0)) {\r\n                c[g >> 2] = 1;\r\n                f = d << 16 >> 16 > 0 ? 32767 : -32768\r\n            }\r\n            b[a + 160 + (b[l >> 1] << 1) >> 1] = (((b[m >> 1] | 0) >>> 5) + f << 16) + -558432256 >> 17;\r\n            i = n;\r\n            return\r\n        }\r\n\r\n        function oc(a, d, e, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, i = 0;\r\n            h = a + 190 | 0;\r\n            i = Rd(b[h >> 1] | 0, 1, f) | 0;\r\n            b[h >> 1] = i;\r\n            g = a + 188 | 0;\r\n            do if (!(d << 16 >> 16)) {\r\n                a = b[g >> 1] | 0;\r\n                if (!(a << 16 >> 16)) {\r\n                    b[h >> 1] = 0;\r\n                    c[e >> 2] = 8;\r\n                    a = 1;\r\n                    break\r\n                }\r\n                h = (a & 65535) + 65535 & 65535;\r\n                b[g >> 1] = h;\r\n                if ((Rd(i, h, f) | 0) << 16 >> 16 < 30) {\r\n                    c[e >> 2] = 8;\r\n                    a = 0\r\n                } else a = 0\r\n            } else {\r\n                b[g >> 1] = 7;\r\n                a = 0\r\n            } while (0);\r\n            return a | 0\r\n        }\r\n\r\n        function pc(a, b, c, d, e, f, g, h) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            if (!(f << 16 >> 16)) {\r\n                f = a << 16 >> 16;\r\n                if (((f << 16) + -5570560 | 0) < 65536) {\r\n                    b = (f * 3 | 0) + -58 + (b << 16 >> 16) | 0;\r\n                    b = b & 65535;\r\n                    return b | 0\r\n                } else {\r\n                    b = f + 112 | 0;\r\n                    b = b & 65535;\r\n                    return b | 0\r\n                }\r\n            }\r\n            if (!(g << 16 >> 16)) {\r\n                h = (a & 65535) - (d & 65535) << 16;\r\n                b = (b << 16 >> 16) + 2 + (h >> 15) + (h >> 16) | 0;\r\n                b = b & 65535;\r\n                return b | 0\r\n            }\r\n            d = d << 16 >> 16;\r\n            d = (((c & 65535) - d << 16) + -327680 | 0) > 0 ? d + 5 & 65535 : c;\r\n            e = e << 16 >> 16;\r\n            c = a << 16 >> 16;\r\n            d = (((e - (d & 65535) << 16) + -262144 | 0) > 0 ? e + 65532 & 65535 : d) << 16 >> 16;\r\n            e = d * 196608 | 0;\r\n            a = e + -393216 >> 16;\r\n            f = ((b & 65535) << 16) + (c * 196608 | 0) >> 16;\r\n            if (!(a - f & 32768)) {\r\n                b = c + 5 - d | 0;\r\n                b = b & 65535;\r\n                return b | 0\r\n            }\r\n            if ((e + 196608 >> 16 | 0) > (f | 0)) {\r\n                b = f + 3 - a | 0;\r\n                b = b & 65535;\r\n                return b | 0\r\n            } else {\r\n                b = c + 11 - d | 0;\r\n                b = b & 65535;\r\n                return b | 0\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function qc(a, b, c, d, e) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            e = a << 16 >> 16;\r\n            do if (!(d << 16 >> 16)) if (a << 16 >> 16 < 95) {\r\n                e = ((e * 393216 | 0) + -6881280 >> 16) + (b << 16 >> 16) | 0;\r\n                break\r\n            } else {\r\n                e = e + 368 | 0;\r\n                break\r\n            } else e = ((((e - (c & 65535) | 0) * 393216 | 0) + 196608 | 0) >>> 16) + (b & 65535) | 0; while (0);\r\n            return e & 65535 | 0\r\n        }\r\n\r\n        function rc(d, f, g, h) {\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0;\r\n            i = c[h + 96 >> 2] | 0;\r\n            if (d >>> 0 < 8) {\r\n                m = (c[h + 100 >> 2] | 0) + (d << 2) | 0;\r\n                l = c[m >> 2] | 0;\r\n                a[g >> 0] = b[f + (b[l >> 1] << 1) >> 1] << 4 | d | b[f + (b[l + 2 >> 1] << 1) >> 1] << 5 | b[f + (b[l + 4 >> 1] << 1) >> 1] << 6 | b[f + (b[l + 6 >> 1] << 1) >> 1] << 7;\r\n                l = i + (d << 1) | 0;\r\n                h = b[l >> 1] | 0;\r\n                if ((h + -7 | 0) > 4) {\r\n                    i = 4;\r\n                    k = 4;\r\n                    d = 1;\r\n                    while (1) {\r\n                        n = b[f + (b[(c[m >> 2] | 0) + (i << 1) >> 1] << 1) >> 1] | 0;\r\n                        h = g + (d << 16 >> 16) | 0;\r\n                        a[h >> 0] = n;\r\n                        n = e[f + (b[(c[m >> 2] | 0) + ((k | 1) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 1 | n & 65535;\r\n                        a[h >> 0] = n;\r\n                        n = e[f + (b[(c[m >> 2] | 0) + ((k | 2) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 2 | n;\r\n                        a[h >> 0] = n;\r\n                        n = e[f + (b[(c[m >> 2] | 0) + ((k | 3) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 3 | n;\r\n                        a[h >> 0] = n;\r\n                        n = e[f + (b[(c[m >> 2] | 0) + (k + 4 << 16 >> 16 << 16 >> 16 << 1) >> 1] << 1) >> 1] << 4 | n;\r\n                        a[h >> 0] = n;\r\n                        n = e[f + (b[(c[m >> 2] | 0) + (k + 5 << 16 >> 16 << 16 >> 16 << 1) >> 1] << 1) >> 1] << 5 | n;\r\n                        a[h >> 0] = n;\r\n                        n = e[f + (b[(c[m >> 2] | 0) + (k + 6 << 16 >> 16 << 16 >> 16 << 1) >> 1] << 1) >> 1] << 6 | n;\r\n                        a[h >> 0] = n;\r\n                        j = k + 8 << 16 >> 16;\r\n                        d = d + 1 << 16 >> 16;\r\n                        a[h >> 0] = e[f + (b[(c[m >> 2] | 0) + (k + 7 << 16 >> 16 << 16 >> 16 << 1) >> 1] << 1) >> 1] << 7 | n;\r\n                        i = j << 16 >> 16;\r\n                        h = b[l >> 1] | 0;\r\n                        if ((i | 0) >= (h + -7 | 0)) break; else k = j\r\n                    }\r\n                } else {\r\n                    j = 4;\r\n                    d = 1\r\n                }\r\n                l = h + 4 & 7;\r\n                if (!l) return;\r\n                i = g + (d << 16 >> 16) | 0;\r\n                a[i >> 0] = 0;\r\n                h = 0;\r\n                k = 0;\r\n                d = 0;\r\n                while (1) {\r\n                    k = (e[f + (b[(c[m >> 2] | 0) + (j << 16 >> 16 << 1) >> 1] << 1) >> 1] & 255) << h | k & 255;\r\n                    a[i >> 0] = k;\r\n                    d = d + 1 << 16 >> 16;\r\n                    h = d << 16 >> 16;\r\n                    if ((h | 0) >= (l | 0)) break; else j = j + 1 << 16 >> 16\r\n                }\r\n                return\r\n            }\r\n            if ((d | 0) == 15) {\r\n                a[g >> 0] = 15;\r\n                return\r\n            }\r\n            a[g >> 0] = b[f >> 1] << 4 | d | b[f + 2 >> 1] << 5 | b[f + 4 >> 1] << 6 | b[f + 6 >> 1] << 7;\r\n            h = i + (d << 1) | 0;\r\n            d = b[h >> 1] | 0;\r\n            i = ((d & 65535) << 16) + 262144 >> 16;\r\n            m = i & -8;\r\n            k = (m + 524281 | 0) >>> 3 & 65535;\r\n            if (k << 16 >> 16 > 0) {\r\n                i = ((i & -8) + 524281 | 0) >>> 3;\r\n                l = ((i << 3) + 524280 & 524280) + 12 | 0;\r\n                j = 1;\r\n                d = f + 8 | 0;\r\n                while (1) {\r\n                    a[g + (j << 16 >> 16) >> 0] = e[d + 2 >> 1] << 1 | e[d >> 1] | e[d + 4 >> 1] << 2 | e[d + 6 >> 1] << 3 | e[d + 8 >> 1] << 4 | e[d + 10 >> 1] << 5 | e[d + 12 >> 1] << 6 | e[d + 14 >> 1] << 7;\r\n                    if (k << 16 >> 16 > 1) {\r\n                        k = k + -1 << 16 >> 16;\r\n                        j = j + 1 << 16 >> 16;\r\n                        d = d + 16 | 0\r\n                    } else break\r\n                }\r\n                d = b[h >> 1] | 0;\r\n                j = (i << 16) + 65536 >> 16\r\n            } else {\r\n                l = 4;\r\n                j = 1\r\n            }\r\n            d = (0 - m | 4) + (d & 65535) << 16;\r\n            k = d >> 16;\r\n            if (!k) return;\r\n            j = g + j | 0;\r\n            a[j >> 0] = 0;\r\n            if ((d | 0) > 0) {\r\n                d = 0;\r\n                i = 0;\r\n                h = 0\r\n            } else return;\r\n            do {\r\n                i = i & 255 | b[f + (l + d << 1) >> 1] << d;\r\n                a[j >> 0] = i;\r\n                h = h + 1 << 16 >> 16;\r\n                d = h << 16 >> 16\r\n            } while ((d | 0) < (k | 0));\r\n            return\r\n        }\r\n\r\n        function sc(d, f, g, h) {\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;\r\n            o = c[h + 100 >> 2] | 0;\r\n            n = c[h + 96 >> 2] | 0;\r\n            a[g >> 0] = d & 15;\r\n            n = n + (d << 1) | 0;\r\n            i = b[n >> 1] | 0;\r\n            if (d >>> 0 >= 8) {\r\n                l = ((i & 65535) << 16) + -458752 | 0;\r\n                if ((l | 0) > 0) {\r\n                    m = 1;\r\n                    k = f;\r\n                    while (1) {\r\n                        f = k + 16 | 0;\r\n                        h = m + 1 << 16 >> 16;\r\n                        a[g + (m << 16 >> 16) >> 0] = e[k + 14 >> 1] | e[k + 12 >> 1] << 1 | ((e[k + 2 >> 1] << 6 | e[k >> 1] << 7 | e[k + 4 >> 1] << 5 | e[k + 6 >> 1] << 4) & 240 | e[k + 8 >> 1] << 3 | e[k + 10 >> 1] << 2) & 252;\r\n                        l = l + -524288 & -65536;\r\n                        if ((l | 0) <= 0) break; else {\r\n                            m = h;\r\n                            k = f\r\n                        }\r\n                    }\r\n                    i = b[n >> 1] | 0\r\n                } else h = 1;\r\n                m = i & 7;\r\n                i = g + (h << 16 >> 16) | 0;\r\n                a[i >> 0] = 0;\r\n                if (!m) return; else {\r\n                    j = 0;\r\n                    k = 0;\r\n                    l = 0;\r\n                    h = f\r\n                }\r\n                while (1) {\r\n                    k = k & 255 | b[h >> 1] << 7 - j;\r\n                    a[i >> 0] = k;\r\n                    l = l + 1 << 16 >> 16;\r\n                    j = l << 16 >> 16;\r\n                    if ((j | 0) >= (m | 0)) break; else h = h + 2 | 0\r\n                }\r\n                return\r\n            }\r\n            k = i << 16 >> 16;\r\n            if (i << 16 >> 16 > 7) {\r\n                i = o + (d << 2) | 0;\r\n                h = 0;\r\n                m = 0;\r\n                j = 1;\r\n                while (1) {\r\n                    p = e[f + (b[(c[i >> 2] | 0) + (h << 1) >> 1] << 1) >> 1] << 7;\r\n                    k = g + (j << 16 >> 16) | 0;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 1) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 6 | p;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 2) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 5 | p;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 3) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 4 | p;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 4) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 3 | p & 240;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 5) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 2 | p;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 6) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 1 | p;\r\n                    a[k >> 0] = p;\r\n                    l = m + 8 << 16 >> 16;\r\n                    j = j + 1 << 16 >> 16;\r\n                    a[k >> 0] = p & 254 | e[f + (b[(c[i >> 2] | 0) + ((m | 7) << 16 >> 16 << 1) >> 1] << 1) >> 1];\r\n                    h = l << 16 >> 16;\r\n                    k = b[n >> 1] | 0;\r\n                    if ((h | 0) >= (k + -7 | 0)) break; else m = l\r\n                }\r\n            } else {\r\n                l = 0;\r\n                j = 1\r\n            }\r\n            n = k & 7;\r\n            m = g + (j << 16 >> 16) | 0;\r\n            a[m >> 0] = 0;\r\n            if (!n) return;\r\n            j = o + (d << 2) | 0;\r\n            i = 0;\r\n            h = 0;\r\n            k = 0;\r\n            while (1) {\r\n                h = (e[f + (b[(c[j >> 2] | 0) + (l << 16 >> 16 << 1) >> 1] << 1) >> 1] & 255) << 7 - i | h & 255;\r\n                a[m >> 0] = h;\r\n                k = k + 1 << 16 >> 16;\r\n                i = k << 16 >> 16;\r\n                if ((i | 0) >= (n | 0)) break; else l = l + 1 << 16 >> 16\r\n            }\r\n            return\r\n        }\r\n\r\n        function tc(d, f, g, h) {\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;\r\n            o = c[h + 100 >> 2] | 0;\r\n            n = c[h + 96 >> 2] | 0;\r\n            a[g >> 0] = d << 3;\r\n            n = n + (d << 1) | 0;\r\n            i = b[n >> 1] | 0;\r\n            if (d >>> 0 >= 8) {\r\n                l = ((i & 65535) << 16) + -458752 | 0;\r\n                if ((l | 0) > 0) {\r\n                    m = 1;\r\n                    k = f;\r\n                    while (1) {\r\n                        f = k + 16 | 0;\r\n                        h = m + 1 << 16 >> 16;\r\n                        a[g + (m << 16 >> 16) >> 0] = e[k + 14 >> 1] | e[k + 12 >> 1] << 1 | ((e[k + 2 >> 1] << 6 | e[k >> 1] << 7 | e[k + 4 >> 1] << 5 | e[k + 6 >> 1] << 4) & 240 | e[k + 8 >> 1] << 3 | e[k + 10 >> 1] << 2) & 252;\r\n                        l = l + -524288 & -65536;\r\n                        if ((l | 0) <= 0) break; else {\r\n                            m = h;\r\n                            k = f\r\n                        }\r\n                    }\r\n                    i = b[n >> 1] | 0\r\n                } else h = 1;\r\n                m = i & 7;\r\n                i = g + (h << 16 >> 16) | 0;\r\n                a[i >> 0] = 0;\r\n                if (!m) return; else {\r\n                    j = 0;\r\n                    k = 0;\r\n                    l = 0;\r\n                    h = f\r\n                }\r\n                while (1) {\r\n                    k = k & 255 | b[h >> 1] << 7 - j;\r\n                    a[i >> 0] = k;\r\n                    l = l + 1 << 16 >> 16;\r\n                    j = l << 16 >> 16;\r\n                    if ((j | 0) >= (m | 0)) break; else h = h + 2 | 0\r\n                }\r\n                return\r\n            }\r\n            k = i << 16 >> 16;\r\n            if (i << 16 >> 16 > 7) {\r\n                i = o + (d << 2) | 0;\r\n                h = 0;\r\n                m = 0;\r\n                j = 1;\r\n                while (1) {\r\n                    p = e[f + (b[(c[i >> 2] | 0) + (h << 1) >> 1] << 1) >> 1] << 7;\r\n                    k = g + (j << 16 >> 16) | 0;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 1) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 6 | p;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 2) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 5 | p;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 3) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 4 | p;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 4) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 3 | p & 240;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 5) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 2 | p;\r\n                    a[k >> 0] = p;\r\n                    p = e[f + (b[(c[i >> 2] | 0) + ((m | 6) << 16 >> 16 << 1) >> 1] << 1) >> 1] << 1 | p;\r\n                    a[k >> 0] = p;\r\n                    l = m + 8 << 16 >> 16;\r\n                    j = j + 1 << 16 >> 16;\r\n                    a[k >> 0] = p & 254 | e[f + (b[(c[i >> 2] | 0) + ((m | 7) << 16 >> 16 << 1) >> 1] << 1) >> 1];\r\n                    h = l << 16 >> 16;\r\n                    k = b[n >> 1] | 0;\r\n                    if ((h | 0) >= (k + -7 | 0)) break; else m = l\r\n                }\r\n            } else {\r\n                l = 0;\r\n                j = 1\r\n            }\r\n            n = k & 7;\r\n            m = g + (j << 16 >> 16) | 0;\r\n            a[m >> 0] = 0;\r\n            if (!n) return;\r\n            j = o + (d << 2) | 0;\r\n            i = 0;\r\n            h = 0;\r\n            k = 0;\r\n            while (1) {\r\n                h = (e[f + (b[(c[j >> 2] | 0) + (l << 16 >> 16 << 1) >> 1] << 1) >> 1] & 255) << 7 - i | h & 255;\r\n                a[m >> 0] = h;\r\n                k = k + 1 << 16 >> 16;\r\n                i = k << 16 >> 16;\r\n                if ((i | 0) >= (n | 0)) break; else l = l + 1 << 16 >> 16\r\n            }\r\n            return\r\n        }\r\n\r\n        function uc(a) {\r\n            a = a | 0;\r\n            var d = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(16) | 0;\r\n            if (!d) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            ;b[d >> 1] = 0;\r\n            b[d + 2 >> 1] = 0;\r\n            b[d + 4 >> 1] = 0;\r\n            b[d + 6 >> 1] = 0;\r\n            b[d + 8 >> 1] = 0;\r\n            b[d + 10 >> 1] = 0;\r\n            b[d + 12 >> 1] = 0;\r\n            b[d + 14 >> 1] = 0;\r\n            c[a >> 2] = d;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function vc(a) {\r\n            a = a | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            ;b[a >> 1] = 0;\r\n            b[a + 2 >> 1] = 0;\r\n            b[a + 4 >> 1] = 0;\r\n            b[a + 6 >> 1] = 0;\r\n            b[a + 8 >> 1] = 0;\r\n            b[a + 10 >> 1] = 0;\r\n            b[a + 12 >> 1] = 0;\r\n            b[a + 14 >> 1] = 0;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function wc(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function xc(a, d, e, f, g) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, i = 0, j = 0, k = 0, l = 0;\r\n            j = d << 16 >> 16 < 2722 ? 0 : d << 16 >> 16 < 5444 ? 1 : 2;\r\n            i = Ee(e, 1, g) | 0;\r\n            l = a + 4 | 0;\r\n            if (!(e << 16 >> 16 > 200 ? i << 16 >> 16 > (b[l >> 1] | 0) : 0)) {\r\n                i = b[a >> 1] | 0;\r\n                if (i << 16 >> 16) {\r\n                    h = i + -1 << 16 >> 16;\r\n                    b[a >> 1] = h;\r\n                    h = h << 16 >> 16 != 0;\r\n                    k = 5\r\n                }\r\n            } else {\r\n                b[a >> 1] = 8;\r\n                h = 1;\r\n                k = 5\r\n            }\r\n            if ((k | 0) == 5) if ((j & 65535) < 2 & h) j = (j & 65535) + 1 & 65535;\r\n            k = a + 6 | 0;\r\n            b[k >> 1] = d;\r\n            h = Zd(k, 5) | 0;\r\n            if (!(j << 16 >> 16 != 0 | h << 16 >> 16 > 5443)) if (h << 16 >> 16 < 0) h = 16384; else {\r\n                h = h << 16 >> 16;\r\n                h = (((h << 18 >> 18 | 0) == (h | 0) ? h << 2 : h >>> 15 ^ 32767) << 16 >> 16) * 24660 >> 15;\r\n                if ((h | 0) > 32767) {\r\n                    c[g >> 2] = 1;\r\n                    h = 32767\r\n                }\r\n                h = 16384 - h & 65535\r\n            } else h = 0;\r\n            i = a + 2 | 0;\r\n            if (!(b[i >> 1] | 0)) h = De(h, 1, g) | 0;\r\n            b[f >> 1] = h;\r\n            b[i >> 1] = h;\r\n            b[l >> 1] = e;\r\n            f = a + 12 | 0;\r\n            b[a + 14 >> 1] = b[f >> 1] | 0;\r\n            e = a + 10 | 0;\r\n            b[f >> 1] = b[e >> 1] | 0;\r\n            a = a + 8 | 0;\r\n            b[e >> 1] = b[a >> 1] | 0;\r\n            b[a >> 1] = b[k >> 1] | 0;\r\n            return\r\n        }\r\n\r\n        function yc(a) {\r\n            a = a | 0;\r\n            var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(68) | 0;\r\n            f = d;\r\n            if (!d) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[d + 28 >> 2] = 0;\r\n            g = d + 64 | 0;\r\n            c[g >> 2] = 0;\r\n            h = d + 32 | 0;\r\n            if (((Ud(h) | 0) << 16 >> 16 == 0 ? (i = d + 48 | 0, (Ud(i) | 0) << 16 >> 16 == 0) : 0) ? (uc(g) | 0) << 16 >> 16 == 0 : 0) {\r\n                e = d + 32 | 0;\r\n                do {\r\n                    b[d >> 1] = 0;\r\n                    d = d + 2 | 0\r\n                } while ((d | 0) < (e | 0));\r\n                Ud(h) | 0;\r\n                Ud(i) | 0;\r\n                vc(c[g >> 2] | 0) | 0;\r\n                c[a >> 2] = f;\r\n                a = 0;\r\n                return a | 0\r\n            }\r\n            wc(g);\r\n            Ke(d);\r\n            a = -1;\r\n            return a | 0\r\n        }\r\n\r\n        function zc(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            wc(b + 64 | 0);\r\n            Ke(c[a >> 2] | 0);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function Ac(a) {\r\n            a = a | 0;\r\n            var d = 0, e = 0, f = 0;\r\n            if (!a) {\r\n                f = -1;\r\n                return f | 0\r\n            }\r\n            d = a + 32 | 0;\r\n            e = a;\r\n            f = e + 32 | 0;\r\n            do {\r\n                b[e >> 1] = 0;\r\n                e = e + 2 | 0\r\n            } while ((e | 0) < (f | 0));\r\n            Ud(d) | 0;\r\n            Ud(a + 48 | 0) | 0;\r\n            vc(c[a + 64 >> 2] | 0) | 0;\r\n            f = 0;\r\n            return f | 0\r\n        }\r\n\r\n        function Bc(a, d, f, g, h, j, k, l, m, n, o, p, q, r, s, t, u, v, w) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            p = p | 0;\r\n            q = q | 0;\r\n            r = r | 0;\r\n            s = s | 0;\r\n            t = t | 0;\r\n            u = u | 0;\r\n            v = v | 0;\r\n            w = w | 0;\r\n            var x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0;\r\n            H = i;\r\n            i = i + 48 | 0;\r\n            y = H + 34 | 0;\r\n            A = H + 32 | 0;\r\n            C = H + 30 | 0;\r\n            B = H + 28 | 0;\r\n            z = H + 18 | 0;\r\n            x = H + 8 | 0;\r\n            D = H + 6 | 0;\r\n            E = H + 4 | 0;\r\n            F = H + 2 | 0;\r\n            G = H;\r\n            if (d) {\r\n                o = a + 32 | 0;\r\n                Vd(o, d, h, y, A, D, E, w);\r\n                do if ((d | 0) != 7) {\r\n                    Vb(d, j, k, l, m, n, z, x, G, F, w);\r\n                    if ((d | 0) == 5) {\r\n                        ld(c[a + 64 >> 2] | 0, f, g, h, z, x, b[D >> 1] | 0, b[E >> 1] | 0, b[y >> 1] | 0, b[A >> 1] | 0, 40, b[G >> 1] | 0, b[F >> 1] | 0, p, s, t, C, B, u, v, w);\r\n                        break\r\n                    } else {\r\n                        a = od(d, b[y >> 1] | 0, b[A >> 1] | 0, z, x, p, s, t, C, B, v, w) | 0;\r\n                        j = c[u >> 2] | 0;\r\n                        c[u >> 2] = j + 2;\r\n                        b[j >> 1] = a;\r\n                        break\r\n                    }\r\n                } else {\r\n                    b[t >> 1] = Cc(k, m, w) | 0;\r\n                    a = md(7, b[y >> 1] | 0, b[A >> 1] | 0, t, C, B, c[v + 68 >> 2] | 0, w) | 0;\r\n                    j = c[u >> 2] | 0;\r\n                    c[u >> 2] = j + 2;\r\n                    b[j >> 1] = a\r\n                } while (0);\r\n                Wd(o, b[C >> 1] | 0, b[B >> 1] | 0);\r\n                i = H;\r\n                return\r\n            }\r\n            if (!(o << 16 >> 16)) {\r\n                Vd(a + 48 | 0, 0, h, y, A, D, E, w);\r\n                Vb(0, j, k, l, m, n, z, x, G, F, w);\r\n                Wb(j, D, E, w);\r\n                j = jd(a + 32 | 0, b[a >> 1] | 0, b[a + 2 >> 1] | 0, a + 8 | 0, a + 18 | 0, b[a + 4 >> 1] | 0, b[a + 6 >> 1] | 0, h, b[y >> 1] | 0, b[A >> 1] | 0, x, z, b[D >> 1] | 0, b[E >> 1] | 0, p, q, r, s, t, w) | 0;\r\n                b[c[a + 28 >> 2] >> 1] = j;\r\n                i = H;\r\n                return\r\n            }\r\n            o = c[u >> 2] | 0;\r\n            c[u >> 2] = o + 2;\r\n            c[a + 28 >> 2] = o;\r\n            o = a + 48 | 0;\r\n            f = a + 32 | 0;\r\n            q = f;\r\n            q = e[q >> 1] | e[q + 2 >> 1] << 16;\r\n            f = f + 4 | 0;\r\n            f = e[f >> 1] | e[f + 2 >> 1] << 16;\r\n            u = o;\r\n            r = u;\r\n            b[r >> 1] = q;\r\n            b[r + 2 >> 1] = q >>> 16;\r\n            u = u + 4 | 0;\r\n            b[u >> 1] = f;\r\n            b[u + 2 >> 1] = f >>> 16;\r\n            u = a + 40 | 0;\r\n            f = u;\r\n            f = e[f >> 1] | e[f + 2 >> 1] << 16;\r\n            u = u + 4 | 0;\r\n            u = e[u >> 1] | e[u + 2 >> 1] << 16;\r\n            r = a + 56 | 0;\r\n            q = r;\r\n            b[q >> 1] = f;\r\n            b[q + 2 >> 1] = f >>> 16;\r\n            r = r + 4 | 0;\r\n            b[r >> 1] = u;\r\n            b[r + 2 >> 1] = u >>> 16;\r\n            r = a + 2 | 0;\r\n            Vd(o, 0, h, a, r, D, E, w);\r\n            Vb(0, j, k, l, m, n, a + 18 | 0, a + 8 | 0, G, F, w);\r\n            l = (e[F >> 1] | 0) + 1 | 0;\r\n            u = b[G >> 1] | 0;\r\n            q = l << 16 >> 16;\r\n            if ((l & 65535) << 16 >> 16 < 0) {\r\n                v = 0 - q << 16;\r\n                if ((v | 0) < 983040) v = u << 16 >> 16 >> (v >> 16) & 65535; else v = 0\r\n            } else {\r\n                u = u << 16 >> 16;\r\n                v = u << q;\r\n                if ((v << 16 >> 16 >> q | 0) == (u | 0)) v = v & 65535; else v = (u >>> 15 ^ 32767) & 65535\r\n            }\r\n            b[t >> 1] = v;\r\n            Wb(j, a + 4 | 0, a + 6 | 0, w);\r\n            id(o, b[a >> 1] | 0, b[r >> 1] | 0, b[F >> 1] | 0, b[G >> 1] | 0, w);\r\n            i = H;\r\n            return\r\n        }\r\n\r\n        function Cc(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var e = 0, f = 0, g = 0;\r\n            f = 10;\r\n            d = a;\r\n            e = c;\r\n            a = 0;\r\n            while (1) {\r\n                a = (Z(b[e >> 1] >> 1, b[d >> 1] | 0) | 0) + a | 0;\r\n                a = a + (Z(b[e + 2 >> 1] >> 1, b[d + 2 >> 1] | 0) | 0) | 0;\r\n                a = a + (Z(b[e + 4 >> 1] >> 1, b[d + 4 >> 1] | 0) | 0) | 0;\r\n                a = a + (Z(b[e + 6 >> 1] >> 1, b[d + 6 >> 1] | 0) | 0) | 0;\r\n                f = f + -1 << 16 >> 16;\r\n                if (!(f << 16 >> 16)) break; else {\r\n                    d = d + 8 | 0;\r\n                    e = e + 8 | 0\r\n                }\r\n            }\r\n            d = a << 1;\r\n            f = pe(d | 1) | 0;\r\n            g = f << 16 >> 16;\r\n            d = (f << 16 >> 16 < 17 ? d >> 17 - g : d << g + -17) & 65535;\r\n            if (d << 16 >> 16 < 1) {\r\n                c = 0;\r\n                return c | 0\r\n            } else {\r\n                f = 20;\r\n                e = c;\r\n                a = 0\r\n            }\r\n            while (1) {\r\n                c = b[e >> 1] >> 1;\r\n                c = ((Z(c, c) | 0) >>> 2) + a | 0;\r\n                a = b[e + 2 >> 1] >> 1;\r\n                a = c + ((Z(a, a) | 0) >>> 2) | 0;\r\n                f = f + -1 << 16 >> 16;\r\n                if (!(f << 16 >> 16)) break; else e = e + 4 | 0\r\n            }\r\n            a = a << 3;\r\n            f = pe(a) | 0;\r\n            c = f << 16 >> 16;\r\n            d = Td(d, (f << 16 >> 16 < 16 ? a >> 16 - c : a << c + -16) & 65535) | 0;\r\n            c = (g << 16) + 327680 - (c << 16) | 0;\r\n            a = c >> 16;\r\n            if ((c | 0) > 65536) a = d << 16 >> 16 >> a + -1; else a = d << 16 >> 16 << 1 - a;\r\n            c = a & 65535;\r\n            return c | 0\r\n        }\r\n\r\n        function Dc(a, d, e, f, g, h) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;\r\n            c[h >> 2] = 0;\r\n            m = g << 16 >> 16;\r\n            k = m >>> 2 & 65535;\r\n            o = k << 16 >> 16 == 0;\r\n            if (o) j = 0; else {\r\n                l = k;\r\n                i = e;\r\n                j = 0;\r\n                while (1) {\r\n                    p = b[i >> 1] | 0;\r\n                    p = (Z(p, p) | 0) + j | 0;\r\n                    j = b[i + 2 >> 1] | 0;\r\n                    j = p + (Z(j, j) | 0) | 0;\r\n                    p = b[i + 4 >> 1] | 0;\r\n                    p = j + (Z(p, p) | 0) | 0;\r\n                    j = b[i + 6 >> 1] | 0;\r\n                    j = p + (Z(j, j) | 0) | 0;\r\n                    l = l + -1 << 16 >> 16;\r\n                    if (!(l << 16 >> 16)) break; else i = i + 8 | 0\r\n                }\r\n            }\r\n            if (!((j >>> 31 ^ 1) & (j | 0) < 1073741824)) {\r\n                j = m >>> 1 & 65535;\r\n                if (!(j << 16 >> 16)) j = 1; else {\r\n                    i = j;\r\n                    l = e;\r\n                    j = 0;\r\n                    while (1) {\r\n                        p = b[l >> 1] >> 2;\r\n                        p = (Z(p, p) | 0) + j | 0;\r\n                        j = b[l + 2 >> 1] >> 2;\r\n                        j = p + (Z(j, j) | 0) | 0;\r\n                        i = i + -1 << 16 >> 16;\r\n                        if (!(i << 16 >> 16)) break; else l = l + 4 | 0\r\n                    }\r\n                    j = j << 1 | 1\r\n                }\r\n                p = (pe(j) | 0) << 16 >> 16;\r\n                n = p + 65532 & 65535;\r\n                p = Ce(j << p, h) | 0\r\n            } else {\r\n                m = j << 1 | 1;\r\n                p = pe(m) | 0;\r\n                n = p;\r\n                p = Ce(m << (p << 16 >> 16), h) | 0\r\n            }\r\n            c[h >> 2] = 0;\r\n            do if (!(g << 16 >> 16)) {\r\n                j = 1;\r\n                q = 14\r\n            } else {\r\n                m = g;\r\n                l = d;\r\n                j = e;\r\n                g = 0;\r\n                while (1) {\r\n                    r = Z(b[j >> 1] | 0, b[l >> 1] | 0) | 0;\r\n                    i = r + g | 0;\r\n                    if ((r ^ g | 0) > 0 & (i ^ g | 0) < 0) break;\r\n                    m = m + -1 << 16 >> 16;\r\n                    if (!(m << 16 >> 16)) {\r\n                        q = 13;\r\n                        break\r\n                    } else {\r\n                        l = l + 2 | 0;\r\n                        j = j + 2 | 0;\r\n                        g = i\r\n                    }\r\n                }\r\n                if ((q | 0) == 13) {\r\n                    j = i << 1 | 1;\r\n                    q = 14;\r\n                    break\r\n                }\r\n                c[h >> 2] = 1;\r\n                if (o) j = 1; else {\r\n                    j = d;\r\n                    i = 0;\r\n                    while (1) {\r\n                        i = (Z(b[e >> 1] >> 2, b[j >> 1] | 0) | 0) + i | 0;\r\n                        i = i + (Z(b[e + 2 >> 1] >> 2, b[j + 2 >> 1] | 0) | 0) | 0;\r\n                        i = i + (Z(b[e + 4 >> 1] >> 2, b[j + 4 >> 1] | 0) | 0) | 0;\r\n                        i = i + (Z(b[e + 6 >> 1] >> 2, b[j + 6 >> 1] | 0) | 0) | 0;\r\n                        k = k + -1 << 16 >> 16;\r\n                        if (!(k << 16 >> 16)) break; else {\r\n                            j = j + 8 | 0;\r\n                            e = e + 8 | 0\r\n                        }\r\n                    }\r\n                    j = i << 1 | 1\r\n                }\r\n                e = (pe(j) | 0) << 16 >> 16;\r\n                i = e + 65532 & 65535;\r\n                e = Ce(j << e, h) | 0\r\n            } while (0);\r\n            if ((q | 0) == 14) {\r\n                e = pe(j) | 0;\r\n                i = e;\r\n                e = Ce(j << (e << 16 >> 16), h) | 0\r\n            }\r\n            b[f >> 1] = p;\r\n            j = n << 16 >> 16;\r\n            b[f + 2 >> 1] = 15 - j;\r\n            b[f + 4 >> 1] = e;\r\n            i = i << 16 >> 16;\r\n            b[f + 6 >> 1] = 15 - i;\r\n            if (e << 16 >> 16 < 4) {\r\n                r = 0;\r\n                return r | 0\r\n            }\r\n            i = De(Td(e << 16 >> 16 >>> 1 & 65535, p) | 0, i - j & 65535, h) | 0;\r\n            i = i << 16 >> 16 > 19661 ? 19661 : i;\r\n            if ((a | 0) != 7) {\r\n                r = i;\r\n                return r | 0\r\n            }\r\n            r = i & 65532;\r\n            return r | 0\r\n        }\r\n\r\n        function Ec(a, d, e, f, g, h, i) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            var j = 0, k = 0, l = 0, m = 0, n = 0, o = 0;\r\n            k = (f & 65535) + 65535 & 65535;\r\n            if (k << 16 >> 16 > g << 16 >> 16) {\r\n                n = f + -1 << 16 >> 16 << 16 >> 16;\r\n                f = -2147483648;\r\n                while (1) {\r\n                    l = c[a + (0 - n << 2) >> 2] | 0;\r\n                    j = l << 1;\r\n                    l = (j >> 1 | 0) == (l | 0) ? j : l >> 31 ^ 2147483647;\r\n                    j = c[a + (~n << 2) >> 2] | 0;\r\n                    m = l - j | 0;\r\n                    if (((m ^ l) & (l ^ j) | 0) < 0) {\r\n                        c[i >> 2] = 1;\r\n                        m = (l >>> 31) + 2147483647 | 0\r\n                    }\r\n                    l = c[a + (1 - n << 2) >> 2] | 0;\r\n                    j = m - l | 0;\r\n                    if (((j ^ m) & (l ^ m) | 0) < 0) {\r\n                        c[i >> 2] = 1;\r\n                        j = (m >>> 31) + 2147483647 | 0\r\n                    }\r\n                    m = Gc(j) | 0;\r\n                    f = (m | 0) < (f | 0) ? f : m;\r\n                    k = k + -1 << 16 >> 16;\r\n                    if (k << 16 >> 16 <= g << 16 >> 16) {\r\n                        g = f;\r\n                        break\r\n                    } else n = n + -1 | 0\r\n                }\r\n            } else g = -2147483648;\r\n            a = e << 16 >> 16 > 0;\r\n            if (a) {\r\n                f = 0;\r\n                j = d;\r\n                k = 0;\r\n                while (1) {\r\n                    m = b[j >> 1] | 0;\r\n                    m = Z(m, m) | 0;\r\n                    if ((m | 0) != 1073741824) {\r\n                        l = (m << 1) + k | 0;\r\n                        if ((m ^ k | 0) > 0 & (l ^ k | 0) < 0) {\r\n                            c[i >> 2] = 1;\r\n                            k = (k >>> 31) + 2147483647 | 0\r\n                        } else k = l\r\n                    } else {\r\n                        c[i >> 2] = 1;\r\n                        k = 2147483647\r\n                    }\r\n                    f = f + 1 << 16 >> 16;\r\n                    if (f << 16 >> 16 >= e << 16 >> 16) break; else j = j + 2 | 0\r\n                }\r\n                if (a) {\r\n                    a = 0;\r\n                    n = d;\r\n                    f = d + -2 | 0;\r\n                    j = 0;\r\n                    while (1) {\r\n                        m = Z(b[f >> 1] | 0, b[n >> 1] | 0) | 0;\r\n                        if ((m | 0) != 1073741824) {\r\n                            l = (m << 1) + j | 0;\r\n                            if ((m ^ j | 0) > 0 & (l ^ j | 0) < 0) {\r\n                                c[i >> 2] = 1;\r\n                                j = (j >>> 31) + 2147483647 | 0\r\n                            } else j = l\r\n                        } else {\r\n                            c[i >> 2] = 1;\r\n                            j = 2147483647\r\n                        }\r\n                        a = a + 1 << 16 >> 16;\r\n                        if (a << 16 >> 16 >= e << 16 >> 16) break; else {\r\n                            n = n + 2 | 0;\r\n                            f = f + 2 | 0\r\n                        }\r\n                    }\r\n                } else j = 0\r\n            } else {\r\n                k = 0;\r\n                j = 0\r\n            }\r\n            f = k << 1;\r\n            f = (f >> 1 | 0) == (k | 0) ? f : k >> 31 ^ 2147483647;\r\n            e = j << 1;\r\n            e = (e >> 1 | 0) == (j | 0) ? e : j >> 31 ^ 2147483647;\r\n            k = f - e | 0;\r\n            if (((k ^ f) & (e ^ f) | 0) < 0) {\r\n                c[i >> 2] = 1;\r\n                k = (f >>> 31) + 2147483647 | 0\r\n            }\r\n            a = Gc(k) | 0;\r\n            n = ((pe(g) | 0) & 65535) + 65535 | 0;\r\n            k = n << 16 >> 16;\r\n            if ((n & 65535) << 16 >> 16 > 0) {\r\n                f = g << k;\r\n                if ((f >> k | 0) != (g | 0)) f = g >> 31 ^ 2147483647\r\n            } else {\r\n                k = 0 - k << 16;\r\n                if ((k | 0) < 2031616) f = g >> (k >> 16); else f = 0\r\n            }\r\n            m = pe(a) | 0;\r\n            j = m << 16 >> 16;\r\n            if (m << 16 >> 16 > 0) {\r\n                k = a << j;\r\n                if ((k >> j | 0) == (a | 0)) o = 33; else {\r\n                    k = a >> 31 ^ 2147483647;\r\n                    o = 33\r\n                }\r\n            } else {\r\n                k = 0 - j << 16;\r\n                if ((k | 0) < 2031616) {\r\n                    k = a >> (k >> 16);\r\n                    o = 33\r\n                } else l = 0\r\n            }\r\n            if ((o | 0) == 33) if (k >>> 0 > 65535) l = Td(f >>> 16 & 65535, k >>> 16 & 65535) | 0; else l = 0;\r\n            k = m & 65535;\r\n            o = (n & 65535) - k | 0;\r\n            f = o & 65535;\r\n            if (!(o & 32768)) {\r\n                i = De(l, f, i) | 0;\r\n                b[h >> 1] = i;\r\n                return 0\r\n            }\r\n            if (f << 16 >> 16 != -32768) {\r\n                i = k - n | 0;\r\n                j = i << 16 >> 16;\r\n                if ((i & 65535) << 16 >> 16 < 0) {\r\n                    j = 0 - j << 16;\r\n                    if ((j | 0) >= 983040) {\r\n                        i = 0;\r\n                        b[h >> 1] = i;\r\n                        return 0\r\n                    }\r\n                    i = l << 16 >> 16 >> (j >> 16) & 65535;\r\n                    b[h >> 1] = i;\r\n                    return 0\r\n                }\r\n            } else j = 32767;\r\n            f = l << 16 >> 16;\r\n            k = f << j;\r\n            if ((k << 16 >> 16 >> j | 0) == (f | 0)) {\r\n                i = k & 65535;\r\n                b[h >> 1] = i;\r\n                return 0\r\n            }\r\n            i = (f >>> 15 ^ 32767) & 65535;\r\n            b[h >> 1] = i;\r\n            return 0\r\n        }\r\n\r\n        function Fc(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            if (d << 16 >> 16) c = c << 16 >> 16 << 1 & 65535;\r\n            if (c << 16 >> 16 < 0) {\r\n                a = a + -2 | 0;\r\n                c = (c & 65535) + 6 & 65535\r\n            }\r\n            d = c << 16 >> 16;\r\n            e = 6 - d << 16 >> 16;\r\n            c = (Z(b[3468 + (d << 1) >> 1] | 0, b[a >> 1] | 0) | 0) + 16384 | 0;\r\n            c = c + (Z(b[3468 + (e << 1) >> 1] | 0, b[a + 2 >> 1] | 0) | 0) | 0;\r\n            c = c + (Z(b[3468 + (d + 6 << 1) >> 1] | 0, b[a + -2 >> 1] | 0) | 0) | 0;\r\n            c = c + (Z(b[3468 + (e + 6 << 1) >> 1] | 0, b[a + 4 >> 1] | 0) | 0) | 0;\r\n            c = (Z(b[3468 + (d + 12 << 1) >> 1] | 0, b[a + -4 >> 1] | 0) | 0) + c | 0;\r\n            c = c + (Z(b[3468 + (e + 12 << 1) >> 1] | 0, b[a + 6 >> 1] | 0) | 0) | 0;\r\n            d = c + (Z(b[3468 + (d + 18 << 1) >> 1] | 0, b[a + -6 >> 1] | 0) | 0) | 0;\r\n            return (d + (Z(b[3468 + (e + 18 << 1) >> 1] | 0, b[a + 8 >> 1] | 0) | 0) | 0) >>> 15 & 65535 | 0\r\n        }\r\n\r\n        function Gc(a) {\r\n            a = a | 0;\r\n            a = a - (a >>> 31) | 0;\r\n            return a >> 31 ^ a | 0\r\n        }\r\n\r\n        function Hc(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, i = 0, j = 0;\r\n            if (!(a << 16 >> 16)) return; else {\r\n                f = 3518;\r\n                g = 3538;\r\n                e = d\r\n            }\r\n            while (1) {\r\n                e = e + 2 | 0;\r\n                c = c + 2 | 0;\r\n                j = b[c >> 1] | 0;\r\n                i = b[f >> 1] | 0;\r\n                d = Z(i, j) | 0;\r\n                d = (d | 0) == 1073741824 ? 2147483647 : d << 1;\r\n                j = (Z(b[g >> 1] | 0, j) | 0) >> 15;\r\n                h = (j << 1) + d | 0;\r\n                h = (d ^ j | 0) > 0 & (h ^ d | 0) < 0 ? (d >>> 31) + 2147483647 | 0 : h;\r\n                i = (Z(i, b[e >> 1] | 0) | 0) >> 15;\r\n                d = h + (i << 1) | 0;\r\n                d = (h ^ i | 0) > 0 & (d ^ h | 0) < 0 ? (h >>> 31) + 2147483647 | 0 : d;\r\n                b[c >> 1] = d >>> 16;\r\n                b[e >> 1] = (d >>> 1) - (d >> 16 << 15);\r\n                a = a + -1 << 16 >> 16;\r\n                if (!(a << 16 >> 16)) break; else {\r\n                    f = f + 2 | 0;\r\n                    g = g + 2 | 0\r\n                }\r\n            }\r\n            return\r\n        }\r\n\r\n        function Ic(a, b, d) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            d = d | 0;\r\n            var e = 0, f = 0;\r\n            e = a & 65535;\r\n            f = e << 16;\r\n            b = b << 16 >> 16;\r\n            a = (b << 1) + f | 0;\r\n            if (!((b ^ f | 0) > 0 & (a ^ f | 0) < 0)) {\r\n                f = a;\r\n                return f | 0\r\n            }\r\n            c[d >> 2] = 1;\r\n            f = (e >>> 15) + 2147483647 | 0;\r\n            return f | 0\r\n        }\r\n\r\n        function Jc(a) {\r\n            a = a | 0;\r\n            var d = 0, e = 0, f = 0;\r\n            if (!a) {\r\n                f = -1;\r\n                return f | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(22) | 0;\r\n            if (!d) {\r\n                f = -1;\r\n                return f | 0\r\n            }\r\n            b[d >> 1] = 4096;\r\n            e = d + 2 | 0;\r\n            f = e + 20 | 0;\r\n            do {\r\n                b[e >> 1] = 0;\r\n                e = e + 2 | 0\r\n            } while ((e | 0) < (f | 0));\r\n            c[a >> 2] = d;\r\n            f = 0;\r\n            return f | 0\r\n        }\r\n\r\n        function Kc(a) {\r\n            a = a | 0;\r\n            var c = 0;\r\n            if (!a) {\r\n                c = -1;\r\n                return c | 0\r\n            }\r\n            b[a >> 1] = 4096;\r\n            a = a + 2 | 0;\r\n            c = a + 20 | 0;\r\n            do {\r\n                b[a >> 1] = 0;\r\n                a = a + 2 | 0\r\n            } while ((a | 0) < (c | 0));\r\n            c = 0;\r\n            return c | 0\r\n        }\r\n\r\n        function Lc(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function Mc(a, c, d, f, g, h) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0,\r\n                y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0;\r\n            K = i;\r\n            i = i + 96 | 0;\r\n            I = K + 66 | 0;\r\n            J = K + 44 | 0;\r\n            H = K + 22 | 0;\r\n            k = K;\r\n            D = c + 2 | 0;\r\n            G = d + 2 | 0;\r\n            F = (b[G >> 1] << 1) + (e[D >> 1] << 16) | 0;\r\n            j = Gc(F) | 0;\r\n            j = ic(j, b[c >> 1] | 0, b[d >> 1] | 0, h) | 0;\r\n            if ((F | 0) > 0) j = Oc(j) | 0;\r\n            B = j >> 16;\r\n            b[g >> 1] = Ce(j, h) | 0;\r\n            v = j >> 20;\r\n            E = I + 2 | 0;\r\n            b[E >> 1] = v;\r\n            F = J + 2 | 0;\r\n            b[F >> 1] = (j >>> 5) - (v << 15);\r\n            v = Z(B, B) | 0;\r\n            v = (v | 0) == 1073741824 ? 2147483647 : v << 1;\r\n            B = (Z((j >>> 1) - (B << 15) << 16 >> 16, B) | 0) >> 15;\r\n            C = B << 1;\r\n            A = C + v | 0;\r\n            A = (B ^ v | 0) > 0 & (A ^ v | 0) < 0 ? (v >>> 31) + 2147483647 | 0 : A;\r\n            C = A + C | 0;\r\n            C = 2147483647 - (Gc((A ^ B | 0) > 0 & (C ^ A | 0) < 0 ? (A >>> 31) + 2147483647 | 0 : C) | 0) | 0;\r\n            A = C >> 16;\r\n            B = b[c >> 1] | 0;\r\n            v = Z(A, B) | 0;\r\n            v = (v | 0) == 1073741824 ? 2147483647 : v << 1;\r\n            B = (Z((C >>> 1) - (A << 15) << 16 >> 16, B) | 0) >> 15;\r\n            C = (B << 1) + v | 0;\r\n            C = (B ^ v | 0) > 0 & (C ^ v | 0) < 0 ? (v >>> 31) + 2147483647 | 0 : C;\r\n            A = (Z(b[d >> 1] | 0, A) | 0) >> 15;\r\n            v = C + (A << 1) | 0;\r\n            v = (C ^ A | 0) > 0 & (v ^ C | 0) < 0 ? (C >>> 31) + 2147483647 | 0 : v;\r\n            C = pe(v) | 0;\r\n            v = v << (C << 16 >> 16);\r\n            A = H + 2 | 0;\r\n            B = k + 2 | 0;\r\n            l = v;\r\n            v = (v >>> 1) - (v >> 16 << 15) | 0;\r\n            w = k + 4 | 0;\r\n            x = H + 4 | 0;\r\n            y = 2;\r\n            z = 2;\r\n            while (1) {\r\n                u = l >>> 16;\r\n                j = u & 65535;\r\n                r = v & 65535;\r\n                s = z + -1 | 0;\r\n                n = I + (s << 1) | 0;\r\n                t = J + (s << 1) | 0;\r\n                q = 1;\r\n                p = n;\r\n                o = t;\r\n                m = D;\r\n                k = G;\r\n                l = 0;\r\n                while (1) {\r\n                    L = b[m >> 1] | 0;\r\n                    M = ((Z(b[o >> 1] | 0, L) | 0) >> 15) + l | 0;\r\n                    l = b[p >> 1] | 0;\r\n                    l = M + (Z(l, L) | 0) + ((Z(l, b[k >> 1] | 0) | 0) >> 15) | 0;\r\n                    q = q + 1 << 16 >> 16;\r\n                    if ((q << 16 >> 16 | 0) >= (z | 0)) break; else {\r\n                        p = p + -2 | 0;\r\n                        o = o + -2 | 0;\r\n                        m = m + 2 | 0;\r\n                        k = k + 2 | 0\r\n                    }\r\n                }\r\n                M = (e[c + (z << 1) >> 1] << 16) + (l << 5) + (b[d + (z << 1) >> 1] << 1) | 0;\r\n                l = ic(Gc(M) | 0, j, r, h) | 0;\r\n                if ((M | 0) > 0) l = Oc(l) | 0;\r\n                k = C << 16 >> 16;\r\n                if (C << 16 >> 16 > 0) {\r\n                    j = l << k;\r\n                    if ((j >> k | 0) != (l | 0)) j = l >> 31 ^ 2147483647\r\n                } else {\r\n                    k = 0 - k << 16;\r\n                    if ((k | 0) < 2031616) j = l >> (k >> 16); else j = 0\r\n                }\r\n                q = j >> 16;\r\n                if ((z | 0) < 5) b[g + (s << 1) >> 1] = (j + 32768 | 0) >>> 16;\r\n                M = (j >>> 16) - (j >>> 31) | 0;\r\n                if (((M << 16 >> 31 ^ M) & 65535) << 16 >> 16 > 32750) {\r\n                    j = 16;\r\n                    break\r\n                }\r\n                o = (j >>> 1) - (q << 15) << 16 >> 16;\r\n                p = 1;\r\n                l = t;\r\n                k = A;\r\n                m = B;\r\n                while (1) {\r\n                    L = (Z(b[l >> 1] | 0, q) | 0) >> 15;\r\n                    t = b[n >> 1] | 0;\r\n                    M = (Z(t, o) | 0) >> 15;\r\n                    t = Z(t, q) | 0;\r\n                    M = t + L + (b[J + (p << 1) >> 1] | 0) + (b[I + (p << 1) >> 1] << 15) + M | 0;\r\n                    b[k >> 1] = M >>> 15;\r\n                    b[m >> 1] = M & 32767;\r\n                    p = p + 1 | 0;\r\n                    if ((p & 65535) << 16 >> 16 == y << 16 >> 16) break; else {\r\n                        n = n + -2 | 0;\r\n                        l = l + -2 | 0;\r\n                        k = k + 2 | 0;\r\n                        m = m + 2 | 0\r\n                    }\r\n                }\r\n                b[x >> 1] = j >> 20;\r\n                b[w >> 1] = (j >>> 5) - (b[H + (z << 1) >> 1] << 15);\r\n                L = Z(q, q) | 0;\r\n                L = (L | 0) == 1073741824 ? 2147483647 : L << 1;\r\n                j = (Z(o, q) | 0) >> 15;\r\n                M = j << 1;\r\n                k = M + L | 0;\r\n                k = (j ^ L | 0) > 0 & (k ^ L | 0) < 0 ? (L >>> 31) + 2147483647 | 0 : k;\r\n                M = k + M | 0;\r\n                M = 2147483647 - (Gc((k ^ j | 0) > 0 & (M ^ k | 0) < 0 ? (k >>> 31) + 2147483647 | 0 : M) | 0) | 0;\r\n                k = M >> 16;\r\n                j = u << 16 >> 16;\r\n                j = ((Z(k, v << 16 >> 16) | 0) >> 15) + (Z(k, j) | 0) + ((Z((M >>> 1) - (k << 15) << 16 >> 16, j) | 0) >> 15) << 1;\r\n                k = (pe(j) | 0) << 16 >> 16;\r\n                j = j << k;\r\n                M = z << 1;\r\n                Oe(E | 0, A | 0, M | 0) | 0;\r\n                Oe(F | 0, B | 0, M | 0) | 0;\r\n                z = z + 1 | 0;\r\n                if ((z | 0) >= 11) {\r\n                    j = 20;\r\n                    break\r\n                } else {\r\n                    C = k + (C & 65535) & 65535;\r\n                    l = j;\r\n                    v = (j >> 1) - (j >> 16 << 15) | 0;\r\n                    w = w + 2 | 0;\r\n                    x = x + 2 | 0;\r\n                    y = y + 1 << 16 >> 16\r\n                }\r\n            }\r\n            if ((j | 0) == 16) {\r\n                j = f + 22 | 0;\r\n                do {\r\n                    b[f >> 1] = b[a >> 1] | 0;\r\n                    f = f + 2 | 0;\r\n                    a = a + 2 | 0\r\n                } while ((f | 0) < (j | 0));\r\n                M = g;\r\n                L = M;\r\n                b[L >> 1] = 0;\r\n                b[L + 2 >> 1] = 0 >>> 16;\r\n                M = M + 4 | 0;\r\n                b[M >> 1] = 0;\r\n                b[M + 2 >> 1] = 0 >>> 16;\r\n                i = K;\r\n                return 0\r\n            } else if ((j | 0) == 20) {\r\n                b[f >> 1] = 4096;\r\n                M = ((b[F >> 1] | 0) + 8192 + (b[E >> 1] << 15) | 0) >>> 14 & 65535;\r\n                b[f + 2 >> 1] = M;\r\n                b[a + 2 >> 1] = M;\r\n                M = ((b[J + 4 >> 1] | 0) + 8192 + (b[I + 4 >> 1] << 15) | 0) >>> 14 & 65535;\r\n                b[f + 4 >> 1] = M;\r\n                b[a + 4 >> 1] = M;\r\n                M = ((b[J + 6 >> 1] | 0) + 8192 + (b[I + 6 >> 1] << 15) | 0) >>> 14 & 65535;\r\n                b[f + 6 >> 1] = M;\r\n                b[a + 6 >> 1] = M;\r\n                M = ((b[J + 8 >> 1] | 0) + 8192 + (b[I + 8 >> 1] << 15) | 0) >>> 14 & 65535;\r\n                b[f + 8 >> 1] = M;\r\n                b[a + 8 >> 1] = M;\r\n                M = ((b[J + 10 >> 1] | 0) + 8192 + (b[I + 10 >> 1] << 15) | 0) >>> 14 & 65535;\r\n                b[f + 10 >> 1] = M;\r\n                b[a + 10 >> 1] = M;\r\n                M = ((b[J + 12 >> 1] | 0) + 8192 + (b[I + 12 >> 1] << 15) | 0) >>> 14 & 65535;\r\n                b[f + 12 >> 1] = M;\r\n                b[a + 12 >> 1] = M;\r\n                M = ((b[J + 14 >> 1] | 0) + 8192 + (b[I + 14 >> 1] << 15) | 0) >>> 14 & 65535;\r\n                b[f + 14 >> 1] = M;\r\n                b[a + 14 >> 1] = M;\r\n                M = ((b[J + 16 >> 1] | 0) + 8192 + (b[I + 16 >> 1] << 15) | 0) >>> 14 & 65535;\r\n                b[f + 16 >> 1] = M;\r\n                b[a + 16 >> 1] = M;\r\n                M = ((b[J + 18 >> 1] | 0) + 8192 + (b[I + 18 >> 1] << 15) | 0) >>> 14 & 65535;\r\n                b[f + 18 >> 1] = M;\r\n                b[a + 18 >> 1] = M;\r\n                M = ((b[J + 20 >> 1] | 0) + 8192 + (b[I + 20 >> 1] << 15) | 0) >>> 14 & 65535;\r\n                b[f + 20 >> 1] = M;\r\n                b[a + 20 >> 1] = M;\r\n                i = K;\r\n                return 0\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function Nc(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            e = a >> 16;\r\n            b[c >> 1] = e;\r\n            b[d >> 1] = (a >>> 1) - (e << 15);\r\n            return\r\n        }\r\n\r\n        function Oc(a) {\r\n            a = a | 0;\r\n            return ((a | 0) == -2147483648 ? 2147483647 : 0 - a | 0) | 0\r\n        }\r\n\r\n        function Pc(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            b = Je(4) | 0;\r\n            if (!b) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[b >> 2] = 0;\r\n            if (!((Jc(b) | 0) << 16 >> 16)) {\r\n                Kc(c[b >> 2] | 0) | 0;\r\n                c[a >> 2] = b;\r\n                a = 0;\r\n                return a | 0\r\n            } else {\r\n                Lc(b);\r\n                Ke(b);\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function Qc(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Lc(b);\r\n            Ke(c[a >> 2] | 0);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function Rc(a) {\r\n            a = a | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            Kc(c[a >> 2] | 0) | 0;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function Sc(a, b, d, e, f, g, h) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var j = 0, k = 0, l = 0, m = 0;\r\n            m = i;\r\n            i = i + 64 | 0;\r\n            l = m + 48 | 0;\r\n            k = m + 22 | 0;\r\n            j = m;\r\n            if ((b | 0) == 7) {\r\n                d = c[g + 116 >> 2] | 0;\r\n                Kb(e, 10, j, k, c[g + 112 >> 2] | 0, h) | 0;\r\n                Hc(10, j, k, h);\r\n                Mc(c[a >> 2] | 0, j, k, f + 22 | 0, l, h) | 0;\r\n                Kb(e, 10, j, k, d, h) | 0;\r\n                Hc(10, j, k, h);\r\n                Mc(c[a >> 2] | 0, j, k, f + 66 | 0, l, h) | 0;\r\n                i = m;\r\n                return\r\n            } else {\r\n                Kb(d, 10, j, k, c[g + 108 >> 2] | 0, h) | 0;\r\n                Hc(10, j, k, h);\r\n                Mc(c[a >> 2] | 0, j, k, f + 66 | 0, l, h) | 0;\r\n                i = m;\r\n                return\r\n            }\r\n        }\r\n\r\n        function Tc(a, c, d, e, f, g, h, i, j, k) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            if ((d | 0) == 6) {\r\n                b[f >> 1] = bd(a, c, e, 20, 143, 80, g, h, i, j, k) | 0;\r\n                return\r\n            }\r\n            b[h >> 1] = 0;\r\n            b[h + 2 >> 1] = 0;\r\n            if (d >>> 0 < 2) {\r\n                b[f >> 1] = Yc(c, d, e, 20, 143, 160, i, j, k) | 0;\r\n                return\r\n            }\r\n            if (d >>> 0 < 6) {\r\n                b[f >> 1] = Yc(c, d, e, 20, 143, 80, i, j, k) | 0;\r\n                return\r\n            } else {\r\n                b[f >> 1] = Yc(c, d, e, 18, 143, 80, i, j, k) | 0;\r\n                return\r\n            }\r\n        }\r\n\r\n        function Uc(a) {\r\n            a = a | 0;\r\n            var d = 0;\r\n            if ((a | 0) != 0 ? (c[a >> 2] = 0, d = Je(2) | 0, (d | 0) != 0) : 0) {\r\n                b[d >> 1] = 0;\r\n                c[a >> 2] = d;\r\n                d = 0\r\n            } else d = -1;\r\n            return d | 0\r\n        }\r\n\r\n        function Vc(a) {\r\n            a = a | 0;\r\n            if (!a) a = -1; else {\r\n                b[a >> 1] = 0;\r\n                a = 0\r\n            }\r\n            return a | 0\r\n        }\r\n\r\n        function Wc(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function Xc(a, c, d, f, g, h, j, k, l, m, n, o) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            var p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0,\r\n                E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0,\r\n                T = 0, U = 0;\r\n            U = i;\r\n            i = i + 240 | 0;\r\n            u = U + 160 | 0;\r\n            v = U + 80 | 0;\r\n            O = U;\r\n            N = b[3558 + (c * 18 | 0) >> 1] | 0;\r\n            T = b[3558 + (c * 18 | 0) + 2 >> 1] | 0;\r\n            p = b[3558 + (c * 18 | 0) + 4 >> 1] | 0;\r\n            P = b[3558 + (c * 18 | 0) + 6 >> 1] | 0;\r\n            s = b[3558 + (c * 18 | 0) + 12 >> 1] | 0;\r\n            r = b[3558 + (c * 18 | 0) + 14 >> 1] | 0;\r\n            q = b[3558 + (c * 18 | 0) + 16 >> 1] | 0;\r\n            a:do switch (k << 16 >> 16) {\r\n                case 0:\r\n                case 80:\r\n                    if (c >>> 0 < 2 & k << 16 >> 16 == 80) {\r\n                        Q = (e[a >> 1] | 0) - (s & 65535) | 0;\r\n                        Q = (Q << 16 >> 16 | 0) < (q << 16 >> 16 | 0) ? q : Q & 65535;\r\n                        M = r << 16 >> 16;\r\n                        R = (Q & 65535) + M & 65535;\r\n                        S = R << 16 >> 16 > 143;\r\n                        Q = S ? 143 - M & 65535 : Q;\r\n                        R = S ? 143 : R;\r\n                        S = 1;\r\n                        break a\r\n                    } else {\r\n                        Q = (e[d + ((k << 16 >> 16 != 0 & 1) << 1) >> 1] | 0) - (e[3558 + (c * 18 | 0) + 8 >> 1] | 0) | 0;\r\n                        Q = (Q << 16 >> 16 | 0) < (q << 16 >> 16 | 0) ? q : Q & 65535;\r\n                        M = b[3558 + (c * 18 | 0) + 10 >> 1] | 0;\r\n                        R = (Q & 65535) + M & 65535;\r\n                        S = R << 16 >> 16 > 143;\r\n                        Q = S ? 143 - M & 65535 : Q;\r\n                        R = S ? 143 : R;\r\n                        S = 0;\r\n                        break a\r\n                    }\r\n                default: {\r\n                    Q = (e[a >> 1] | 0) - (s & 65535) | 0;\r\n                    Q = (Q << 16 >> 16 | 0) < (q << 16 >> 16 | 0) ? q : Q & 65535;\r\n                    M = r << 16 >> 16;\r\n                    R = (Q & 65535) + M & 65535;\r\n                    S = R << 16 >> 16 > 143;\r\n                    Q = S ? 143 - M & 65535 : Q;\r\n                    R = S ? 143 : R;\r\n                    S = 1\r\n                }\r\n            } while (0);\r\n            L = Q & 65535;\r\n            k = L + 65532 | 0;\r\n            t = k & 65535;\r\n            K = (R & 65535) + 4 & 65535;\r\n            M = k << 16 >> 16;\r\n            k = 0 - (k & 65535) | 0;\r\n            s = k & 65535;\r\n            ec(f + (k << 16 >> 16 << 1) | 0, h, u, j);\r\n            k = j << 16 >> 16;\r\n            B = k >>> 1 & 65535;\r\n            w = B << 16 >> 16 == 0;\r\n            if (w) j = 1; else {\r\n                j = B;\r\n                q = u;\r\n                d = v;\r\n                r = 0;\r\n                while (1) {\r\n                    J = b[q >> 1] | 0;\r\n                    b[d >> 1] = J >>> 2;\r\n                    J = (Z(J, J) | 0) + r | 0;\r\n                    r = b[q + 2 >> 1] | 0;\r\n                    b[d + 2 >> 1] = r >>> 2;\r\n                    r = J + (Z(r, r) | 0) | 0;\r\n                    j = j + -1 << 16 >> 16;\r\n                    if (!(j << 16 >> 16)) break; else {\r\n                        q = q + 4 | 0;\r\n                        d = d + 4 | 0\r\n                    }\r\n                }\r\n                j = (r | 0) < 33554433\r\n            }\r\n            J = j ? 0 : 2;\r\n            A = j ? u : v;\r\n            x = j ? u : v;\r\n            b:do if (t << 16 >> 16 <= K << 16 >> 16) {\r\n                y = k + -1 | 0;\r\n                G = A + (y << 1) | 0;\r\n                H = h + (y << 1) | 0;\r\n                I = A + (k + -2 << 1) | 0;\r\n                D = y >>> 1;\r\n                E = D & 65535;\r\n                z = E << 16 >> 16 == 0;\r\n                F = j ? 12 : 14;\r\n                D = (D << 1) + 131070 & 131070;\r\n                d = k + -3 - D | 0;\r\n                C = A + (d << 1) | 0;\r\n                D = A + (k + -4 - D << 1) | 0;\r\n                h = h + (d << 1) | 0;\r\n                if (!w) {\r\n                    w = M;\r\n                    while (1) {\r\n                        v = B;\r\n                        u = x;\r\n                        q = g;\r\n                        r = 0;\r\n                        j = 0;\r\n                        while (1) {\r\n                            v = v + -1 << 16 >> 16;\r\n                            k = b[u >> 1] | 0;\r\n                            r = (Z(k, b[q >> 1] | 0) | 0) + r | 0;\r\n                            k = (Z(k, k) | 0) + j | 0;\r\n                            j = b[u + 2 >> 1] | 0;\r\n                            r = r + (Z(j, b[q + 2 >> 1] | 0) | 0) | 0;\r\n                            j = k + (Z(j, j) | 0) | 0;\r\n                            if (!(v << 16 >> 16)) break; else {\r\n                                u = u + 4 | 0;\r\n                                q = q + 4 | 0\r\n                            }\r\n                        }\r\n                        u = ce(j << 1, o) | 0;\r\n                        j = u >> 16;\r\n                        q = r << 1 >> 16;\r\n                        v = Z(j, q) | 0;\r\n                        v = (v | 0) == 1073741824 ? 2147483647 : v << 1;\r\n                        q = (Z((u >>> 1) - (j << 15) << 16 >> 16, q) | 0) >> 15;\r\n                        u = (q << 1) + v | 0;\r\n                        u = (q ^ v | 0) > 0 & (u ^ v | 0) < 0 ? (v >>> 31) + 2147483647 | 0 : u;\r\n                        j = (Z(j, r & 32767) | 0) >> 15;\r\n                        v = u + (j << 1) | 0;\r\n                        b[O + (w - M << 1) >> 1] = (u ^ j | 0) > 0 & (v ^ u | 0) < 0 ? (u >>> 31) + 65535 | 0 : v;\r\n                        if (t << 16 >> 16 != K << 16 >> 16) {\r\n                            s = s + -1 << 16 >> 16;\r\n                            v = b[f + (s << 16 >> 16 << 1) >> 1] | 0;\r\n                            if (z) {\r\n                                u = y;\r\n                                j = I;\r\n                                r = H;\r\n                                q = G\r\n                            } else {\r\n                                u = E;\r\n                                j = I;\r\n                                r = H;\r\n                                q = G;\r\n                                while (1) {\r\n                                    w = (Z(b[r >> 1] | 0, v) | 0) >> F;\r\n                                    b[q >> 1] = w + (e[j >> 1] | 0);\r\n                                    w = (Z(b[r + -2 >> 1] | 0, v) | 0) >> F;\r\n                                    b[q + -2 >> 1] = w + (e[j + -2 >> 1] | 0);\r\n                                    u = u + -1 << 16 >> 16;\r\n                                    if (!(u << 16 >> 16)) {\r\n                                        u = d;\r\n                                        j = D;\r\n                                        r = h;\r\n                                        q = C;\r\n                                        break\r\n                                    } else {\r\n                                        j = j + -4 | 0;\r\n                                        r = r + -4 | 0;\r\n                                        q = q + -4 | 0\r\n                                    }\r\n                                }\r\n                            }\r\n                            w = (Z(b[r >> 1] | 0, v) | 0) >> F;\r\n                            b[q >> 1] = w + (e[j >> 1] | 0);\r\n                            b[A + (u + -1 << 1) >> 1] = v >> J\r\n                        }\r\n                        t = t + 1 << 16 >> 16;\r\n                        if (t << 16 >> 16 > K << 16 >> 16) break b; else w = t << 16 >> 16\r\n                    }\r\n                }\r\n                if (z) {\r\n                    j = A + (k + -2 << 1) | 0;\r\n                    r = M;\r\n                    while (1) {\r\n                        ce(0, o) | 0;\r\n                        b[O + (r - M << 1) >> 1] = 0;\r\n                        if (t << 16 >> 16 != K << 16 >> 16) {\r\n                            s = s + -1 << 16 >> 16;\r\n                            g = b[f + (s << 16 >> 16 << 1) >> 1] | 0;\r\n                            E = (Z(b[H >> 1] | 0, g) | 0) >> F;\r\n                            b[G >> 1] = E + (e[I >> 1] | 0);\r\n                            b[j >> 1] = g >> J\r\n                        }\r\n                        t = t + 1 << 16 >> 16;\r\n                        if (t << 16 >> 16 > K << 16 >> 16) break b; else r = t << 16 >> 16\r\n                    }\r\n                }\r\n                u = A + (d + -1 << 1) | 0;\r\n                j = M;\r\n                while (1) {\r\n                    ce(0, o) | 0;\r\n                    b[O + (j - M << 1) >> 1] = 0;\r\n                    if (t << 16 >> 16 != K << 16 >> 16) {\r\n                        s = s + -1 << 16 >> 16;\r\n                        j = b[f + (s << 16 >> 16 << 1) >> 1] | 0;\r\n                        r = E;\r\n                        q = I;\r\n                        d = H;\r\n                        k = G;\r\n                        while (1) {\r\n                            g = (Z(b[d >> 1] | 0, j) | 0) >> F;\r\n                            b[k >> 1] = g + (e[q >> 1] | 0);\r\n                            g = (Z(b[d + -2 >> 1] | 0, j) | 0) >> F;\r\n                            b[k + -2 >> 1] = g + (e[q + -2 >> 1] | 0);\r\n                            r = r + -1 << 16 >> 16;\r\n                            if (!(r << 16 >> 16)) break; else {\r\n                                q = q + -4 | 0;\r\n                                d = d + -4 | 0;\r\n                                k = k + -4 | 0\r\n                            }\r\n                        }\r\n                        g = (Z(b[h >> 1] | 0, j) | 0) >> F;\r\n                        b[C >> 1] = g + (e[D >> 1] | 0);\r\n                        b[u >> 1] = j >> J\r\n                    }\r\n                    t = t + 1 << 16 >> 16;\r\n                    if (t << 16 >> 16 > K << 16 >> 16) break; else j = t << 16 >> 16\r\n                }\r\n            } while (0);\r\n            t = Q << 16 >> 16;\r\n            d = L + 1 & 65535;\r\n            if (d << 16 >> 16 > R << 16 >> 16) h = Q; else {\r\n                s = Q;\r\n                k = b[O + (t - M << 1) >> 1] | 0;\r\n                while (1) {\r\n                    r = b[O + ((d << 16 >> 16) - M << 1) >> 1] | 0;\r\n                    q = r << 16 >> 16 < k << 16 >> 16;\r\n                    s = q ? s : d;\r\n                    d = d + 1 << 16 >> 16;\r\n                    if (d << 16 >> 16 > R << 16 >> 16) {\r\n                        h = s;\r\n                        break\r\n                    } else k = q ? k : r\r\n                }\r\n            }\r\n            c:do if (!(S << 16 >> 16 == 0 ? h << 16 >> 16 > N << 16 >> 16 : 0)) {\r\n                if (!(c >>> 0 < 4 & S << 16 >> 16 != 0)) {\r\n                    s = O + ((h << 16 >> 16) - M << 1) | 0;\r\n                    r = Fc(s, p, T, o) | 0;\r\n                    d = (p & 65535) + 1 & 65535;\r\n                    if (d << 16 >> 16 <= P << 16 >> 16) while (1) {\r\n                        q = Fc(s, d, T, o) | 0;\r\n                        k = q << 16 >> 16 > r << 16 >> 16;\r\n                        p = k ? d : p;\r\n                        d = d + 1 << 16 >> 16;\r\n                        if (d << 16 >> 16 > P << 16 >> 16) break; else r = k ? q : r\r\n                    }\r\n                    if ((c + -7 | 0) >>> 0 < 2) {\r\n                        P = p << 16 >> 16 == -3;\r\n                        d = (P << 31 >> 31) + h << 16 >> 16;\r\n                        p = P ? 3 : p;\r\n                        break\r\n                    }\r\n                    switch (p << 16 >> 16) {\r\n                        case -2: {\r\n                            d = h + -1 << 16 >> 16;\r\n                            p = 1;\r\n                            break c\r\n                        }\r\n                        case 2: {\r\n                            d = h + 1 << 16 >> 16;\r\n                            p = -1;\r\n                            break c\r\n                        }\r\n                        default: {\r\n                            d = h;\r\n                            break c\r\n                        }\r\n                    }\r\n                }\r\n                N = b[a >> 1] | 0;\r\n                N = ((N << 16 >> 16) - t | 0) > 5 ? t + 5 & 65535 : N;\r\n                k = R << 16 >> 16;\r\n                N = (k - (N << 16 >> 16) | 0) > 4 ? k + 65532 & 65535 : N;\r\n                k = h << 16 >> 16;\r\n                d = N << 16 >> 16;\r\n                if ((k | 0) == (d + -1 | 0) ? 1 : h << 16 >> 16 == N << 16 >> 16) {\r\n                    s = O + (k - M << 1) | 0;\r\n                    k = Fc(s, p, T, o) | 0;\r\n                    d = (p & 65535) + 1 & 65535;\r\n                    if (d << 16 >> 16 <= P << 16 >> 16) while (1) {\r\n                        r = Fc(s, d, T, o) | 0;\r\n                        q = r << 16 >> 16 > k << 16 >> 16;\r\n                        p = q ? d : p;\r\n                        d = d + 1 << 16 >> 16;\r\n                        if (d << 16 >> 16 > P << 16 >> 16) break; else k = q ? r : k\r\n                    }\r\n                    if ((c + -7 | 0) >>> 0 < 2) {\r\n                        P = p << 16 >> 16 == -3;\r\n                        d = (P << 31 >> 31) + h << 16 >> 16;\r\n                        p = P ? 3 : p;\r\n                        break\r\n                    }\r\n                    switch (p << 16 >> 16) {\r\n                        case -2: {\r\n                            d = h + -1 << 16 >> 16;\r\n                            p = 1;\r\n                            break c\r\n                        }\r\n                        case 2: {\r\n                            d = h + 1 << 16 >> 16;\r\n                            p = -1;\r\n                            break c\r\n                        }\r\n                        default: {\r\n                            d = h;\r\n                            break c\r\n                        }\r\n                    }\r\n                }\r\n                if ((k | 0) == (d + -2 | 0)) {\r\n                    d = O + (k - M << 1) | 0;\r\n                    k = Fc(d, 0, T, o) | 0;\r\n                    if ((c | 0) != 8) {\r\n                        p = 0;\r\n                        s = 1;\r\n                        while (1) {\r\n                            r = Fc(d, s, T, o) | 0;\r\n                            q = r << 16 >> 16 > k << 16 >> 16;\r\n                            p = q ? s : p;\r\n                            s = s + 1 << 16 >> 16;\r\n                            if (s << 16 >> 16 > P << 16 >> 16) break; else k = q ? r : k\r\n                        }\r\n                        if ((c + -7 | 0) >>> 0 >= 2) switch (p << 16 >> 16) {\r\n                            case -2: {\r\n                                d = h + -1 << 16 >> 16;\r\n                                p = 1;\r\n                                break c\r\n                            }\r\n                            case 2: {\r\n                                d = h + 1 << 16 >> 16;\r\n                                p = -1;\r\n                                break c\r\n                            }\r\n                            default: {\r\n                                d = h;\r\n                                break c\r\n                            }\r\n                        }\r\n                    } else p = 0;\r\n                    P = p << 16 >> 16 == -3;\r\n                    d = (P << 31 >> 31) + h << 16 >> 16;\r\n                    p = P ? 3 : p;\r\n                    break\r\n                }\r\n                if ((k | 0) == (d + 1 | 0)) {\r\n                    s = O + (k - M << 1) | 0;\r\n                    d = Fc(s, p, T, o) | 0;\r\n                    k = (p & 65535) + 1 & 65535;\r\n                    if (k << 16 >> 16 <= 0) while (1) {\r\n                        q = Fc(s, k, T, o) | 0;\r\n                        r = q << 16 >> 16 > d << 16 >> 16;\r\n                        p = r ? k : p;\r\n                        k = k + 1 << 16 >> 16;\r\n                        if (k << 16 >> 16 > 0) break; else d = r ? q : d\r\n                    }\r\n                    if ((c + -7 | 0) >>> 0 < 2) {\r\n                        P = p << 16 >> 16 == -3;\r\n                        d = (P << 31 >> 31) + h << 16 >> 16;\r\n                        p = P ? 3 : p;\r\n                        break\r\n                    }\r\n                    switch (p << 16 >> 16) {\r\n                        case -2: {\r\n                            d = h + -1 << 16 >> 16;\r\n                            p = 1;\r\n                            break c\r\n                        }\r\n                        case 2: {\r\n                            d = h + 1 << 16 >> 16;\r\n                            p = -1;\r\n                            break c\r\n                        }\r\n                        default: {\r\n                            d = h;\r\n                            break c\r\n                        }\r\n                    }\r\n                } else {\r\n                    d = h;\r\n                    p = 0\r\n                }\r\n            } else {\r\n                d = h;\r\n                p = 0\r\n            } while (0);\r\n            if ((c + -7 | 0) >>> 0 > 1) {\r\n                P = a;\r\n                a = pc(d, p, b[a >> 1] | 0, Q, R, S, c >>> 0 < 4 & 1, o) | 0;\r\n                b[n >> 1] = a;\r\n                b[P >> 1] = d;\r\n                b[m >> 1] = T;\r\n                b[l >> 1] = p;\r\n                i = U;\r\n                return d | 0\r\n            } else {\r\n                o = qc(d, p, Q, S, o) | 0;\r\n                b[n >> 1] = o;\r\n                b[a >> 1] = d;\r\n                b[m >> 1] = T;\r\n                b[l >> 1] = p;\r\n                i = U;\r\n                return d | 0\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function Yc(a, d, e, f, g, h, j, k, l) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            var m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0,\r\n                B = 0, C = 0, D = 0;\r\n            D = i;\r\n            i = i + 1200 | 0;\r\n            B = D + 1188 | 0;\r\n            A = D + 580 | 0;\r\n            C = D + 578 | 0;\r\n            z = D + 576 | 0;\r\n            v = D;\r\n            x = D + 582 | 0;\r\n            y = (k | 0) != 0;\r\n            do if (y) if (d >>> 0 < 2) {\r\n                Ld(a, 1, l);\r\n                break\r\n            } else {\r\n                Ld(a, 0, l);\r\n                break\r\n            } while (0);\r\n            w = g << 16 >> 16;\r\n            o = 0 - w | 0;\r\n            n = e + (o << 1) | 0;\r\n            o = o & 65535;\r\n            s = h << 16 >> 16;\r\n            do if (o << 16 >> 16 < h << 16 >> 16) {\r\n                r = o;\r\n                q = n;\r\n                o = 0;\r\n                while (1) {\r\n                    t = b[q >> 1] | 0;\r\n                    o = (Z(t << 1, t) | 0) + o | 0;\r\n                    if ((o | 0) < 0) break;\r\n                    r = r + 1 << 16 >> 16;\r\n                    if (r << 16 >> 16 >= h << 16 >> 16) {\r\n                        u = 14;\r\n                        break\r\n                    } else q = q + 2 | 0\r\n                }\r\n                if ((u | 0) == 14) {\r\n                    if ((o | 0) < 1048576) {\r\n                        u = 15;\r\n                        break\r\n                    }\r\n                    Oe(x | 0, n | 0, s + w << 1 | 0) | 0;\r\n                    t = 0;\r\n                    break\r\n                }\r\n                m = s + w | 0;\r\n                p = m >>> 1;\r\n                r = p & 65535;\r\n                if (!(r << 16 >> 16)) o = x; else {\r\n                    t = ((p << 1) + 131070 & 131070) + 2 | 0;\r\n                    s = t - w | 0;\r\n                    q = x;\r\n                    while (1) {\r\n                        b[q >> 1] = (b[n >> 1] | 0) >>> 3;\r\n                        b[q + 2 >> 1] = (b[n + 2 >> 1] | 0) >>> 3;\r\n                        r = r + -1 << 16 >> 16;\r\n                        if (!(r << 16 >> 16)) break; else {\r\n                            n = n + 4 | 0;\r\n                            q = q + 4 | 0\r\n                        }\r\n                    }\r\n                    n = e + (s << 1) | 0;\r\n                    o = x + (t << 1) | 0\r\n                }\r\n                if (!(m & 1)) t = 3; else {\r\n                    b[o >> 1] = (b[n >> 1] | 0) >>> 3;\r\n                    t = 3\r\n                }\r\n            } else u = 15; while (0);\r\n            if ((u | 0) == 15) {\r\n                t = s + w | 0;\r\n                o = t >>> 1;\r\n                p = o & 65535;\r\n                if (!(p << 16 >> 16)) o = x; else {\r\n                    s = ((o << 1) + 131070 & 131070) + 2 | 0;\r\n                    q = s - w | 0;\r\n                    r = x;\r\n                    while (1) {\r\n                        b[r >> 1] = b[n >> 1] << 3;\r\n                        b[r + 2 >> 1] = b[n + 2 >> 1] << 3;\r\n                        p = p + -1 << 16 >> 16;\r\n                        if (!(p << 16 >> 16)) break; else {\r\n                            n = n + 4 | 0;\r\n                            r = r + 4 | 0\r\n                        }\r\n                    }\r\n                    n = e + (q << 1) | 0;\r\n                    o = x + (s << 1) | 0\r\n                }\r\n                if (!(t & 1)) t = -3; else {\r\n                    b[o >> 1] = b[n >> 1] << 3;\r\n                    t = -3\r\n                }\r\n            }\r\n            s = v + (w << 2) | 0;\r\n            q = x + (w << 1) | 0;\r\n            Tb(q, h, g, f, s);\r\n            m = (d | 0) == 7 & 1;\r\n            o = f << 16 >> 16;\r\n            n = o << 2;\r\n            if ((n | 0) != (o << 18 >> 16 | 0)) {\r\n                c[l >> 2] = 1;\r\n                n = f << 16 >> 16 > 0 ? 32767 : -32768\r\n            }\r\n            r = Zc(a, s, q, t, m, h, g, n & 65535, B, k, l) | 0;\r\n            o = o << 1;\r\n            p = Zc(a, s, q, t, m, h, n + 65535 & 65535, o & 65535, A, k, l) | 0;\r\n            o = Zc(a, s, q, t, m, h, o + 65535 & 65535, f, C, k, l) | 0;\r\n            if (j << 16 >> 16 == 1 & y) {\r\n                Ec(s, q, h, g, f, z, l) | 0;\r\n                Jd(a, b[z >> 1] | 0)\r\n            }\r\n            n = b[B >> 1] | 0;\r\n            m = b[A >> 1] | 0;\r\n            if (((n << 16 >> 16) * 55706 >> 16 | 0) >= (m << 16 >> 16 | 0)) {\r\n                A = n;\r\n                B = r;\r\n                A = A << 16 >> 16;\r\n                A = A * 55706 | 0;\r\n                A = A >> 16;\r\n                C = b[C >> 1] | 0;\r\n                C = C << 16 >> 16;\r\n                C = (A | 0) < (C | 0);\r\n                C = C ? o : B;\r\n                i = D;\r\n                return C | 0\r\n            }\r\n            b[B >> 1] = m;\r\n            A = m;\r\n            B = p;\r\n            A = A << 16 >> 16;\r\n            A = A * 55706 | 0;\r\n            A = A >> 16;\r\n            C = b[C >> 1] | 0;\r\n            C = C << 16 >> 16;\r\n            C = (A | 0) < (C | 0);\r\n            C = C ? o : B;\r\n            i = D;\r\n            return C | 0\r\n        }\r\n\r\n        function Zc(a, d, e, f, g, h, i, j, k, l, m) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            var n = 0, o = 0, p = 0, q = 0, r = 0;\r\n            if (i << 16 >> 16 < j << 16 >> 16) {\r\n                j = -2147483648;\r\n                p = i\r\n            } else {\r\n                p = i;\r\n                n = -2147483648;\r\n                o = d + (0 - (i << 16 >> 16) << 2) | 0;\r\n                d = i;\r\n                while (1) {\r\n                    i = c[o >> 2] | 0;\r\n                    r = (i | 0) < (n | 0);\r\n                    d = r ? d : p;\r\n                    n = r ? n : i;\r\n                    p = p + -1 << 16 >> 16;\r\n                    if (p << 16 >> 16 < j << 16 >> 16) {\r\n                        j = n;\r\n                        p = d;\r\n                        break\r\n                    } else o = o + 4 | 0\r\n                }\r\n            }\r\n            d = h << 16 >> 16 >>> 2 & 65535;\r\n            if (!(d << 16 >> 16)) d = 0; else {\r\n                n = d;\r\n                i = e + (0 - (p << 16 >> 16) << 1) | 0;\r\n                d = 0;\r\n                while (1) {\r\n                    r = b[i >> 1] | 0;\r\n                    r = (Z(r, r) | 0) + d | 0;\r\n                    d = b[i + 2 >> 1] | 0;\r\n                    d = r + (Z(d, d) | 0) | 0;\r\n                    r = b[i + 4 >> 1] | 0;\r\n                    r = d + (Z(r, r) | 0) | 0;\r\n                    d = b[i + 6 >> 1] | 0;\r\n                    d = r + (Z(d, d) | 0) | 0;\r\n                    n = n + -1 << 16 >> 16;\r\n                    if (!(n << 16 >> 16)) break; else i = i + 8 | 0\r\n                }\r\n                d = d << 1\r\n            }\r\n            if (l) Kd(a, j, d, m);\r\n            d = ce(d, m) | 0;\r\n            i = g << 16 >> 16 != 0;\r\n            if (i) d = (d | 0) > 1073741823 ? 2147483647 : d << 1;\r\n            g = j >> 16;\r\n            a = d >> 16;\r\n            m = Z(a, g) | 0;\r\n            m = (m | 0) == 1073741824 ? 2147483647 : m << 1;\r\n            d = (Z((d >>> 1) - (a << 15) << 16 >> 16, g) | 0) >> 15;\r\n            r = (d << 1) + m | 0;\r\n            r = (d ^ m | 0) > 0 & (r ^ m | 0) < 0 ? (m >>> 31) + 2147483647 | 0 : r;\r\n            g = (Z(a, (j >>> 1) - (g << 15) << 16 >> 16) | 0) >> 15;\r\n            d = r + (g << 1) | 0;\r\n            d = (r ^ g | 0) > 0 & (d ^ r | 0) < 0 ? (r >>> 31) + 2147483647 | 0 : d;\r\n            if (!i) {\r\n                b[k >> 1] = d;\r\n                return p | 0\r\n            }\r\n            i = f << 16 >> 16;\r\n            if (f << 16 >> 16 > 0) if (f << 16 >> 16 < 31) {\r\n                i = d >> i;\r\n                q = 16\r\n            } else i = 0; else {\r\n                q = 0 - i << 16 >> 16;\r\n                i = d << q;\r\n                i = (i >> q | 0) == (d | 0) ? i : d >> 31 ^ 2147483647;\r\n                q = 16\r\n            }\r\n            if ((q | 0) == 16) {\r\n                if ((i | 0) > 65535) {\r\n                    b[k >> 1] = 32767;\r\n                    return p | 0\r\n                }\r\n                if ((i | 0) < -65536) {\r\n                    b[k >> 1] = -32768;\r\n                    return p | 0\r\n                }\r\n            }\r\n            b[k >> 1] = i >>> 1;\r\n            return p | 0\r\n        }\r\n\r\n        function _c(a) {\r\n            a = a | 0;\r\n            var d = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(6) | 0;\r\n            if (!d) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            b[d >> 1] = 40;\r\n            b[d + 2 >> 1] = 0;\r\n            b[d + 4 >> 1] = 0;\r\n            c[a >> 2] = d;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function $c(a) {\r\n            a = a | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            b[a >> 1] = 40;\r\n            b[a + 2 >> 1] = 0;\r\n            b[a + 4 >> 1] = 0;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function ad(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function bd(a, d, e, f, g, h, j, k, l, m, n) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            var o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0,\r\n                D = 0, E = 0, F = 0;\r\n            F = i;\r\n            i = i + 1200 | 0;\r\n            w = F + 1186 | 0;\r\n            x = F + 1184 | 0;\r\n            E = F + 1182 | 0;\r\n            v = F;\r\n            z = F + 576 | 0;\r\n            y = g << 16 >> 16;\r\n            D = z + (y << 1) | 0;\r\n            o = (0 - y & 65535) << 16 >> 16 < h << 16 >> 16;\r\n            if (o) {\r\n                s = 0 - g << 16 >> 16 << 16 >> 16;\r\n                p = 0;\r\n                do {\r\n                    r = b[e + (s << 1) >> 1] | 0;\r\n                    r = Z(r, r) | 0;\r\n                    if ((r | 0) != 1073741824) {\r\n                        q = (r << 1) + p | 0;\r\n                        if ((r ^ p | 0) > 0 & (q ^ p | 0) < 0) {\r\n                            c[n >> 2] = 1;\r\n                            p = (p >>> 31) + 2147483647 | 0\r\n                        } else p = q\r\n                    } else {\r\n                        c[n >> 2] = 1;\r\n                        p = 2147483647\r\n                    }\r\n                    s = s + 1 | 0\r\n                } while ((s & 65535) << 16 >> 16 != h << 16 >> 16)\r\n            } else p = 0;\r\n            if ((2147483646 - p & p | 0) >= 0) if ((p | 0) == 2147483647) {\r\n                if (o) {\r\n                    p = 0 - g << 16 >> 16 << 16 >> 16;\r\n                    do {\r\n                        b[z + (p + y << 1) >> 1] = De(b[e + (p << 1) >> 1] | 0, 3, n) | 0;\r\n                        p = p + 1 | 0\r\n                    } while ((p & 65535) << 16 >> 16 != h << 16 >> 16)\r\n                }\r\n            } else t = 14; else {\r\n                c[n >> 2] = 1;\r\n                t = 14\r\n            }\r\n            do if ((t | 0) == 14) {\r\n                if ((1048575 - p & p | 0) < 0) {\r\n                    c[n >> 2] = 1;\r\n                    p = (p >>> 31) + 2147483647 | 0\r\n                } else p = p + -1048576 | 0;\r\n                if ((p | 0) >= 0) {\r\n                    if (!o) break;\r\n                    C = 0 - g << 16 >> 16 << 16 >> 16;\r\n                    Oe(z + (y + C << 1) | 0, e + (C << 1) | 0, (((h + g << 16 >> 16) + -1 & 65535) << 1) + 2 | 0) | 0;\r\n                    break\r\n                }\r\n                if (o) {\r\n                    p = 0 - g << 16 >> 16 << 16 >> 16;\r\n                    do {\r\n                        C = b[e + (p << 1) >> 1] | 0;\r\n                        b[z + (p + y << 1) >> 1] = (C << 19 >> 19 | 0) == (C | 0) ? C << 3 : C >>> 15 ^ 32767;\r\n                        p = p + 1 | 0\r\n                    } while ((p & 65535) << 16 >> 16 != h << 16 >> 16)\r\n                }\r\n            } while (0);\r\n            B = v + (y << 2) | 0;\r\n            Tb(D, h, g, f, B);\r\n            s = b[a >> 1] | 0;\r\n            C = a + 4 | 0;\r\n            A = k + (l << 16 >> 16 << 1) | 0;\r\n            a:do if (g << 16 >> 16 < f << 16 >> 16) u = g; else {\r\n                if ((b[C >> 1] | 0) <= 0) {\r\n                    e = g;\r\n                    k = -2147483648;\r\n                    r = g;\r\n                    t = 3402;\r\n                    while (1) {\r\n                        Nc(c[v + (y - (e << 16 >> 16) << 2) >> 2] | 0, w, x, n);\r\n                        q = b[x >> 1] | 0;\r\n                        p = b[t >> 1] | 0;\r\n                        s = Z(p, b[w >> 1] | 0) | 0;\r\n                        if ((s | 0) == 1073741824) {\r\n                            c[n >> 2] = 1;\r\n                            o = 2147483647\r\n                        } else o = s << 1;\r\n                        u = (Z(p, q << 16 >> 16) | 0) >> 15;\r\n                        s = o + (u << 1) | 0;\r\n                        if ((o ^ u | 0) > 0 & (s ^ o | 0) < 0) {\r\n                            c[n >> 2] = 1;\r\n                            s = (o >>> 31) + 2147483647 | 0\r\n                        }\r\n                        q = (s | 0) < (k | 0);\r\n                        r = q ? r : e;\r\n                        e = e + -1 << 16 >> 16;\r\n                        if (e << 16 >> 16 < f << 16 >> 16) {\r\n                            u = r;\r\n                            break a\r\n                        } else {\r\n                            k = q ? k : s;\r\n                            t = t + -2 | 0\r\n                        }\r\n                    }\r\n                }\r\n                k = g;\r\n                o = -2147483648;\r\n                r = g;\r\n                u = 2902 + (y + 123 - (s << 16 >> 16) << 1) | 0;\r\n                e = 3402;\r\n                while (1) {\r\n                    Nc(c[v + (y - (k << 16 >> 16) << 2) >> 2] | 0, w, x, n);\r\n                    t = b[x >> 1] | 0;\r\n                    q = b[e >> 1] | 0;\r\n                    s = Z(q, b[w >> 1] | 0) | 0;\r\n                    if ((s | 0) == 1073741824) {\r\n                        c[n >> 2] = 1;\r\n                        p = 2147483647\r\n                    } else p = s << 1;\r\n                    t = (Z(q, t << 16 >> 16) | 0) >> 15;\r\n                    s = p + (t << 1) | 0;\r\n                    if ((p ^ t | 0) > 0 & (s ^ p | 0) < 0) {\r\n                        c[n >> 2] = 1;\r\n                        s = (p >>> 31) + 2147483647 | 0\r\n                    }\r\n                    Nc(s, w, x, n);\r\n                    t = b[x >> 1] | 0;\r\n                    q = b[u >> 1] | 0;\r\n                    s = Z(q, b[w >> 1] | 0) | 0;\r\n                    if ((s | 0) == 1073741824) {\r\n                        c[n >> 2] = 1;\r\n                        p = 2147483647\r\n                    } else p = s << 1;\r\n                    t = (Z(q, t << 16 >> 16) | 0) >> 15;\r\n                    s = p + (t << 1) | 0;\r\n                    if ((p ^ t | 0) > 0 & (s ^ p | 0) < 0) {\r\n                        c[n >> 2] = 1;\r\n                        s = (p >>> 31) + 2147483647 | 0\r\n                    }\r\n                    q = (s | 0) < (o | 0);\r\n                    r = q ? r : k;\r\n                    k = k + -1 << 16 >> 16;\r\n                    if (k << 16 >> 16 < f << 16 >> 16) {\r\n                        u = r;\r\n                        break\r\n                    } else {\r\n                        o = q ? o : s;\r\n                        u = u + -2 | 0;\r\n                        e = e + -2 | 0\r\n                    }\r\n                }\r\n            } while (0);\r\n            if (h << 16 >> 16 > 0) {\r\n                k = 0;\r\n                e = D;\r\n                t = z + (y - (u << 16 >> 16) << 1) | 0;\r\n                r = 0;\r\n                p = 0;\r\n                while (1) {\r\n                    s = b[t >> 1] | 0;\r\n                    q = Z(s, b[e >> 1] | 0) | 0;\r\n                    if ((q | 0) != 1073741824) {\r\n                        o = (q << 1) + r | 0;\r\n                        if ((q ^ r | 0) > 0 & (o ^ r | 0) < 0) {\r\n                            c[n >> 2] = 1;\r\n                            r = (r >>> 31) + 2147483647 | 0\r\n                        } else r = o\r\n                    } else {\r\n                        c[n >> 2] = 1;\r\n                        r = 2147483647\r\n                    }\r\n                    o = Z(s, s) | 0;\r\n                    if ((o | 0) != 1073741824) {\r\n                        q = (o << 1) + p | 0;\r\n                        if ((o ^ p | 0) > 0 & (q ^ p | 0) < 0) {\r\n                            c[n >> 2] = 1;\r\n                            p = (p >>> 31) + 2147483647 | 0\r\n                        } else p = q\r\n                    } else {\r\n                        c[n >> 2] = 1;\r\n                        p = 2147483647\r\n                    }\r\n                    k = k + 1 << 16 >> 16;\r\n                    if (k << 16 >> 16 >= h << 16 >> 16) break; else {\r\n                        e = e + 2 | 0;\r\n                        t = t + 2 | 0\r\n                    }\r\n                }\r\n            } else {\r\n                r = 0;\r\n                p = 0\r\n            }\r\n            q = (m | 0) == 0;\r\n            if (!q) {\r\n                Ld(d, 0, n);\r\n                Kd(d, r, p, n)\r\n            }\r\n            o = (Ce(p, n) | 0) << 16 >> 16;\r\n            if ((o * 13107 | 0) == 1073741824) {\r\n                c[n >> 2] = 1;\r\n                p = 2147483647\r\n            } else p = o * 26214 | 0;\r\n            o = r - p | 0;\r\n            if (((o ^ r) & (p ^ r) | 0) < 0) {\r\n                c[n >> 2] = 1;\r\n                o = (r >>> 31) + 2147483647 | 0\r\n            }\r\n            m = Ce(o, n) | 0;\r\n            b[A >> 1] = m;\r\n            if (m << 16 >> 16 > 0) {\r\n                o = j + 6 | 0;\r\n                b[j + 8 >> 1] = b[o >> 1] | 0;\r\n                m = j + 4 | 0;\r\n                b[o >> 1] = b[m >> 1] | 0;\r\n                o = j + 2 | 0;\r\n                b[m >> 1] = b[o >> 1] | 0;\r\n                b[o >> 1] = b[j >> 1] | 0;\r\n                b[j >> 1] = u;\r\n                b[a >> 1] = Zd(j, 5) | 0;\r\n                b[a + 2 >> 1] = 32767;\r\n                o = 32767\r\n            } else {\r\n                b[a >> 1] = u;\r\n                a = a + 2 | 0;\r\n                o = ((b[a >> 1] | 0) * 29491 | 0) >>> 15 & 65535;\r\n                b[a >> 1] = o\r\n            }\r\n            b[C >> 1] = ((Ge(o, 9830, n) | 0) & 65535) >>> 15 ^ 1;\r\n            if (q) {\r\n                i = F;\r\n                return u | 0\r\n            }\r\n            if ((Ge(l, 1, n) | 0) << 16 >> 16) {\r\n                i = F;\r\n                return u | 0\r\n            }\r\n            Ec(B, D, h, g, f, E, n) | 0;\r\n            Jd(d, b[E >> 1] | 0);\r\n            i = F;\r\n            return u | 0\r\n        }\r\n\r\n        function cd(a, b, c, d, e, f, g, h, j, k) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            var l = 0, m = 0;\r\n            k = i;\r\n            i = i + 48 | 0;\r\n            m = k + 22 | 0;\r\n            l = k;\r\n            b = a >>> 0 < 6 ? b : c;\r\n            c = f << 16 >> 16 > 0 ? 22 : 0;\r\n            a = e + (c << 1) | 0;\r\n            Ie(a, b, m);\r\n            Ie(a, d, l);\r\n            a = f << 16 >> 16;\r\n            f = j + (a << 1) | 0;\r\n            Be(m, g + (a << 1) | 0, f, 40);\r\n            He(l, f, f, 40, h, 1);\r\n            c = e + (((c << 16) + 720896 | 0) >>> 16 << 1) | 0;\r\n            Ie(c, b, m);\r\n            Ie(c, d, l);\r\n            a = (a << 16) + 2621440 >> 16;\r\n            j = j + (a << 1) | 0;\r\n            Be(m, g + (a << 1) | 0, j, 40);\r\n            He(l, j, j, 40, h, 1);\r\n            i = k;\r\n            return\r\n        }\r\n\r\n        function dd(a) {\r\n            a = a | 0;\r\n            var d = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(12) | 0;\r\n            if (!d) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            ;b[d >> 1] = 0;\r\n            b[d + 2 >> 1] = 0;\r\n            b[d + 4 >> 1] = 0;\r\n            b[d + 6 >> 1] = 0;\r\n            b[d + 8 >> 1] = 0;\r\n            b[d + 10 >> 1] = 0;\r\n            c[a >> 2] = d;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function ed(a) {\r\n            a = a | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            ;b[a >> 1] = 0;\r\n            b[a + 2 >> 1] = 0;\r\n            b[a + 4 >> 1] = 0;\r\n            b[a + 6 >> 1] = 0;\r\n            b[a + 8 >> 1] = 0;\r\n            b[a + 10 >> 1] = 0;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function fd(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function gd(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0;\r\n            m = a + 10 | 0;\r\n            f = b[m >> 1] | 0;\r\n            n = a + 8 | 0;\r\n            e = b[n >> 1] | 0;\r\n            if (!(d << 16 >> 16)) {\r\n                a = e;\r\n                l = f;\r\n                b[m >> 1] = l;\r\n                b[n >> 1] = a;\r\n                return\r\n            }\r\n            i = a + 4 | 0;\r\n            j = a + 6 | 0;\r\n            k = a + 2 | 0;\r\n            h = b[j >> 1] | 0;\r\n            l = b[i >> 1] | 0;\r\n            g = d;\r\n            d = f;\r\n            while (1) {\r\n                o = (Z(b[a >> 1] | 0, -3733) | 0) + (((l << 16 >> 16) * 7807 | 0) + ((h << 16 >> 16) * 7807 >> 15)) | 0;\r\n                b[a >> 1] = l;\r\n                o = o + ((Z(b[k >> 1] | 0, -3733) | 0) >> 15) | 0;\r\n                b[k >> 1] = h;\r\n                o = ((d << 16 >> 16) * 1899 | 0) + o + (Z(e << 16 >> 16, -3798) | 0) | 0;\r\n                d = b[c >> 1] | 0;\r\n                o = o + ((d << 16 >> 16) * 1899 | 0) | 0;\r\n                b[c >> 1] = (o + 2048 | 0) >>> 12;\r\n                f = o >>> 12;\r\n                l = f & 65535;\r\n                b[i >> 1] = l;\r\n                h = (o << 3) - (f << 15) & 65535;\r\n                b[j >> 1] = h;\r\n                g = g + -1 << 16 >> 16;\r\n                if (!(g << 16 >> 16)) break; else {\r\n                    o = e;\r\n                    c = c + 2 | 0;\r\n                    e = d;\r\n                    d = o\r\n                }\r\n            }\r\n            b[m >> 1] = e;\r\n            b[n >> 1] = d;\r\n            return\r\n        }\r\n\r\n        function hd(a, d, e, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, i = 0, j = 0;\r\n            g = b[(c[f + 88 >> 2] | 0) + (a << 1) >> 1] | 0;\r\n            if (!(g << 16 >> 16)) return;\r\n            j = e;\r\n            i = c[(c[f + 92 >> 2] | 0) + (a << 2) >> 2] | 0;\r\n            while (1) {\r\n                e = b[i >> 1] | 0;\r\n                if (!(e << 16 >> 16)) e = 0; else {\r\n                    a = b[d >> 1] | 0;\r\n                    h = e;\r\n                    f = j + ((e << 16 >> 16) + -1 << 1) | 0;\r\n                    while (1) {\r\n                        e = a << 16 >> 16;\r\n                        b[f >> 1] = e & 1;\r\n                        h = h + -1 << 16 >> 16;\r\n                        if (!(h << 16 >> 16)) break; else {\r\n                            a = e >>> 1 & 65535;\r\n                            f = f + -2 | 0\r\n                        }\r\n                    }\r\n                    e = b[i >> 1] | 0\r\n                }\r\n                d = d + 2 | 0;\r\n                g = g + -1 << 16 >> 16;\r\n                if (!(g << 16 >> 16)) break; else {\r\n                    j = j + (e << 16 >> 16 << 1) | 0;\r\n                    i = i + 2 | 0\r\n                }\r\n            }\r\n            return\r\n        }\r\n\r\n        function id(a, d, f, g, h, j) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            var k = 0, l = 0, m = 0, n = 0, o = 0;\r\n            o = i;\r\n            i = i + 16 | 0;\r\n            m = o + 2 | 0;\r\n            n = o;\r\n            k = h << 16 >> 16;\r\n            if (h << 16 >> 16 < 1) {\r\n                j = -5443;\r\n                n = -32768;\r\n                Wd(a, n, j);\r\n                i = o;\r\n                return\r\n            }\r\n            l = re(14, f, j) | 0;\r\n            if ((k | 0) < (l << 16 >> 16 | 0)) f = g; else {\r\n                f = (g & 65535) + 1 & 65535;\r\n                h = k >>> 1 & 65535\r\n            }\r\n            g = Td(h, l & 65535) | 0;\r\n            b[n >> 1] = g;\r\n            de(g << 16 >> 16, m, n, j);\r\n            b[m >> 1] = ((((f & 65535) - (d & 65535) << 16) + -65536 | 0) >>> 16) + (e[m >> 1] | 0);\r\n            g = Ee(b[n >> 1] | 0, 5, j) | 0;\r\n            k = b[m >> 1] | 0;\r\n            g = ((k & 65535) << 10) + (g & 65535) & 65535;\r\n            if (g << 16 >> 16 > 18284) {\r\n                j = 3037;\r\n                n = 18284;\r\n                Wd(a, n, j);\r\n                i = o;\r\n                return\r\n            }\r\n            h = b[n >> 1] | 0;\r\n            k = k << 16 >> 16;\r\n            if ((k * 24660 | 0) == 1073741824) {\r\n                c[j >> 2] = 1;\r\n                f = 2147483647\r\n            } else f = k * 49320 | 0;\r\n            n = (h << 16 >> 16) * 24660 >> 15;\r\n            k = f + (n << 1) | 0;\r\n            if ((f ^ n | 0) > 0 & (k ^ f | 0) < 0) {\r\n                c[j >> 2] = 1;\r\n                k = (f >>> 31) + 2147483647 | 0\r\n            }\r\n            n = k << 13;\r\n            j = Ce((n >> 13 | 0) == (k | 0) ? n : k >> 31 ^ 2147483647, j) | 0;\r\n            n = g;\r\n            Wd(a, n, j);\r\n            i = o;\r\n            return\r\n        }\r\n\r\n        function jd(a, d, f, g, h, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            p = p | 0;\r\n            q = q | 0;\r\n            r = r | 0;\r\n            s = s | 0;\r\n            t = t | 0;\r\n            u = u | 0;\r\n            v = v | 0;\r\n            w = w | 0;\r\n            x = x | 0;\r\n            var y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0,\r\n                N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, _ = 0, $ = 0,\r\n                aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0;\r\n            ha = i;\r\n            i = i + 80 | 0;\r\n            da = ha + 66 | 0;\r\n            ea = ha + 64 | 0;\r\n            fa = ha + 62 | 0;\r\n            ga = ha + 60 | 0;\r\n            O = ha + 40 | 0;\r\n            P = ha + 20 | 0;\r\n            M = ha;\r\n            b[da >> 1] = d;\r\n            b[ea >> 1] = m;\r\n            b[fa >> 1] = n;\r\n            L = re(14, f, x) | 0;\r\n            ca = L & 65535;\r\n            b[ga >> 1] = ca;\r\n            N = re(14, n, x) | 0;\r\n            K = (e[g >> 1] | 0) + 65523 | 0;\r\n            b[M >> 1] = K;\r\n            E = (e[g + 2 >> 1] | 0) + 65522 | 0;\r\n            F = M + 2 | 0;\r\n            b[F >> 1] = E;\r\n            G = ((d & 65535) << 16) + -720896 | 0;\r\n            B = G >> 16;\r\n            G = (G >>> 15) + 15 + (e[g + 4 >> 1] | 0) | 0;\r\n            H = M + 4 | 0;\r\n            b[H >> 1] = G;\r\n            I = (e[g + 6 >> 1] | 0) + B | 0;\r\n            J = M + 6 | 0;\r\n            b[J >> 1] = I;\r\n            B = B + 1 + (e[g + 8 >> 1] | 0) | 0;\r\n            C = M + 8 | 0;\r\n            b[C >> 1] = B;\r\n            y = (e[o >> 1] | 0) + 65523 & 65535;\r\n            b[M + 10 >> 1] = y;\r\n            D = (e[o + 2 >> 1] | 0) + 65522 & 65535;\r\n            b[M + 12 >> 1] = D;\r\n            z = ((m & 65535) << 16) + -720896 | 0;\r\n            g = z >> 16;\r\n            z = (z >>> 15) + 15 + (e[o + 4 >> 1] | 0) & 65535;\r\n            b[M + 14 >> 1] = z;\r\n            A = (e[o + 6 >> 1] | 0) + g & 65535;\r\n            b[M + 16 >> 1] = A;\r\n            g = g + 1 + (e[o + 8 >> 1] | 0) & 65535;\r\n            b[M + 18 >> 1] = g;\r\n            aa = (j & 65535) - (q & 65535) << 16;\r\n            m = aa >> 16;\r\n            if ((aa | 0) > 0) {\r\n                n = k;\r\n                f = r << 16 >> 16 >> m & 65535\r\n            } else {\r\n                n = k << 16 >> 16 >> 0 - m & 65535;\r\n                f = r\r\n            }\r\n            if ((Ee(f, 1, x) | 0) << 16 >> 16 > n << 16 >> 16) f = 1; else f = (((n << 16 >> 16) + 3 >> 2 | 0) > (f << 16 >> 16 | 0)) << 31 >> 31;\r\n            o = K + f & 65535;\r\n            b[M >> 1] = o;\r\n            aa = E + f & 65535;\r\n            b[F >> 1] = aa;\r\n            $ = G + f & 65535;\r\n            b[H >> 1] = $;\r\n            _ = I + f & 65535;\r\n            b[J >> 1] = _;\r\n            Y = B + f & 65535;\r\n            b[C >> 1] = Y;\r\n            m = g << 16 >> 16 > o << 16 >> 16 ? g : o;\r\n            m = A << 16 >> 16 > m << 16 >> 16 ? A : m;\r\n            m = z << 16 >> 16 > m << 16 >> 16 ? z : m;\r\n            m = D << 16 >> 16 > m << 16 >> 16 ? D : m;\r\n            m = y << 16 >> 16 > m << 16 >> 16 ? y : m;\r\n            m = Y << 16 >> 16 > m << 16 >> 16 ? Y : m;\r\n            m = _ << 16 >> 16 > m << 16 >> 16 ? _ : m;\r\n            m = $ << 16 >> 16 > m << 16 >> 16 ? $ : m;\r\n            m = (aa << 16 >> 16 > m << 16 >> 16 ? aa : m) + 1 & 65535;\r\n            g = 0;\r\n            while (1) {\r\n                f = m - (o & 65535) | 0;\r\n                o = f & 65535;\r\n                n = e[h >> 1] << 16;\r\n                f = f << 16 >> 16;\r\n                if (o << 16 >> 16 > 0) o = o << 16 >> 16 < 31 ? n >> f : 0; else {\r\n                    aa = 0 - f << 16 >> 16;\r\n                    o = n << aa;\r\n                    o = (o >> aa | 0) == (n | 0) ? o : n >> 31 ^ 2147483647\r\n                }\r\n                aa = o >> 16;\r\n                b[O + (g << 1) >> 1] = aa;\r\n                b[P + (g << 1) >> 1] = (o >>> 1) - (aa << 15);\r\n                g = g + 1 | 0;\r\n                if ((g | 0) == 5) {\r\n                    f = 5;\r\n                    n = p;\r\n                    break\r\n                }\r\n                o = b[M + (g << 1) >> 1] | 0;\r\n                h = h + 2 | 0\r\n            }\r\n            while (1) {\r\n                g = m - (y & 65535) | 0;\r\n                y = g & 65535;\r\n                o = e[n >> 1] << 16;\r\n                g = g << 16 >> 16;\r\n                if (y << 16 >> 16 > 0) o = y << 16 >> 16 < 31 ? o >> g : 0; else {\r\n                    $ = 0 - g << 16 >> 16;\r\n                    aa = o << $;\r\n                    o = (aa >> $ | 0) == (o | 0) ? aa : o >> 31 ^ 2147483647\r\n                }\r\n                aa = o >> 16;\r\n                b[O + (f << 1) >> 1] = aa;\r\n                b[P + (f << 1) >> 1] = (o >>> 1) - (aa << 15);\r\n                o = f + 1 | 0;\r\n                if ((o & 65535) << 16 >> 16 == 10) break;\r\n                y = b[M + (o << 1) >> 1] | 0;\r\n                f = o;\r\n                n = n + 2 | 0\r\n            }\r\n            Q = L << 16 >> 16;\r\n            R = b[O >> 1] | 0;\r\n            S = b[P >> 1] | 0;\r\n            T = b[O + 2 >> 1] | 0;\r\n            U = b[P + 2 >> 1] | 0;\r\n            V = b[O + 4 >> 1] | 0;\r\n            W = b[P + 4 >> 1] | 0;\r\n            X = b[O + 6 >> 1] | 0;\r\n            Y = b[P + 6 >> 1] | 0;\r\n            _ = b[O + 8 >> 1] | 0;\r\n            $ = b[P + 8 >> 1] | 0;\r\n            aa = s & 65535;\r\n            q = N << 16 >> 16;\r\n            j = b[O + 10 >> 1] | 0;\r\n            A = b[P + 10 >> 1] | 0;\r\n            z = b[O + 12 >> 1] | 0;\r\n            h = b[P + 12 >> 1] | 0;\r\n            f = b[O + 14 >> 1] | 0;\r\n            n = b[P + 14 >> 1] | 0;\r\n            g = b[O + 16 >> 1] | 0;\r\n            y = b[P + 16 >> 1] | 0;\r\n            B = b[O + 18 >> 1] | 0;\r\n            P = b[P + 18 >> 1] | 0;\r\n            m = 2147483647;\r\n            O = 0;\r\n            o = 0;\r\n            C = 782;\r\n            do {\r\n                M = b[C >> 1] | 0;\r\n                I = (Z(Q, b[C + 2 >> 1] | 0) | 0) >>> 15 << 16;\r\n                p = I >> 16;\r\n                G = M << 1;\r\n                K = (Z(G, M) | 0) >> 16;\r\n                r = Z(K, R) | 0;\r\n                if ((r | 0) == 1073741824) {\r\n                    c[x >> 2] = 1;\r\n                    J = 2147483647\r\n                } else J = r << 1;\r\n                N = (Z(S, K) | 0) >> 15;\r\n                r = J + (N << 1) | 0;\r\n                if ((J ^ N | 0) > 0 & (r ^ J | 0) < 0) {\r\n                    c[x >> 2] = 1;\r\n                    r = (J >>> 31) + 2147483647 | 0\r\n                }\r\n                K = Z(T, M) | 0;\r\n                if ((K | 0) == 1073741824) {\r\n                    c[x >> 2] = 1;\r\n                    J = 2147483647\r\n                } else J = K << 1;\r\n                N = (Z(U, M) | 0) >> 15;\r\n                K = J + (N << 1) | 0;\r\n                if ((J ^ N | 0) > 0 & (K ^ J | 0) < 0) {\r\n                    c[x >> 2] = 1;\r\n                    K = (J >>> 31) + 2147483647 | 0\r\n                }\r\n                I = (Z(I >> 15, p) | 0) >> 16;\r\n                J = Z(V, I) | 0;\r\n                if ((J | 0) == 1073741824) {\r\n                    c[x >> 2] = 1;\r\n                    H = 2147483647\r\n                } else H = J << 1;\r\n                N = (Z(W, I) | 0) >> 15;\r\n                J = H + (N << 1) | 0;\r\n                if ((H ^ N | 0) > 0 & (J ^ H | 0) < 0) {\r\n                    c[x >> 2] = 1;\r\n                    J = (H >>> 31) + 2147483647 | 0\r\n                }\r\n                I = Z(X, p) | 0;\r\n                if ((I | 0) == 1073741824) {\r\n                    c[x >> 2] = 1;\r\n                    H = 2147483647\r\n                } else H = I << 1;\r\n                N = (Z(Y, p) | 0) >> 15;\r\n                I = H + (N << 1) | 0;\r\n                if ((H ^ N | 0) > 0 & (I ^ H | 0) < 0) {\r\n                    c[x >> 2] = 1;\r\n                    N = (H >>> 31) + 2147483647 | 0\r\n                } else N = I;\r\n                H = (Z(G, p) | 0) >> 16;\r\n                I = Z(_, H) | 0;\r\n                if ((I | 0) == 1073741824) {\r\n                    c[x >> 2] = 1;\r\n                    G = 2147483647\r\n                } else G = I << 1;\r\n                L = (Z($, H) | 0) >> 15;\r\n                I = G + (L << 1) | 0;\r\n                if ((G ^ L | 0) > 0 & (I ^ G | 0) < 0) {\r\n                    c[x >> 2] = 1;\r\n                    I = (G >>> 31) + 2147483647 | 0\r\n                }\r\n                H = b[C + 4 >> 1] | 0;\r\n                G = b[C + 6 >> 1] | 0;\r\n                C = C + 8 | 0;\r\n                if ((M - aa & 65535) << 16 >> 16 < 1 ? (ba = H << 16 >> 16, H << 16 >> 16 <= s << 16 >> 16) : 0) {\r\n                    E = (Z(G << 16 >> 16, q) | 0) >>> 15 << 16;\r\n                    M = E >> 16;\r\n                    D = ba << 1;\r\n                    G = (Z(D, ba) | 0) >> 16;\r\n                    H = Z(j, G) | 0;\r\n                    if ((H | 0) == 1073741824) {\r\n                        c[x >> 2] = 1;\r\n                        F = 2147483647\r\n                    } else F = H << 1;\r\n                    L = (Z(A, G) | 0) >> 15;\r\n                    H = F + (L << 1) | 0;\r\n                    if ((F ^ L | 0) > 0 & (H ^ F | 0) < 0) {\r\n                        c[x >> 2] = 1;\r\n                        H = (F >>> 31) + 2147483647 | 0\r\n                    }\r\n                    G = Z(z, ba) | 0;\r\n                    if ((G | 0) == 1073741824) {\r\n                        c[x >> 2] = 1;\r\n                        F = 2147483647\r\n                    } else F = G << 1;\r\n                    L = (Z(h, ba) | 0) >> 15;\r\n                    G = F + (L << 1) | 0;\r\n                    if ((F ^ L | 0) > 0 & (G ^ F | 0) < 0) {\r\n                        c[x >> 2] = 1;\r\n                        L = (F >>> 31) + 2147483647 | 0\r\n                    } else L = G;\r\n                    F = (Z(E >> 15, M) | 0) >> 16;\r\n                    G = Z(f, F) | 0;\r\n                    if ((G | 0) == 1073741824) {\r\n                        c[x >> 2] = 1;\r\n                        E = 2147483647\r\n                    } else E = G << 1;\r\n                    p = (Z(n, F) | 0) >> 15;\r\n                    G = E + (p << 1) | 0;\r\n                    if ((E ^ p | 0) > 0 & (G ^ E | 0) < 0) {\r\n                        c[x >> 2] = 1;\r\n                        p = (E >>> 31) + 2147483647 | 0\r\n                    } else p = G;\r\n                    G = Z(g, M) | 0;\r\n                    if ((G | 0) == 1073741824) {\r\n                        c[x >> 2] = 1;\r\n                        F = 2147483647\r\n                    } else F = G << 1;\r\n                    E = (Z(y, M) | 0) >> 15;\r\n                    G = F + (E << 1) | 0;\r\n                    if ((F ^ E | 0) > 0 & (G ^ F | 0) < 0) {\r\n                        c[x >> 2] = 1;\r\n                        k = (F >>> 31) + 2147483647 | 0\r\n                    } else k = G;\r\n                    F = (Z(D, M) | 0) >> 16;\r\n                    G = Z(B, F) | 0;\r\n                    if ((G | 0) == 1073741824) {\r\n                        c[x >> 2] = 1;\r\n                        E = 2147483647\r\n                    } else E = G << 1;\r\n                    M = (Z(P, F) | 0) >> 15;\r\n                    G = E + (M << 1) | 0;\r\n                    if ((E ^ M | 0) > 0 & (G ^ E | 0) < 0) {\r\n                        c[x >> 2] = 1;\r\n                        G = (E >>> 31) + 2147483647 | 0\r\n                    }\r\n                    M = K + r + J + N + I + H + L + p + k + G | 0;\r\n                    N = (M | 0) < (m | 0);\r\n                    m = N ? M : m;\r\n                    o = N ? O : o\r\n                }\r\n                O = O + 1 << 16 >> 16\r\n            } while (O << 16 >> 16 < 256);\r\n            s = (o & 65535) << 18 >> 16;\r\n            kd(a, 782 + (s << 1) | 0, ca, d, t, u, x);\r\n            Vd(a, 0, l, ea, fa, da, ga, x);\r\n            l = (re(14, b[fa >> 1] | 0, x) | 0) & 65535;\r\n            kd(a, 782 + ((s | 2) << 1) | 0, l, b[ea >> 1] | 0, v, w, x);\r\n            i = ha;\r\n            return o | 0\r\n        }\r\n\r\n        function kd(a, d, f, g, h, j, k) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            var l = 0, m = 0, n = 0, o = 0;\r\n            o = i;\r\n            i = i + 16 | 0;\r\n            m = o + 2 | 0;\r\n            n = o;\r\n            b[h >> 1] = b[d >> 1] | 0;\r\n            l = b[d + 2 >> 1] | 0;\r\n            f = Z(f << 16 >> 16 << 1, l) | 0;\r\n            h = 10 - (g & 65535) | 0;\r\n            d = h & 65535;\r\n            h = h << 16 >> 16;\r\n            if (d << 16 >> 16 > 0) d = d << 16 >> 16 < 31 ? f >> h : 0; else {\r\n                h = 0 - h << 16 >> 16;\r\n                d = f << h;\r\n                d = (d >> h | 0) == (f | 0) ? d : f >> 31 ^ 2147483647\r\n            }\r\n            b[j >> 1] = d >>> 16;\r\n            de(l, m, n, k);\r\n            b[m >> 1] = (e[m >> 1] | 0) + 65524;\r\n            h = Ee(b[n >> 1] | 0, 5, k) | 0;\r\n            g = b[m >> 1] | 0;\r\n            h = ((g & 65535) << 10) + (h & 65535) & 65535;\r\n            f = b[n >> 1] | 0;\r\n            g = g << 16 >> 16;\r\n            if ((g * 24660 | 0) == 1073741824) {\r\n                c[k >> 2] = 1;\r\n                d = 2147483647\r\n            } else d = g * 49320 | 0;\r\n            n = (f << 16 >> 16) * 24660 >> 15;\r\n            g = d + (n << 1) | 0;\r\n            if (!((d ^ n | 0) > 0 & (g ^ d | 0) < 0)) {\r\n                k = g;\r\n                k = k << 13;\r\n                k = k + 32768 | 0;\r\n                k = k >>> 16;\r\n                k = k & 65535;\r\n                Wd(a, h, k);\r\n                i = o;\r\n                return\r\n            }\r\n            c[k >> 2] = 1;\r\n            k = (d >>> 31) + 2147483647 | 0;\r\n            k = k << 13;\r\n            k = k + 32768 | 0;\r\n            k = k >>> 16;\r\n            k = k & 65535;\r\n            Wd(a, h, k);\r\n            i = o;\r\n            return\r\n        }\r\n\r\n        function ld(a, d, f, g, h, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            p = p | 0;\r\n            q = q | 0;\r\n            r = r | 0;\r\n            s = s | 0;\r\n            t = t | 0;\r\n            u = u | 0;\r\n            v = v | 0;\r\n            w = w | 0;\r\n            x = x | 0;\r\n            y = y | 0;\r\n            var z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0,\r\n                O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, _ = 0, $ = 0, aa = 0,\r\n                ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0;\r\n            la = i;\r\n            i = i + 80 | 0;\r\n            ia = la + 72 | 0;\r\n            ja = la + 70 | 0;\r\n            ka = la + 68 | 0;\r\n            ga = la + 66 | 0;\r\n            ha = la + 56 | 0;\r\n            _ = la + 24 | 0;\r\n            Y = la + 12 | 0;\r\n            W = la + 48 | 0;\r\n            X = la + 40 | 0;\r\n            R = la + 34 | 0;\r\n            T = la + 22 | 0;\r\n            P = la + 6 | 0;\r\n            Q = la;\r\n            nd(5, r, s, P, Q, c[x + 72 >> 2] | 0, y) | 0;\r\n            B = re(14, n, y) | 0;\r\n            S = x + 68 | 0;\r\n            O = c[S >> 2] | 0;\r\n            V = m << 16 >> 16;\r\n            U = V + 65526 | 0;\r\n            r = (e[j >> 1] | 0) + 65523 & 65535;\r\n            b[ha >> 1] = r;\r\n            x = (e[j + 2 >> 1] | 0) + 65522 & 65535;\r\n            b[ha + 2 >> 1] = x;\r\n            da = U << 16 >> 16;\r\n            ea = ((U << 17 >> 17 | 0) == (da | 0) ? U << 1 : da >>> 15 ^ 32767) + 15 + (e[j + 4 >> 1] | 0) & 65535;\r\n            b[ha + 4 >> 1] = ea;\r\n            fa = (e[j + 6 >> 1] | 0) + da & 65535;\r\n            b[ha + 6 >> 1] = fa;\r\n            j = da + 1 + (e[j + 8 >> 1] | 0) & 65535;\r\n            b[ha + 8 >> 1] = j;\r\n            x = x << 16 >> 16 > r << 16 >> 16 ? x : r;\r\n            x = ea << 16 >> 16 > x << 16 >> 16 ? ea : x;\r\n            x = fa << 16 >> 16 > x << 16 >> 16 ? fa : x;\r\n            x = (Rd(j << 16 >> 16 > x << 16 >> 16 ? j : x, 1, y) | 0) & 65535;\r\n            j = r;\r\n            r = 0;\r\n            while (1) {\r\n                n = x - (j & 65535) | 0;\r\n                j = n & 65535;\r\n                A = e[h + (r << 1) >> 1] << 16;\r\n                n = n << 16 >> 16;\r\n                if (j << 16 >> 16 > 0) n = j << 16 >> 16 < 31 ? A >> n : 0; else {\r\n                    fa = 0 - n << 16 >> 16;\r\n                    n = A << fa;\r\n                    n = (n >> fa | 0) == (A | 0) ? n : A >> 31 ^ 2147483647\r\n                }\r\n                Nc(n, _ + (r << 1) | 0, Y + (r << 1) | 0, y);\r\n                n = r + 1 | 0;\r\n                if ((n | 0) == 5) break;\r\n                j = b[ha + (n << 1) >> 1] | 0;\r\n                r = n\r\n            }\r\n            M = _ + 2 | 0;\r\n            N = Y + 2 | 0;\r\n            fa = B << 16 >> 16;\r\n            $ = _ + 4 | 0;\r\n            aa = Y + 4 | 0;\r\n            ba = _ + 6 | 0;\r\n            ca = Y + 6 | 0;\r\n            da = _ + 8 | 0;\r\n            ea = Y + 8 | 0;\r\n            E = 0;\r\n            j = 2147483647;\r\n            h = 0;\r\n            n = 0;\r\n            while (1) {\r\n                L = b[P + (h << 1) >> 1] | 0;\r\n                B = Z(L, L) | 0;\r\n                if (B >>> 0 > 1073741823) {\r\n                    c[y >> 2] = 1;\r\n                    B = 32767\r\n                } else B = B >>> 15;\r\n                x = b[Y >> 1] | 0;\r\n                A = B << 16 >> 16;\r\n                B = Z(A, b[_ >> 1] | 0) | 0;\r\n                if ((B | 0) == 1073741824) {\r\n                    c[y >> 2] = 1;\r\n                    r = 2147483647\r\n                } else r = B << 1;\r\n                K = (Z(x << 16 >> 16, A) | 0) >> 15;\r\n                B = r + (K << 1) | 0;\r\n                if ((r ^ K | 0) > 0 & (B ^ r | 0) < 0) {\r\n                    c[y >> 2] = 1;\r\n                    B = (r >>> 31) + 2147483647 | 0\r\n                }\r\n                x = b[N >> 1] | 0;\r\n                A = Z(b[M >> 1] | 0, L) | 0;\r\n                if ((A | 0) != 1073741824) {\r\n                    r = (A << 1) + B | 0;\r\n                    if ((A ^ B | 0) > 0 & (r ^ B | 0) < 0) {\r\n                        c[y >> 2] = 1;\r\n                        r = (B >>> 31) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[y >> 2] = 1;\r\n                    r = 2147483647\r\n                }\r\n                B = (Z(x << 16 >> 16, L) | 0) >> 15;\r\n                if ((B | 0) > 32767) {\r\n                    c[y >> 2] = 1;\r\n                    B = 32767\r\n                }\r\n                K = B << 16;\r\n                B = (K >> 15) + r | 0;\r\n                if ((K >> 16 ^ r | 0) > 0 & (B ^ r | 0) < 0) {\r\n                    c[y >> 2] = 1;\r\n                    K = (r >>> 31) + 2147483647 | 0\r\n                } else K = B;\r\n                I = (K >>> 31) + 2147483647 | 0;\r\n                J = h & 65535;\r\n                B = E;\r\n                G = 0;\r\n                H = O;\r\n                do {\r\n                    A = (Z(b[H >> 1] | 0, fa) | 0) >> 15;\r\n                    H = H + 6 | 0;\r\n                    if ((A | 0) > 32767) {\r\n                        c[y >> 2] = 1;\r\n                        A = 32767\r\n                    }\r\n                    F = A << 16 >> 16;\r\n                    A = Z(F, F) | 0;\r\n                    if ((A | 0) == 1073741824) {\r\n                        c[y >> 2] = 1;\r\n                        D = 2147483647\r\n                    } else D = A << 1;\r\n                    Nc(D, ia, ja, y);\r\n                    A = Z(F, L) | 0;\r\n                    if ((A | 0) == 1073741824) {\r\n                        c[y >> 2] = 1;\r\n                        D = 2147483647\r\n                    } else D = A << 1;\r\n                    Nc(D, ka, ga, y);\r\n                    r = b[aa >> 1] | 0;\r\n                    C = b[ja >> 1] | 0;\r\n                    A = b[$ >> 1] | 0;\r\n                    x = b[ia >> 1] | 0;\r\n                    E = Z(x, A) | 0;\r\n                    if ((E | 0) != 1073741824) {\r\n                        D = (E << 1) + K | 0;\r\n                        if ((E ^ K | 0) > 0 & (D ^ K | 0) < 0) {\r\n                            c[y >> 2] = 1;\r\n                            D = I\r\n                        }\r\n                    } else {\r\n                        c[y >> 2] = 1;\r\n                        D = 2147483647\r\n                    }\r\n                    E = (Z(C << 16 >> 16, A) | 0) >> 15;\r\n                    if ((E | 0) > 32767) {\r\n                        c[y >> 2] = 1;\r\n                        E = 32767\r\n                    }\r\n                    C = E << 16;\r\n                    E = (C >> 15) + D | 0;\r\n                    if ((C >> 16 ^ D | 0) > 0 & (E ^ D | 0) < 0) {\r\n                        c[y >> 2] = 1;\r\n                        E = (D >>> 31) + 2147483647 | 0\r\n                    }\r\n                    D = (Z(x, r << 16 >> 16) | 0) >> 15;\r\n                    if ((D | 0) > 32767) {\r\n                        c[y >> 2] = 1;\r\n                        D = 32767\r\n                    }\r\n                    C = D << 16;\r\n                    D = (C >> 15) + E | 0;\r\n                    if ((C >> 16 ^ E | 0) > 0 & (D ^ E | 0) < 0) {\r\n                        c[y >> 2] = 1;\r\n                        D = (E >>> 31) + 2147483647 | 0\r\n                    }\r\n                    A = b[ca >> 1] | 0;\r\n                    E = Z(b[ba >> 1] | 0, F) | 0;\r\n                    if ((E | 0) != 1073741824) {\r\n                        C = (E << 1) + D | 0;\r\n                        if ((E ^ D | 0) > 0 & (C ^ D | 0) < 0) {\r\n                            c[y >> 2] = 1;\r\n                            C = (D >>> 31) + 2147483647 | 0\r\n                        }\r\n                    } else {\r\n                        c[y >> 2] = 1;\r\n                        C = 2147483647\r\n                    }\r\n                    A = (Z(A << 16 >> 16, F) | 0) >> 15;\r\n                    if ((A | 0) > 32767) {\r\n                        c[y >> 2] = 1;\r\n                        A = 32767\r\n                    }\r\n                    F = A << 16;\r\n                    A = (F >> 15) + C | 0;\r\n                    if ((F >> 16 ^ C | 0) > 0 & (A ^ C | 0) < 0) {\r\n                        c[y >> 2] = 1;\r\n                        A = (C >>> 31) + 2147483647 | 0\r\n                    }\r\n                    x = b[ea >> 1] | 0;\r\n                    C = b[ga >> 1] | 0;\r\n                    r = b[da >> 1] | 0;\r\n                    z = b[ka >> 1] | 0;\r\n                    E = Z(z, r) | 0;\r\n                    do if ((E | 0) == 1073741824) {\r\n                        c[y >> 2] = 1;\r\n                        E = 2147483647\r\n                    } else {\r\n                        D = (E << 1) + A | 0;\r\n                        if (!((E ^ A | 0) > 0 & (D ^ A | 0) < 0)) {\r\n                            E = D;\r\n                            break\r\n                        }\r\n                        c[y >> 2] = 1;\r\n                        E = (A >>> 31) + 2147483647 | 0\r\n                    } while (0);\r\n                    D = (Z(C << 16 >> 16, r) | 0) >> 15;\r\n                    if ((D | 0) > 32767) {\r\n                        c[y >> 2] = 1;\r\n                        D = 32767\r\n                    }\r\n                    F = D << 16;\r\n                    D = (F >> 15) + E | 0;\r\n                    if ((F >> 16 ^ E | 0) > 0 & (D ^ E | 0) < 0) {\r\n                        c[y >> 2] = 1;\r\n                        D = (E >>> 31) + 2147483647 | 0\r\n                    }\r\n                    A = (Z(z, x << 16 >> 16) | 0) >> 15;\r\n                    if ((A | 0) > 32767) {\r\n                        c[y >> 2] = 1;\r\n                        A = 32767\r\n                    }\r\n                    F = A << 16;\r\n                    A = (F >> 15) + D | 0;\r\n                    if ((F >> 16 ^ D | 0) > 0 & (A ^ D | 0) < 0) {\r\n                        c[y >> 2] = 1;\r\n                        A = (D >>> 31) + 2147483647 | 0\r\n                    }\r\n                    F = (A | 0) < (j | 0);\r\n                    B = F ? G : B;\r\n                    n = F ? J : n;\r\n                    j = F ? A : j;\r\n                    G = G + 1 << 16 >> 16\r\n                } while (G << 16 >> 16 < 32);\r\n                h = h + 1 | 0;\r\n                if ((h | 0) == 3) {\r\n                    A = B;\r\n                    h = n;\r\n                    break\r\n                } else E = B\r\n            }\r\n            N = (A << 16 >> 16) * 3 | 0;\r\n            j = b[O + (N << 1) >> 1] | 0;\r\n            b[u >> 1] = b[O + (N + 1 << 1) >> 1] | 0;\r\n            b[v >> 1] = b[O + (N + 2 << 1) >> 1] | 0;\r\n            j = Z(j << 16 >> 16, fa) | 0;\r\n            if ((j | 0) == 1073741824) {\r\n                c[y >> 2] = 1;\r\n                B = 2147483647\r\n            } else B = j << 1;\r\n            N = 9 - V | 0;\r\n            O = N & 65535;\r\n            N = N << 16 >> 16;\r\n            M = O << 16 >> 16 > 0;\r\n            if (M) B = O << 16 >> 16 < 31 ? B >> N : 0; else {\r\n                K = 0 - N << 16 >> 16;\r\n                L = B << K;\r\n                B = (L >> K | 0) == (B | 0) ? L : B >> 31 ^ 2147483647\r\n            }\r\n            b[t >> 1] = B >>> 16;\r\n            L = h << 16 >> 16;\r\n            P = b[P + (L << 1) >> 1] | 0;\r\n            b[s >> 1] = P;\r\n            Q = b[Q + (L << 1) >> 1] | 0;\r\n            Ub(d, f, g, P, o, W, X, R, y);\r\n            xc(a, b[R >> 1] | 0, b[t >> 1] | 0, T, y);\r\n            if (!((b[W >> 1] | 0) != 0 & (b[T >> 1] | 0) > 0)) {\r\n                y = A;\r\n                u = c[w >> 2] | 0;\r\n                t = u + 2 | 0;\r\n                b[u >> 1] = Q;\r\n                u = u + 4 | 0;\r\n                c[w >> 2] = u;\r\n                b[t >> 1] = y;\r\n                i = la;\r\n                return\r\n            }\r\n            F = W + 6 | 0;\r\n            b[F >> 1] = l;\r\n            D = X + 6 | 0;\r\n            b[D >> 1] = k;\r\n            m = ((Ge(q, m, y) | 0) & 65535) + 10 | 0;\r\n            x = m << 16 >> 16;\r\n            if ((m & 65535) << 16 >> 16 < 0) {\r\n                n = 0 - x << 16;\r\n                if ((n | 0) < 983040) p = p << 16 >> 16 >> (n >> 16) & 65535; else p = 0\r\n            } else {\r\n                n = p << 16 >> 16;\r\n                r = n << x;\r\n                if ((r << 16 >> 16 >> x | 0) == (n | 0)) p = r & 65535; else p = (n >>> 15 ^ 32767) & 65535\r\n            }\r\n            j = b[s >> 1] | 0;\r\n            B = b[T >> 1] | 0;\r\n            S = c[S >> 2] | 0;\r\n            r = b[t >> 1] | 0;\r\n            T = 10 - V | 0;\r\n            x = T << 16 >> 16;\r\n            if ((T & 65535) << 16 >> 16 < 0) {\r\n                n = 0 - x << 16;\r\n                if ((n | 0) < 983040) l = r << 16 >> 16 >> (n >> 16) & 65535; else l = 0\r\n            } else {\r\n                n = r << 16 >> 16;\r\n                r = n << x;\r\n                if ((r << 16 >> 16 >> x | 0) == (n | 0)) l = r & 65535; else l = (n >>> 15 ^ 32767) & 65535\r\n            }\r\n            h = j << 16 >> 16;\r\n            n = Z(h, h) | 0;\r\n            if (n >>> 0 > 1073741823) {\r\n                c[y >> 2] = 1;\r\n                j = 32767\r\n            } else j = n >>> 15;\r\n            A = Rd(32767 - (B & 65535) & 65535, 1, y) | 0;\r\n            B = B << 16 >> 16;\r\n            n = Z(b[W + 2 >> 1] | 0, B) | 0;\r\n            if ((n | 0) == 1073741824) {\r\n                c[y >> 2] = 1;\r\n                n = 2147483647\r\n            } else n = n << 1;\r\n            T = n << 1;\r\n            n = Z(((T >> 1 | 0) == (n | 0) ? T : n >> 31 ^ 2147418112) >> 16, j << 16 >> 16) | 0;\r\n            if ((n | 0) == 1073741824) {\r\n                c[y >> 2] = 1;\r\n                E = 2147483647\r\n            } else E = n << 1;\r\n            C = (e[X + 2 >> 1] | 0) + 65521 | 0;\r\n            x = C & 65535;\r\n            n = Z(b[W + 4 >> 1] | 0, B) | 0;\r\n            if ((n | 0) == 1073741824) {\r\n                c[y >> 2] = 1;\r\n                j = 2147483647\r\n            } else j = n << 1;\r\n            n = j << 1;\r\n            n = (Z(((n >> 1 | 0) == (j | 0) ? n : j >> 31 ^ 2147418112) >> 16, h) | 0) >> 15;\r\n            if ((n | 0) > 32767) {\r\n                c[y >> 2] = 1;\r\n                n = 32767\r\n            }\r\n            b[$ >> 1] = n;\r\n            j = U & 65535;\r\n            b[ia >> 1] = j;\r\n            j = Rd(b[X + 4 >> 1] | 0, j, y) | 0;\r\n            n = Z(b[F >> 1] | 0, B) | 0;\r\n            if ((n | 0) == 1073741824) {\r\n                c[y >> 2] = 1;\r\n                n = 2147483647\r\n            } else n = n << 1;\r\n            z = n << 1;\r\n            b[ba >> 1] = ((z >> 1 | 0) == (n | 0) ? z : n >> 31 ^ 2147418112) >>> 16;\r\n            z = ((V << 17 >> 17 | 0) == (V | 0) ? V << 1 : V >>> 15 ^ 32767) + 65529 & 65535;\r\n            b[ia >> 1] = z;\r\n            z = Rd(b[D >> 1] | 0, z, y) | 0;\r\n            n = (Z(b[F >> 1] | 0, A << 16 >> 16) | 0) >> 15;\r\n            if ((n | 0) > 32767) {\r\n                c[y >> 2] = 1;\r\n                n = 32767\r\n            }\r\n            b[da >> 1] = n;\r\n            A = Rd(z, 1, y) | 0;\r\n            r = Z(b[W >> 1] | 0, B) | 0;\r\n            if ((r | 0) == 1073741824) {\r\n                c[y >> 2] = 1;\r\n                n = 2147483647\r\n            } else n = r << 1;\r\n            D = Fe(n, ia, y) | 0;\r\n            h = (e[ia >> 1] | 0) + 47 | 0;\r\n            b[ia >> 1] = h;\r\n            h = (e[X >> 1] | 0) - (h & 65535) | 0;\r\n            B = h + 31 & 65535;\r\n            B = x << 16 >> 16 > B << 16 >> 16 ? x : B;\r\n            B = j << 16 >> 16 > B << 16 >> 16 ? j : B;\r\n            B = z << 16 >> 16 > B << 16 >> 16 ? z : B;\r\n            B = (A << 16 >> 16 > B << 16 >> 16 ? A : B) << 16 >> 16;\r\n            r = B - (C & 65535) | 0;\r\n            n = r & 65535;\r\n            r = r << 16 >> 16;\r\n            if (n << 16 >> 16 > 0) K = n << 16 >> 16 < 31 ? E >> r : 0; else {\r\n                X = 0 - r << 16 >> 16;\r\n                K = E << X;\r\n                K = (K >> X | 0) == (E | 0) ? K : E >> 31 ^ 2147483647\r\n            }\r\n            x = B - (j & 65535) | 0;\r\n            n = x & 65535;\r\n            r = e[$ >> 1] << 16;\r\n            x = x << 16 >> 16;\r\n            if (n << 16 >> 16 > 0) r = n << 16 >> 16 < 31 ? r >> x : 0; else {\r\n                W = 0 - x << 16 >> 16;\r\n                X = r << W;\r\n                r = (X >> W | 0) == (r | 0) ? X : r >> 31 ^ 2147483647\r\n            }\r\n            Nc(r, $, aa, y);\r\n            z = B - (z & 65535) | 0;\r\n            r = z & 65535;\r\n            x = e[ba >> 1] << 16;\r\n            z = z << 16 >> 16;\r\n            if (r << 16 >> 16 > 0) r = r << 16 >> 16 < 31 ? x >> z : 0; else {\r\n                X = 0 - z << 16 >> 16;\r\n                r = x << X;\r\n                r = (r >> X | 0) == (x | 0) ? r : x >> 31 ^ 2147483647\r\n            }\r\n            Nc(r, ba, ca, y);\r\n            z = B - (A & 65535) | 0;\r\n            r = z & 65535;\r\n            x = e[da >> 1] << 16;\r\n            z = z << 16 >> 16;\r\n            if (r << 16 >> 16 > 0) r = r << 16 >> 16 < 31 ? x >> z : 0; else {\r\n                X = 0 - z << 16 >> 16;\r\n                r = x << X;\r\n                r = (r >> X | 0) == (x | 0) ? r : x >> 31 ^ 2147483647\r\n            }\r\n            Nc(r, da, ea, y);\r\n            z = B + 65505 | 0;\r\n            b[ia >> 1] = z;\r\n            z = z - (h & 65535) | 0;\r\n            r = De(z & 65535, 1, y) | 0;\r\n            x = r << 16 >> 16;\r\n            if (r << 16 >> 16 > 0) x = r << 16 >> 16 < 31 ? D >> x : 0; else {\r\n                X = 0 - x << 16 >> 16;\r\n                x = D << X;\r\n                x = (x >> X | 0) == (D | 0) ? x : D >> 31 ^ 2147483647\r\n            }\r\n            do if (!(z & 1)) E = x; else {\r\n                Nc(x, _, Y, y);\r\n                r = b[Y >> 1] | 0;\r\n                x = b[_ >> 1] | 0;\r\n                if ((x * 23170 | 0) == 1073741824) {\r\n                    c[y >> 2] = 1;\r\n                    z = 2147483647\r\n                } else z = x * 46340 | 0;\r\n                _ = (r << 16 >> 16) * 23170 >> 15;\r\n                x = z + (_ << 1) | 0;\r\n                if (!((z ^ _ | 0) > 0 & (x ^ z | 0) < 0)) {\r\n                    E = x;\r\n                    break\r\n                }\r\n                c[y >> 2] = 1;\r\n                E = (z >>> 31) + 2147483647 | 0\r\n            } while (0);\r\n            F = (K >>> 31) + 2147483647 | 0;\r\n            D = 2147483647;\r\n            C = 0;\r\n            x = 0;\r\n            G = S;\r\n            while (1) {\r\n                r = (Z(b[G >> 1] | 0, fa) | 0) >> 15;\r\n                G = G + 6 | 0;\r\n                if ((r | 0) > 32767) {\r\n                    c[y >> 2] = 1;\r\n                    r = 32767\r\n                }\r\n                z = r & 65535;\r\n                if (z << 16 >> 16 >= l << 16 >> 16) break;\r\n                j = r << 16 >> 16;\r\n                r = Z(j, j) | 0;\r\n                if ((r | 0) == 1073741824) {\r\n                    c[y >> 2] = 1;\r\n                    n = 2147483647\r\n                } else n = r << 1;\r\n                Nc(n, ja, ka, y);\r\n                r = (Ge(z, p, y) | 0) << 16 >> 16;\r\n                r = Z(r, r) | 0;\r\n                if ((r | 0) == 1073741824) {\r\n                    c[y >> 2] = 1;\r\n                    r = 2147483647\r\n                } else r = r << 1;\r\n                Nc(r, ga, ha, y);\r\n                z = b[aa >> 1] | 0;\r\n                n = Z(b[$ >> 1] | 0, j) | 0;\r\n                do if ((n | 0) == 1073741824) {\r\n                    c[y >> 2] = 1;\r\n                    n = 2147483647\r\n                } else {\r\n                    r = (n << 1) + K | 0;\r\n                    if (!((n ^ K | 0) > 0 & (r ^ K | 0) < 0)) {\r\n                        n = r;\r\n                        break\r\n                    }\r\n                    c[y >> 2] = 1;\r\n                    n = F\r\n                } while (0);\r\n                r = (Z(z << 16 >> 16, j) | 0) >> 15;\r\n                if ((r | 0) > 32767) {\r\n                    c[y >> 2] = 1;\r\n                    r = 32767\r\n                }\r\n                _ = r << 16;\r\n                r = (_ >> 15) + n | 0;\r\n                if ((_ >> 16 ^ n | 0) > 0 & (r ^ n | 0) < 0) {\r\n                    c[y >> 2] = 1;\r\n                    r = (n >>> 31) + 2147483647 | 0\r\n                }\r\n                h = b[ca >> 1] | 0;\r\n                A = b[ka >> 1] | 0;\r\n                j = b[ba >> 1] | 0;\r\n                B = b[ja >> 1] | 0;\r\n                n = Z(B, j) | 0;\r\n                do if ((n | 0) == 1073741824) {\r\n                    c[y >> 2] = 1;\r\n                    z = 2147483647\r\n                } else {\r\n                    z = (n << 1) + r | 0;\r\n                    if (!((n ^ r | 0) > 0 & (z ^ r | 0) < 0)) break;\r\n                    c[y >> 2] = 1;\r\n                    z = (r >>> 31) + 2147483647 | 0\r\n                } while (0);\r\n                n = (Z(A << 16 >> 16, j) | 0) >> 15;\r\n                if ((n | 0) > 32767) {\r\n                    c[y >> 2] = 1;\r\n                    n = 32767\r\n                }\r\n                _ = n << 16;\r\n                n = (_ >> 15) + z | 0;\r\n                if ((_ >> 16 ^ z | 0) > 0 & (n ^ z | 0) < 0) {\r\n                    c[y >> 2] = 1;\r\n                    n = (z >>> 31) + 2147483647 | 0\r\n                }\r\n                r = (Z(B, h << 16 >> 16) | 0) >> 15;\r\n                if ((r | 0) > 32767) {\r\n                    c[y >> 2] = 1;\r\n                    r = 32767\r\n                }\r\n                _ = r << 16;\r\n                r = (_ >> 15) + n | 0;\r\n                if ((_ >> 16 ^ n | 0) > 0 & (r ^ n | 0) < 0) {\r\n                    c[y >> 2] = 1;\r\n                    r = (n >>> 31) + 2147483647 | 0\r\n                }\r\n                r = Fe(r, ia, y) | 0;\r\n                z = De(b[ia >> 1] | 0, 1, y) | 0;\r\n                n = z << 16 >> 16;\r\n                if (z << 16 >> 16 > 0) z = z << 16 >> 16 < 31 ? r >> n : 0; else {\r\n                    _ = 0 - n << 16 >> 16;\r\n                    z = r << _;\r\n                    z = (z >> _ | 0) == (r | 0) ? z : r >> 31 ^ 2147483647\r\n                }\r\n                r = z - E | 0;\r\n                if (((r ^ z) & (z ^ E) | 0) < 0) {\r\n                    c[y >> 2] = 1;\r\n                    r = (z >>> 31) + 2147483647 | 0\r\n                }\r\n                r = (Ce(r, y) | 0) << 16 >> 16;\r\n                r = Z(r, r) | 0;\r\n                if ((r | 0) == 1073741824) {\r\n                    c[y >> 2] = 1;\r\n                    z = 2147483647\r\n                } else z = r << 1;\r\n                B = b[ea >> 1] | 0;\r\n                j = b[ha >> 1] | 0;\r\n                A = b[da >> 1] | 0;\r\n                h = b[ga >> 1] | 0;\r\n                n = Z(h, A) | 0;\r\n                do if ((n | 0) == 1073741824) {\r\n                    c[y >> 2] = 1;\r\n                    r = 2147483647\r\n                } else {\r\n                    r = (n << 1) + z | 0;\r\n                    if (!((n ^ z | 0) > 0 & (r ^ z | 0) < 0)) break;\r\n                    c[y >> 2] = 1;\r\n                    r = (z >>> 31) + 2147483647 | 0\r\n                } while (0);\r\n                n = (Z(j << 16 >> 16, A) | 0) >> 15;\r\n                if ((n | 0) > 32767) {\r\n                    c[y >> 2] = 1;\r\n                    n = 32767\r\n                }\r\n                _ = n << 16;\r\n                n = (_ >> 15) + r | 0;\r\n                if ((_ >> 16 ^ r | 0) > 0 & (n ^ r | 0) < 0) {\r\n                    c[y >> 2] = 1;\r\n                    n = (r >>> 31) + 2147483647 | 0\r\n                }\r\n                r = (Z(h, B << 16 >> 16) | 0) >> 15;\r\n                if ((r | 0) > 32767) {\r\n                    c[y >> 2] = 1;\r\n                    r = 32767\r\n                }\r\n                _ = r << 16;\r\n                r = (_ >> 15) + n | 0;\r\n                if ((_ >> 16 ^ n | 0) > 0 & (r ^ n | 0) < 0) {\r\n                    c[y >> 2] = 1;\r\n                    r = (n >>> 31) + 2147483647 | 0\r\n                }\r\n                n = (r | 0) < (D | 0);\r\n                x = n ? C : x;\r\n                C = C + 1 << 16 >> 16;\r\n                if (C << 16 >> 16 >= 32) break; else D = n ? r : D\r\n            }\r\n            ka = (x << 16 >> 16) * 3 | 0;\r\n            z = b[S + (ka << 1) >> 1] | 0;\r\n            b[u >> 1] = b[S + (ka + 1 << 1) >> 1] | 0;\r\n            b[v >> 1] = b[S + (ka + 2 << 1) >> 1] | 0;\r\n            z = Z(z << 16 >> 16, fa) | 0;\r\n            if ((z | 0) == 1073741824) {\r\n                c[y >> 2] = 1;\r\n                z = 2147483647\r\n            } else z = z << 1;\r\n            if (M) z = O << 16 >> 16 < 31 ? z >> N : 0; else {\r\n                u = 0 - N << 16 >> 16;\r\n                y = z << u;\r\n                z = (y >> u | 0) == (z | 0) ? y : z >> 31 ^ 2147483647\r\n            }\r\n            b[t >> 1] = z >>> 16;\r\n            y = x;\r\n            u = c[w >> 2] | 0;\r\n            t = u + 2 | 0;\r\n            b[u >> 1] = Q;\r\n            u = u + 4 | 0;\r\n            c[w >> 2] = u;\r\n            b[t >> 1] = y;\r\n            i = la;\r\n            return\r\n        }\r\n\r\n        function md(a, c, d, e, f, g, h, i) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            var j = 0, k = 0, l = 0, m = 0, n = 0;\r\n            n = (a | 0) == 7;\r\n            j = b[e >> 1] | 0;\r\n            if (n) {\r\n                j = j << 16 >> 16 >>> 1 & 65535;\r\n                m = re(c, d, i) | 0;\r\n                c = m << 16;\r\n                a = c >> 16;\r\n                if ((m << 20 >> 20 | 0) == (a | 0)) a = c >> 12; else a = a >>> 15 ^ 32767\r\n            } else {\r\n                m = re(c, d, i) | 0;\r\n                c = m << 16;\r\n                a = c >> 16;\r\n                if ((m << 21 >> 21 | 0) == (a | 0)) a = c >> 11; else a = a >>> 15 ^ 32767\r\n            }\r\n            m = a << 16 >> 16;\r\n            i = j << 16 >> 16;\r\n            c = i - ((Z(m, b[h >> 1] | 0) | 0) >>> 15 & 65535) | 0;\r\n            c = ((c & 32768 | 0) != 0 ? 0 - c | 0 : c) & 65535;\r\n            k = 1;\r\n            a = 0;\r\n            l = h;\r\n            while (1) {\r\n                l = l + 6 | 0;\r\n                j = i - ((Z(b[l >> 1] | 0, m) | 0) >>> 15 & 65535) | 0;\r\n                d = j << 16;\r\n                j = (d | 0) < 0 ? 0 - (d >> 16) | 0 : j;\r\n                d = (j << 16 >> 16 | 0) < (c << 16 >> 16 | 0);\r\n                a = d ? k : a;\r\n                k = k + 1 << 16 >> 16;\r\n                if (k << 16 >> 16 >= 32) break; else c = d ? j & 65535 : c\r\n            }\r\n            l = (a << 16 >> 16) * 196608 >> 16;\r\n            b[e >> 1] = (Z(b[h + (l << 1) >> 1] | 0, m) | 0) >>> 15 << (n & 1);\r\n            b[f >> 1] = b[h + (l + 1 << 1) >> 1] | 0;\r\n            b[g >> 1] = b[h + (l + 2 << 1) >> 1] | 0;\r\n            return a | 0\r\n        }\r\n\r\n        function nd(a, c, d, e, f, g, h) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0;\r\n            i = Ge(b[d >> 1] | 0, b[g >> 1] | 0, h) | 0;\r\n            i = (i & 65535) - ((i & 65535) >>> 15 & 65535) | 0;\r\n            i = (i << 16 >> 31 ^ i) & 65535;\r\n            k = 0;\r\n            l = 1;\r\n            while (1) {\r\n                j = b[g + (l << 1) >> 1] | 0;\r\n                if (j << 16 >> 16 > c << 16 >> 16) j = i; else {\r\n                    j = Ge(b[d >> 1] | 0, j, h) | 0;\r\n                    j = (j & 65535) - ((j & 65535) >>> 15 & 65535) | 0;\r\n                    j = (j << 16 >> 31 ^ j) & 65535;\r\n                    n = j << 16 >> 16 < i << 16 >> 16;\r\n                    j = n ? j : i;\r\n                    k = n ? l & 65535 : k\r\n                }\r\n                l = l + 1 | 0;\r\n                if ((l | 0) == 16) break; else i = j\r\n            }\r\n            if ((a | 0) != 5) {\r\n                i = b[g + (k << 16 >> 16 << 1) >> 1] | 0;\r\n                if ((a | 0) == 7) {\r\n                    b[d >> 1] = i & 65532;\r\n                    return k | 0\r\n                } else {\r\n                    b[d >> 1] = i;\r\n                    return k | 0\r\n                }\r\n            }\r\n            j = k << 16 >> 16;\r\n            switch (k << 16 >> 16) {\r\n                case 0: {\r\n                    i = 0;\r\n                    break\r\n                }\r\n                case 15: {\r\n                    m = 8;\r\n                    break\r\n                }\r\n                default:\r\n                    if ((b[g + (j + 1 << 1) >> 1] | 0) > c << 16 >> 16) m = 8; else i = j + 65535 & 65535\r\n            }\r\n\r\n            if ((m | 0) == 8) i = j + 65534 & 65535;\r\n            b[f >> 1] = i;\r\n            n = i << 16 >> 16;\r\n            b[e >> 1] = b[g + (n << 1) >> 1] | 0;\r\n            n = n + 1 | 0;\r\n            b[f + 2 >> 1] = n;\r\n            n = n << 16 >> 16;\r\n            b[e + 2 >> 1] = b[g + (n << 1) >> 1] | 0;\r\n            n = n + 1 | 0;\r\n            b[f + 4 >> 1] = n;\r\n            b[e + 4 >> 1] = b[g + (n << 16 >> 16 << 1) >> 1] | 0;\r\n            b[d >> 1] = b[g + (j << 1) >> 1] | 0;\r\n            return k | 0\r\n        }\r\n\r\n        function od(a, d, f, g, h, j, k, l, m, n, o, p) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            p = p | 0;\r\n            var q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0,\r\n                F = 0, G = 0, H = 0, I = 0, J = 0, K = 0;\r\n            K = i;\r\n            i = i + 32 | 0;\r\n            s = K + 20 | 0;\r\n            t = K + 10 | 0;\r\n            r = K;\r\n            switch (a | 0) {\r\n                case 3:\r\n                case 4:\r\n                case 6: {\r\n                    o = o + 84 | 0;\r\n                    J = 128;\r\n                    break\r\n                }\r\n                default: {\r\n                    o = o + 80 | 0;\r\n                    J = 64\r\n                }\r\n            }\r\n            I = c[o >> 2] | 0;\r\n            q = re(14, f, p) | 0;\r\n            H = d << 16 >> 16;\r\n            G = H + 65525 | 0;\r\n            a = (e[h >> 1] | 0) + 65523 & 65535;\r\n            b[r >> 1] = a;\r\n            d = (e[h + 2 >> 1] | 0) + 65522 & 65535;\r\n            b[r + 2 >> 1] = d;\r\n            F = G << 16 >> 16;\r\n            F = Rd(b[h + 4 >> 1] | 0, ((G << 17 >> 17 | 0) == (F | 0) ? G << 1 : F >>> 15 ^ 32767) + 15 & 65535, p) | 0;\r\n            b[r + 4 >> 1] = F;\r\n            G = Rd(b[h + 6 >> 1] | 0, G & 65535, p) | 0;\r\n            b[r + 6 >> 1] = G;\r\n            h = Rd(b[h + 8 >> 1] | 0, H + 65526 & 65535, p) | 0;\r\n            b[r + 8 >> 1] = h;\r\n            d = d << 16 >> 16 > a << 16 >> 16 ? d : a;\r\n            d = F << 16 >> 16 > d << 16 >> 16 ? F : d;\r\n            d = G << 16 >> 16 > d << 16 >> 16 ? G : d;\r\n            d = (h << 16 >> 16 > d << 16 >> 16 ? h : d) + 1 & 65535;\r\n            h = 0;\r\n            while (1) {\r\n                f = d - (a & 65535) | 0;\r\n                o = f & 65535;\r\n                a = e[g + (h << 1) >> 1] << 16;\r\n                f = f << 16 >> 16;\r\n                if (o << 16 >> 16 > 0) o = o << 16 >> 16 < 31 ? a >> f : 0; else {\r\n                    G = 0 - f << 16 >> 16;\r\n                    o = a << G;\r\n                    o = (o >> G | 0) == (a | 0) ? o : a >> 31 ^ 2147483647\r\n                }\r\n                Nc(o, s + (h << 1) | 0, t + (h << 1) | 0, p);\r\n                o = h + 1 | 0;\r\n                if ((o | 0) == 5) break;\r\n                a = b[r + (o << 1) >> 1] | 0;\r\n                h = o\r\n            }\r\n            G = q << 16 >> 16;\r\n            y = b[s >> 1] | 0;\r\n            z = b[t >> 1] | 0;\r\n            A = b[s + 2 >> 1] | 0;\r\n            B = b[t + 2 >> 1] | 0;\r\n            C = b[s + 4 >> 1] | 0;\r\n            D = b[t + 4 >> 1] | 0;\r\n            E = b[s + 6 >> 1] | 0;\r\n            F = b[t + 6 >> 1] | 0;\r\n            x = b[s + 8 >> 1] | 0;\r\n            u = b[t + 8 >> 1] | 0;\r\n            d = 2147483647;\r\n            v = 0;\r\n            o = 0;\r\n            w = I;\r\n            while (1) {\r\n                h = b[w >> 1] | 0;\r\n                if (h << 16 >> 16 > j << 16 >> 16) q = d; else {\r\n                    q = (Z(b[w + 2 >> 1] | 0, G) | 0) >> 15;\r\n                    if ((q | 0) > 32767) {\r\n                        c[p >> 2] = 1;\r\n                        q = 32767\r\n                    }\r\n                    t = h << 16 >> 16;\r\n                    h = Z(t, t) | 0;\r\n                    if (h >>> 0 > 1073741823) {\r\n                        c[p >> 2] = 1;\r\n                        r = 32767\r\n                    } else r = h >>> 15;\r\n                    f = q << 16 >> 16;\r\n                    q = Z(f, f) | 0;\r\n                    if (q >>> 0 > 1073741823) {\r\n                        c[p >> 2] = 1;\r\n                        s = 32767\r\n                    } else s = q >>> 15;\r\n                    g = (Z(f, t) | 0) >> 15;\r\n                    if ((g | 0) > 32767) {\r\n                        c[p >> 2] = 1;\r\n                        g = 32767\r\n                    }\r\n                    q = r << 16 >> 16;\r\n                    r = Z(y, q) | 0;\r\n                    if ((r | 0) == 1073741824) {\r\n                        c[p >> 2] = 1;\r\n                        h = 2147483647\r\n                    } else h = r << 1;\r\n                    q = (Z(z, q) | 0) >> 15;\r\n                    r = h + (q << 1) | 0;\r\n                    if ((h ^ q | 0) > 0 & (r ^ h | 0) < 0) {\r\n                        c[p >> 2] = 1;\r\n                        r = (h >>> 31) + 2147483647 | 0\r\n                    }\r\n                    q = Z(A, t) | 0;\r\n                    if ((q | 0) == 1073741824) {\r\n                        c[p >> 2] = 1;\r\n                        h = 2147483647\r\n                    } else h = q << 1;\r\n                    t = (Z(B, t) | 0) >> 15;\r\n                    q = h + (t << 1) | 0;\r\n                    if ((h ^ t | 0) > 0 & (q ^ h | 0) < 0) {\r\n                        c[p >> 2] = 1;\r\n                        q = (h >>> 31) + 2147483647 | 0\r\n                    }\r\n                    h = q + r | 0;\r\n                    if ((q ^ r | 0) > -1 & (h ^ r | 0) < 0) {\r\n                        c[p >> 2] = 1;\r\n                        h = (r >>> 31) + 2147483647 | 0\r\n                    }\r\n                    q = s << 16 >> 16;\r\n                    r = Z(C, q) | 0;\r\n                    if ((r | 0) == 1073741824) {\r\n                        c[p >> 2] = 1;\r\n                        a = 2147483647\r\n                    } else a = r << 1;\r\n                    t = (Z(D, q) | 0) >> 15;\r\n                    r = a + (t << 1) | 0;\r\n                    if ((a ^ t | 0) > 0 & (r ^ a | 0) < 0) {\r\n                        c[p >> 2] = 1;\r\n                        r = (a >>> 31) + 2147483647 | 0\r\n                    }\r\n                    q = r + h | 0;\r\n                    if ((r ^ h | 0) > -1 & (q ^ h | 0) < 0) {\r\n                        c[p >> 2] = 1;\r\n                        a = (h >>> 31) + 2147483647 | 0\r\n                    } else a = q;\r\n                    q = Z(E, f) | 0;\r\n                    if ((q | 0) == 1073741824) {\r\n                        c[p >> 2] = 1;\r\n                        r = 2147483647\r\n                    } else r = q << 1;\r\n                    t = (Z(F, f) | 0) >> 15;\r\n                    q = r + (t << 1) | 0;\r\n                    if ((r ^ t | 0) > 0 & (q ^ r | 0) < 0) {\r\n                        c[p >> 2] = 1;\r\n                        q = (r >>> 31) + 2147483647 | 0\r\n                    }\r\n                    h = q + a | 0;\r\n                    if ((q ^ a | 0) > -1 & (h ^ a | 0) < 0) {\r\n                        c[p >> 2] = 1;\r\n                        r = (a >>> 31) + 2147483647 | 0\r\n                    } else r = h;\r\n                    h = g << 16 >> 16;\r\n                    q = Z(x, h) | 0;\r\n                    if ((q | 0) == 1073741824) {\r\n                        c[p >> 2] = 1;\r\n                        a = 2147483647\r\n                    } else a = q << 1;\r\n                    t = (Z(u, h) | 0) >> 15;\r\n                    q = a + (t << 1) | 0;\r\n                    if ((a ^ t | 0) > 0 & (q ^ a | 0) < 0) {\r\n                        c[p >> 2] = 1;\r\n                        h = (a >>> 31) + 2147483647 | 0\r\n                    } else h = q;\r\n                    q = h + r | 0;\r\n                    if ((h ^ r | 0) > -1 & (q ^ r | 0) < 0) {\r\n                        c[p >> 2] = 1;\r\n                        q = (r >>> 31) + 2147483647 | 0\r\n                    }\r\n                    t = (q | 0) < (d | 0);\r\n                    q = t ? q : d;\r\n                    o = t ? v : o\r\n                }\r\n                w = w + 8 | 0;\r\n                v = v + 1 << 16 >> 16;\r\n                if ((v << 16 >> 16 | 0) >= (J | 0)) break; else d = q\r\n            }\r\n            j = o << 16 >> 16;\r\n            j = ((j << 18 >> 18 | 0) == (j | 0) ? j << 2 : j >>> 15 ^ 32767) << 16 >> 16;\r\n            b[k >> 1] = b[I + (j << 1) >> 1] | 0;\r\n            d = b[I + (j + 1 << 1) >> 1] | 0;\r\n            b[m >> 1] = b[I + (j + 2 << 1) >> 1] | 0;\r\n            b[n >> 1] = b[I + (j + 3 << 1) >> 1] | 0;\r\n            d = Z(d << 16 >> 16, G) | 0;\r\n            if ((d | 0) == 1073741824) {\r\n                c[p >> 2] = 1;\r\n                a = 2147483647\r\n            } else a = d << 1;\r\n            f = 10 - H | 0;\r\n            d = f & 65535;\r\n            f = f << 16 >> 16;\r\n            if (d << 16 >> 16 > 0) {\r\n                p = d << 16 >> 16 < 31 ? a >> f : 0;\r\n                p = p >>> 16;\r\n                p = p & 65535;\r\n                b[l >> 1] = p;\r\n                i = K;\r\n                return o | 0\r\n            } else {\r\n                m = 0 - f << 16 >> 16;\r\n                p = a << m;\r\n                p = (p >> m | 0) == (a | 0) ? p : a >> 31 ^ 2147483647;\r\n                p = p >>> 16;\r\n                p = p & 65535;\r\n                b[l >> 1] = p;\r\n                i = K;\r\n                return o | 0\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function pd(a, c, d, f, g, h, j, k, l) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            var m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0,\r\n                B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0,\r\n                Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0,\r\n                da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0, ma = 0, na = 0, oa = 0, pa = 0,\r\n                qa = 0, ra = 0, sa = 0, ta = 0, ua = 0, va = 0, wa = 0;\r\n            wa = i;\r\n            i = i + 160 | 0;\r\n            va = wa;\r\n            n = a << 16 >> 16;\r\n            ta = a << 16 >> 16 == 10;\r\n            ua = b[j + (b[h >> 1] << 1) >> 1] | 0;\r\n            if (a << 16 >> 16 > 0) {\r\n                l = 0;\r\n                m = k;\r\n                while (1) {\r\n                    b[m >> 1] = l;\r\n                    l = l + 1 << 16 >> 16;\r\n                    if (l << 16 >> 16 >= a << 16 >> 16) break; else m = m + 2 | 0\r\n                }\r\n            }\r\n            if (d << 16 >> 16 <= 1) {\r\n                i = wa;\r\n                return\r\n            }\r\n            ra = h + 2 | 0;\r\n            sa = ua << 16 >> 16;\r\n            oa = f + (sa << 1) | 0;\r\n            pa = g + (sa * 80 | 0) + (sa << 1) | 0;\r\n            qa = h + 6 | 0;\r\n            X = c & 65535;\r\n            Y = h + 4 | 0;\r\n            _ = h + 10 | 0;\r\n            $ = h + 8 | 0;\r\n            aa = h + 14 | 0;\r\n            ba = h + 12 | 0;\r\n            ca = h + 18 | 0;\r\n            da = h + 16 | 0;\r\n            ea = k + 2 | 0;\r\n            fa = k + 4 | 0;\r\n            ga = k + 6 | 0;\r\n            ha = k + 8 | 0;\r\n            ia = k + 10 | 0;\r\n            ja = k + 12 | 0;\r\n            ka = k + 14 | 0;\r\n            la = k + 16 | 0;\r\n            ma = k + 18 | 0;\r\n            na = a << 16 >> 16 > 2;\r\n            V = h + (n + -1 << 1) | 0;\r\n            T = 1;\r\n            W = 1;\r\n            N = 0;\r\n            O = 0;\r\n            U = -1;\r\n            while (1) {\r\n                S = b[j + (b[ra >> 1] << 1) >> 1] | 0;\r\n                R = S << 16 >> 16;\r\n                c = (e[f + (R << 1) >> 1] | 0) + (e[oa >> 1] | 0) | 0;\r\n                m = (b[g + (sa * 80 | 0) + (R << 1) >> 1] << 13) + 32768 + ((b[g + (R * 80 | 0) + (R << 1) >> 1] | 0) + (b[pa >> 1] | 0) << 12) | 0;\r\n                n = b[qa >> 1] | 0;\r\n                if (n << 16 >> 16 < 40) {\r\n                    n = n << 16 >> 16;\r\n                    o = va;\r\n                    while (1) {\r\n                        P = (b[g + (n * 80 | 0) + (n << 1) >> 1] | 0) >>> 1;\r\n                        M = b[g + (n * 80 | 0) + (sa << 1) >> 1] | 0;\r\n                        Q = b[g + (n * 80 | 0) + (R << 1) >> 1] | 0;\r\n                        b[o >> 1] = c + (e[f + (n << 1) >> 1] | 0);\r\n                        b[o + 2 >> 1] = (M + 2 + P + Q | 0) >>> 2;\r\n                        n = n + X | 0;\r\n                        if ((n & 65535) << 16 >> 16 < 40) {\r\n                            n = n << 16 >> 16;\r\n                            o = o + 4 | 0\r\n                        } else break\r\n                    }\r\n                    B = b[qa >> 1] | 0\r\n                } else B = n;\r\n                c = b[Y >> 1] | 0;\r\n                A = m >> 12;\r\n                n = c << 16 >> 16;\r\n                a:do if (c << 16 >> 16 < 40) {\r\n                    z = B << 16 >> 16;\r\n                    if (B << 16 >> 16 < 40) {\r\n                        o = 1;\r\n                        q = c;\r\n                        s = B;\r\n                        r = 0;\r\n                        p = -1\r\n                    } else while (1) {\r\n                        n = n + X | 0;\r\n                        if ((n & 65535) << 16 >> 16 < 40) n = n << 16 >> 16; else {\r\n                            o = 1;\r\n                            Q = c;\r\n                            P = B;\r\n                            n = 0;\r\n                            break a\r\n                        }\r\n                    }\r\n                    while (1) {\r\n                        y = ((b[g + (n * 80 | 0) + (n << 1) >> 1] | 0) + A >> 1) + (b[g + (n * 80 | 0) + (sa << 1) >> 1] | 0) + (b[g + (n * 80 | 0) + (R << 1) >> 1] | 0) | 0;\r\n                        x = e[f + (n << 1) >> 1] | 0;\r\n                        v = z;\r\n                        w = B;\r\n                        u = va;\r\n                        t = r;\r\n                        while (1) {\r\n                            m = (e[u >> 1] | 0) + x | 0;\r\n                            l = m << 16 >> 16;\r\n                            l = (Z(l, l) | 0) >>> 15;\r\n                            r = (y + (b[g + (n * 80 | 0) + (v << 1) >> 1] | 0) >> 2) + (b[u + 2 >> 1] | 0) >> 1;\r\n                            if ((Z(l << 16 >> 16, o << 16 >> 16) | 0) > (Z(r, p << 16 >> 16) | 0)) {\r\n                                o = r & 65535;\r\n                                q = c;\r\n                                s = w;\r\n                                r = m & 65535;\r\n                                p = l & 65535\r\n                            } else r = t;\r\n                            m = v + X | 0;\r\n                            w = m & 65535;\r\n                            if (w << 16 >> 16 >= 40) break; else {\r\n                                v = m << 16 >> 16;\r\n                                u = u + 4 | 0;\r\n                                t = r\r\n                            }\r\n                        }\r\n                        n = n + X | 0;\r\n                        c = n & 65535;\r\n                        if (c << 16 >> 16 < 40) n = n << 16 >> 16; else {\r\n                            Q = q;\r\n                            P = s;\r\n                            n = r;\r\n                            break\r\n                        }\r\n                    }\r\n                } else {\r\n                    o = 1;\r\n                    Q = c;\r\n                    P = B;\r\n                    n = 0\r\n                } while (0);\r\n                q = o << 16 >> 16 << 15;\r\n                o = b[_ >> 1] | 0;\r\n                if (o << 16 >> 16 < 40) {\r\n                    m = Q << 16 >> 16;\r\n                    l = P << 16 >> 16;\r\n                    c = n & 65535;\r\n                    o = o << 16 >> 16;\r\n                    n = va;\r\n                    while (1) {\r\n                        J = b[g + (o * 80 | 0) + (o << 1) >> 1] >> 1;\r\n                        I = b[g + (o * 80 | 0) + (sa << 1) >> 1] | 0;\r\n                        K = b[g + (o * 80 | 0) + (R << 1) >> 1] | 0;\r\n                        L = b[g + (o * 80 | 0) + (m << 1) >> 1] | 0;\r\n                        M = b[g + (o * 80 | 0) + (l << 1) >> 1] | 0;\r\n                        b[n >> 1] = (e[f + (o << 1) >> 1] | 0) + c;\r\n                        b[n + 2 >> 1] = (I + 2 + J + K + L + M | 0) >>> 2;\r\n                        o = o + X | 0;\r\n                        if ((o & 65535) << 16 >> 16 < 40) {\r\n                            o = o << 16 >> 16;\r\n                            n = n + 4 | 0\r\n                        } else break\r\n                    }\r\n                    J = b[_ >> 1] | 0\r\n                } else J = o;\r\n                p = b[$ >> 1] | 0;\r\n                o = p << 16 >> 16;\r\n                b:do if (p << 16 >> 16 < 40) {\r\n                    C = Q << 16 >> 16;\r\n                    D = P << 16 >> 16;\r\n                    E = J << 16 >> 16;\r\n                    B = q + 32768 | 0;\r\n                    if (J << 16 >> 16 < 40) {\r\n                        r = 1;\r\n                        q = p;\r\n                        c = J;\r\n                        s = p;\r\n                        n = 0;\r\n                        p = -1\r\n                    } else while (1) {\r\n                        o = o + X | 0;\r\n                        if ((o & 65535) << 16 >> 16 < 40) o = o << 16 >> 16; else {\r\n                            o = 1;\r\n                            M = p;\r\n                            L = J;\r\n                            n = 0;\r\n                            break b\r\n                        }\r\n                    }\r\n                    while (1) {\r\n                        l = e[f + (o << 1) >> 1] | 0;\r\n                        A = (b[g + (o * 80 | 0) + (R << 1) >> 1] | 0) + (b[g + (o * 80 | 0) + (sa << 1) >> 1] | 0) + (b[g + (o * 80 | 0) + (C << 1) >> 1] | 0) + (b[g + (o * 80 | 0) + (D << 1) >> 1] | 0) | 0;\r\n                        z = B + (b[g + (o * 80 | 0) + (o << 1) >> 1] << 11) | 0;\r\n                        x = E;\r\n                        v = J;\r\n                        y = va;\r\n                        while (1) {\r\n                            t = (e[y >> 1] | 0) + l | 0;\r\n                            m = z + (b[y + 2 >> 1] << 14) + (A + (b[g + (o * 80 | 0) + (x << 1) >> 1] | 0) << 12) | 0;\r\n                            u = t << 16 >> 16;\r\n                            u = (Z(u, u) | 0) >>> 15;\r\n                            if ((Z(u << 16 >> 16, r << 16 >> 16) | 0) > (Z(m >> 16, p << 16 >> 16) | 0)) {\r\n                                r = m >>> 16 & 65535;\r\n                                w = s;\r\n                                c = v;\r\n                                n = t & 65535;\r\n                                p = u & 65535\r\n                            } else w = q;\r\n                            q = x + X | 0;\r\n                            v = q & 65535;\r\n                            if (v << 16 >> 16 >= 40) {\r\n                                q = w;\r\n                                break\r\n                            } else {\r\n                                x = q << 16 >> 16;\r\n                                q = w;\r\n                                y = y + 4 | 0\r\n                            }\r\n                        }\r\n                        o = o + X | 0;\r\n                        s = o & 65535;\r\n                        if (s << 16 >> 16 < 40) o = o << 16 >> 16; else {\r\n                            o = r;\r\n                            M = q;\r\n                            L = c;\r\n                            break\r\n                        }\r\n                    }\r\n                } else {\r\n                    o = 1;\r\n                    M = p;\r\n                    L = J;\r\n                    n = 0\r\n                } while (0);\r\n                r = o << 16 >> 16 << 15;\r\n                o = b[aa >> 1] | 0;\r\n                if (o << 16 >> 16 < 40) {\r\n                    m = Q << 16 >> 16;\r\n                    l = P << 16 >> 16;\r\n                    p = M << 16 >> 16;\r\n                    q = L << 16 >> 16;\r\n                    c = n & 65535;\r\n                    o = o << 16 >> 16;\r\n                    n = va;\r\n                    while (1) {\r\n                        F = b[g + (o * 80 | 0) + (o << 1) >> 1] >> 1;\r\n                        E = b[g + (sa * 80 | 0) + (o << 1) >> 1] | 0;\r\n                        G = b[g + (R * 80 | 0) + (o << 1) >> 1] | 0;\r\n                        H = b[g + (m * 80 | 0) + (o << 1) >> 1] | 0;\r\n                        I = b[g + (l * 80 | 0) + (o << 1) >> 1] | 0;\r\n                        J = b[g + (p * 80 | 0) + (o << 1) >> 1] | 0;\r\n                        K = b[g + (q * 80 | 0) + (o << 1) >> 1] | 0;\r\n                        b[n >> 1] = (e[f + (o << 1) >> 1] | 0) + c;\r\n                        b[n + 2 >> 1] = (E + 4 + F + G + H + I + J + K | 0) >>> 3;\r\n                        o = o + X | 0;\r\n                        if ((o & 65535) << 16 >> 16 < 40) {\r\n                            o = o << 16 >> 16;\r\n                            n = n + 4 | 0\r\n                        } else break\r\n                    }\r\n                    c = b[aa >> 1] | 0\r\n                } else c = o;\r\n                s = b[ba >> 1] | 0;\r\n                if (s << 16 >> 16 < 40) {\r\n                    J = Q << 16 >> 16;\r\n                    F = P << 16 >> 16;\r\n                    E = M << 16 >> 16;\r\n                    D = L << 16 >> 16;\r\n                    C = c << 16 >> 16;\r\n                    B = c << 16 >> 16 < 40;\r\n                    G = r + 32768 | 0;\r\n                    I = s << 16 >> 16;\r\n                    l = 1;\r\n                    w = s;\r\n                    v = c;\r\n                    H = s;\r\n                    q = 0;\r\n                    o = -1;\r\n                    while (1) {\r\n                        if (B) {\r\n                            r = e[f + (I << 1) >> 1] | 0;\r\n                            n = (b[g + (I * 80 | 0) + (R << 1) >> 1] | 0) + (b[g + (I * 80 | 0) + (sa << 1) >> 1] | 0) + (b[g + (I * 80 | 0) + (J << 1) >> 1] | 0) + (b[g + (I * 80 | 0) + (F << 1) >> 1] | 0) + (b[g + (I * 80 | 0) + (E << 1) >> 1] | 0) + (b[g + (I * 80 | 0) + (D << 1) >> 1] | 0) | 0;\r\n                            p = G + (b[g + (I * 80 | 0) + (I << 1) >> 1] << 10) | 0;\r\n                            u = C;\r\n                            s = c;\r\n                            z = v;\r\n                            A = va;\r\n                            while (1) {\r\n                                y = (e[A >> 1] | 0) + r | 0;\r\n                                v = p + (b[A + 2 >> 1] << 14) + (n + (b[g + (I * 80 | 0) + (u << 1) >> 1] | 0) << 11) | 0;\r\n                                x = y << 16 >> 16;\r\n                                x = (Z(x, x) | 0) >>> 15;\r\n                                if ((Z(x << 16 >> 16, l << 16 >> 16) | 0) > (Z(v >> 16, o << 16 >> 16) | 0)) {\r\n                                    l = v >>> 16 & 65535;\r\n                                    w = H;\r\n                                    v = s;\r\n                                    q = y & 65535;\r\n                                    o = x & 65535\r\n                                } else v = z;\r\n                                t = u + X | 0;\r\n                                s = t & 65535;\r\n                                if (s << 16 >> 16 >= 40) break; else {\r\n                                    u = t << 16 >> 16;\r\n                                    z = v;\r\n                                    A = A + 4 | 0\r\n                                }\r\n                            }\r\n                        }\r\n                        s = I + X | 0;\r\n                        H = s & 65535;\r\n                        if (H << 16 >> 16 >= 40) {\r\n                            K = v;\r\n                            break\r\n                        } else I = s << 16 >> 16\r\n                    }\r\n                } else {\r\n                    l = 1;\r\n                    w = s;\r\n                    K = c;\r\n                    q = 0;\r\n                    o = -1\r\n                }\r\n                if (ta) {\r\n                    u = l << 16 >> 16 << 15;\r\n                    o = b[ca >> 1] | 0;\r\n                    if (o << 16 >> 16 < 40) {\r\n                        n = Q << 16 >> 16;\r\n                        c = P << 16 >> 16;\r\n                        m = M << 16 >> 16;\r\n                        l = L << 16 >> 16;\r\n                        r = w << 16 >> 16;\r\n                        s = K << 16 >> 16;\r\n                        p = q & 65535;\r\n                        o = o << 16 >> 16;\r\n                        q = va;\r\n                        while (1) {\r\n                            E = b[g + (o * 80 | 0) + (o << 1) >> 1] >> 1;\r\n                            D = b[g + (sa * 80 | 0) + (o << 1) >> 1] | 0;\r\n                            F = b[g + (R * 80 | 0) + (o << 1) >> 1] | 0;\r\n                            G = b[g + (n * 80 | 0) + (o << 1) >> 1] | 0;\r\n                            H = b[g + (c * 80 | 0) + (o << 1) >> 1] | 0;\r\n                            I = b[g + (m * 80 | 0) + (o << 1) >> 1] | 0;\r\n                            J = b[g + (l * 80 | 0) + (o << 1) >> 1] | 0;\r\n                            N = b[g + (r * 80 | 0) + (o << 1) >> 1] | 0;\r\n                            O = b[g + (s * 80 | 0) + (o << 1) >> 1] | 0;\r\n                            b[q >> 1] = (e[f + (o << 1) >> 1] | 0) + p;\r\n                            b[q + 2 >> 1] = (D + 4 + E + F + G + H + I + J + N + O | 0) >>> 3;\r\n                            o = o + X | 0;\r\n                            if ((o & 65535) << 16 >> 16 < 40) {\r\n                                o = o << 16 >> 16;\r\n                                q = q + 4 | 0\r\n                            } else break\r\n                        }\r\n                        J = b[ca >> 1] | 0\r\n                    } else J = o;\r\n                    r = b[da >> 1] | 0;\r\n                    if (r << 16 >> 16 < 40) {\r\n                        E = Q << 16 >> 16;\r\n                        D = P << 16 >> 16;\r\n                        C = M << 16 >> 16;\r\n                        m = L << 16 >> 16;\r\n                        F = w << 16 >> 16;\r\n                        G = K << 16 >> 16;\r\n                        H = J << 16 >> 16;\r\n                        I = J << 16 >> 16 < 40;\r\n                        B = u + 32768 | 0;\r\n                        n = r << 16 >> 16;\r\n                        l = 1;\r\n                        s = r;\r\n                        q = J;\r\n                        c = r;\r\n                        o = -1;\r\n                        while (1) {\r\n                            if (I) {\r\n                                u = e[f + (n << 1) >> 1] | 0;\r\n                                p = (b[g + (R * 80 | 0) + (n << 1) >> 1] | 0) + (b[g + (sa * 80 | 0) + (n << 1) >> 1] | 0) + (b[g + (E * 80 | 0) + (n << 1) >> 1] | 0) + (b[g + (D * 80 | 0) + (n << 1) >> 1] | 0) + (b[g + (C * 80 | 0) + (n << 1) >> 1] | 0) + (b[g + (m * 80 | 0) + (n << 1) >> 1] | 0) + (b[g + (F * 80 | 0) + (n << 1) >> 1] | 0) + (b[g + (G * 80 | 0) + (n << 1) >> 1] | 0) | 0;\r\n                                r = B + (b[g + (n * 80 | 0) + (n << 1) >> 1] << 9) | 0;\r\n                                A = H;\r\n                                x = J;\r\n                                z = va;\r\n                                while (1) {\r\n                                    y = (e[z >> 1] | 0) + u << 16 >> 16;\r\n                                    y = (Z(y, y) | 0) >>> 15;\r\n                                    v = r + (b[z + 2 >> 1] << 13) + (p + (b[g + (n * 80 | 0) + (A << 1) >> 1] | 0) << 10) | 0;\r\n                                    if ((Z(y << 16 >> 16, l << 16 >> 16) | 0) > (Z(v >> 16, o << 16 >> 16) | 0)) {\r\n                                        l = v >>> 16 & 65535;\r\n                                        s = c;\r\n                                        q = x;\r\n                                        o = y & 65535\r\n                                    }\r\n                                    t = A + X | 0;\r\n                                    x = t & 65535;\r\n                                    if (x << 16 >> 16 >= 40) break; else {\r\n                                        A = t << 16 >> 16;\r\n                                        z = z + 4 | 0\r\n                                    }\r\n                                }\r\n                            }\r\n                            r = n + X | 0;\r\n                            c = r & 65535;\r\n                            if (c << 16 >> 16 >= 40) break; else n = r << 16 >> 16\r\n                        }\r\n                    } else {\r\n                        l = 1;\r\n                        s = r;\r\n                        q = J;\r\n                        o = -1\r\n                    }\r\n                } else {\r\n                    s = N;\r\n                    q = O\r\n                }\r\n                if ((Z(o << 16 >> 16, T << 16 >> 16) | 0) > (Z(l << 16 >> 16, U << 16 >> 16) | 0)) {\r\n                    b[k >> 1] = ua;\r\n                    b[ea >> 1] = S;\r\n                    b[fa >> 1] = Q;\r\n                    b[ga >> 1] = P;\r\n                    b[ha >> 1] = M;\r\n                    b[ia >> 1] = L;\r\n                    b[ja >> 1] = w;\r\n                    b[ka >> 1] = K;\r\n                    if (ta) {\r\n                        b[la >> 1] = s;\r\n                        b[ma >> 1] = q\r\n                    }\r\n                } else {\r\n                    l = T;\r\n                    o = U\r\n                }\r\n                n = b[ra >> 1] | 0;\r\n                if (na) {\r\n                    c = 1;\r\n                    m = 2;\r\n                    while (1) {\r\n                        b[h + (c << 1) >> 1] = b[h + (m << 1) >> 1] | 0;\r\n                        m = m + 1 | 0;\r\n                        if ((m & 65535) << 16 >> 16 == a << 16 >> 16) break; else c = c + 1 | 0\r\n                    }\r\n                }\r\n                b[V >> 1] = n;\r\n                W = W + 1 << 16 >> 16;\r\n                if (W << 16 >> 16 >= d << 16 >> 16) break; else {\r\n                    T = l;\r\n                    N = s;\r\n                    O = q;\r\n                    U = o\r\n                }\r\n            }\r\n            i = wa;\r\n            return\r\n        }\r\n\r\n        function qd(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;\r\n            i = 39;\r\n            while (1) {\r\n                h = a + (i << 1) | 0;\r\n                g = b[h >> 1] | 0;\r\n                f = c + (i << 1) | 0;\r\n                if (g << 16 >> 16 > -1) b[f >> 1] = 32767; else {\r\n                    b[f >> 1] = -32767;\r\n                    if (g << 16 >> 16 == -32768) g = 32767; else g = 0 - (g & 65535) & 65535;\r\n                    b[h >> 1] = g\r\n                }\r\n                b[d + (i << 1) >> 1] = g;\r\n                if ((i | 0) > 0) i = i + -1 | 0; else break\r\n            }\r\n            k = 8 - (e << 16 >> 16) | 0;\r\n            if ((k | 0) > 0) {\r\n                j = 0;\r\n                f = 0\r\n            } else return;\r\n            do {\r\n                e = 0;\r\n                a = 0;\r\n                h = 32767;\r\n                while (1) {\r\n                    c = b[d + (e << 1) >> 1] | 0;\r\n                    i = c << 16 >> 16 > -1 ? c << 16 >> 16 < h << 16 >> 16 : 0;\r\n                    f = i ? a : f;\r\n                    g = e + 5 | 0;\r\n                    a = g & 65535;\r\n                    if (a << 16 >> 16 >= 40) break; else {\r\n                        e = g << 16 >> 16;\r\n                        h = i ? c : h\r\n                    }\r\n                }\r\n                b[d + (f << 16 >> 16 << 1) >> 1] = -1;\r\n                j = j + 1 << 16 >> 16\r\n            } while ((j << 16 >> 16 | 0) < (k | 0));\r\n            j = 0;\r\n            do {\r\n                c = 1;\r\n                a = 1;\r\n                g = 32767;\r\n                while (1) {\r\n                    e = b[d + (c << 1) >> 1] | 0;\r\n                    i = e << 16 >> 16 > -1 ? e << 16 >> 16 < g << 16 >> 16 : 0;\r\n                    f = i ? a : f;\r\n                    h = c + 5 | 0;\r\n                    a = h & 65535;\r\n                    if (a << 16 >> 16 >= 40) break; else {\r\n                        c = h << 16 >> 16;\r\n                        g = i ? e : g\r\n                    }\r\n                }\r\n                b[d + (f << 16 >> 16 << 1) >> 1] = -1;\r\n                j = j + 1 << 16 >> 16\r\n            } while ((j << 16 >> 16 | 0) < (k | 0));\r\n            j = 0;\r\n            do {\r\n                c = 2;\r\n                a = 2;\r\n                g = 32767;\r\n                while (1) {\r\n                    e = b[d + (c << 1) >> 1] | 0;\r\n                    i = e << 16 >> 16 > -1 ? e << 16 >> 16 < g << 16 >> 16 : 0;\r\n                    f = i ? a : f;\r\n                    h = c + 5 | 0;\r\n                    a = h & 65535;\r\n                    if (a << 16 >> 16 >= 40) break; else {\r\n                        c = h << 16 >> 16;\r\n                        g = i ? e : g\r\n                    }\r\n                }\r\n                b[d + (f << 16 >> 16 << 1) >> 1] = -1;\r\n                j = j + 1 << 16 >> 16\r\n            } while ((j << 16 >> 16 | 0) < (k | 0));\r\n            j = 0;\r\n            while (1) {\r\n                c = 3;\r\n                a = 3;\r\n                g = 32767;\r\n                while (1) {\r\n                    e = b[d + (c << 1) >> 1] | 0;\r\n                    i = e << 16 >> 16 > -1 ? e << 16 >> 16 < g << 16 >> 16 : 0;\r\n                    f = i ? a : f;\r\n                    h = c + 5 | 0;\r\n                    a = h & 65535;\r\n                    if (a << 16 >> 16 >= 40) {\r\n                        g = f;\r\n                        break\r\n                    } else {\r\n                        c = h << 16 >> 16;\r\n                        g = i ? e : g\r\n                    }\r\n                }\r\n                b[d + (g << 16 >> 16 << 1) >> 1] = -1;\r\n                j = j + 1 << 16 >> 16;\r\n                if ((j << 16 >> 16 | 0) >= (k | 0)) {\r\n                    f = 0;\r\n                    break\r\n                } else f = g\r\n            }\r\n            do {\r\n                c = 4;\r\n                a = 4;\r\n                j = 32767;\r\n                while (1) {\r\n                    e = b[d + (c << 1) >> 1] | 0;\r\n                    i = e << 16 >> 16 > -1 ? e << 16 >> 16 < j << 16 >> 16 : 0;\r\n                    g = i ? a : g;\r\n                    h = c + 5 | 0;\r\n                    a = h & 65535;\r\n                    if (a << 16 >> 16 >= 40) break; else {\r\n                        c = h << 16 >> 16;\r\n                        j = i ? e : j\r\n                    }\r\n                }\r\n                b[d + (g << 16 >> 16 << 1) >> 1] = -1;\r\n                f = f + 1 << 16 >> 16\r\n            } while ((f << 16 >> 16 | 0) < (k | 0));\r\n            return\r\n        }\r\n\r\n        function rd(a, d, e, f, g, h, j, k) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            var l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;\r\n            y = i;\r\n            i = i + 80 | 0;\r\n            x = y;\r\n            p = 40;\r\n            q = d;\r\n            r = a;\r\n            m = 256;\r\n            n = 256;\r\n            while (1) {\r\n                l = b[q >> 1] | 0;\r\n                q = q + 2 | 0;\r\n                l = Z(l, l) | 0;\r\n                if ((l | 0) != 1073741824) {\r\n                    o = (l << 1) + m | 0;\r\n                    if ((l ^ m | 0) > 0 & (o ^ m | 0) < 0) {\r\n                        c[k >> 2] = 1;\r\n                        m = (m >>> 31) + 2147483647 | 0\r\n                    } else m = o\r\n                } else {\r\n                    c[k >> 2] = 1;\r\n                    m = 2147483647\r\n                }\r\n                w = b[r >> 1] | 0;\r\n                n = (Z(w << 1, w) | 0) + n | 0;\r\n                p = p + -1 << 16 >> 16;\r\n                if (!(p << 16 >> 16)) break; else r = r + 2 | 0\r\n            }\r\n            w = ce(m, k) | 0;\r\n            u = w << 5;\r\n            w = ((u >> 5 | 0) == (w | 0) ? u : w >> 31 ^ 2147418112) >> 16;\r\n            u = (ce(n, k) | 0) << 5 >> 16;\r\n            v = 39;\r\n            s = d + 78 | 0;\r\n            t = x + 78 | 0;\r\n            l = e + 78 | 0;\r\n            while (1) {\r\n                r = Z(b[s >> 1] | 0, w) | 0;\r\n                s = s + -2 | 0;\r\n                q = r << 1;\r\n                d = a + (v << 1) | 0;\r\n                m = b[d >> 1] | 0;\r\n                p = Z(m << 16 >> 16, u) | 0;\r\n                if ((p | 0) != 1073741824) {\r\n                    o = (p << 1) + q | 0;\r\n                    if ((p ^ q | 0) > 0 & (o ^ q | 0) < 0) {\r\n                        c[k >> 2] = 1;\r\n                        o = (r >>> 30 & 1) + 2147483647 | 0\r\n                    }\r\n                } else {\r\n                    c[k >> 2] = 1;\r\n                    o = 2147483647\r\n                }\r\n                n = o << 10;\r\n                n = Ce((n >> 10 | 0) == (o | 0) ? n : o >> 31 ^ 2147483647, k) | 0;\r\n                if (n << 16 >> 16 > -1) b[l >> 1] = 32767; else {\r\n                    b[l >> 1] = -32767;\r\n                    if (n << 16 >> 16 == -32768) n = 32767; else n = 0 - (n & 65535) & 65535;\r\n                    if (m << 16 >> 16 == -32768) o = 32767; else o = 0 - (m & 65535) & 65535;\r\n                    b[d >> 1] = o\r\n                }\r\n                l = l + -2 | 0;\r\n                b[t >> 1] = n;\r\n                if ((v | 0) <= 0) break; else {\r\n                    v = v + -1 | 0;\r\n                    t = t + -2 | 0\r\n                }\r\n            }\r\n            d = g << 16 >> 16;\r\n            if (g << 16 >> 16 <= 0) {\r\n                b[h + (d << 1) >> 1] = b[h >> 1] | 0;\r\n                i = y;\r\n                return\r\n            }\r\n            r = j & 65535;\r\n            q = 0;\r\n            p = -1;\r\n            l = 0;\r\n            while (1) {\r\n                if ((q | 0) < 40) {\r\n                    n = q;\r\n                    o = q & 65535;\r\n                    m = -1;\r\n                    while (1) {\r\n                        k = b[x + (n << 1) >> 1] | 0;\r\n                        j = k << 16 >> 16 > m << 16 >> 16;\r\n                        m = j ? k : m;\r\n                        l = j ? o : l;\r\n                        n = n + r | 0;\r\n                        o = n & 65535;\r\n                        if (o << 16 >> 16 >= 40) break; else n = n << 16 >> 16\r\n                    }\r\n                } else m = -1;\r\n                b[f + (q << 1) >> 1] = l;\r\n                if (m << 16 >> 16 > p << 16 >> 16) b[h >> 1] = q; else m = p;\r\n                q = q + 1 | 0;\r\n                if ((q & 65535) << 16 >> 16 == g << 16 >> 16) break; else p = m\r\n            }\r\n            l = b[h >> 1] | 0;\r\n            b[h + (d << 1) >> 1] = l;\r\n            if (g << 16 >> 16 > 1) m = 1; else {\r\n                i = y;\r\n                return\r\n            }\r\n            do {\r\n                f = l + 1 << 16 >> 16;\r\n                l = f << 16 >> 16 >= g << 16 >> 16 ? 0 : f;\r\n                b[h + (m << 1) >> 1] = l;\r\n                b[h + (m + d << 1) >> 1] = l;\r\n                m = m + 1 | 0\r\n            } while ((m & 65535) << 16 >> 16 != g << 16 >> 16);\r\n            i = y;\r\n            return\r\n        }\r\n\r\n        function sd(a) {\r\n            a = a | 0;\r\n            var d = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(12) | 0;\r\n            if (!d) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            b[d >> 1] = 8;\r\n            c[a >> 2] = d;\r\n            b[d + 2 >> 1] = 3;\r\n            b[d + 4 >> 1] = 0;\r\n            c[d + 8 >> 2] = 0;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function td(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function ud(a, d, e) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0;\r\n            do if ((d | 0) == 8) {\r\n                f = a + 2 | 0;\r\n                g = (b[f >> 1] | 0) + -1 << 16 >> 16;\r\n                b[f >> 1] = g;\r\n                d = a + 8 | 0;\r\n                if (!(c[d >> 2] | 0)) {\r\n                    c[e >> 2] = 1;\r\n                    b[f >> 1] = 3;\r\n                    break\r\n                }\r\n                h = a + 4 | 0;\r\n                if (g << 16 >> 16 > 2 & (b[h >> 1] | 0) > 0) {\r\n                    c[e >> 2] = 2;\r\n                    b[h >> 1] = (b[h >> 1] | 0) + -1 << 16 >> 16;\r\n                    break\r\n                }\r\n                if (!(g << 16 >> 16)) {\r\n                    c[e >> 2] = 2;\r\n                    b[f >> 1] = b[a >> 1] | 0;\r\n                    break\r\n                } else {\r\n                    c[e >> 2] = 3;\r\n                    break\r\n                }\r\n            } else {\r\n                b[a + 2 >> 1] = b[a >> 1] | 0;\r\n                c[e >> 2] = 0;\r\n                d = a + 8 | 0\r\n            } while (0);\r\n            c[d >> 2] = c[e >> 2];\r\n            return\r\n        }\r\n\r\n        function vd(a, b, d) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            d = d | 0;\r\n            var e = 0, f = 0, g = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(12) | 0;\r\n            e = d;\r\n            if (!d) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[d >> 2] = 0;\r\n            f = d + 4 | 0;\r\n            c[f >> 2] = 0;\r\n            g = d + 8 | 0;\r\n            c[g >> 2] = b;\r\n            if ((dd(d) | 0) << 16 >> 16 == 0 ? (ac(f, c[g >> 2] | 0) | 0) << 16 >> 16 == 0 : 0) {\r\n                ed(c[d >> 2] | 0) | 0;\r\n                cc(c[f >> 2] | 0) | 0;\r\n                c[a >> 2] = e;\r\n                a = 0;\r\n                return a | 0\r\n            }\r\n            fd(d);\r\n            bc(f);\r\n            Ke(d);\r\n            a = -1;\r\n            return a | 0\r\n        }\r\n\r\n        function wd(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            fd(b);\r\n            bc((c[a >> 2] | 0) + 4 | 0);\r\n            Ke(c[a >> 2] | 0);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function xd(a, d, f, g, h) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            var j = 0, k = 0, l = 0, m = 0, n = 0;\r\n            m = i;\r\n            i = i + 448 | 0;\r\n            k = m + 320 | 0;\r\n            l = m;\r\n            Qe(g | 0, 0, 488) | 0;\r\n            j = 0;\r\n            do {\r\n                n = f + (j << 1) | 0;\r\n                b[n >> 1] = (e[n >> 1] | 0) & 65528;\r\n                j = j + 1 | 0\r\n            } while ((j | 0) != 160);\r\n            gd(c[a >> 2] | 0, f, 160);\r\n            n = a + 4 | 0;\r\n            dc(c[n >> 2] | 0, d, f, k, h, l) | 0;\r\n            hd(c[h >> 2] | 0, k, g, (c[n >> 2] | 0) + 2392 | 0);\r\n            i = m;\r\n            return\r\n        }\r\n\r\n        function yd(a, c, d, e, f, g, h, j, k, l, m, n, o, p, q, r) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            p = p | 0;\r\n            q = q | 0;\r\n            r = r | 0;\r\n            var s = 0, t = 0, u = 0;\r\n            u = i;\r\n            i = i + 48 | 0;\r\n            s = u + 22 | 0;\r\n            t = u;\r\n            Ie(f, (a & -2 | 0) == 6 ? d : c, s);\r\n            Ie(f, e, t);\r\n            d = m;\r\n            c = s;\r\n            f = d + 22 | 0;\r\n            do {\r\n                b[d >> 1] = b[c >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                c = c + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            He(g, m, o, 40, l, 0);\r\n            He(t, o, o, 40, l, 0);\r\n            Be(g, h, q, 40);\r\n            d = n;\r\n            c = q;\r\n            f = d + 80 | 0;\r\n            do {\r\n                b[d >> 1] = b[c >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                c = c + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            He(g, n, r, 40, j, 0);\r\n            Be(s, r, p, 40);\r\n            He(t, p, p, 40, k, 0);\r\n            i = u;\r\n            return\r\n        }\r\n\r\n        function zd(a, c, d, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            m = m | 0;\r\n            n = n | 0;\r\n            o = o | 0;\r\n            p = p | 0;\r\n            q = q | 0;\r\n            r = r | 0;\r\n            s = s | 0;\r\n            var t = 0, u = 0, v = 0, w = 0, x = 0;\r\n            if ((c | 0) == 7) {\r\n                v = 11;\r\n                c = f << 16 >> 16 >>> 1 & 65535;\r\n                t = 2\r\n            } else {\r\n                v = 13;\r\n                c = f;\r\n                t = 1\r\n            }\r\n            b[r >> 1] = f << 16 >> 16 < 13017 ? f : 13017;\r\n            u = d << 16 >> 16;\r\n            q = q + (u << 1) | 0;\r\n            r = c << 16 >> 16;\r\n            g = g << 16 >> 16;\r\n            d = 20;\r\n            c = k;\r\n            s = q;\r\n            while (1) {\r\n                k = s + 2 | 0;\r\n                x = Z(b[s >> 1] | 0, r) | 0;\r\n                w = Z(b[k >> 1] | 0, r) | 0;\r\n                x = (Z(b[c >> 1] | 0, g) | 0) + x << 1;\r\n                w = (Z(b[c + 2 >> 1] | 0, g) | 0) + w << 1 << t;\r\n                b[s >> 1] = ((x << t) + 32768 | 0) >>> 16;\r\n                b[k >> 1] = (w + 32768 | 0) >>> 16;\r\n                d = d + -1 << 16 >> 16;\r\n                if (!(d << 16 >> 16)) break; else {\r\n                    c = c + 4 | 0;\r\n                    s = s + 4 | 0\r\n                }\r\n            }\r\n            c = f << 16 >> 16;\r\n            He(h, q, i + (u << 1) | 0, 40, n, 1);\r\n            d = 30;\r\n            s = 0;\r\n            while (1) {\r\n                w = d + u | 0;\r\n                b[o + (s << 1) >> 1] = (e[a + (w << 1) >> 1] | 0) - (e[i + (w << 1) >> 1] | 0);\r\n                w = Z(b[l + (d << 1) >> 1] | 0, c) | 0;\r\n                x = (Z(b[m + (d << 1) >> 1] | 0, g) | 0) >> v;\r\n                b[p + (s << 1) >> 1] = (e[j + (d << 1) >> 1] | 0) - (w >>> 14) - x;\r\n                s = s + 1 | 0;\r\n                if ((s | 0) == 10) break; else d = d + 1 | 0\r\n            }\r\n            return\r\n        }\r\n\r\n        function Ad(a) {\r\n            a = a | 0;\r\n            var d = 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(16) | 0;\r\n            if (!d) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            ;b[d >> 1] = 0;\r\n            b[d + 2 >> 1] = 0;\r\n            b[d + 4 >> 1] = 0;\r\n            b[d + 6 >> 1] = 0;\r\n            b[d + 8 >> 1] = 0;\r\n            b[d + 10 >> 1] = 0;\r\n            b[d + 12 >> 1] = 0;\r\n            b[d + 14 >> 1] = 0;\r\n            c[a >> 2] = d;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function Bd(a) {\r\n            a = a | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            ;b[a >> 1] = 0;\r\n            b[a + 2 >> 1] = 0;\r\n            b[a + 4 >> 1] = 0;\r\n            b[a + 6 >> 1] = 0;\r\n            b[a + 8 >> 1] = 0;\r\n            b[a + 10 >> 1] = 0;\r\n            b[a + 12 >> 1] = 0;\r\n            b[a + 14 >> 1] = 0;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function Cd(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function Dd(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var f = 0, g = 0, h = 0, i = 0;\r\n            f = e[c + 6 >> 1] | 0;\r\n            d = e[c + 8 >> 1] | 0;\r\n            g = f - d | 0;\r\n            g = (g & 65535 | 0) != 32767 ? g & 65535 : 32767;\r\n            h = e[c + 10 >> 1] | 0;\r\n            d = d - h | 0;\r\n            g = (d << 16 >> 16 | 0) < (g << 16 >> 16 | 0) ? d & 65535 : g;\r\n            d = e[c + 12 >> 1] | 0;\r\n            h = h - d | 0;\r\n            g = (h << 16 >> 16 | 0) < (g << 16 >> 16 | 0) ? h & 65535 : g;\r\n            h = e[c + 14 >> 1] | 0;\r\n            d = d - h | 0;\r\n            g = (d << 16 >> 16 | 0) < (g << 16 >> 16 | 0) ? d & 65535 : g;\r\n            h = h - (e[c + 16 >> 1] | 0) | 0;\r\n            d = b[c + 2 >> 1] | 0;\r\n            i = e[c + 4 >> 1] | 0;\r\n            c = (d & 65535) - i | 0;\r\n            c = (c & 65535 | 0) != 32767 ? c & 65535 : 32767;\r\n            f = i - f | 0;\r\n            if (((h << 16 >> 16 | 0) < (g << 16 >> 16 | 0) ? h & 65535 : g) << 16 >> 16 < 1500 ? 1 : (((f << 16 >> 16 | 0) < (c << 16 >> 16 | 0) ? f & 65535 : c) << 16 >> 16 | 0) < ((d << 16 >> 16 > 32e3 ? 600 : d << 16 >> 16 > 30500 ? 800 : 1100) | 0)) {\r\n                h = (b[a >> 1] | 0) + 1 << 16 >> 16;\r\n                i = h << 16 >> 16 > 11;\r\n                b[a >> 1] = i ? 12 : h;\r\n                return i & 1 | 0\r\n            } else {\r\n                b[a >> 1] = 0;\r\n                return 0\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function Ed(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            c = De(c, 3, d) | 0;\r\n            c = Rd(c, b[a + 2 >> 1] | 0, d) | 0;\r\n            c = Rd(c, b[a + 4 >> 1] | 0, d) | 0;\r\n            c = Rd(c, b[a + 6 >> 1] | 0, d) | 0;\r\n            c = Rd(c, b[a + 8 >> 1] | 0, d) | 0;\r\n            c = Rd(c, b[a + 10 >> 1] | 0, d) | 0;\r\n            c = Rd(c, b[a + 12 >> 1] | 0, d) | 0;\r\n            return (Rd(c, b[a + 14 >> 1] | 0, d) | 0) << 16 >> 16 > 15565 | 0\r\n        }\r\n\r\n        function Fd(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var e = 0;\r\n            d = a + 4 | 0;\r\n            b[a + 2 >> 1] = b[d >> 1] | 0;\r\n            e = a + 6 | 0;\r\n            b[d >> 1] = b[e >> 1] | 0;\r\n            d = a + 8 | 0;\r\n            b[e >> 1] = b[d >> 1] | 0;\r\n            e = a + 10 | 0;\r\n            b[d >> 1] = b[e >> 1] | 0;\r\n            d = a + 12 | 0;\r\n            b[e >> 1] = b[d >> 1] | 0;\r\n            a = a + 14 | 0;\r\n            b[d >> 1] = b[a >> 1] | 0;\r\n            b[a >> 1] = c << 16 >> 16 >>> 3;\r\n            return\r\n        }\r\n\r\n        function Gd(a) {\r\n            a = a | 0;\r\n            var d = 0, e = 0, f = 0;\r\n            if (!a) {\r\n                f = -1;\r\n                return f | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(128) | 0;\r\n            if (!d) {\r\n                f = -1;\r\n                return f | 0\r\n            }\r\n            e = d + 72 | 0;\r\n            f = e + 46 | 0;\r\n            do {\r\n                b[e >> 1] = 0;\r\n                e = e + 2 | 0\r\n            } while ((e | 0) < (f | 0));\r\n            b[d >> 1] = 150;\r\n            b[d + 36 >> 1] = 150;\r\n            b[d + 18 >> 1] = 150;\r\n            b[d + 54 >> 1] = 0;\r\n            b[d + 2 >> 1] = 150;\r\n            b[d + 38 >> 1] = 150;\r\n            b[d + 20 >> 1] = 150;\r\n            b[d + 56 >> 1] = 0;\r\n            b[d + 4 >> 1] = 150;\r\n            b[d + 40 >> 1] = 150;\r\n            b[d + 22 >> 1] = 150;\r\n            b[d + 58 >> 1] = 0;\r\n            b[d + 6 >> 1] = 150;\r\n            b[d + 42 >> 1] = 150;\r\n            b[d + 24 >> 1] = 150;\r\n            b[d + 60 >> 1] = 0;\r\n            b[d + 8 >> 1] = 150;\r\n            b[d + 44 >> 1] = 150;\r\n            b[d + 26 >> 1] = 150;\r\n            b[d + 62 >> 1] = 0;\r\n            b[d + 10 >> 1] = 150;\r\n            b[d + 46 >> 1] = 150;\r\n            b[d + 28 >> 1] = 150;\r\n            b[d + 64 >> 1] = 0;\r\n            b[d + 12 >> 1] = 150;\r\n            b[d + 48 >> 1] = 150;\r\n            b[d + 30 >> 1] = 150;\r\n            b[d + 66 >> 1] = 0;\r\n            b[d + 14 >> 1] = 150;\r\n            b[d + 50 >> 1] = 150;\r\n            b[d + 32 >> 1] = 150;\r\n            b[d + 68 >> 1] = 0;\r\n            b[d + 16 >> 1] = 150;\r\n            b[d + 52 >> 1] = 150;\r\n            b[d + 34 >> 1] = 150;\r\n            b[d + 70 >> 1] = 0;\r\n            b[d + 118 >> 1] = 13106;\r\n            b[d + 120 >> 1] = 0;\r\n            b[d + 122 >> 1] = 0;\r\n            b[d + 124 >> 1] = 0;\r\n            b[d + 126 >> 1] = 13106;\r\n            c[a >> 2] = d;\r\n            f = 0;\r\n            return f | 0\r\n        }\r\n\r\n        function Hd(a) {\r\n            a = a | 0;\r\n            var c = 0, d = 0;\r\n            if (!a) {\r\n                d = -1;\r\n                return d | 0\r\n            }\r\n            c = a + 72 | 0;\r\n            d = c + 46 | 0;\r\n            do {\r\n                b[c >> 1] = 0;\r\n                c = c + 2 | 0\r\n            } while ((c | 0) < (d | 0));\r\n            b[a >> 1] = 150;\r\n            b[a + 36 >> 1] = 150;\r\n            b[a + 18 >> 1] = 150;\r\n            b[a + 54 >> 1] = 0;\r\n            b[a + 2 >> 1] = 150;\r\n            b[a + 38 >> 1] = 150;\r\n            b[a + 20 >> 1] = 150;\r\n            b[a + 56 >> 1] = 0;\r\n            b[a + 4 >> 1] = 150;\r\n            b[a + 40 >> 1] = 150;\r\n            b[a + 22 >> 1] = 150;\r\n            b[a + 58 >> 1] = 0;\r\n            b[a + 6 >> 1] = 150;\r\n            b[a + 42 >> 1] = 150;\r\n            b[a + 24 >> 1] = 150;\r\n            b[a + 60 >> 1] = 0;\r\n            b[a + 8 >> 1] = 150;\r\n            b[a + 44 >> 1] = 150;\r\n            b[a + 26 >> 1] = 150;\r\n            b[a + 62 >> 1] = 0;\r\n            b[a + 10 >> 1] = 150;\r\n            b[a + 46 >> 1] = 150;\r\n            b[a + 28 >> 1] = 150;\r\n            b[a + 64 >> 1] = 0;\r\n            b[a + 12 >> 1] = 150;\r\n            b[a + 48 >> 1] = 150;\r\n            b[a + 30 >> 1] = 150;\r\n            b[a + 66 >> 1] = 0;\r\n            b[a + 14 >> 1] = 150;\r\n            b[a + 50 >> 1] = 150;\r\n            b[a + 32 >> 1] = 150;\r\n            b[a + 68 >> 1] = 0;\r\n            b[a + 16 >> 1] = 150;\r\n            b[a + 52 >> 1] = 150;\r\n            b[a + 34 >> 1] = 150;\r\n            b[a + 70 >> 1] = 0;\r\n            b[a + 118 >> 1] = 13106;\r\n            b[a + 120 >> 1] = 0;\r\n            b[a + 122 >> 1] = 0;\r\n            b[a + 124 >> 1] = 0;\r\n            b[a + 126 >> 1] = 13106;\r\n            d = 0;\r\n            return d | 0\r\n        }\r\n\r\n        function Id(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function Jd(a, c) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            b[a + 118 >> 1] = c;\r\n            return\r\n        }\r\n\r\n        function Kd(a, d, f, g) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0;\r\n            f = Ce(f, g) | 0;\r\n            if (f << 16 >> 16 <= 0) return;\r\n            f = f << 16 >> 16;\r\n            if ((f * 21298 | 0) == 1073741824) {\r\n                c[g >> 2] = 1;\r\n                h = 2147483647\r\n            } else h = f * 42596 | 0;\r\n            f = d - h | 0;\r\n            if (((f ^ d) & (h ^ d) | 0) < 0) {\r\n                c[g >> 2] = 1;\r\n                f = (d >>> 31) + 2147483647 | 0\r\n            }\r\n            if ((f | 0) <= 0) return;\r\n            a = a + 104 | 0;\r\n            b[a >> 1] = e[a >> 1] | 0 | 16384;\r\n            return\r\n        }\r\n\r\n        function Ld(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var e = 0;\r\n            a = a + 104 | 0;\r\n            e = De(b[a >> 1] | 0, 1, d) | 0;\r\n            b[a >> 1] = e;\r\n            if (!(c << 16 >> 16)) return;\r\n            b[a >> 1] = (De(e, 1, d) | 0) & 65535 | 8192;\r\n            return\r\n        }\r\n\r\n        function Md(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var f = 0, g = 0, h = 0;\r\n            g = a + 112 | 0;\r\n            f = Ge(b[g >> 1] | 0, b[c >> 1] | 0, d) | 0;\r\n            f = (f & 65535) - ((f & 65535) >>> 15 & 65535) | 0;\r\n            f = ((f << 16 >> 31 ^ f) & 65535) << 16 >> 16 < 4;\r\n            h = b[c >> 1] | 0;\r\n            b[g >> 1] = h;\r\n            c = c + 2 | 0;\r\n            h = Ge(h, b[c >> 1] | 0, d) | 0;\r\n            h = (h & 65535) - ((h & 65535) >>> 15 & 65535) | 0;\r\n            f = ((h << 16 >> 31 ^ h) & 65535) << 16 >> 16 < 4 ? (f ? 2 : 1) : f & 1;\r\n            b[g >> 1] = b[c >> 1] | 0;\r\n            g = a + 102 | 0;\r\n            b[g >> 1] = De(b[g >> 1] | 0, 1, d) | 0;\r\n            c = a + 110 | 0;\r\n            if ((Rd(b[c >> 1] | 0, f, d) | 0) << 16 >> 16 <= 3) {\r\n                b[c >> 1] = f;\r\n                return\r\n            }\r\n            b[g >> 1] = e[g >> 1] | 0 | 16384;\r\n            b[c >> 1] = f;\r\n            return\r\n        }\r\n\r\n        function Nd(a, d, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0,\r\n                w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;\r\n            D = i;\r\n            i = i + 352 | 0;\r\n            n = D + 24 | 0;\r\n            B = D;\r\n            k = 0;\r\n            h = 0;\r\n            do {\r\n                g = b[d + (k + -40 << 1) >> 1] | 0;\r\n                g = Z(g, g) | 0;\r\n                if ((g | 0) != 1073741824) {\r\n                    j = (g << 1) + h | 0;\r\n                    if ((g ^ h | 0) > 0 & (j ^ h | 0) < 0) {\r\n                        c[f >> 2] = 1;\r\n                        h = (h >>> 31) + 2147483647 | 0\r\n                    } else h = j\r\n                } else {\r\n                    c[f >> 2] = 1;\r\n                    h = 2147483647\r\n                }\r\n                k = k + 1 | 0\r\n            } while ((k | 0) != 160);\r\n            o = h;\r\n            if ((343039 - o & o | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                h = (o >>> 31) + 2147483647 | 0\r\n            } else h = o + -343040 | 0;\r\n            if ((h | 0) < 0) {\r\n                A = a + 102 | 0;\r\n                b[A >> 1] = e[A >> 1] & 16383\r\n            }\r\n            m = o + -15e3 | 0;\r\n            p = (14999 - o & o | 0) < 0;\r\n            if (p) {\r\n                c[f >> 2] = 1;\r\n                j = (o >>> 31) + 2147483647 | 0\r\n            } else j = m;\r\n            if ((j | 0) < 0) {\r\n                A = a + 108 | 0;\r\n                b[A >> 1] = e[A >> 1] & 16383\r\n            }\r\n            g = a + 72 | 0;\r\n            l = a + 74 | 0;\r\n            j = b[g >> 1] | 0;\r\n            k = b[l >> 1] | 0;\r\n            h = 0;\r\n            do {\r\n                A = h << 2;\r\n                y = Ge((b[d + (A << 1) >> 1] | 0) >>> 2 & 65535, ((j << 16 >> 16) * 21955 | 0) >>> 15 & 65535, f) | 0;\r\n                v = ((y << 16 >> 16) * 21955 | 0) >>> 15 & 65535;\r\n                u = Rd(j, v, f) | 0;\r\n                x = A | 1;\r\n                z = Ge((b[d + (x << 1) >> 1] | 0) >>> 2 & 65535, ((k << 16 >> 16) * 6390 | 0) >>> 15 & 65535, f) | 0;\r\n                w = ((z << 16 >> 16) * 6390 | 0) >>> 15 & 65535;\r\n                j = Rd(k, w, f) | 0;\r\n                b[n + (A << 1) >> 1] = Rd(u, j, f) | 0;\r\n                b[n + (x << 1) >> 1] = Ge(u, j, f) | 0;\r\n                x = A | 2;\r\n                j = Ge((b[d + (x << 1) >> 1] | 0) >>> 2 & 65535, v, f) | 0;\r\n                y = Rd(y, ((j << 16 >> 16) * 21955 | 0) >>> 15 & 65535, f) | 0;\r\n                A = A | 3;\r\n                k = Ge((b[d + (A << 1) >> 1] | 0) >>> 2 & 65535, w, f) | 0;\r\n                z = Rd(z, ((k << 16 >> 16) * 6390 | 0) >>> 15 & 65535, f) | 0;\r\n                b[n + (x << 1) >> 1] = Rd(y, z, f) | 0;\r\n                b[n + (A << 1) >> 1] = Ge(y, z, f) | 0;\r\n                h = h + 1 | 0\r\n            } while ((h | 0) != 40);\r\n            b[g >> 1] = j;\r\n            b[l >> 1] = k;\r\n            k = a + 76 | 0;\r\n            j = a + 80 | 0;\r\n            h = 0;\r\n            do {\r\n                A = h << 2;\r\n                Od(n + (A << 1) | 0, n + ((A | 2) << 1) | 0, k, f);\r\n                Od(n + ((A | 1) << 1) | 0, n + ((A | 3) << 1) | 0, j, f);\r\n                h = h + 1 | 0\r\n            } while ((h | 0) != 40);\r\n            k = a + 84 | 0;\r\n            j = a + 86 | 0;\r\n            h = a + 92 | 0;\r\n            g = 0;\r\n            do {\r\n                A = g << 3;\r\n                Pd(n + (A << 1) | 0, n + ((A | 4) << 1) | 0, k, f);\r\n                Pd(n + ((A | 2) << 1) | 0, n + ((A | 6) << 1) | 0, j, f);\r\n                Pd(n + ((A | 3) << 1) | 0, n + ((A | 7) << 1) | 0, h, f);\r\n                g = g + 1 | 0\r\n            } while ((g | 0) != 20);\r\n            k = a + 88 | 0;\r\n            j = a + 90 | 0;\r\n            h = 0;\r\n            do {\r\n                A = h << 4;\r\n                Pd(n + (A << 1) | 0, n + ((A | 8) << 1) | 0, k, f);\r\n                Pd(n + ((A | 4) << 1) | 0, n + ((A | 12) << 1) | 0, j, f);\r\n                h = h + 1 | 0\r\n            } while ((h | 0) != 10);\r\n            t = Qd(n, a + 70 | 0, 32, 40, 4, 1, 15, f) | 0;\r\n            b[B + 16 >> 1] = t;\r\n            u = Qd(n, a + 68 | 0, 16, 20, 8, 7, 16, f) | 0;\r\n            b[B + 14 >> 1] = u;\r\n            v = Qd(n, a + 66 | 0, 16, 20, 8, 3, 16, f) | 0;\r\n            b[B + 12 >> 1] = v;\r\n            w = Qd(n, a + 64 | 0, 16, 20, 8, 2, 16, f) | 0;\r\n            b[B + 10 >> 1] = w;\r\n            x = Qd(n, a + 62 | 0, 16, 20, 8, 6, 16, f) | 0;\r\n            b[B + 8 >> 1] = x;\r\n            y = Qd(n, a + 60 | 0, 8, 10, 16, 4, 16, f) | 0;\r\n            b[B + 6 >> 1] = y;\r\n            z = Qd(n, a + 58 | 0, 8, 10, 16, 12, 16, f) | 0;\r\n            b[B + 4 >> 1] = z;\r\n            A = Qd(n, a + 56 | 0, 8, 10, 16, 8, 16, f) | 0;\r\n            b[B + 2 >> 1] = A;\r\n            s = Qd(n, a + 54 | 0, 8, 10, 16, 0, 16, f) | 0;\r\n            b[B >> 1] = s;\r\n            k = 0;\r\n            g = 0;\r\n            do {\r\n                j = a + (g << 1) | 0;\r\n                d = qe(b[j >> 1] | 0) | 0;\r\n                j = b[j >> 1] | 0;\r\n                h = d << 16 >> 16;\r\n                if (d << 16 >> 16 < 0) {\r\n                    l = 0 - h << 16;\r\n                    if ((l | 0) < 983040) l = j << 16 >> 16 >> (l >> 16) & 65535; else l = 0\r\n                } else {\r\n                    l = j << 16 >> 16;\r\n                    j = l << h;\r\n                    if ((j << 16 >> 16 >> h | 0) == (l | 0)) l = j & 65535; else l = (l >>> 15 ^ 32767) & 65535\r\n                }\r\n                j = Td(De(b[B + (g << 1) >> 1] | 0, 1, f) | 0, l) | 0;\r\n                r = Ge(d, 5, f) | 0;\r\n                h = r << 16 >> 16;\r\n                if (r << 16 >> 16 < 0) {\r\n                    l = 0 - h << 16;\r\n                    if ((l | 0) < 983040) l = j << 16 >> 16 >> (l >> 16); else l = 0\r\n                } else {\r\n                    j = j << 16 >> 16;\r\n                    l = j << h;\r\n                    if ((l << 16 >> 16 >> h | 0) != (j | 0)) l = j >>> 15 ^ 32767\r\n                }\r\n                l = l << 16 >> 16;\r\n                l = Z(l, l) | 0;\r\n                if ((l | 0) != 1073741824) {\r\n                    j = (l << 1) + k | 0;\r\n                    if ((l ^ k | 0) > 0 & (j ^ k | 0) < 0) {\r\n                        c[f >> 2] = 1;\r\n                        k = (k >>> 31) + 2147483647 | 0\r\n                    } else k = j\r\n                } else {\r\n                    c[f >> 2] = 1;\r\n                    k = 2147483647\r\n                }\r\n                g = g + 1 | 0\r\n            } while ((g | 0) != 9);\r\n            r = k << 6;\r\n            k = (((r >> 6 | 0) == (k | 0) ? r : k >> 31 ^ 2147418112) >> 16) * 3641 >> 15;\r\n            if ((k | 0) > 32767) {\r\n                c[f >> 2] = 1;\r\n                k = 32767\r\n            }\r\n            r = b[a >> 1] | 0;\r\n            l = r << 16 >> 16;\r\n            q = b[a + 2 >> 1] | 0;\r\n            j = (q << 16 >> 16) + l | 0;\r\n            if ((q ^ r) << 16 >> 16 > -1 & (j ^ l | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                j = (l >>> 31) + 2147483647 | 0\r\n            }\r\n            r = b[a + 4 >> 1] | 0;\r\n            l = r + j | 0;\r\n            if ((r ^ j | 0) > -1 & (l ^ j | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                l = (j >>> 31) + 2147483647 | 0\r\n            }\r\n            r = b[a + 6 >> 1] | 0;\r\n            j = r + l | 0;\r\n            if ((r ^ l | 0) > -1 & (j ^ l | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                j = (l >>> 31) + 2147483647 | 0\r\n            }\r\n            r = b[a + 8 >> 1] | 0;\r\n            l = r + j | 0;\r\n            if ((r ^ j | 0) > -1 & (l ^ j | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                l = (j >>> 31) + 2147483647 | 0\r\n            }\r\n            r = b[a + 10 >> 1] | 0;\r\n\r\n            j = r + l | 0;\r\n            if ((r ^ l | 0) > -1 & (j ^ l | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                j = (l >>> 31) + 2147483647 | 0\r\n            }\r\n            r = b[a + 12 >> 1] | 0;\r\n            l = r + j | 0;\r\n            if ((r ^ j | 0) > -1 & (l ^ j | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                l = (j >>> 31) + 2147483647 | 0\r\n            }\r\n            r = b[a + 14 >> 1] | 0;\r\n            j = r + l | 0;\r\n            if ((r ^ l | 0) > -1 & (j ^ l | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                j = (l >>> 31) + 2147483647 | 0\r\n            }\r\n            r = b[a + 16 >> 1] | 0;\r\n            l = r + j | 0;\r\n            if ((r ^ j | 0) > -1 & (l ^ j | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                l = (j >>> 31) + 2147483647 | 0\r\n            }\r\n            q = l << 13;\r\n            q = ((q >> 13 | 0) == (l | 0) ? q : l >> 31 ^ 2147418112) >>> 16 & 65535;\r\n            l = (Z((Ge(q, 0, f) | 0) << 16 >> 16, -2808) | 0) >> 15;\r\n            if ((l | 0) > 32767) {\r\n                c[f >> 2] = 1;\r\n                l = 32767\r\n            }\r\n            n = Rd(l & 65535, 1260, f) | 0;\r\n            r = a + 100 | 0;\r\n            l = De(b[r >> 1] | 0, 1, f) | 0;\r\n            if ((k << 16 >> 16 | 0) > ((n << 16 >> 16 < 720 ? 720 : n << 16 >> 16) | 0)) l = (l & 65535 | 16384) & 65535;\r\n            b[r >> 1] = l;\r\n            if (p) {\r\n                c[f >> 2] = 1;\r\n                m = (o >>> 31) + 2147483647 | 0\r\n            }\r\n            h = b[a + 118 >> 1] | 0;\r\n            p = a + 126 | 0;\r\n            l = b[p >> 1] | 0;\r\n            g = l << 16 >> 16 < 19660;\r\n            g = h << 16 >> 16 < l << 16 >> 16 ? (g ? 2621 : 6553) : g ? 2621 : 655;\r\n            d = l & 65535;\r\n            k = d << 16;\r\n            l = Z(g, l << 16 >> 16) | 0;\r\n            if ((l | 0) == 1073741824) {\r\n                c[f >> 2] = 1;\r\n                l = 2147483647\r\n            } else l = l << 1;\r\n            j = k - l | 0;\r\n            if (((j ^ k) & (l ^ k) | 0) < 0) {\r\n                c[f >> 2] = 1;\r\n                j = (d >>> 15) + 2147483647 | 0\r\n            }\r\n            k = Z(g, h << 16 >> 16) | 0;\r\n            do if ((k | 0) == 1073741824) {\r\n                c[f >> 2] = 1;\r\n                l = 2147483647\r\n            } else {\r\n                l = j + (k << 1) | 0;\r\n                if (!((j ^ k | 0) > 0 & (l ^ j | 0) < 0)) break;\r\n                c[f >> 2] = 1;\r\n                l = (j >>> 31) + 2147483647 | 0\r\n            } while (0);\r\n            d = Ce(l, f) | 0;\r\n            o = (m | 0) > -1;\r\n            b[p >> 1] = o ? (d << 16 >> 16 < 13106 ? 13106 : d) : 13106;\r\n            d = a + 106 | 0;\r\n            b[d >> 1] = De(b[d >> 1] | 0, 1, f) | 0;\r\n            j = a + 108 | 0;\r\n            l = De(b[j >> 1] | 0, 1, f) | 0;\r\n            b[j >> 1] = l;\r\n            k = b[p >> 1] | 0;\r\n            a:do if (o) {\r\n                do if (k << 16 >> 16 > 19660) b[d >> 1] = e[d >> 1] | 16384; else {\r\n                    if (k << 16 >> 16 > 16383) break;\r\n                    k = a + 116 | 0;\r\n                    l = 0;\r\n                    break a\r\n                } while (0);\r\n                b[j >> 1] = l & 65535 | 16384;\r\n                C = 62\r\n            } else C = 62; while (0);\r\n            do if ((C | 0) == 62) {\r\n                l = a + 116 | 0;\r\n                if (k << 16 >> 16 <= 22936) {\r\n                    k = l;\r\n                    l = 0;\r\n                    break\r\n                }\r\n                k = l;\r\n                l = Rd(b[l >> 1] | 0, 1, f) | 0\r\n            } while (0);\r\n            b[k >> 1] = l;\r\n            if ((b[d >> 1] & 32640) != 32640) {\r\n                n = (b[j >> 1] & 32767) == 32767;\r\n                b[a + 122 >> 1] = n & 1;\r\n                if (n) C = 67\r\n            } else {\r\n                b[a + 122 >> 1] = 1;\r\n                C = 67\r\n            }\r\n            do if ((C | 0) == 67) {\r\n                k = a + 98 | 0;\r\n                if ((b[k >> 1] | 0) >= 5) break;\r\n                b[k >> 1] = 5\r\n            } while (0);\r\n            n = a + 102 | 0;\r\n            do if ((b[n >> 1] & 24576) == 24576) C = 71; else {\r\n                if ((b[a + 104 >> 1] & 31744) == 31744) {\r\n                    C = 71;\r\n                    break\r\n                }\r\n                if (!(b[r >> 1] & 32640)) {\r\n                    b[a + 98 >> 1] = 20;\r\n                    j = 32767;\r\n                    break\r\n                } else {\r\n                    j = s;\r\n                    k = 0;\r\n                    l = 0\r\n                }\r\n                while (1) {\r\n                    g = b[a + 18 + (k << 1) >> 1] | 0;\r\n                    h = j << 16 >> 16 > g << 16 >> 16;\r\n                    m = h ? j : g;\r\n                    j = h ? g : j;\r\n                    m = m << 16 >> 16 < 184 ? 184 : m;\r\n                    j = j << 16 >> 16 < 184 ? 184 : j;\r\n                    g = qe(j) | 0;\r\n                    h = g << 16 >> 16;\r\n                    do if (g << 16 >> 16 < 0) {\r\n                        d = 0 - h << 16;\r\n                        if ((d | 0) >= 983040) {\r\n                            d = 0;\r\n                            break\r\n                        }\r\n                        d = j << 16 >> 16 >> (d >> 16) & 65535\r\n                    } else {\r\n                        d = j << 16 >> 16;\r\n                        j = d << h;\r\n                        if ((j << 16 >> 16 >> h | 0) == (d | 0)) {\r\n                            d = j & 65535;\r\n                            break\r\n                        }\r\n                        d = (d >>> 15 ^ 32767) & 65535\r\n                    } while (0);\r\n                    m = Td(De(m, 1, f) | 0, d) | 0;\r\n                    l = Rd(l, De(m, Ge(8, g, f) | 0, f) | 0, f) | 0;\r\n                    k = k + 1 | 0;\r\n                    if ((k | 0) == 9) break;\r\n                    j = b[B + (k << 1) >> 1] | 0\r\n                }\r\n                if (l << 16 >> 16 > 1e3) {\r\n                    b[a + 98 >> 1] = 20;\r\n                    j = 32767;\r\n                    break\r\n                }\r\n                j = b[r >> 1] | 0;\r\n                k = a + 98 | 0;\r\n                l = b[k >> 1] | 0;\r\n                do if (!(j & 16384)) C = 86; else {\r\n                    if (!(l << 16 >> 16)) {\r\n                        l = j;\r\n                        break\r\n                    }\r\n                    l = Ge(l, 1, f) | 0;\r\n                    b[k >> 1] = l;\r\n                    C = 86\r\n                } while (0);\r\n                if ((C | 0) == 86) {\r\n                    if (l << 16 >> 16 == 20) {\r\n                        j = 32767;\r\n                        break\r\n                    }\r\n                    l = b[r >> 1] | 0\r\n                }\r\n                j = (l & 16384) == 0 ? 16383 : 3276\r\n            } while (0);\r\n            if ((C | 0) == 71) {\r\n                b[a + 98 >> 1] = 20;\r\n                j = 32767\r\n            }\r\n            k = s;\r\n            l = 0;\r\n            while (1) {\r\n                m = a + 18 + (l << 1) | 0;\r\n                d = oe(j, Ge(k, b[m >> 1] | 0, f) | 0, f) | 0;\r\n                b[m >> 1] = Rd(b[m >> 1] | 0, d, f) | 0;\r\n                l = l + 1 | 0;\r\n                if ((l | 0) == 9) break;\r\n                k = b[B + (l << 1) >> 1] | 0\r\n            }\r\n            do if (!(b[r >> 1] & 30720)) {\r\n                if (b[n >> 1] & 30720) {\r\n                    C = 95;\r\n                    break\r\n                }\r\n                if (!(b[a + 114 >> 1] | 0)) {\r\n                    h = 2097;\r\n                    g = 1638;\r\n                    d = 2\r\n                } else C = 95\r\n            } else C = 95; while (0);\r\n            do if ((C | 0) == 95) {\r\n                if ((b[a + 98 >> 1] | 0) == 0 ? (b[a + 114 >> 1] | 0) == 0 : 0) {\r\n                    h = 1867;\r\n                    g = 491;\r\n                    d = 2;\r\n                    break\r\n                }\r\n                h = 1638;\r\n                g = 0;\r\n                d = 0\r\n            } while (0);\r\n            j = 0;\r\n            do {\r\n                k = a + (j << 1) | 0;\r\n                l = Ge(b[a + 36 + (j << 1) >> 1] | 0, b[k >> 1] | 0, f) | 0;\r\n                if (l << 16 >> 16 < 0) {\r\n                    l = oe(h, l, f) | 0;\r\n                    l = Rd(-2, Rd(b[k >> 1] | 0, l, f) | 0, f) | 0;\r\n                    l = l << 16 >> 16 < 40 ? 40 : l\r\n                } else {\r\n                    l = oe(g, l, f) | 0;\r\n                    l = Rd(d, Rd(b[k >> 1] | 0, l, f) | 0, f) | 0;\r\n                    l = l << 16 >> 16 > 16e3 ? 16e3 : l\r\n                }\r\n                b[k >> 1] = l;\r\n                j = j + 1 | 0\r\n            } while ((j | 0) != 9);\r\n            b[a + 36 >> 1] = s;\r\n            b[a + 38 >> 1] = A;\r\n            b[a + 40 >> 1] = z;\r\n            b[a + 42 >> 1] = y;\r\n            b[a + 44 >> 1] = x;\r\n            b[a + 46 >> 1] = w;\r\n            b[a + 48 >> 1] = v;\r\n            b[a + 50 >> 1] = u;\r\n            b[a + 52 >> 1] = t;\r\n            k = q << 16 >> 16 > 100;\r\n            j = k ? 7 : 4;\r\n            k = k ? 4 : 5;\r\n            if (!o) {\r\n                b[a + 94 >> 1] = 0;\r\n                b[a + 96 >> 1] = 0;\r\n                b[a + 114 >> 1] = 0;\r\n                b[a + 116 >> 1] = 0;\r\n                f = 0;\r\n                a = a + 120 | 0;\r\n                b[a >> 1] = f;\r\n                i = D;\r\n                return f | 0\r\n            }\r\n            h = a + 114 | 0;\r\n            g = b[h >> 1] | 0;\r\n            do if ((b[a + 116 >> 1] | 0) <= 100) {\r\n                if (g << 16 >> 16) break;\r\n                g = b[r >> 1] | 0;\r\n                do if (!(g & 16368)) {\r\n                    if ((b[p >> 1] | 0) > 21298) g = 1; else break;\r\n                    a = a + 120 | 0;\r\n                    b[a >> 1] = g;\r\n                    i = D;\r\n                    return g | 0\r\n                } while (0);\r\n                h = a + 94 | 0;\r\n                if (!(g & 16384)) {\r\n                    b[h >> 1] = 0;\r\n                    g = a + 96 | 0;\r\n                    h = b[g >> 1] | 0;\r\n                    if (h << 16 >> 16 <= 0) {\r\n                        f = 0;\r\n                        a = a + 120 | 0;\r\n                        b[a >> 1] = f;\r\n                        i = D;\r\n                        return f | 0\r\n                    }\r\n                    b[g >> 1] = Ge(h, 1, f) | 0;\r\n                    f = 1;\r\n                    a = a + 120 | 0;\r\n                    b[a >> 1] = f;\r\n                    i = D;\r\n                    return f | 0\r\n                } else {\r\n                    f = Rd(b[h >> 1] | 0, 1, f) | 0;\r\n                    b[h >> 1] = f;\r\n                    if ((f << 16 >> 16 | 0) < (k | 0)) {\r\n                        f = 1;\r\n                        a = a + 120 | 0;\r\n                        b[a >> 1] = f;\r\n                        i = D;\r\n                        return f | 0\r\n                    }\r\n                    b[a + 96 >> 1] = j;\r\n                    f = 1;\r\n                    a = a + 120 | 0;\r\n                    b[a >> 1] = f;\r\n                    i = D;\r\n                    return f | 0\r\n                }\r\n            } else {\r\n                if (g << 16 >> 16 >= 250) break;\r\n                b[h >> 1] = 250;\r\n                g = 250\r\n            } while (0);\r\n            b[a + 94 >> 1] = 4;\r\n            b[h >> 1] = Ge(g, 1, f) | 0;\r\n            f = 1;\r\n            a = a + 120 | 0;\r\n            b[a >> 1] = f;\r\n            i = D;\r\n            return f | 0\r\n        }\r\n\r\n        function Od(a, d, e, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, i = 0;\r\n            g = (b[e >> 1] | 0) * 21955 >> 15;\r\n            if ((g | 0) > 32767) {\r\n                c[f >> 2] = 1;\r\n                g = 32767\r\n            }\r\n            h = Ge(b[a >> 1] | 0, g & 65535, f) | 0;\r\n            g = (h << 16 >> 16) * 21955 >> 15;\r\n            if ((g | 0) > 32767) {\r\n                c[f >> 2] = 1;\r\n                g = 32767\r\n            }\r\n            i = Rd(b[e >> 1] | 0, g & 65535, f) | 0;\r\n            b[e >> 1] = h;\r\n            e = e + 2 | 0;\r\n            g = (b[e >> 1] | 0) * 6390 >> 15;\r\n            if ((g | 0) > 32767) {\r\n                c[f >> 2] = 1;\r\n                g = 32767\r\n            }\r\n            h = Ge(b[d >> 1] | 0, g & 65535, f) | 0;\r\n            g = (h << 16 >> 16) * 6390 >> 15;\r\n            if ((g | 0) > 32767) {\r\n                c[f >> 2] = 1;\r\n                g = 32767\r\n            }\r\n            g = Rd(b[e >> 1] | 0, g & 65535, f) | 0;\r\n            b[e >> 1] = h;\r\n            b[a >> 1] = De(Rd(i, g, f) | 0, 1, f) | 0;\r\n            b[d >> 1] = De(Ge(i, g, f) | 0, 1, f) | 0;\r\n            return\r\n        }\r\n\r\n        function Pd(a, d, e, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0;\r\n            g = (b[e >> 1] | 0) * 13363 >> 15;\r\n            if ((g | 0) > 32767) {\r\n                c[f >> 2] = 1;\r\n                g = 32767\r\n            }\r\n            h = Ge(b[d >> 1] | 0, g & 65535, f) | 0;\r\n            g = (h << 16 >> 16) * 13363 >> 15;\r\n            if ((g | 0) > 32767) {\r\n                c[f >> 2] = 1;\r\n                g = 32767\r\n            }\r\n            g = Rd(b[e >> 1] | 0, g & 65535, f) | 0;\r\n            b[e >> 1] = h;\r\n            b[d >> 1] = De(Ge(b[a >> 1] | 0, g, f) | 0, 1, f) | 0;\r\n            b[a >> 1] = De(Rd(b[a >> 1] | 0, g, f) | 0, 1, f) | 0;\r\n            return\r\n        }\r\n\r\n        function Qd(a, d, e, f, g, h, i, j) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            j = j | 0;\r\n            var k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;\r\n            if (e << 16 >> 16 < f << 16 >> 16) {\r\n                n = g << 16 >> 16;\r\n                k = h << 16 >> 16;\r\n                o = e << 16 >> 16;\r\n                l = 0;\r\n                do {\r\n                    p = b[a + ((Z(o, n) | 0) + k << 1) >> 1] | 0;\r\n                    p = (p & 65535) - ((p & 65535) >>> 15 & 65535) | 0;\r\n                    p = (p << 16 >> 31 ^ p) << 16;\r\n                    m = (p >> 15) + l | 0;\r\n                    if ((p >> 16 ^ l | 0) > 0 & (m ^ l | 0) < 0) {\r\n                        c[j >> 2] = 1;\r\n                        l = (l >>> 31) + 2147483647 | 0\r\n                    } else l = m;\r\n                    o = o + 1 | 0\r\n                } while ((o & 65535) << 16 >> 16 != f << 16 >> 16);\r\n                o = l\r\n            } else o = 0;\r\n            l = b[d >> 1] | 0;\r\n            p = Ge(16, i, j) | 0;\r\n            k = p << 16 >> 16;\r\n            if (p << 16 >> 16 > 0) {\r\n                f = l << k;\r\n                if ((f >> k | 0) != (l | 0)) f = l >> 31 ^ 2147483647\r\n            } else {\r\n                k = 0 - k << 16;\r\n                if ((k | 0) < 2031616) f = l >> (k >> 16); else f = 0\r\n            }\r\n            k = f + o | 0;\r\n            if ((f ^ o | 0) > -1 & (k ^ o | 0) < 0) {\r\n                c[j >> 2] = 1;\r\n                k = (o >>> 31) + 2147483647 | 0\r\n            }\r\n            p = i << 16 >> 16;\r\n            i = i << 16 >> 16 > 0;\r\n            if (i) {\r\n                f = o << p;\r\n                if ((f >> p | 0) != (o | 0)) f = o >> 31 ^ 2147483647\r\n            } else {\r\n                f = 0 - p << 16;\r\n                if ((f | 0) < 2031616) f = o >> (f >> 16); else f = 0\r\n            }\r\n            b[d >> 1] = f >>> 16;\r\n            if (e << 16 >> 16 > 0) {\r\n                n = g << 16 >> 16;\r\n                l = h << 16 >> 16;\r\n                m = 0;\r\n                do {\r\n                    h = b[a + ((Z(m, n) | 0) + l << 1) >> 1] | 0;\r\n                    h = (h & 65535) - ((h & 65535) >>> 15 & 65535) | 0;\r\n                    h = (h << 16 >> 31 ^ h) << 16;\r\n                    f = (h >> 15) + k | 0;\r\n                    if ((h >> 16 ^ k | 0) > 0 & (f ^ k | 0) < 0) {\r\n                        c[j >> 2] = 1;\r\n                        k = (k >>> 31) + 2147483647 | 0\r\n                    } else k = f;\r\n                    m = m + 1 | 0\r\n                } while ((m & 65535) << 16 >> 16 != e << 16 >> 16)\r\n            }\r\n            if (i) {\r\n                f = k << p;\r\n                if ((f >> p | 0) == (k | 0)) {\r\n                    j = f;\r\n                    j = j >>> 16;\r\n                    j = j & 65535;\r\n                    return j | 0\r\n                }\r\n                j = k >> 31 ^ 2147483647;\r\n                j = j >>> 16;\r\n                j = j & 65535;\r\n                return j | 0\r\n            } else {\r\n                f = 0 - p << 16;\r\n                if ((f | 0) >= 2031616) {\r\n                    j = 0;\r\n                    j = j >>> 16;\r\n                    j = j & 65535;\r\n                    return j | 0\r\n                }\r\n                j = k >> (f >> 16);\r\n                j = j >>> 16;\r\n                j = j & 65535;\r\n                return j | 0\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function Rd(a, b, d) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            d = d | 0;\r\n            a = (b << 16 >> 16) + (a << 16 >> 16) | 0;\r\n            if ((a | 0) <= 32767) {\r\n                if ((a | 0) < -32768) {\r\n                    c[d >> 2] = 1;\r\n                    a = -32768\r\n                }\r\n            } else {\r\n                c[d >> 2] = 1;\r\n                a = 32767\r\n            }\r\n            return a & 65535 | 0\r\n        }\r\n\r\n        function Sd(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0,\r\n                v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0;\r\n            y = i;\r\n            i = i + 32 | 0;\r\n            w = y + 12 | 0;\r\n            x = y;\r\n            b[w >> 1] = 1024;\r\n            b[x >> 1] = 1024;\r\n            k = b[a + 2 >> 1] | 0;\r\n            h = b[a + 20 >> 1] | 0;\r\n            e = ((h + k | 0) >>> 2) + 64512 | 0;\r\n            b[w + 2 >> 1] = e;\r\n            h = ((k - h | 0) >>> 2) + 1024 | 0;\r\n            b[x + 2 >> 1] = h;\r\n            k = b[a + 4 >> 1] | 0;\r\n            f = b[a + 18 >> 1] | 0;\r\n            e = ((f + k | 0) >>> 2) - e | 0;\r\n            b[w + 4 >> 1] = e;\r\n            h = ((k - f | 0) >>> 2) + h | 0;\r\n            b[x + 4 >> 1] = h;\r\n            f = b[a + 6 >> 1] | 0;\r\n            k = b[a + 16 >> 1] | 0;\r\n            e = ((k + f | 0) >>> 2) - e | 0;\r\n            b[w + 6 >> 1] = e;\r\n            h = ((f - k | 0) >>> 2) + h | 0;\r\n            b[x + 6 >> 1] = h;\r\n            k = b[a + 8 >> 1] | 0;\r\n            f = b[a + 14 >> 1] | 0;\r\n            e = ((f + k | 0) >>> 2) - e | 0;\r\n            b[w + 8 >> 1] = e;\r\n            h = ((k - f | 0) >>> 2) + h | 0;\r\n            b[x + 8 >> 1] = h;\r\n            f = b[a + 10 >> 1] | 0;\r\n            k = b[a + 12 >> 1] | 0;\r\n            e = ((k + f | 0) >>> 2) - e | 0;\r\n            b[w + 10 >> 1] = e;\r\n            b[x + 10 >> 1] = ((f - k | 0) >>> 2) + h;\r\n            h = b[3454] | 0;\r\n            k = h << 16 >> 16;\r\n            a = b[w + 2 >> 1] | 0;\r\n            f = (a << 16 >> 16 << 14) + (k << 10) | 0;\r\n            s = f & -65536;\r\n            f = (f >>> 1) - (f >> 16 << 15) << 16;\r\n            v = (((Z(f >> 16, k) | 0) >> 15) + (Z(s >> 16, k) | 0) << 2) + -16777216 | 0;\r\n            v = (b[w + 4 >> 1] << 14) + v | 0;\r\n            j = v >> 16;\r\n            v = (v >>> 1) - (j << 15) << 16;\r\n            s = (((Z(v >> 16, k) | 0) >> 15) + (Z(j, k) | 0) << 2) - ((f >> 15) + s) | 0;\r\n            s = (b[w + 6 >> 1] << 14) + s | 0;\r\n            f = s >> 16;\r\n            s = (s >>> 1) - (f << 15) << 16;\r\n            j = (((Z(s >> 16, k) | 0) >> 15) + (Z(f, k) | 0) << 2) - ((v >> 15) + (j << 16)) | 0;\r\n            j = (b[w + 8 >> 1] << 14) + j | 0;\r\n            v = j >> 16;\r\n            f = (e << 16 >> 3) + ((((Z((j >>> 1) - (v << 15) << 16 >> 16, k) | 0) >> 15) + (Z(v, k) | 0) << 1) - ((s >> 15) + (f << 16))) | 0;\r\n            s = w + 4 | 0;\r\n            k = w;\r\n            v = 0;\r\n            j = 0;\r\n            e = 0;\r\n            r = w + 10 | 0;\r\n            f = (f + 33554432 | 0) >>> 0 < 67108863 ? f >>> 10 & 65535 : (f | 0) > 33554431 ? 32767 : -32768;\r\n            a:while (1) {\r\n                t = a << 16 >> 16 << 14;\r\n                q = k + 6 | 0;\r\n                p = k + 8 | 0;\r\n                o = j << 16 >> 16;\r\n                while (1) {\r\n                    if ((o | 0) >= 60) break a;\r\n                    k = (o & 65535) + 1 << 16 >> 16;\r\n                    l = b[6908 + (k << 16 >> 16 << 1) >> 1] | 0;\r\n                    u = l << 16 >> 16;\r\n                    j = t + (u << 10) | 0;\r\n                    g = j & -65536;\r\n                    j = (j >>> 1) - (j >> 16 << 15) << 16;\r\n                    m = (((Z(j >> 16, u) | 0) >> 15) + (Z(g >> 16, u) | 0) << 2) + -16777216 | 0;\r\n                    n = b[s >> 1] | 0;\r\n                    m = (n << 16 >> 16 << 14) + m | 0;\r\n                    B = m >> 16;\r\n                    m = (m >>> 1) - (B << 15) << 16;\r\n                    g = (((Z(m >> 16, u) | 0) >> 15) + (Z(B, u) | 0) << 2) - ((j >> 15) + g) | 0;\r\n                    j = b[q >> 1] | 0;\r\n                    g = (j << 16 >> 16 << 14) + g | 0;\r\n                    a = g >> 16;\r\n                    g = (g >>> 1) - (a << 15) << 16;\r\n                    B = (((Z(g >> 16, u) | 0) >> 15) + (Z(a, u) | 0) << 2) - ((m >> 15) + (B << 16)) | 0;\r\n                    m = b[p >> 1] | 0;\r\n                    B = (m << 16 >> 16 << 14) + B | 0;\r\n                    A = B >> 16;\r\n                    a = (((Z((B >>> 1) - (A << 15) << 16 >> 16, u) | 0) >> 15) + (Z(A, u) | 0) << 1) - ((g >> 15) + (a << 16)) | 0;\r\n                    g = b[r >> 1] | 0;\r\n                    a = (g << 16 >> 16 << 13) + a | 0;\r\n                    a = (a + 33554432 | 0) >>> 0 < 67108863 ? a >>> 10 & 65535 : (a | 0) > 33554431 ? 32767 : -32768;\r\n                    if ((Z(a << 16 >> 16, f << 16 >> 16) | 0) < 1) {\r\n                        u = k;\r\n                        k = n;\r\n                        break\r\n                    } else {\r\n                        o = o + 1 | 0;\r\n                        h = l;\r\n                        f = a\r\n                    }\r\n                }\r\n                s = g << 16 >> 16 << 13;\r\n                r = k << 16 >> 16 << 14;\r\n                n = j << 16 >> 16 << 14;\r\n                p = m << 16 >> 16 << 14;\r\n                g = l << 16 >> 16;\r\n                o = 4;\r\n                while (1) {\r\n                    A = (h << 16 >> 16 >>> 1) + (g >>> 1) | 0;\r\n                    g = A << 16;\r\n                    q = g >> 16;\r\n                    g = t + (g >> 6) | 0;\r\n                    B = g & -65536;\r\n                    g = (g >>> 1) - (g >> 16 << 15) << 16;\r\n                    m = r + ((((Z(g >> 16, q) | 0) >> 15) + (Z(B >> 16, q) | 0) << 2) + -16777216) | 0;\r\n                    k = m >> 16;\r\n                    m = (m >>> 1) - (k << 15) << 16;\r\n                    B = n + ((((Z(m >> 16, q) | 0) >> 15) + (Z(k, q) | 0) << 2) - ((g >> 15) + B)) | 0;\r\n                    g = B >> 16;\r\n                    B = (B >>> 1) - (g << 15) << 16;\r\n                    k = p + ((((Z(B >> 16, q) | 0) >> 15) + (Z(g, q) | 0) << 2) - ((m >> 15) + (k << 16))) | 0;\r\n                    m = k >> 16;\r\n                    A = A & 65535;\r\n                    g = s + ((((Z((k >>> 1) - (m << 15) << 16 >> 16, q) | 0) >> 15) + (Z(m, q) | 0) << 1) - ((B >> 15) + (g << 16))) | 0;\r\n                    g = (g + 33554432 | 0) >>> 0 < 67108863 ? g >>> 10 & 65535 : (g | 0) > 33554431 ? 32767 : -32768;\r\n                    B = (Z(g << 16 >> 16, a << 16 >> 16) | 0) < 1;\r\n                    q = B ? l : A;\r\n                    a = B ? a : g;\r\n                    h = B ? A : h;\r\n                    f = B ? g : f;\r\n                    o = o + -1 << 16 >> 16;\r\n                    g = q << 16 >> 16;\r\n                    if (!(o << 16 >> 16)) {\r\n                        l = g;\r\n                        j = h;\r\n                        h = q;\r\n                        break\r\n                    } else l = q\r\n                }\r\n                k = e << 16 >> 16;\r\n                g = a << 16 >> 16;\r\n                a = (f & 65535) - g | 0;\r\n                f = a << 16;\r\n                if (f) {\r\n                    B = (a & 65535) - (a >>> 15 & 1) | 0;\r\n                    B = B << 16 >> 31 ^ B;\r\n                    a = (qe(B & 65535) | 0) << 16 >> 16;\r\n                    a = (Z((Td(16383, B << 16 >> 16 << a & 65535) | 0) << 16 >> 16, (j & 65535) - l << 16 >> 16) | 0) >> 19 - a;\r\n                    if ((f | 0) < 0) a = 0 - (a << 16 >> 16) | 0;\r\n                    h = l - ((Z(a << 16 >> 16, g) | 0) >>> 10) & 65535\r\n                }\r\n                b[c + (k << 1) >> 1] = h;\r\n                f = v << 16 >> 16 == 0 ? x : w;\r\n                A = h << 16 >> 16;\r\n                a = b[f + 2 >> 1] | 0;\r\n                g = (a << 16 >> 16 << 14) + (A << 10) | 0;\r\n                B = g & -65536;\r\n                g = (g >>> 1) - (g >> 16 << 15) << 16;\r\n                t = (((Z(g >> 16, A) | 0) >> 15) + (Z(B >> 16, A) | 0) << 2) + -16777216 | 0;\r\n                t = (b[f + 4 >> 1] << 14) + t | 0;\r\n                s = t >> 16;\r\n                t = (t >>> 1) - (s << 15) << 16;\r\n                B = (((Z(t >> 16, A) | 0) >> 15) + (Z(s, A) | 0) << 2) - ((g >> 15) + B) | 0;\r\n                B = (b[f + 6 >> 1] << 14) + B | 0;\r\n                g = B >> 16;\r\n                B = (B >>> 1) - (g << 15) << 16;\r\n                s = (((Z(B >> 16, A) | 0) >> 15) + (Z(g, A) | 0) << 2) - ((t >> 15) + (s << 16)) | 0;\r\n                s = (b[f + 8 >> 1] << 14) + s | 0;\r\n                t = s >> 16;\r\n                e = e + 1 << 16 >> 16;\r\n                g = (((Z((s >>> 1) - (t << 15) << 16 >> 16, A) | 0) >> 15) + (Z(t, A) | 0) << 1) - ((B >> 15) + (g << 16)) | 0;\r\n                g = (b[f + 10 >> 1] << 13) + g | 0;\r\n                if (e << 16 >> 16 < 10) {\r\n                    s = f + 4 | 0;\r\n                    k = f;\r\n                    v = v ^ 1;\r\n                    j = u;\r\n                    r = f + 10 | 0;\r\n                    f = (g + 33554432 | 0) >>> 0 < 67108863 ? g >>> 10 & 65535 : (g | 0) > 33554431 ? 32767 : -32768\r\n                } else {\r\n                    z = 13;\r\n                    break\r\n                }\r\n            }\r\n            if ((z | 0) == 13) {\r\n                i = y;\r\n                return\r\n            }\r\n            b[c >> 1] = b[d >> 1] | 0;\r\n            b[c + 2 >> 1] = b[d + 2 >> 1] | 0;\r\n            b[c + 4 >> 1] = b[d + 4 >> 1] | 0;\r\n            b[c + 6 >> 1] = b[d + 6 >> 1] | 0;\r\n            b[c + 8 >> 1] = b[d + 8 >> 1] | 0;\r\n            b[c + 10 >> 1] = b[d + 10 >> 1] | 0;\r\n            b[c + 12 >> 1] = b[d + 12 >> 1] | 0;\r\n            b[c + 14 >> 1] = b[d + 14 >> 1] | 0;\r\n            b[c + 16 >> 1] = b[d + 16 >> 1] | 0;\r\n            b[c + 18 >> 1] = b[d + 18 >> 1] | 0;\r\n            i = y;\r\n            return\r\n        }\r\n\r\n        function Td(a, b) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0;\r\n            e = b << 16 >> 16;\r\n            if (a << 16 >> 16 < 1 ? 1 : a << 16 >> 16 > b << 16 >> 16) {\r\n                e = 0;\r\n                return e | 0\r\n            }\r\n            if (a << 16 >> 16 == b << 16 >> 16) {\r\n                e = 32767;\r\n                return e | 0\r\n            }\r\n            d = e << 1;\r\n            c = e << 2;\r\n            f = a << 16 >> 16 << 3;\r\n            a = (f | 0) < (c | 0);\r\n            f = f - (a ? 0 : c) | 0;\r\n            a = a ? 0 : 4;\r\n            g = (f | 0) < (d | 0);\r\n            f = f - (g ? 0 : d) | 0;\r\n            b = (f | 0) < (e | 0);\r\n            a = (b & 1 | (g ? a : a | 2)) << 3 ^ 8;\r\n            b = f - (b ? 0 : e) << 3;\r\n            if ((b | 0) >= (c | 0)) {\r\n                b = b - c | 0;\r\n                a = a & 65528 | 4\r\n            }\r\n            f = (b | 0) < (d | 0);\r\n            g = b - (f ? 0 : d) | 0;\r\n            b = (g | 0) < (e | 0);\r\n            a = (b & 1 ^ 1 | (f ? a : a | 2)) << 16 >> 13;\r\n            b = g - (b ? 0 : e) << 3;\r\n            if ((b | 0) >= (c | 0)) {\r\n                b = b - c | 0;\r\n                a = a & 65528 | 4\r\n            }\r\n            f = (b | 0) < (d | 0);\r\n            g = b - (f ? 0 : d) | 0;\r\n            b = (g | 0) < (e | 0);\r\n            a = (b & 1 ^ 1 | (f ? a : a | 2)) << 16 >> 13;\r\n            b = g - (b ? 0 : e) << 3;\r\n\r\n            if ((b | 0) >= (c | 0)) {\r\n                b = b - c | 0;\r\n                a = a & 65528 | 4\r\n            }\r\n            h = (b | 0) < (d | 0);\r\n            f = b - (h ? 0 : d) | 0;\r\n            g = (f | 0) < (e | 0);\r\n            b = (g & 1 ^ 1 | (h ? a : a | 2)) << 16 >> 13;\r\n            a = f - (g ? 0 : e) << 3;\r\n            if ((a | 0) >= (c | 0)) {\r\n                a = a - c | 0;\r\n                b = b & 65528 | 4\r\n            }\r\n            h = (a | 0) < (d | 0);\r\n            h = ((a - (h ? 0 : d) | 0) >= (e | 0) | (h ? b : b | 2)) & 65535;\r\n            return h | 0\r\n        }\r\n\r\n        function Ud(a) {\r\n            a = a | 0;\r\n            if (!a) {\r\n                a = -1;\r\n                return a | 0\r\n            }\r\n            b[a >> 1] = -14336;\r\n            b[a + 8 >> 1] = -2381;\r\n            b[a + 2 >> 1] = -14336;\r\n            b[a + 10 >> 1] = -2381;\r\n            b[a + 4 >> 1] = -14336;\r\n            b[a + 12 >> 1] = -2381;\r\n            b[a + 6 >> 1] = -14336;\r\n            b[a + 14 >> 1] = -2381;\r\n            a = 0;\r\n            return a | 0\r\n        }\r\n\r\n        function Vd(a, d, f, g, h, j, k, l) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            l = l | 0;\r\n            var m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;\r\n            r = i;\r\n            i = i + 16 | 0;\r\n            p = r + 2 | 0;\r\n            q = r;\r\n            m = 0;\r\n            n = 10;\r\n            while (1) {\r\n                o = b[f >> 1] | 0;\r\n                o = ((Z(o, o) | 0) >>> 3) + m | 0;\r\n                m = b[f + 2 >> 1] | 0;\r\n                m = o + ((Z(m, m) | 0) >>> 3) | 0;\r\n                o = b[f + 4 >> 1] | 0;\r\n                o = m + ((Z(o, o) | 0) >>> 3) | 0;\r\n                m = b[f + 6 >> 1] | 0;\r\n                m = o + ((Z(m, m) | 0) >>> 3) | 0;\r\n                n = n + -1 << 16 >> 16;\r\n                if (!(n << 16 >> 16)) break; else f = f + 8 | 0\r\n            }\r\n            n = m << 4;\r\n            n = (n | 0) < 0 ? 2147483647 : n;\r\n            if ((d | 0) == 7) {\r\n                de(((Ce(n, l) | 0) << 16 >> 16) * 52428 | 0, p, q, l);\r\n                o = e[p >> 1] << 16;\r\n                n = b[q >> 1] << 1;\r\n                d = b[a + 8 >> 1] | 0;\r\n                m = (d << 16 >> 16) * 88 | 0;\r\n                if (d << 16 >> 16 > -1 & (m | 0) < -783741) {\r\n                    c[l >> 2] = 1;\r\n                    f = 2147483647\r\n                } else f = m + 783741 | 0;\r\n                d = (b[a + 10 >> 1] | 0) * 74 | 0;\r\n                m = d + f | 0;\r\n                if ((d ^ f | 0) > -1 & (m ^ f | 0) < 0) {\r\n                    c[l >> 2] = 1;\r\n                    f = (f >>> 31) + 2147483647 | 0\r\n                } else f = m;\r\n                d = (b[a + 12 >> 1] | 0) * 44 | 0;\r\n                m = d + f | 0;\r\n                if ((d ^ f | 0) > -1 & (m ^ f | 0) < 0) {\r\n                    c[l >> 2] = 1;\r\n                    f = (f >>> 31) + 2147483647 | 0\r\n                } else f = m;\r\n                a = (b[a + 14 >> 1] | 0) * 24 | 0;\r\n                m = a + f | 0;\r\n                if ((a ^ f | 0) > -1 & (m ^ f | 0) < 0) {\r\n                    c[l >> 2] = 1;\r\n                    m = (f >>> 31) + 2147483647 | 0\r\n                }\r\n                a = o + -1966080 + n | 0;\r\n                f = m - a | 0;\r\n                if (((f ^ m) & (m ^ a) | 0) < 0) {\r\n                    c[l >> 2] = 1;\r\n                    f = (m >>> 31) + 2147483647 | 0\r\n                }\r\n                l = f >> 17;\r\n                b[g >> 1] = l;\r\n                l = (f >> 2) - (l << 15) | 0;\r\n                l = l & 65535;\r\n                b[h >> 1] = l;\r\n                i = r;\r\n                return\r\n            }\r\n            o = pe(n) | 0;\r\n            m = o << 16 >> 16;\r\n            if (o << 16 >> 16 > 0) {\r\n                f = n << m;\r\n                if ((f >> m | 0) == (n | 0)) n = f; else n = n >> 31 ^ 2147483647\r\n            } else {\r\n                m = 0 - m << 16;\r\n                if ((m | 0) < 2031616) n = n >> (m >> 16); else n = 0\r\n            }\r\n            ee(n, o, p, q);\r\n            p = Z(b[p >> 1] | 0, -49320) | 0;\r\n            m = (Z(b[q >> 1] | 0, -24660) | 0) >> 15;\r\n            m = (m & 65536 | 0) == 0 ? m : m | -65536;\r\n            q = m << 1;\r\n            f = q + p | 0;\r\n            if ((q ^ p | 0) > -1 & (f ^ q | 0) < 0) {\r\n                c[l >> 2] = 1;\r\n                f = (m >>> 30 & 1) + 2147483647 | 0\r\n            }\r\n            switch (d | 0) {\r\n                case 6: {\r\n                    m = f + 2134784 | 0;\r\n                    if ((f | 0) > -1 & (m ^ f | 0) < 0) {\r\n                        c[l >> 2] = 1;\r\n                        m = (f >>> 31) + 2147483647 | 0\r\n                    }\r\n                    break\r\n                }\r\n                case 5: {\r\n                    b[k >> 1] = n >>> 16;\r\n                    b[j >> 1] = -11 - (o & 65535);\r\n                    m = f + 2183936 | 0;\r\n                    if ((f | 0) > -1 & (m ^ f | 0) < 0) {\r\n                        c[l >> 2] = 1;\r\n                        m = (f >>> 31) + 2147483647 | 0\r\n                    }\r\n                    break\r\n                }\r\n                case 4: {\r\n                    m = f + 2085632 | 0;\r\n                    if ((f | 0) > -1 & (m ^ f | 0) < 0) {\r\n                        c[l >> 2] = 1;\r\n                        m = (f >>> 31) + 2147483647 | 0\r\n                    }\r\n                    break\r\n                }\r\n                case 3: {\r\n                    m = f + 2065152 | 0;\r\n                    if ((f | 0) > -1 & (m ^ f | 0) < 0) {\r\n                        c[l >> 2] = 1;\r\n                        m = (f >>> 31) + 2147483647 | 0\r\n                    }\r\n                    break\r\n                }\r\n                default: {\r\n                    m = f + 2134784 | 0;\r\n                    if ((f | 0) > -1 & (m ^ f | 0) < 0) {\r\n                        c[l >> 2] = 1;\r\n                        m = (f >>> 31) + 2147483647 | 0\r\n                    }\r\n                }\r\n            }\r\n            do if ((m | 0) <= 2097151) if ((m | 0) < -2097152) {\r\n                c[l >> 2] = 1;\r\n                f = -2147483648;\r\n                break\r\n            } else {\r\n                f = m << 10;\r\n                break\r\n            } else {\r\n                c[l >> 2] = 1;\r\n                f = 2147483647\r\n            } while (0);\r\n            k = (b[a >> 1] | 0) * 11142 | 0;\r\n            m = k + f | 0;\r\n            if ((k ^ f | 0) > -1 & (m ^ f | 0) < 0) {\r\n                c[l >> 2] = 1;\r\n                m = (f >>> 31) + 2147483647 | 0\r\n            }\r\n            k = (b[a + 2 >> 1] | 0) * 9502 | 0;\r\n            f = k + m | 0;\r\n            if ((k ^ m | 0) > -1 & (f ^ m | 0) < 0) {\r\n                c[l >> 2] = 1;\r\n                f = (m >>> 31) + 2147483647 | 0\r\n            }\r\n            k = (b[a + 4 >> 1] | 0) * 5570 | 0;\r\n            m = k + f | 0;\r\n            if ((k ^ f | 0) > -1 & (m ^ f | 0) < 0) {\r\n                c[l >> 2] = 1;\r\n                m = (f >>> 31) + 2147483647 | 0\r\n            }\r\n            a = (b[a + 6 >> 1] | 0) * 3112 | 0;\r\n            f = a + m | 0;\r\n            if ((a ^ m | 0) > -1 & (f ^ m | 0) < 0) {\r\n                c[l >> 2] = 1;\r\n                f = (m >>> 31) + 2147483647 | 0\r\n            }\r\n            f = Z(f >> 16, (d | 0) == 4 ? 10878 : 10886) | 0;\r\n            if ((f | 0) < 0) f = ~((f ^ -256) >> 8); else f = f >> 8;\r\n            b[g >> 1] = f >>> 16;\r\n            if ((f | 0) < 0) m = ~((f ^ -2) >> 1); else m = f >> 1;\r\n            g = f >> 16 << 15;\r\n            f = m - g | 0;\r\n            if (((f ^ m) & (g ^ m) | 0) >= 0) {\r\n                l = f;\r\n                l = l & 65535;\r\n                b[h >> 1] = l;\r\n                i = r;\r\n                return\r\n            }\r\n            c[l >> 2] = 1;\r\n            l = (m >>> 31) + 2147483647 | 0;\r\n            l = l & 65535;\r\n            b[h >> 1] = l;\r\n            i = r;\r\n            return\r\n        }\r\n\r\n        function Wd(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var e = 0, f = 0, g = 0;\r\n            f = a + 4 | 0;\r\n            b[a + 6 >> 1] = b[f >> 1] | 0;\r\n            g = a + 12 | 0;\r\n            b[a + 14 >> 1] = b[g >> 1] | 0;\r\n            e = a + 2 | 0;\r\n            b[f >> 1] = b[e >> 1] | 0;\r\n            f = a + 10 | 0;\r\n            b[g >> 1] = b[f >> 1] | 0;\r\n            b[e >> 1] = b[a >> 1] | 0;\r\n            e = a + 8 | 0;\r\n            b[f >> 1] = b[e >> 1] | 0;\r\n            b[e >> 1] = c;\r\n            b[a >> 1] = d;\r\n            return\r\n        }\r\n\r\n        function Xd(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0;\r\n            g = Rd(0, b[a + 8 >> 1] | 0, e) | 0;\r\n            g = Rd(g, b[a + 10 >> 1] | 0, e) | 0;\r\n            g = Rd(g, b[a + 12 >> 1] | 0, e) | 0;\r\n            g = Rd(g, b[a + 14 >> 1] | 0, e) | 0;\r\n            f = g << 16 >> 16 >> 2;\r\n            f = (g << 16 >> 16 < 0 ? f | 49152 : f) & 65535;\r\n            b[c >> 1] = f << 16 >> 16 < -2381 ? -2381 : f;\r\n            c = Rd(0, b[a >> 1] | 0, e) | 0;\r\n            c = Rd(c, b[a + 2 >> 1] | 0, e) | 0;\r\n            c = Rd(c, b[a + 4 >> 1] | 0, e) | 0;\r\n            e = Rd(c, b[a + 6 >> 1] | 0, e) | 0;\r\n            a = e << 16 >> 16 >> 2;\r\n            a = (e << 16 >> 16 < 0 ? a | 49152 : a) & 65535;\r\n            b[d >> 1] = a << 16 >> 16 < -14336 ? -14336 : a;\r\n            return\r\n        }\r\n\r\n        function Yd(a) {\r\n            a = a | 0;\r\n            c[a >> 2] = 6892;\r\n            c[a + 4 >> 2] = 8180;\r\n            c[a + 8 >> 2] = 21e3;\r\n            c[a + 12 >> 2] = 9716;\r\n            c[a + 16 >> 2] = 22024;\r\n            c[a + 20 >> 2] = 12788;\r\n            c[a + 24 >> 2] = 24072;\r\n            c[a + 28 >> 2] = 26120;\r\n            c[a + 32 >> 2] = 28168;\r\n            c[a + 36 >> 2] = 6876;\r\n            c[a + 40 >> 2] = 7452;\r\n            c[a + 44 >> 2] = 8140;\r\n            c[a + 48 >> 2] = 20980;\r\n            c[a + 52 >> 2] = 16884;\r\n            c[a + 56 >> 2] = 17908;\r\n            c[a + 60 >> 2] = 7980;\r\n            c[a + 64 >> 2] = 8160;\r\n            c[a + 68 >> 2] = 6678;\r\n            c[a + 72 >> 2] = 6646;\r\n            c[a + 76 >> 2] = 6614;\r\n            c[a + 80 >> 2] = 29704;\r\n            c[a + 84 >> 2] = 28680;\r\n            c[a + 88 >> 2] = 3720;\r\n            c[a + 92 >> 2] = 8;\r\n            c[a + 96 >> 2] = 4172;\r\n            c[a + 100 >> 2] = 44;\r\n            c[a + 104 >> 2] = 3436;\r\n            c[a + 108 >> 2] = 30316;\r\n            c[a + 112 >> 2] = 30796;\r\n            c[a + 116 >> 2] = 31276;\r\n            c[a + 120 >> 2] = 7472;\r\n            c[a + 124 >> 2] = 7552;\r\n            c[a + 128 >> 2] = 7632;\r\n            c[a + 132 >> 2] = 7712;\r\n            return\r\n        }\r\n\r\n        function Zd(a, c) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            var d = 0, e = 0, f = 0, g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0;\r\n            n = i;\r\n            i = i + 48 | 0;\r\n            l = n + 18 | 0;\r\n            m = n;\r\n            k = c << 16 >> 16;\r\n            Oe(m | 0, a | 0, k << 1 | 0) | 0;\r\n            if (c << 16 >> 16 > 0) {\r\n                d = 0;\r\n                e = 0\r\n            } else {\r\n                m = k >> 1;\r\n                m = l + (m << 1) | 0;\r\n                m = b[m >> 1] | 0;\r\n                m = m << 16 >> 16;\r\n                m = a + (m << 1) | 0;\r\n                m = b[m >> 1] | 0;\r\n                i = n;\r\n                return m | 0\r\n            }\r\n            do {\r\n                j = 0;\r\n                h = -32767;\r\n                while (1) {\r\n                    f = b[m + (j << 1) >> 1] | 0;\r\n                    g = f << 16 >> 16 < h << 16 >> 16;\r\n                    e = g ? e : j & 65535;\r\n                    j = j + 1 | 0;\r\n                    if ((j & 65535) << 16 >> 16 == c << 16 >> 16) break; else h = g ? h : f\r\n                }\r\n                b[m + (e << 16 >> 16 << 1) >> 1] = -32768;\r\n                b[l + (d << 1) >> 1] = e;\r\n                d = d + 1 | 0\r\n            } while ((d & 65535) << 16 >> 16 != c << 16 >> 16);\r\n            m = k >> 1;\r\n            m = l + (m << 1) | 0;\r\n            m = b[m >> 1] | 0;\r\n            m = m << 16 >> 16;\r\n            m = a + (m << 1) | 0;\r\n            m = b[m >> 1] | 0;\r\n            i = n;\r\n            return m | 0\r\n        }\r\n\r\n        function _d(a, c, d, e, f) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0,\r\n                w = 0, x = 0, y = 0, z = 0, A = 0;\r\n            g = i;\r\n            i = i + 32 | 0;\r\n            h = g;\r\n            A = c + 2 | 0;\r\n            z = h + 2 | 0;\r\n            b[h >> 1] = ((b[c >> 1] | 0) >>> 1) + ((b[a >> 1] | 0) >>> 1);\r\n            y = c + 4 | 0;\r\n            x = h + 4 | 0;\r\n            b[z >> 1] = ((b[A >> 1] | 0) >>> 1) + ((b[a + 2 >> 1] | 0) >>> 1);\r\n            w = c + 6 | 0;\r\n            v = h + 6 | 0;\r\n            b[x >> 1] = ((b[y >> 1] | 0) >>> 1) + ((b[a + 4 >> 1] | 0) >>> 1);\r\n            u = c + 8 | 0;\r\n            t = h + 8 | 0;\r\n            b[v >> 1] = ((b[w >> 1] | 0) >>> 1) + ((b[a + 6 >> 1] | 0) >>> 1);\r\n            s = c + 10 | 0;\r\n            r = h + 10 | 0;\r\n            b[t >> 1] = ((b[u >> 1] | 0) >>> 1) + ((b[a + 8 >> 1] | 0) >>> 1);\r\n            q = c + 12 | 0;\r\n            p = h + 12 | 0;\r\n            b[r >> 1] = ((b[s >> 1] | 0) >>> 1) + ((b[a + 10 >> 1] | 0) >>> 1);\r\n            o = c + 14 | 0;\r\n            n = h + 14 | 0;\r\n            b[p >> 1] = ((b[q >> 1] | 0) >>> 1) + ((b[a + 12 >> 1] | 0) >>> 1);\r\n            m = c + 16 | 0;\r\n            l = h + 16 | 0;\r\n            b[n >> 1] = ((b[o >> 1] | 0) >>> 1) + ((b[a + 14 >> 1] | 0) >>> 1);\r\n            k = c + 18 | 0;\r\n            j = h + 18 | 0;\r\n            b[l >> 1] = ((b[m >> 1] | 0) >>> 1) + ((b[a + 16 >> 1] | 0) >>> 1);\r\n            b[j >> 1] = ((b[k >> 1] | 0) >>> 1) + ((b[a + 18 >> 1] | 0) >>> 1);\r\n            he(h, e, f);\r\n            he(c, e + 22 | 0, f);\r\n            b[h >> 1] = ((b[d >> 1] | 0) >>> 1) + ((b[c >> 1] | 0) >>> 1);\r\n            b[z >> 1] = ((b[d + 2 >> 1] | 0) >>> 1) + ((b[A >> 1] | 0) >>> 1);\r\n            b[x >> 1] = ((b[d + 4 >> 1] | 0) >>> 1) + ((b[y >> 1] | 0) >>> 1);\r\n            b[v >> 1] = ((b[d + 6 >> 1] | 0) >>> 1) + ((b[w >> 1] | 0) >>> 1);\r\n            b[t >> 1] = ((b[d + 8 >> 1] | 0) >>> 1) + ((b[u >> 1] | 0) >>> 1);\r\n            b[r >> 1] = ((b[d + 10 >> 1] | 0) >>> 1) + ((b[s >> 1] | 0) >>> 1);\r\n            b[p >> 1] = ((b[d + 12 >> 1] | 0) >>> 1) + ((b[q >> 1] | 0) >>> 1);\r\n            b[n >> 1] = ((b[d + 14 >> 1] | 0) >>> 1) + ((b[o >> 1] | 0) >>> 1);\r\n            b[l >> 1] = ((b[d + 16 >> 1] | 0) >>> 1) + ((b[m >> 1] | 0) >>> 1);\r\n            b[j >> 1] = ((b[d + 18 >> 1] | 0) >>> 1) + ((b[k >> 1] | 0) >>> 1);\r\n            he(h, e + 44 | 0, f);\r\n            he(d, e + 66 | 0, f);\r\n            i = g;\r\n            return\r\n        }\r\n\r\n        function $d(a, c, d, e, f) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0,\r\n                w = 0, x = 0, y = 0, z = 0, A = 0;\r\n            g = i;\r\n            i = i + 32 | 0;\r\n            h = g;\r\n            A = c + 2 | 0;\r\n            z = h + 2 | 0;\r\n            b[h >> 1] = ((b[c >> 1] | 0) >>> 1) + ((b[a >> 1] | 0) >>> 1);\r\n            y = c + 4 | 0;\r\n            x = h + 4 | 0;\r\n            b[z >> 1] = ((b[A >> 1] | 0) >>> 1) + ((b[a + 2 >> 1] | 0) >>> 1);\r\n            w = c + 6 | 0;\r\n            v = h + 6 | 0;\r\n            b[x >> 1] = ((b[y >> 1] | 0) >>> 1) + ((b[a + 4 >> 1] | 0) >>> 1);\r\n            u = c + 8 | 0;\r\n            t = h + 8 | 0;\r\n            b[v >> 1] = ((b[w >> 1] | 0) >>> 1) + ((b[a + 6 >> 1] | 0) >>> 1);\r\n            s = c + 10 | 0;\r\n            r = h + 10 | 0;\r\n            b[t >> 1] = ((b[u >> 1] | 0) >>> 1) + ((b[a + 8 >> 1] | 0) >>> 1);\r\n            q = c + 12 | 0;\r\n            p = h + 12 | 0;\r\n            b[r >> 1] = ((b[s >> 1] | 0) >>> 1) + ((b[a + 10 >> 1] | 0) >>> 1);\r\n            o = c + 14 | 0;\r\n            n = h + 14 | 0;\r\n            b[p >> 1] = ((b[q >> 1] | 0) >>> 1) + ((b[a + 12 >> 1] | 0) >>> 1);\r\n            m = c + 16 | 0;\r\n            l = h + 16 | 0;\r\n            b[n >> 1] = ((b[o >> 1] | 0) >>> 1) + ((b[a + 14 >> 1] | 0) >>> 1);\r\n            k = c + 18 | 0;\r\n            j = h + 18 | 0;\r\n            b[l >> 1] = ((b[m >> 1] | 0) >>> 1) + ((b[a + 16 >> 1] | 0) >>> 1);\r\n            b[j >> 1] = ((b[k >> 1] | 0) >>> 1) + ((b[a + 18 >> 1] | 0) >>> 1);\r\n            he(h, e, f);\r\n            b[h >> 1] = ((b[d >> 1] | 0) >>> 1) + ((b[c >> 1] | 0) >>> 1);\r\n            b[z >> 1] = ((b[d + 2 >> 1] | 0) >>> 1) + ((b[A >> 1] | 0) >>> 1);\r\n            b[x >> 1] = ((b[d + 4 >> 1] | 0) >>> 1) + ((b[y >> 1] | 0) >>> 1);\r\n            b[v >> 1] = ((b[d + 6 >> 1] | 0) >>> 1) + ((b[w >> 1] | 0) >>> 1);\r\n            b[t >> 1] = ((b[d + 8 >> 1] | 0) >>> 1) + ((b[u >> 1] | 0) >>> 1);\r\n            b[r >> 1] = ((b[d + 10 >> 1] | 0) >>> 1) + ((b[s >> 1] | 0) >>> 1);\r\n            b[p >> 1] = ((b[d + 12 >> 1] | 0) >>> 1) + ((b[q >> 1] | 0) >>> 1);\r\n            b[n >> 1] = ((b[d + 14 >> 1] | 0) >>> 1) + ((b[o >> 1] | 0) >>> 1);\r\n            b[l >> 1] = ((b[d + 16 >> 1] | 0) >>> 1) + ((b[m >> 1] | 0) >>> 1);\r\n            b[j >> 1] = ((b[d + 18 >> 1] | 0) >>> 1) + ((b[k >> 1] | 0) >>> 1);\r\n            he(h, e + 44 | 0, f);\r\n            i = g;\r\n            return\r\n        }\r\n\r\n        function ae(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0,\r\n                v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0;\r\n            f = i;\r\n            i = i + 32 | 0;\r\n            g = f;\r\n            H = b[a >> 1] | 0;\r\n            b[g >> 1] = H - (H >>> 2) + ((b[c >> 1] | 0) >>> 2);\r\n            H = a + 2 | 0;\r\n            E = b[H >> 1] | 0;\r\n            I = c + 2 | 0;\r\n            G = g + 2 | 0;\r\n            b[G >> 1] = E - (E >>> 2) + ((b[I >> 1] | 0) >>> 2);\r\n            E = a + 4 | 0;\r\n            B = b[E >> 1] | 0;\r\n            F = c + 4 | 0;\r\n            D = g + 4 | 0;\r\n            b[D >> 1] = B - (B >>> 2) + ((b[F >> 1] | 0) >>> 2);\r\n            B = a + 6 | 0;\r\n            y = b[B >> 1] | 0;\r\n            C = c + 6 | 0;\r\n            A = g + 6 | 0;\r\n            b[A >> 1] = y - (y >>> 2) + ((b[C >> 1] | 0) >>> 2);\r\n            y = a + 8 | 0;\r\n            v = b[y >> 1] | 0;\r\n            z = c + 8 | 0;\r\n            x = g + 8 | 0;\r\n            b[x >> 1] = v - (v >>> 2) + ((b[z >> 1] | 0) >>> 2);\r\n            v = a + 10 | 0;\r\n            s = b[v >> 1] | 0;\r\n            w = c + 10 | 0;\r\n            u = g + 10 | 0;\r\n            b[u >> 1] = s - (s >>> 2) + ((b[w >> 1] | 0) >>> 2);\r\n            s = a + 12 | 0;\r\n            p = b[s >> 1] | 0;\r\n            t = c + 12 | 0;\r\n            r = g + 12 | 0;\r\n            b[r >> 1] = p - (p >>> 2) + ((b[t >> 1] | 0) >>> 2);\r\n            p = a + 14 | 0;\r\n            m = b[p >> 1] | 0;\r\n            q = c + 14 | 0;\r\n            o = g + 14 | 0;\r\n            b[o >> 1] = m - (m >>> 2) + ((b[q >> 1] | 0) >>> 2);\r\n            m = a + 16 | 0;\r\n            j = b[m >> 1] | 0;\r\n            n = c + 16 | 0;\r\n            l = g + 16 | 0;\r\n            b[l >> 1] = j - (j >>> 2) + ((b[n >> 1] | 0) >>> 2);\r\n            j = a + 18 | 0;\r\n            J = b[j >> 1] | 0;\r\n            k = c + 18 | 0;\r\n            h = g + 18 | 0;\r\n            b[h >> 1] = J - (J >>> 2) + ((b[k >> 1] | 0) >>> 2);\r\n            he(g, d, e);\r\n            b[g >> 1] = ((b[a >> 1] | 0) >>> 1) + ((b[c >> 1] | 0) >>> 1);\r\n            b[G >> 1] = ((b[H >> 1] | 0) >>> 1) + ((b[I >> 1] | 0) >>> 1);\r\n            b[D >> 1] = ((b[E >> 1] | 0) >>> 1) + ((b[F >> 1] | 0) >>> 1);\r\n            b[A >> 1] = ((b[B >> 1] | 0) >>> 1) + ((b[C >> 1] | 0) >>> 1);\r\n            b[x >> 1] = ((b[y >> 1] | 0) >>> 1) + ((b[z >> 1] | 0) >>> 1);\r\n            b[u >> 1] = ((b[v >> 1] | 0) >>> 1) + ((b[w >> 1] | 0) >>> 1);\r\n            b[r >> 1] = ((b[s >> 1] | 0) >>> 1) + ((b[t >> 1] | 0) >>> 1);\r\n            b[o >> 1] = ((b[p >> 1] | 0) >>> 1) + ((b[q >> 1] | 0) >>> 1);\r\n            b[l >> 1] = ((b[m >> 1] | 0) >>> 1) + ((b[n >> 1] | 0) >>> 1);\r\n            b[h >> 1] = ((b[j >> 1] | 0) >>> 1) + ((b[k >> 1] | 0) >>> 1);\r\n            he(g, d + 22 | 0, e);\r\n            J = b[c >> 1] | 0;\r\n            b[g >> 1] = J - (J >>> 2) + ((b[a >> 1] | 0) >>> 2);\r\n            a = b[I >> 1] | 0;\r\n            b[G >> 1] = a - (a >>> 2) + ((b[H >> 1] | 0) >>> 2);\r\n            a = b[F >> 1] | 0;\r\n            b[D >> 1] = a - (a >>> 2) + ((b[E >> 1] | 0) >>> 2);\r\n            a = b[C >> 1] | 0;\r\n            b[A >> 1] = a - (a >>> 2) + ((b[B >> 1] | 0) >>> 2);\r\n            a = b[z >> 1] | 0;\r\n            b[x >> 1] = a - (a >>> 2) + ((b[y >> 1] | 0) >>> 2);\r\n            a = b[w >> 1] | 0;\r\n            b[u >> 1] = a - (a >>> 2) + ((b[v >> 1] | 0) >>> 2);\r\n            a = b[t >> 1] | 0;\r\n            b[r >> 1] = a - (a >>> 2) + ((b[s >> 1] | 0) >>> 2);\r\n            a = b[q >> 1] | 0;\r\n            b[o >> 1] = a - (a >>> 2) + ((b[p >> 1] | 0) >>> 2);\r\n            a = b[n >> 1] | 0;\r\n            b[l >> 1] = a - (a >>> 2) + ((b[m >> 1] | 0) >>> 2);\r\n            a = b[k >> 1] | 0;\r\n            b[h >> 1] = a - (a >>> 2) + ((b[j >> 1] | 0) >>> 2);\r\n            he(g, d + 44 | 0, e);\r\n            he(c, d + 66 | 0, e);\r\n            i = f;\r\n            return\r\n        }\r\n\r\n        function be(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0,\r\n                v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0;\r\n            f = i;\r\n            i = i + 32 | 0;\r\n            g = f;\r\n            H = b[a >> 1] | 0;\r\n            b[g >> 1] = H - (H >>> 2) + ((b[c >> 1] | 0) >>> 2);\r\n            H = a + 2 | 0;\r\n            E = b[H >> 1] | 0;\r\n            I = c + 2 | 0;\r\n            G = g + 2 | 0;\r\n            b[G >> 1] = E - (E >>> 2) + ((b[I >> 1] | 0) >>> 2);\r\n            E = a + 4 | 0;\r\n            B = b[E >> 1] | 0;\r\n            F = c + 4 | 0;\r\n            D = g + 4 | 0;\r\n            b[D >> 1] = B - (B >>> 2) + ((b[F >> 1] | 0) >>> 2);\r\n            B = a + 6 | 0;\r\n            y = b[B >> 1] | 0;\r\n            C = c + 6 | 0;\r\n            A = g + 6 | 0;\r\n            b[A >> 1] = y - (y >>> 2) + ((b[C >> 1] | 0) >>> 2);\r\n            y = a + 8 | 0;\r\n            v = b[y >> 1] | 0;\r\n            z = c + 8 | 0;\r\n            x = g + 8 | 0;\r\n            b[x >> 1] = v - (v >>> 2) + ((b[z >> 1] | 0) >>> 2);\r\n            v = a + 10 | 0;\r\n            s = b[v >> 1] | 0;\r\n            w = c + 10 | 0;\r\n            u = g + 10 | 0;\r\n            b[u >> 1] = s - (s >>> 2) + ((b[w >> 1] | 0) >>> 2);\r\n            s = a + 12 | 0;\r\n            p = b[s >> 1] | 0;\r\n            t = c + 12 | 0;\r\n            r = g + 12 | 0;\r\n            b[r >> 1] = p - (p >>> 2) + ((b[t >> 1] | 0) >>> 2);\r\n            p = a + 14 | 0;\r\n            m = b[p >> 1] | 0;\r\n            q = c + 14 | 0;\r\n            o = g + 14 | 0;\r\n            b[o >> 1] = m - (m >>> 2) + ((b[q >> 1] | 0) >>> 2);\r\n            m = a + 16 | 0;\r\n            j = b[m >> 1] | 0;\r\n            n = c + 16 | 0;\r\n            l = g + 16 | 0;\r\n            b[l >> 1] = j - (j >>> 2) + ((b[n >> 1] | 0) >>> 2);\r\n            j = a + 18 | 0;\r\n            J = b[j >> 1] | 0;\r\n            k = c + 18 | 0;\r\n            h = g + 18 | 0;\r\n            b[h >> 1] = J - (J >>> 2) + ((b[k >> 1] | 0) >>> 2);\r\n            he(g, d, e);\r\n            b[g >> 1] = ((b[a >> 1] | 0) >>> 1) + ((b[c >> 1] | 0) >>> 1);\r\n            b[G >> 1] = ((b[H >> 1] | 0) >>> 1) + ((b[I >> 1] | 0) >>> 1);\r\n            b[D >> 1] = ((b[E >> 1] | 0) >>> 1) + ((b[F >> 1] | 0) >>> 1);\r\n            b[A >> 1] = ((b[B >> 1] | 0) >>> 1) + ((b[C >> 1] | 0) >>> 1);\r\n            b[x >> 1] = ((b[y >> 1] | 0) >>> 1) + ((b[z >> 1] | 0) >>> 1);\r\n            b[u >> 1] = ((b[v >> 1] | 0) >>> 1) + ((b[w >> 1] | 0) >>> 1);\r\n            b[r >> 1] = ((b[s >> 1] | 0) >>> 1) + ((b[t >> 1] | 0) >>> 1);\r\n            b[o >> 1] = ((b[p >> 1] | 0) >>> 1) + ((b[q >> 1] | 0) >>> 1);\r\n            b[l >> 1] = ((b[m >> 1] | 0) >>> 1) + ((b[n >> 1] | 0) >>> 1);\r\n            b[h >> 1] = ((b[j >> 1] | 0) >>> 1) + ((b[k >> 1] | 0) >>> 1);\r\n            he(g, d + 22 | 0, e);\r\n            c = b[c >> 1] | 0;\r\n            b[g >> 1] = c - (c >>> 2) + ((b[a >> 1] | 0) >>> 2);\r\n            a = b[I >> 1] | 0;\r\n            b[G >> 1] = a - (a >>> 2) + ((b[H >> 1] | 0) >>> 2);\r\n            a = b[F >> 1] | 0;\r\n            b[D >> 1] = a - (a >>> 2) + ((b[E >> 1] | 0) >>> 2);\r\n            a = b[C >> 1] | 0;\r\n            b[A >> 1] = a - (a >>> 2) + ((b[B >> 1] | 0) >>> 2);\r\n            a = b[z >> 1] | 0;\r\n            b[x >> 1] = a - (a >>> 2) + ((b[y >> 1] | 0) >>> 2);\r\n            a = b[w >> 1] | 0;\r\n            b[u >> 1] = a - (a >>> 2) + ((b[v >> 1] | 0) >>> 2);\r\n            a = b[t >> 1] | 0;\r\n            b[r >> 1] = a - (a >>> 2) + ((b[s >> 1] | 0) >>> 2);\r\n            a = b[q >> 1] | 0;\r\n            b[o >> 1] = a - (a >>> 2) + ((b[p >> 1] | 0) >>> 2);\r\n            a = b[n >> 1] | 0;\r\n            b[l >> 1] = a - (a >>> 2) + ((b[m >> 1] | 0) >>> 2);\r\n            a = b[k >> 1] | 0;\r\n            b[h >> 1] = a - (a >>> 2) + ((b[j >> 1] | 0) >>> 2);\r\n            he(g, d + 44 | 0, e);\r\n            i = f;\r\n            return\r\n        }\r\n\r\n        function ce(a, c) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            var d = 0, f = 0;\r\n            if ((a | 0) < 1) {\r\n                c = 1073741823;\r\n                return c | 0\r\n            }\r\n            d = (pe(a) | 0) << 16 >> 16;\r\n            c = 30 - d | 0;\r\n            a = a << d >> (c & 1 ^ 1);\r\n            d = (a >> 25 << 16) + -1048576 >> 16;\r\n            f = b[7030 + (d << 1) >> 1] | 0;\r\n            c = (f << 16) - (Z(f - (e[7030 + (d + 1 << 1) >> 1] | 0) << 16 >> 15, a >>> 10 & 32767) | 0) >> (c << 16 >> 17) + 1;\r\n            return c | 0\r\n        }\r\n\r\n        function de(a, b, c, d) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            d = pe(a) | 0;\r\n            ee(a << (d << 16 >> 16), d, b, c);\r\n            return\r\n        }\r\n\r\n        function ee(a, c, d, f) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            if ((a | 0) < 1) {\r\n                b[d >> 1] = 0;\r\n                d = 0;\r\n                b[f >> 1] = d;\r\n                return\r\n            } else {\r\n                b[d >> 1] = 30 - (c & 65535);\r\n                d = (a >> 25 << 16) + -2097152 >> 16;\r\n                c = b[7128 + (d << 1) >> 1] | 0;\r\n                d = ((c << 16) - (Z(a >>> 9 & 65534, c - (e[7128 + (d + 1 << 1) >> 1] | 0) << 16 >> 16) | 0) | 0) >>> 16 & 65535;\r\n                b[f >> 1] = d;\r\n                return\r\n            }\r\n        }\r\n\r\n        function fe(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var f = 0, g = 0;\r\n            f = a + 2 | 0;\r\n            d = b[f >> 1] | 0;\r\n            b[c >> 1] = d;\r\n            g = a + 4 | 0;\r\n            b[c + 2 >> 1] = (e[g >> 1] | 0) - (e[a >> 1] | 0);\r\n            b[c + 4 >> 1] = (e[a + 6 >> 1] | 0) - (e[f >> 1] | 0);\r\n            f = a + 8 | 0;\r\n            b[c + 6 >> 1] = (e[f >> 1] | 0) - (e[g >> 1] | 0);\r\n            b[c + 8 >> 1] = (e[a + 10 >> 1] | 0) - (e[a + 6 >> 1] | 0);\r\n            g = a + 12 | 0;\r\n            b[c + 10 >> 1] = (e[g >> 1] | 0) - (e[f >> 1] | 0);\r\n            b[c + 12 >> 1] = (e[a + 14 >> 1] | 0) - (e[a + 10 >> 1] | 0);\r\n            b[c + 14 >> 1] = (e[a + 16 >> 1] | 0) - (e[g >> 1] | 0);\r\n            b[c + 16 >> 1] = (e[a + 18 >> 1] | 0) - (e[a + 14 >> 1] | 0);\r\n            b[c + 18 >> 1] = 16384 - (e[a + 16 >> 1] | 0);\r\n            a = 10;\r\n            g = c;\r\n            while (1) {\r\n                d = d << 16 >> 16;\r\n                c = (d << 16) + -120782848 | 0;\r\n                if ((c | 0) > 0) c = 1843 - ((c >> 16) * 12484 >> 16) | 0; else c = 3427 - ((d * 56320 | 0) >>> 16) | 0;\r\n                f = g + 2 | 0;\r\n                b[g >> 1] = c << 3;\r\n                a = a + -1 << 16 >> 16;\r\n                if (!(a << 16 >> 16)) break;\r\n                d = b[f >> 1] | 0;\r\n                g = f\r\n            }\r\n            return\r\n        }\r\n\r\n        function ge(a, b, c) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            c = c | 0;\r\n            c = b << 16 >> 16;\r\n            if (b << 16 >> 16 > 31) {\r\n                b = 0;\r\n                return b | 0\r\n            }\r\n            if (b << 16 >> 16 > 0) return ((1 << c + -1 & a | 0) != 0 & 1) + (b << 16 >> 16 < 31 ? a >> c : 0) | 0;\r\n            c = 0 - c << 16 >> 16;\r\n            b = a << c;\r\n            b = (b >> c | 0) == (a | 0) ? b : a >> 31 ^ 2147483647;\r\n            return b | 0\r\n        }\r\n\r\n        function he(a, d, e) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;\r\n            s = i;\r\n            i = i + 48 | 0;\r\n            q = s + 24 | 0;\r\n            r = s;\r\n            o = q + 4 | 0;\r\n            c[q >> 2] = 16777216;\r\n            f = 0 - (b[a >> 1] | 0) | 0;\r\n            p = q + 8 | 0;\r\n            c[o >> 2] = f << 10;\r\n            g = b[a + 4 >> 1] | 0;\r\n            l = f >> 6;\r\n            c[p >> 2] = 33554432 - (((Z((f << 9) - (l << 15) << 16 >> 16, g) | 0) >> 15) + (Z(l, g) | 0) << 2);\r\n            l = q + 4 | 0;\r\n            g = (c[l >> 2] | 0) - (g << 10) | 0;\r\n            c[l >> 2] = g;\r\n            l = q + 12 | 0;\r\n            f = q + 4 | 0;\r\n            c[l >> 2] = g;\r\n            e = b[a + 8 >> 1] | 0;\r\n            h = g;\r\n            m = 1;\r\n            while (1) {\r\n                k = l + -4 | 0;\r\n                j = c[k >> 2] | 0;\r\n                n = j >> 16;\r\n                c[l >> 2] = h + g - (((Z((j >>> 1) - (n << 15) << 16 >> 16, e) | 0) >> 15) + (Z(n, e) | 0) << 2);\r\n                if ((m | 0) == 2) break;\r\n                h = c[l + -12 >> 2] | 0;\r\n                l = k;\r\n                g = j;\r\n                m = m + 1 | 0\r\n            }\r\n            c[f >> 2] = (c[f >> 2] | 0) - (e << 10);\r\n            e = q + 16 | 0;\r\n            f = c[q + 8 >> 2] | 0;\r\n            c[e >> 2] = f;\r\n            k = b[a + 12 >> 1] | 0;\r\n            g = f;\r\n            l = 1;\r\n            while (1) {\r\n                j = e + -4 | 0;\r\n                h = c[j >> 2] | 0;\r\n                n = h >> 16;\r\n                c[e >> 2] = g + f - (((Z((h >>> 1) - (n << 15) << 16 >> 16, k) | 0) >> 15) + (Z(n, k) | 0) << 2);\r\n                if ((l | 0) == 3) break;\r\n                g = c[e + -12 >> 2] | 0;\r\n                e = j;\r\n                f = h;\r\n                l = l + 1 | 0\r\n            }\r\n            e = q + 4 | 0;\r\n            c[e >> 2] = (c[e >> 2] | 0) - (k << 10);\r\n            e = q + 20 | 0;\r\n            g = c[q + 12 >> 2] | 0;\r\n            c[e >> 2] = g;\r\n            f = b[a + 16 >> 1] | 0;\r\n            h = g;\r\n            l = 1;\r\n            while (1) {\r\n                k = e + -4 | 0;\r\n                j = c[k >> 2] | 0;\r\n                n = j >> 16;\r\n                c[e >> 2] = h + g - (((Z((j >>> 1) - (n << 15) << 16 >> 16, f) | 0) >> 15) + (Z(n, f) | 0) << 2);\r\n                if ((l | 0) == 4) break;\r\n                h = c[e + -12 >> 2] | 0;\r\n                e = k;\r\n                g = j;\r\n                l = l + 1 | 0\r\n            }\r\n            l = q + 4 | 0;\r\n            c[l >> 2] = (c[l >> 2] | 0) - (f << 10);\r\n            c[r >> 2] = 16777216;\r\n            l = 0 - (b[a + 2 >> 1] | 0) | 0;\r\n            n = r + 8 | 0;\r\n            c[r + 4 >> 2] = l << 10;\r\n            f = b[a + 6 >> 1] | 0;\r\n            m = l >> 6;\r\n            c[n >> 2] = 33554432 - (((Z((l << 9) - (m << 15) << 16 >> 16, f) | 0) >> 15) + (Z(m, f) | 0) << 2);\r\n            m = r + 4 | 0;\r\n            f = (c[m >> 2] | 0) - (f << 10) | 0;\r\n            c[m >> 2] = f;\r\n            m = r + 12 | 0;\r\n            l = r + 4 | 0;\r\n            c[m >> 2] = f;\r\n            k = b[a + 10 >> 1] | 0;\r\n            g = f;\r\n            e = 1;\r\n            while (1) {\r\n                j = m + -4 | 0;\r\n                h = c[j >> 2] | 0;\r\n                t = h >> 16;\r\n                c[m >> 2] = g + f - (((Z((h >>> 1) - (t << 15) << 16 >> 16, k) | 0) >> 15) + (Z(t, k) | 0) << 2);\r\n                if ((e | 0) == 2) break;\r\n                g = c[m + -12 >> 2] | 0;\r\n                m = j;\r\n                f = h;\r\n                e = e + 1 | 0\r\n            }\r\n            c[l >> 2] = (c[l >> 2] | 0) - (k << 10);\r\n            l = r + 16 | 0;\r\n            f = c[r + 8 >> 2] | 0;\r\n            c[l >> 2] = f;\r\n            k = b[a + 14 >> 1] | 0;\r\n            g = f;\r\n            e = 1;\r\n            while (1) {\r\n                j = l + -4 | 0;\r\n                h = c[j >> 2] | 0;\r\n                t = h >> 16;\r\n                c[l >> 2] = g + f - (((Z((h >>> 1) - (t << 15) << 16 >> 16, k) | 0) >> 15) + (Z(t, k) | 0) << 2);\r\n                if ((e | 0) == 3) break;\r\n                g = c[l + -12 >> 2] | 0;\r\n                l = j;\r\n                f = h;\r\n                e = e + 1 | 0\r\n            }\r\n            e = r + 4 | 0;\r\n            c[e >> 2] = (c[e >> 2] | 0) - (k << 10);\r\n            e = r + 20 | 0;\r\n            k = c[r + 12 >> 2] | 0;\r\n            c[e >> 2] = k;\r\n            f = b[a + 18 >> 1] | 0;\r\n            j = k;\r\n            l = 1;\r\n            while (1) {\r\n                g = e + -4 | 0;\r\n                h = c[g >> 2] | 0;\r\n                t = h >> 16;\r\n                c[e >> 2] = j + k - (((Z((h >>> 1) - (t << 15) << 16 >> 16, f) | 0) >> 15) + (Z(t, f) | 0) << 2);\r\n                if ((l | 0) == 4) break;\r\n                j = c[e + -12 >> 2] | 0;\r\n                e = g;\r\n                k = h;\r\n                l = l + 1 | 0\r\n            }\r\n            j = (c[r + 4 >> 2] | 0) - (f << 10) | 0;\r\n            m = q + 20 | 0;\r\n            k = r + 20 | 0;\r\n            l = c[q + 16 >> 2] | 0;\r\n            a = (c[m >> 2] | 0) + l | 0;\r\n            c[m >> 2] = a;\r\n            m = c[r + 16 >> 2] | 0;\r\n            t = (c[k >> 2] | 0) - m | 0;\r\n            c[k >> 2] = t;\r\n            k = c[q + 12 >> 2] | 0;\r\n            l = l + k | 0;\r\n            c[q + 16 >> 2] = l;\r\n            h = c[r + 12 >> 2] | 0;\r\n            m = m - h | 0;\r\n            c[r + 16 >> 2] = m;\r\n            f = c[p >> 2] | 0;\r\n            k = k + f | 0;\r\n            c[q + 12 >> 2] = k;\r\n            g = c[n >> 2] | 0;\r\n            p = h - g | 0;\r\n            c[r + 12 >> 2] = p;\r\n            h = c[o >> 2] | 0;\r\n            n = f + h | 0;\r\n            c[q + 8 >> 2] = n;\r\n            o = g - j | 0;\r\n            c[r + 8 >> 2] = o;\r\n            q = h + (c[q >> 2] | 0) | 0;\r\n            r = j - (c[r >> 2] | 0) | 0;\r\n            b[d >> 1] = 4096;\r\n            q = q + 4096 | 0;\r\n            b[d + 2 >> 1] = (q + r | 0) >>> 13;\r\n            b[d + 20 >> 1] = (q - r | 0) >>> 13;\r\n            r = n + 4096 | 0;\r\n            b[d + 4 >> 1] = (r + o | 0) >>> 13;\r\n            b[d + 18 >> 1] = (r - o | 0) >>> 13;\r\n            r = k + 4096 | 0;\r\n            b[d + 6 >> 1] = (r + p | 0) >>> 13;\r\n            b[d + 16 >> 1] = (r - p | 0) >>> 13;\r\n            r = l + 4096 | 0;\r\n            b[d + 8 >> 1] = (r + m | 0) >>> 13;\r\n            b[d + 14 >> 1] = (r - m | 0) >>> 13;\r\n            r = a + 4096 | 0;\r\n            b[d + 10 >> 1] = (r + t | 0) >>> 13;\r\n            b[d + 12 >> 1] = (r - t | 0) >>> 13;\r\n            i = s;\r\n            return\r\n        }\r\n\r\n        function ie(a) {\r\n            a = a | 0;\r\n            var d = 0, e = 0, f = 0, g = 0, h = 0;\r\n            if (!a) {\r\n                h = -1;\r\n                return h | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(44) | 0;\r\n            if (!d) {\r\n                h = -1;\r\n                return h | 0\r\n            }\r\n            e = d + 40 | 0;\r\n            if ((xe(e) | 0) << 16 >> 16) {\r\n                h = -1;\r\n                return h | 0\r\n            }\r\n            f = d;\r\n            g = 7452;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = b[g >> 1] | 0;\r\n                f = f + 2 | 0;\r\n                g = g + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            f = d + 20 | 0;\r\n            g = 7452;\r\n            h = f + 20 | 0;\r\n            do {\r\n                b[f >> 1] = b[g >> 1] | 0;\r\n                f = f + 2 | 0;\r\n                g = g + 2 | 0\r\n            } while ((f | 0) < (h | 0));\r\n            ye(c[e >> 2] | 0) | 0;\r\n            c[a >> 2] = d;\r\n            h = 0;\r\n            return h | 0\r\n        }\r\n\r\n        function je(a) {\r\n            a = a | 0;\r\n            var d = 0, e = 0, f = 0;\r\n            if (!a) {\r\n                f = -1;\r\n                return f | 0\r\n            }\r\n            d = a;\r\n            e = 7452;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = b[e >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                e = e + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            d = a + 20 | 0;\r\n            e = 7452;\r\n            f = d + 20 | 0;\r\n            do {\r\n                b[d >> 1] = b[e >> 1] | 0;\r\n                d = d + 2 | 0;\r\n                e = e + 2 | 0\r\n            } while ((d | 0) < (f | 0));\r\n            ye(c[a + 40 >> 2] | 0) | 0;\r\n            f = 0;\r\n            return f | 0\r\n        }\r\n\r\n        function ke(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            ze(b + 40 | 0);\r\n            Ke(c[a >> 2] | 0);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function le(a, d, e, f, g, h, j, k) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            k = k | 0;\r\n            var l = 0, m = 0, n = 0, o = 0, p = 0;\r\n            p = i;\r\n            i = i + 64 | 0;\r\n            o = p + 44 | 0;\r\n            l = p + 24 | 0;\r\n            m = p + 4 | 0;\r\n            n = p;\r\n            if ((d | 0) == 7) {\r\n                Sd(f + 22 | 0, l, a, k);\r\n                Sd(f + 66 | 0, h, l, k);\r\n                $d(a, l, h, f, k);\r\n                if ((e | 0) == 8) f = 6; else {\r\n                    ve(c[a + 40 >> 2] | 0, l, h, m, o, c[j >> 2] | 0, k);\r\n                    _d(a + 20 | 0, m, o, g, k);\r\n                    g = (c[j >> 2] | 0) + 10 | 0;\r\n                    f = 7\r\n                }\r\n            } else {\r\n                Sd(f + 66 | 0, h, a, k);\r\n                be(a, h, f, k);\r\n                if ((e | 0) == 8) f = 6; else {\r\n                    te(c[a + 40 >> 2] | 0, d, h, o, c[j >> 2] | 0, n, k);\r\n                    ae(a + 20 | 0, o, g, k);\r\n                    g = (c[j >> 2] | 0) + 6 | 0;\r\n                    f = 7\r\n                }\r\n            }\r\n            if ((f | 0) == 6) {\r\n                f = a;\r\n                g = f + 20 | 0;\r\n                do {\r\n                    b[f >> 1] = b[h >> 1] | 0;\r\n                    f = f + 2 | 0;\r\n                    h = h + 2 | 0\r\n                } while ((f | 0) < (g | 0));\r\n                i = p;\r\n                return\r\n            } else if ((f | 0) == 7) {\r\n                c[j >> 2] = g;\r\n                f = a;\r\n                g = f + 20 | 0;\r\n                do {\r\n                    b[f >> 1] = b[h >> 1] | 0;\r\n                    f = f + 2 | 0;\r\n                    h = h + 2 | 0\r\n                } while ((f | 0) < (g | 0));\r\n                f = a + 20 | 0;\r\n                h = o;\r\n                g = f + 20 | 0;\r\n                do {\r\n                    b[f >> 1] = b[h >> 1] | 0;\r\n                    f = f + 2 | 0;\r\n                    h = h + 2 | 0\r\n                } while ((f | 0) < (g | 0));\r\n                i = p;\r\n                return\r\n            }\r\n        }\r\n\r\n        function me(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0;\r\n            if (d << 16 >> 16 > 0) e = 0; else return;\r\n            do {\r\n                g = b[a + (e << 1) >> 1] | 0;\r\n                h = g >> 8;\r\n                f = b[7194 + (h << 1) >> 1] | 0;\r\n                b[c + (e << 1) >> 1] = ((Z((b[7194 + (h + 1 << 1) >> 1] | 0) - f | 0, g & 255) | 0) >>> 8) + f;\r\n                e = e + 1 | 0\r\n            } while ((e & 65535) << 16 >> 16 != d << 16 >> 16);\r\n            return\r\n        }\r\n\r\n        function ne(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0;\r\n            e = (d << 16 >> 16) + -1 | 0;\r\n            d = e & 65535;\r\n            if (d << 16 >> 16 <= -1) return;\r\n            f = 63;\r\n            h = c + (e << 1) | 0;\r\n            g = a + (e << 1) | 0;\r\n            while (1) {\r\n                a = b[g >> 1] | 0;\r\n                c = f;\r\n                while (1) {\r\n                    e = c << 16 >> 16;\r\n                    f = b[7194 + (e << 1) >> 1] | 0;\r\n                    if (a << 16 >> 16 > f << 16 >> 16) c = c + -1 << 16 >> 16; else break\r\n                }\r\n                b[h >> 1] = (((Z(b[7324 + (e << 1) >> 1] | 0, (a << 16 >> 16) - (f << 16 >> 16) | 0) | 0) + 2048 | 0) >>> 12) + (e << 8);\r\n                d = d + -1 << 16 >> 16;\r\n                if (d << 16 >> 16 > -1) {\r\n                    f = c;\r\n                    h = h + -2 | 0;\r\n                    g = g + -2 | 0\r\n                } else break\r\n            }\r\n            return\r\n        }\r\n\r\n        function oe(a, b, d) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            d = d | 0;\r\n            a = (Z(b << 16 >> 16, a << 16 >> 16) | 0) + 16384 >> 15;\r\n            a = a | 0 - (a & 65536);\r\n            if ((a | 0) <= 32767) {\r\n                if ((a | 0) < -32768) {\r\n                    c[d >> 2] = 1;\r\n                    a = -32768\r\n                }\r\n            } else {\r\n                c[d >> 2] = 1;\r\n                a = 32767\r\n            }\r\n            return a & 65535 | 0\r\n        }\r\n\r\n        function pe(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            a:do if ((a | 0) != 0 ? (b = a - (a >>> 31) | 0, b = b >> 31 ^ b, (b & 1073741824 | 0) == 0) : 0) {\r\n                a = b;\r\n                b = 0;\r\n                while (1) {\r\n                    if (a & 536870912) {\r\n                        a = 7;\r\n                        break\r\n                    }\r\n                    if (a & 268435456) {\r\n                        a = 8;\r\n                        break\r\n                    }\r\n                    if (a & 134217728) {\r\n                        a = 9;\r\n                        break\r\n                    }\r\n                    b = b + 4 << 16 >> 16;\r\n                    a = a << 4;\r\n                    if (a & 1073741824) break a\r\n                }\r\n                if ((a | 0) == 7) {\r\n                    b = b | 1;\r\n                    break\r\n                } else if ((a | 0) == 8) {\r\n                    b = b | 2;\r\n                    break\r\n                } else if ((a | 0) == 9) {\r\n                    b = b | 3;\r\n                    break\r\n                }\r\n            } else b = 0; while (0);\r\n            return b | 0\r\n        }\r\n\r\n        function qe(a) {\r\n            a = a | 0;\r\n            var b = 0, c = 0;\r\n            if (!(a << 16 >> 16)) {\r\n                c = 0;\r\n                return c | 0\r\n            }\r\n            b = (a & 65535) - ((a & 65535) >>> 15 & 65535) | 0;\r\n            b = (b << 16 >> 31 ^ b) << 16;\r\n            a = b >> 16;\r\n            if (!(a & 16384)) {\r\n                c = b;\r\n                b = 0\r\n            } else {\r\n                c = 0;\r\n                return c | 0\r\n            }\r\n            while (1) {\r\n                if (a & 8192) {\r\n                    a = b;\r\n                    c = 7;\r\n                    break\r\n                }\r\n                if (a & 4096) {\r\n                    a = b;\r\n                    c = 8;\r\n                    break\r\n                }\r\n                if (a & 2048) {\r\n                    a = b;\r\n                    c = 9;\r\n                    break\r\n                }\r\n                b = b + 4 << 16 >> 16;\r\n                c = c << 4;\r\n                a = c >> 16;\r\n                if (a & 16384) {\r\n                    a = b;\r\n                    c = 10;\r\n                    break\r\n                }\r\n            }\r\n            if ((c | 0) == 7) {\r\n                c = a | 1;\r\n                return c | 0\r\n            } else if ((c | 0) == 8) {\r\n                c = a | 2;\r\n                return c | 0\r\n            } else if ((c | 0) == 9) {\r\n                c = a | 3;\r\n                return c | 0\r\n            } else if ((c | 0) == 10) return a | 0;\r\n            return 0\r\n        }\r\n\r\n        function re(a, d, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, i = 0;\r\n            d = d << 16 >> 16;\r\n            if ((d & 134217727 | 0) == 33554432) {\r\n                c[f >> 2] = 1;\r\n                d = 2147483647\r\n            } else d = d << 6;\r\n            g = d >>> 16 & 31;\r\n            i = b[7792 + (g << 1) >> 1] | 0;\r\n            h = i << 16;\r\n            d = Z(i - (e[7792 + (g + 1 << 1) >> 1] | 0) << 16 >> 16, d >>> 1 & 32767) | 0;\r\n            if ((d | 0) == 1073741824) {\r\n                c[f >> 2] = 1;\r\n                g = 2147483647\r\n            } else g = d << 1;\r\n            d = h - g | 0;\r\n            if (((d ^ h) & (g ^ h) | 0) >= 0) {\r\n                i = d;\r\n                a = a & 65535;\r\n                a = 30 - a | 0;\r\n                a = a & 65535;\r\n                f = ge(i, a, f) | 0;\r\n                return f | 0\r\n            }\r\n            c[f >> 2] = 1;\r\n            i = (i >>> 15 & 1) + 2147483647 | 0;\r\n            a = a & 65535;\r\n            a = 30 - a | 0;\r\n            a = a & 65535;\r\n            f = ge(i, a, f) | 0;\r\n            return f | 0\r\n        }\r\n\r\n        function se(a, c, d, e, f, g) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;\r\n            o = i;\r\n            i = i + 48 | 0;\r\n            n = o;\r\n            m = 0 - (d & 65535) | 0;\r\n            m = f << 16 >> 16 == 0 ? m : m << 1 & 131070;\r\n            d = m & 65535;\r\n            m = (d << 16 >> 16 < 0 ? m + 6 | 0 : m) << 16 >> 16;\r\n            g = 6 - m | 0;\r\n            b[n >> 1] = b[7858 + (m << 1) >> 1] | 0;\r\n            b[n + 2 >> 1] = b[7858 + (g << 1) >> 1] | 0;\r\n            b[n + 4 >> 1] = b[7858 + (m + 6 << 1) >> 1] | 0;\r\n            b[n + 6 >> 1] = b[7858 + (g + 6 << 1) >> 1] | 0;\r\n            b[n + 8 >> 1] = b[7858 + (m + 12 << 1) >> 1] | 0;\r\n            b[n + 10 >> 1] = b[7858 + (g + 12 << 1) >> 1] | 0;\r\n            b[n + 12 >> 1] = b[7858 + (m + 18 << 1) >> 1] | 0;\r\n            b[n + 14 >> 1] = b[7858 + (g + 18 << 1) >> 1] | 0;\r\n            b[n + 16 >> 1] = b[7858 + (m + 24 << 1) >> 1] | 0;\r\n            b[n + 18 >> 1] = b[7858 + (g + 24 << 1) >> 1] | 0;\r\n            b[n + 20 >> 1] = b[7858 + (m + 30 << 1) >> 1] | 0;\r\n            b[n + 22 >> 1] = b[7858 + (g + 30 << 1) >> 1] | 0;\r\n            b[n + 24 >> 1] = b[7858 + (m + 36 << 1) >> 1] | 0;\r\n            b[n + 26 >> 1] = b[7858 + (g + 36 << 1) >> 1] | 0;\r\n            b[n + 28 >> 1] = b[7858 + (m + 42 << 1) >> 1] | 0;\r\n            b[n + 30 >> 1] = b[7858 + (g + 42 << 1) >> 1] | 0;\r\n            b[n + 32 >> 1] = b[7858 + (m + 48 << 1) >> 1] | 0;\r\n            b[n + 34 >> 1] = b[7858 + (g + 48 << 1) >> 1] | 0;\r\n            b[n + 36 >> 1] = b[7858 + (m + 54 << 1) >> 1] | 0;\r\n            b[n + 38 >> 1] = b[7858 + (g + 54 << 1) >> 1] | 0;\r\n            g = e << 16 >> 16 >>> 1 & 65535;\r\n            if (!(g << 16 >> 16)) {\r\n                i = o;\r\n                return\r\n            }\r\n            m = a + ((d << 16 >> 16 >> 15 << 16 >> 16) - (c << 16 >> 16) << 1) | 0;\r\n            while (1) {\r\n                l = m + 2 | 0;\r\n                h = b[l >> 1] | 0;\r\n                c = h;\r\n                e = m;\r\n                j = 5;\r\n                k = n;\r\n                f = 16384;\r\n                d = 16384;\r\n                while (1) {\r\n                    q = b[k >> 1] | 0;\r\n                    r = (Z(q, c << 16 >> 16) | 0) + d | 0;\r\n                    p = b[l + -2 >> 1] | 0;\r\n                    d = (Z(p, q) | 0) + f | 0;\r\n                    q = e;\r\n                    e = e + 4 | 0;\r\n                    s = b[k + 2 >> 1] | 0;\r\n                    d = d + (Z(s, h << 16 >> 16) | 0) | 0;\r\n                    f = b[e >> 1] | 0;\r\n                    s = r + (Z(f, s) | 0) | 0;\r\n                    l = l + -4 | 0;\r\n                    r = b[k + 4 >> 1] | 0;\r\n                    p = s + (Z(r, p) | 0) | 0;\r\n                    c = b[l >> 1] | 0;\r\n                    r = d + (Z(c << 16 >> 16, r) | 0) | 0;\r\n                    d = b[k + 6 >> 1] | 0;\r\n                    f = r + (Z(d, f) | 0) | 0;\r\n                    h = b[q + 6 >> 1] | 0;\r\n                    d = p + (Z(h << 16 >> 16, d) | 0) | 0;\r\n                    if (j << 16 >> 16 <= 1) break; else {\r\n                        j = j + -1 << 16 >> 16;\r\n                        k = k + 8 | 0\r\n                    }\r\n                }\r\n                b[a >> 1] = f >>> 15;\r\n                b[a + 2 >> 1] = d >>> 15;\r\n                g = g + -1 << 16 >> 16;\r\n                if (!(g << 16 >> 16)) break; else {\r\n                    m = m + 4 | 0;\r\n                    a = a + 4 | 0\r\n                }\r\n            }\r\n            i = o;\r\n            return\r\n        }\r\n\r\n        function te(a, c, d, f, g, h, j) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            var k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0,\r\n                z = 0, A = 0, B = 0, C = 0;\r\n            C = i;\r\n            i = i + 144 | 0;\r\n            t = C + 120 | 0;\r\n            y = C + 100 | 0;\r\n            A = C + 80 | 0;\r\n            B = C + 60 | 0;\r\n            z = C + 40 | 0;\r\n            q = C + 20 | 0;\r\n            r = C;\r\n            ne(d, t, 10, j);\r\n            fe(t, y, j);\r\n            if ((c | 0) == 8) {\r\n                b[h >> 1] = 0;\r\n                l = 2147483647;\r\n                s = 0;\r\n                while (1) {\r\n                    n = s * 10 | 0;\r\n                    d = 0;\r\n                    m = 0;\r\n                    do {\r\n                        x = (e[7980 + (m + n << 1) >> 1] | 0) + (e[8140 + (m << 1) >> 1] | 0) | 0;\r\n                        b[r + (m << 1) >> 1] = x;\r\n                        x = (e[t + (m << 1) >> 1] | 0) - (x & 65535) | 0;\r\n                        b[q + (m << 1) >> 1] = x;\r\n                        x = x << 16;\r\n                        d = (Z(x >> 15, x >> 16) | 0) + d | 0;\r\n                        m = m + 1 | 0\r\n                    } while ((m | 0) != 10);\r\n                    if ((d | 0) < (l | 0)) {\r\n                        u = B;\r\n                        p = q;\r\n                        o = u + 20 | 0;\r\n                        do {\r\n                            b[u >> 1] = b[p >> 1] | 0;\r\n                            u = u + 2 | 0;\r\n                            p = p + 2 | 0\r\n                        } while ((u | 0) < (o | 0));\r\n                        u = A;\r\n                        p = r;\r\n                        o = u + 20 | 0;\r\n                        do {\r\n                            b[u >> 1] = b[p >> 1] | 0;\r\n                            u = u + 2 | 0;\r\n                            p = p + 2 | 0\r\n                        } while ((u | 0) < (o | 0));\r\n                        u = a;\r\n                        p = 7980 + (n << 1) | 0;\r\n                        o = u + 20 | 0;\r\n                        do {\r\n                            b[u >> 1] = b[p >> 1] | 0;\r\n                            u = u + 2 | 0;\r\n                            p = p + 2 | 0\r\n                        } while ((u | 0) < (o | 0));\r\n                        b[h >> 1] = s\r\n                    } else d = l;\r\n                    s = s + 1 | 0;\r\n                    if ((s | 0) == 8) break; else l = d\r\n                }\r\n            } else {\r\n                d = 0;\r\n                do {\r\n                    x = Z(b[8160 + (d << 1) >> 1] | 0, b[a + (d << 1) >> 1] | 0) | 0;\r\n                    x = (x >>> 15) + (e[8140 + (d << 1) >> 1] | 0) | 0;\r\n                    b[A + (d << 1) >> 1] = x;\r\n                    b[B + (d << 1) >> 1] = (e[t + (d << 1) >> 1] | 0) - x;\r\n                    d = d + 1 | 0\r\n                } while ((d | 0) != 10)\r\n            }\r\n            do if (c >>> 0 >= 2) {\r\n                x = B + 2 | 0;\r\n                w = B + 4 | 0;\r\n                v = e[B >> 1] | 0;\r\n                u = b[y >> 1] << 1;\r\n                t = e[x >> 1] | 0;\r\n                q = b[y + 2 >> 1] << 1;\r\n                p = e[w >> 1] | 0;\r\n                o = b[y + 4 >> 1] << 1;\r\n                if ((c | 0) == 5) {\r\n                    r = 2147483647;\r\n                    h = 0;\r\n                    d = 0;\r\n                    s = 17908;\r\n                    while (1) {\r\n                        m = (Z(v - (e[s >> 1] | 0) << 16 >> 16, u) | 0) >> 16;\r\n                        m = Z(m, m) | 0;\r\n                        n = (Z(t - (e[s + 2 >> 1] | 0) << 16 >> 16, q) | 0) >> 16;\r\n                        m = (Z(n, n) | 0) + m | 0;\r\n                        n = (Z(p - (e[s + 4 >> 1] | 0) << 16 >> 16, o) | 0) >> 16;\r\n                        n = m + (Z(n, n) | 0) | 0;\r\n                        m = (n | 0) < (r | 0);\r\n                        d = m ? h : d;\r\n                        h = h + 1 << 16 >> 16;\r\n                        if (h << 16 >> 16 >= 512) break; else {\r\n                            r = m ? n : r;\r\n                            s = s + 6 | 0\r\n                        }\r\n                    }\r\n                    n = (d << 16 >> 16) * 3 | 0;\r\n                    b[B >> 1] = b[17908 + (n << 1) >> 1] | 0;\r\n                    b[x >> 1] = b[17908 + (n + 1 << 1) >> 1] | 0;\r\n                    b[w >> 1] = b[17908 + (n + 2 << 1) >> 1] | 0;\r\n                    b[g >> 1] = d;\r\n                    n = B + 6 | 0;\r\n                    m = B + 8 | 0;\r\n                    v = B + 10 | 0;\r\n                    s = e[n >> 1] | 0;\r\n                    h = b[y + 6 >> 1] << 1;\r\n                    r = e[m >> 1] | 0;\r\n                    q = b[y + 8 >> 1] << 1;\r\n                    p = e[v >> 1] | 0;\r\n                    o = b[y + 10 >> 1] << 1;\r\n                    k = 2147483647;\r\n                    t = 0;\r\n                    d = 0;\r\n                    u = 9716;\r\n                    while (1) {\r\n                        l = (Z(h, s - (e[u >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                        l = Z(l, l) | 0;\r\n                        c = (Z(q, r - (e[u + 2 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                        l = (Z(c, c) | 0) + l | 0;\r\n                        c = (Z(o, p - (e[u + 4 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                        c = l + (Z(c, c) | 0) | 0;\r\n                        l = (c | 0) < (k | 0);\r\n                        d = l ? t : d;\r\n                        t = t + 1 << 16 >> 16;\r\n                        if (t << 16 >> 16 >= 512) break; else {\r\n                            k = l ? c : k;\r\n                            u = u + 6 | 0\r\n                        }\r\n                    }\r\n                    k = (d << 16 >> 16) * 3 | 0;\r\n                    b[n >> 1] = b[9716 + (k << 1) >> 1] | 0;\r\n                    b[m >> 1] = b[9716 + (k + 1 << 1) >> 1] | 0;\r\n                    b[v >> 1] = b[9716 + (k + 2 << 1) >> 1] | 0;\r\n                    b[g + 2 >> 1] = d;\r\n                    k = B + 12 | 0;\r\n                    b[g + 4 >> 1] = ue(k, 12788, y + 12 | 0, 512) | 0;\r\n                    t = x;\r\n                    s = w;\r\n                    d = v;\r\n                    l = B;\r\n                    break\r\n                } else {\r\n                    r = 2147483647;\r\n                    h = 0;\r\n                    d = 0;\r\n                    s = 8180;\r\n                    while (1) {\r\n                        m = (Z(v - (e[s >> 1] | 0) << 16 >> 16, u) | 0) >> 16;\r\n                        m = Z(m, m) | 0;\r\n                        n = (Z(t - (e[s + 2 >> 1] | 0) << 16 >> 16, q) | 0) >> 16;\r\n                        m = (Z(n, n) | 0) + m | 0;\r\n                        n = (Z(p - (e[s + 4 >> 1] | 0) << 16 >> 16, o) | 0) >> 16;\r\n                        n = m + (Z(n, n) | 0) | 0;\r\n                        m = (n | 0) < (r | 0);\r\n                        d = m ? h : d;\r\n                        h = h + 1 << 16 >> 16;\r\n                        if (h << 16 >> 16 >= 256) break; else {\r\n                            r = m ? n : r;\r\n                            s = s + 6 | 0\r\n                        }\r\n                    }\r\n                    n = (d << 16 >> 16) * 3 | 0;\r\n                    b[B >> 1] = b[8180 + (n << 1) >> 1] | 0;\r\n                    b[x >> 1] = b[8180 + (n + 1 << 1) >> 1] | 0;\r\n                    b[w >> 1] = b[8180 + (n + 2 << 1) >> 1] | 0;\r\n                    b[g >> 1] = d;\r\n                    n = B + 6 | 0;\r\n                    m = B + 8 | 0;\r\n                    v = B + 10 | 0;\r\n                    s = e[n >> 1] | 0;\r\n                    h = b[y + 6 >> 1] << 1;\r\n                    r = e[m >> 1] | 0;\r\n                    q = b[y + 8 >> 1] << 1;\r\n                    p = e[v >> 1] | 0;\r\n                    o = b[y + 10 >> 1] << 1;\r\n                    k = 2147483647;\r\n                    t = 0;\r\n                    d = 0;\r\n                    u = 9716;\r\n                    while (1) {\r\n                        l = (Z(h, s - (e[u >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                        l = Z(l, l) | 0;\r\n                        c = (Z(q, r - (e[u + 2 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                        l = (Z(c, c) | 0) + l | 0;\r\n                        c = (Z(o, p - (e[u + 4 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                        c = l + (Z(c, c) | 0) | 0;\r\n                        l = (c | 0) < (k | 0);\r\n                        d = l ? t : d;\r\n                        t = t + 1 << 16 >> 16;\r\n                        if (t << 16 >> 16 >= 512) break; else {\r\n                            k = l ? c : k;\r\n                            u = u + 6 | 0\r\n                        }\r\n                    }\r\n                    k = (d << 16 >> 16) * 3 | 0;\r\n                    b[n >> 1] = b[9716 + (k << 1) >> 1] | 0;\r\n                    b[m >> 1] = b[9716 + (k + 1 << 1) >> 1] | 0;\r\n                    b[v >> 1] = b[9716 + (k + 2 << 1) >> 1] | 0;\r\n                    b[g + 2 >> 1] = d;\r\n                    k = B + 12 | 0;\r\n                    b[g + 4 >> 1] = ue(k, 12788, y + 12 | 0, 512) | 0;\r\n                    t = x;\r\n                    s = w;\r\n                    d = v;\r\n                    l = B;\r\n                    break\r\n                }\r\n            } else {\r\n                w = B + 2 | 0;\r\n                x = B + 4 | 0;\r\n                n = e[B >> 1] | 0;\r\n                m = b[y >> 1] << 1;\r\n                l = e[w >> 1] | 0;\r\n                k = b[y + 2 >> 1] << 1;\r\n                c = e[x >> 1] | 0;\r\n                o = b[y + 4 >> 1] << 1;\r\n                r = 2147483647;\r\n                h = 0;\r\n                d = 0;\r\n                s = 8180;\r\n                while (1) {\r\n                    q = (Z(m, n - (e[s >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                    q = Z(q, q) | 0;\r\n                    p = (Z(k, l - (e[s + 2 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                    q = (Z(p, p) | 0) + q | 0;\r\n                    p = (Z(o, c - (e[s + 4 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                    p = q + (Z(p, p) | 0) | 0;\r\n                    q = (p | 0) < (r | 0);\r\n                    d = q ? h : d;\r\n                    h = h + 1 << 16 >> 16;\r\n                    if (h << 16 >> 16 >= 256) break; else {\r\n                        r = q ? p : r;\r\n                        s = s + 6 | 0\r\n                    }\r\n                }\r\n                n = (d << 16 >> 16) * 3 | 0;\r\n                b[B >> 1] = b[8180 + (n << 1) >> 1] | 0;\r\n                b[w >> 1] = b[8180 + (n + 1 << 1) >> 1] | 0;\r\n                b[x >> 1] = b[8180 + (n + 2 << 1) >> 1] | 0;\r\n                b[g >> 1] = d;\r\n                n = B + 6 | 0;\r\n                m = B + 8 | 0;\r\n                v = B + 10 | 0;\r\n                s = e[n >> 1] | 0;\r\n                h = b[y + 6 >> 1] << 1;\r\n                r = e[m >> 1] | 0;\r\n                q = b[y + 8 >> 1] << 1;\r\n                p = e[v >> 1] | 0;\r\n                o = b[y + 10 >> 1] << 1;\r\n                k = 2147483647;\r\n                t = 0;\r\n                d = 0;\r\n                u = 9716;\r\n                while (1) {\r\n                    l = (Z(h, s - (e[u >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                    l = Z(l, l) | 0;\r\n                    c = (Z(q, r - (e[u + 2 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                    l = (Z(c, c) | 0) + l | 0;\r\n                    c = (Z(o, p - (e[u + 4 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                    c = l + (Z(c, c) | 0) | 0;\r\n                    l = (c | 0) < (k | 0);\r\n                    d = l ? t : d;\r\n                    t = t + 1 << 16 >> 16;\r\n                    if (t << 16 >> 16 >= 256) break; else {\r\n                        k = l ? c : k;\r\n                        u = u + 12 | 0\r\n                    }\r\n                }\r\n                k = (d << 16 >> 16) * 6 | 0;\r\n                b[n >> 1] = b[9716 + (k << 1) >> 1] | 0;\r\n                b[m >> 1] = b[9716 + ((k | 1) << 1) >> 1] | 0;\r\n                b[v >> 1] = b[9716 + (k + 2 << 1) >> 1] | 0;\r\n                b[g + 2 >> 1] = d;\r\n                k = B + 12 | 0;\r\n                b[g + 4 >> 1] = ue(k, 16884, y + 12 | 0, 128) | 0;\r\n                t = w;\r\n                s = x;\r\n                d = v;\r\n                l = B\r\n            } while (0);\r\n            u = a;\r\n            p = B;\r\n            o = u + 20 | 0;\r\n            do {\r\n                b[u >> 1] = b[p >> 1] | 0;\r\n                u = u + 2 | 0;\r\n                p = p + 2 | 0\r\n            } while ((u | 0) < (o | 0));\r\n            b[z >> 1] = (e[A >> 1] | 0) + (e[l >> 1] | 0);\r\n            b[z + 2 >> 1] = (e[A + 2 >> 1] | 0) + (e[t >> 1] | 0);\r\n            b[z + 4 >> 1] = (e[A + 4 >> 1] | 0) + (e[s >> 1] | 0);\r\n            b[z + 6 >> 1] = (e[A + 6 >> 1] | 0) + (e[n >> 1] | 0);\r\n            b[z + 8 >> 1] = (e[A + 8 >> 1] | 0) + (e[m >> 1] | 0);\r\n            b[z + 10 >> 1] = (e[A + 10 >> 1] | 0) + (e[d >> 1] | 0);\r\n            b[z + 12 >> 1] = (e[A + 12 >> 1] | 0) + (e[k >> 1] | 0);\r\n            b[z + 14 >> 1] = (e[A + 14 >> 1] | 0) + (e[B + 14 >> 1] | 0);\r\n            b[z + 16 >> 1] = (e[A + 16 >> 1] | 0) + (e[B + 16 >> 1] | 0);\r\n            b[z + 18 >> 1] = (e[A + 18 >> 1] | 0) + (e[B + 18 >> 1] | 0);\r\n            Ae(z, 205, 10, j);\r\n            me(z, f, 10, j);\r\n            i = C;\r\n            return\r\n        }\r\n\r\n        function ue(a, c, d, f) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0,\r\n                v = 0;\r\n            t = a + 2 | 0;\r\n            u = a + 4 | 0;\r\n            v = a + 6 | 0;\r\n            if (f << 16 >> 16 > 0) {\r\n                m = e[a >> 1] | 0;\r\n                n = b[d >> 1] << 1;\r\n                o = e[t >> 1] | 0;\r\n                p = b[d + 2 >> 1] << 1;\r\n                q = e[u >> 1] | 0;\r\n                r = b[d + 4 >> 1] << 1;\r\n                s = e[v >> 1] | 0;\r\n                g = b[d + 6 >> 1] << 1;\r\n                j = 2147483647;\r\n                k = 0;\r\n                d = 0;\r\n                l = c;\r\n                while (1) {\r\n                    h = (Z(n, m - (e[l >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                    h = Z(h, h) | 0;\r\n                    i = (Z(p, o - (e[l + 2 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                    h = (Z(i, i) | 0) + h | 0;\r\n                    i = (Z(r, q - (e[l + 4 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                    i = h + (Z(i, i) | 0) | 0;\r\n                    h = (Z(g, s - (e[l + 6 >> 1] | 0) << 16 >> 16) | 0) >> 16;\r\n                    h = i + (Z(h, h) | 0) | 0;\r\n                    i = (h | 0) < (j | 0);\r\n                    d = i ? k : d;\r\n                    k = k + 1 << 16 >> 16;\r\n                    if (k << 16 >> 16 >= f << 16 >> 16) break; else {\r\n                        j = i ? h : j;\r\n                        l = l + 8 | 0\r\n                    }\r\n                }\r\n            } else d = 0;\r\n            f = d << 16 >> 16 << 2;\r\n            s = f | 1;\r\n            b[a >> 1] = b[c + (f << 1) >> 1] | 0;\r\n            b[t >> 1] = b[c + (s << 1) >> 1] | 0;\r\n            b[u >> 1] = b[c + (s + 1 << 1) >> 1] | 0;\r\n            b[v >> 1] = b[c + ((f | 3) << 1) >> 1] | 0;\r\n            return d | 0\r\n        }\r\n\r\n        function ve(a, c, d, f, g, h, j) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            j = j | 0;\r\n            var k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0,\r\n                z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0;\r\n            I = i;\r\n            i = i + 192 | 0;\r\n            m = I + 160 | 0;\r\n            l = I + 140 | 0;\r\n            C = I + 120 | 0;\r\n            D = I + 100 | 0;\r\n            E = I + 80 | 0;\r\n            F = I + 60 | 0;\r\n            k = I + 40 | 0;\r\n            G = I + 20 | 0;\r\n            H = I;\r\n            ne(c, m, 10, j);\r\n            ne(d, l, 10, j);\r\n            fe(m, C, j);\r\n            fe(l, D, j);\r\n            n = 0;\r\n            d = E;\r\n            c = F;\r\n            o = k;\r\n            while (1) {\r\n                B = (((b[a + (n << 1) >> 1] | 0) * 21299 | 0) >>> 15) + (e[20980 + (n << 1) >> 1] | 0) | 0;\r\n                b[d >> 1] = B;\r\n                b[c >> 1] = (e[m >> 1] | 0) - B;\r\n                b[o >> 1] = (e[l >> 1] | 0) - B;\r\n                n = n + 1 | 0;\r\n                if ((n | 0) == 10) break; else {\r\n                    m = m + 2 | 0;\r\n                    l = l + 2 | 0;\r\n                    d = d + 2 | 0;\r\n                    c = c + 2 | 0;\r\n                    o = o + 2 | 0\r\n                }\r\n            }\r\n            b[h >> 1] = we(F, k, 21e3, b[C >> 1] | 0, b[C + 2 >> 1] | 0, b[D >> 1] | 0, b[D + 2 >> 1] | 0, 128) | 0;\r\n            b[h + 2 >> 1] = we(F + 4 | 0, k + 4 | 0, 22024, b[C + 4 >> 1] | 0, b[C + 6 >> 1] | 0, b[D + 4 >> 1] | 0, b[D + 6 >> 1] | 0, 256) | 0;\r\n            y = F + 8 | 0;\r\n            z = k + 8 | 0;\r\n            A = F + 10 | 0;\r\n            B = k + 10 | 0;\r\n            d = b[y >> 1] | 0;\r\n            p = b[C + 8 >> 1] << 1;\r\n            q = b[A >> 1] | 0;\r\n            r = b[C + 10 >> 1] << 1;\r\n            s = b[z >> 1] | 0;\r\n            t = b[D + 8 >> 1] << 1;\r\n            u = b[B >> 1] | 0;\r\n            v = b[D + 10 >> 1] << 1;\r\n            l = 2147483647;\r\n            w = 0;\r\n            o = 0;\r\n            x = 24072;\r\n            c = 0;\r\n            while (1) {\r\n                m = b[x >> 1] | 0;\r\n                n = (Z(d - m << 16 >> 16, p) | 0) >> 16;\r\n                n = Z(n, n) | 0;\r\n                m = (Z(m + d << 16 >> 16, p) | 0) >> 16;\r\n                m = Z(m, m) | 0;\r\n                J = b[x + 2 >> 1] | 0;\r\n                K = (Z(q - J << 16 >> 16, r) | 0) >> 16;\r\n                n = (Z(K, K) | 0) + n | 0;\r\n                J = (Z(J + q << 16 >> 16, r) | 0) >> 16;\r\n                m = (Z(J, J) | 0) + m | 0;\r\n                if ((n | 0) < (l | 0) | (m | 0) < (l | 0)) {\r\n                    K = b[x + 4 >> 1] | 0;\r\n                    J = (Z(s - K << 16 >> 16, t) | 0) >> 16;\r\n                    J = (Z(J, J) | 0) + n | 0;\r\n                    K = (Z(K + s << 16 >> 16, t) | 0) >> 16;\r\n                    K = (Z(K, K) | 0) + m | 0;\r\n                    m = b[x + 6 >> 1] | 0;\r\n                    n = (Z(u - m << 16 >> 16, v) | 0) >> 16;\r\n                    n = J + (Z(n, n) | 0) | 0;\r\n                    m = (Z(m + u << 16 >> 16, v) | 0) >> 16;\r\n                    m = K + (Z(m, m) | 0) | 0;\r\n                    K = (n | 0) < (l | 0);\r\n                    n = K ? n : l;\r\n                    J = (m | 0) < (n | 0);\r\n                    n = J ? m : n;\r\n                    o = K | J ? w : o;\r\n                    c = J ? 1 : K ? 0 : c\r\n                } else n = l;\r\n                w = w + 1 << 16 >> 16;\r\n                if (w << 16 >> 16 >= 256) break; else {\r\n                    l = n;\r\n                    x = x + 8 | 0\r\n                }\r\n            }\r\n            n = o << 16 >> 16;\r\n            m = n << 2;\r\n            o = m | 1;\r\n            l = 24072 + (o << 1) | 0;\r\n            d = b[24072 + (m << 1) >> 1] | 0;\r\n            if (!(c << 16 >> 16)) {\r\n                b[y >> 1] = d;\r\n                b[A >> 1] = b[l >> 1] | 0;\r\n                b[z >> 1] = b[24072 + (o + 1 << 1) >> 1] | 0;\r\n                b[B >> 1] = b[24072 + ((m | 3) << 1) >> 1] | 0;\r\n                c = n << 1\r\n            } else {\r\n                b[y >> 1] = 0 - (d & 65535);\r\n                b[A >> 1] = 0 - (e[l >> 1] | 0);\r\n                b[z >> 1] = 0 - (e[24072 + (o + 1 << 1) >> 1] | 0);\r\n                b[B >> 1] = 0 - (e[24072 + ((m | 3) << 1) >> 1] | 0);\r\n                c = n << 1 & 65534 | 1\r\n            }\r\n            b[h + 4 >> 1] = c;\r\n            b[h + 6 >> 1] = we(F + 12 | 0, k + 12 | 0, 26120, b[C + 12 >> 1] | 0, b[C + 14 >> 1] | 0, b[D + 12 >> 1] | 0, b[D + 14 >> 1] | 0, 256) | 0;\r\n            b[h + 8 >> 1] = we(F + 16 | 0, k + 16 | 0, 28168, b[C + 16 >> 1] | 0, b[C + 18 >> 1] | 0, b[D + 16 >> 1] | 0, b[D + 18 >> 1] | 0, 64) | 0;\r\n            l = 0;\r\n            m = G;\r\n            n = H;\r\n            d = E;\r\n            c = F;\r\n            while (1) {\r\n                J = e[d >> 1] | 0;\r\n                b[m >> 1] = J + (e[c >> 1] | 0);\r\n                K = b[k >> 1] | 0;\r\n                b[n >> 1] = J + (K & 65535);\r\n                b[a + (l << 1) >> 1] = K;\r\n                l = l + 1 | 0;\r\n                if ((l | 0) == 10) break; else {\r\n                    m = m + 2 | 0;\r\n                    n = n + 2 | 0;\r\n                    d = d + 2 | 0;\r\n                    c = c + 2 | 0;\r\n                    k = k + 2 | 0\r\n                }\r\n            }\r\n            Ae(G, 205, 10, j);\r\n            Ae(H, 205, 10, j);\r\n            me(G, f, 10, j);\r\n            me(H, g, 10, j);\r\n            i = I;\r\n            return\r\n        }\r\n\r\n        function we(a, c, d, e, f, g, h, i) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            h = h | 0;\r\n            i = i | 0;\r\n            var j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;\r\n            o = b[a >> 1] | 0;\r\n            u = a + 2 | 0;\r\n            q = b[u >> 1] | 0;\r\n            s = b[c >> 1] | 0;\r\n            v = c + 2 | 0;\r\n            t = b[v >> 1] | 0;\r\n            if (i << 16 >> 16 > 0) {\r\n                n = e << 16 >> 16 << 1;\r\n                m = f << 16 >> 16 << 1;\r\n                l = g << 16 >> 16 << 1;\r\n                f = h << 16 >> 16 << 1;\r\n                g = 2147483647;\r\n                j = 0;\r\n                e = 0;\r\n                k = d;\r\n                while (1) {\r\n                    h = (Z(n, o - (b[k >> 1] | 0) | 0) | 0) >> 16;\r\n                    h = Z(h, h) | 0;\r\n                    if (((h | 0) < (g | 0) ? (p = (Z(m, q - (b[k + 2 >> 1] | 0) | 0) | 0) >> 16, p = (Z(p, p) | 0) + h | 0, (p | 0) < (g | 0)) : 0) ? (r = (Z(l, s - (b[k + 4 >> 1] | 0) | 0) | 0) >> 16, r = (Z(r, r) | 0) + p | 0, (r | 0) < (g | 0)) : 0) {\r\n                        h = (Z(f, t - (b[k + 6 >> 1] | 0) | 0) | 0) >> 16;\r\n                        h = (Z(h, h) | 0) + r | 0;\r\n                        w = (h | 0) < (g | 0);\r\n                        h = w ? h : g;\r\n                        e = w ? j : e\r\n                    } else h = g;\r\n                    j = j + 1 << 16 >> 16;\r\n                    if (j << 16 >> 16 >= i << 16 >> 16) break; else {\r\n                        g = h;\r\n                        k = k + 8 | 0\r\n                    }\r\n                }\r\n            } else e = 0;\r\n            w = e << 16 >> 16 << 2;\r\n            i = w | 1;\r\n            b[a >> 1] = b[d + (w << 1) >> 1] | 0;\r\n            b[u >> 1] = b[d + (i << 1) >> 1] | 0;\r\n            b[c >> 1] = b[d + (i + 1 << 1) >> 1] | 0;\r\n            b[v >> 1] = b[d + ((w | 3) << 1) >> 1] | 0;\r\n            return e | 0\r\n        }\r\n\r\n        function xe(a) {\r\n            a = a | 0;\r\n            var d = 0, e = 0, f = 0;\r\n            if (!a) {\r\n                f = -1;\r\n                return f | 0\r\n            }\r\n            c[a >> 2] = 0;\r\n            d = Je(20) | 0;\r\n            if (!d) {\r\n                f = -1;\r\n                return f | 0\r\n            }\r\n            e = d;\r\n            f = e + 20 | 0;\r\n            do {\r\n                b[e >> 1] = 0;\r\n                e = e + 2 | 0\r\n            } while ((e | 0) < (f | 0));\r\n            c[a >> 2] = d;\r\n            f = 0;\r\n            return f | 0\r\n        }\r\n\r\n        function ye(a) {\r\n            a = a | 0;\r\n            var c = 0;\r\n            if (!a) {\r\n                c = -1;\r\n                return c | 0\r\n            }\r\n            c = a + 20 | 0;\r\n            do {\r\n                b[a >> 1] = 0;\r\n                a = a + 2 | 0\r\n            } while ((a | 0) < (c | 0));\r\n            c = 0;\r\n            return c | 0\r\n        }\r\n\r\n        function ze(a) {\r\n            a = a | 0;\r\n            var b = 0;\r\n            if (!a) return;\r\n            b = c[a >> 2] | 0;\r\n            if (!b) return;\r\n            Ke(b);\r\n            c[a >> 2] = 0;\r\n            return\r\n        }\r\n\r\n        function Ae(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0;\r\n            if (d << 16 >> 16 <= 0) return;\r\n            f = c << 16 >> 16;\r\n            g = c & 65535;\r\n            h = 0;\r\n            while (1) {\r\n                e = b[a >> 1] | 0;\r\n                if (e << 16 >> 16 < c << 16 >> 16) {\r\n                    b[a >> 1] = c;\r\n                    e = (c << 16 >> 16) + f | 0\r\n                } else e = (e & 65535) + g | 0;\r\n                h = h + 1 << 16 >> 16;\r\n                if (h << 16 >> 16 >= d << 16 >> 16) break; else {\r\n                    c = e & 65535;\r\n                    a = a + 2 | 0\r\n                }\r\n            }\r\n            return\r\n        }\r\n\r\n        function Be(a, c, d, e) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;\r\n            f = e << 16 >> 16;\r\n            e = f >>> 2 & 65535;\r\n            if (!(e << 16 >> 16)) return;\r\n            n = f + -1 | 0;\r\n            t = a + 20 | 0;\r\n            p = c + (f + -4 << 1) | 0;\r\n            q = c + (f + -3 << 1) | 0;\r\n            r = c + (f + -2 << 1) | 0;\r\n            s = c + (n << 1) | 0;\r\n            o = c + (f + -11 << 1) | 0;\r\n            n = d + (n << 1) | 0;\r\n            while (1) {\r\n                c = b[t >> 1] | 0;\r\n                h = 5;\r\n                i = t;\r\n                j = o;\r\n                k = o + -2 | 0;\r\n                l = o + -4 | 0;\r\n                m = o + -6 | 0;\r\n                g = 2048;\r\n                a = 2048;\r\n                f = 2048;\r\n                d = 2048;\r\n                while (1) {\r\n                    g = (Z(b[j >> 1] | 0, c) | 0) + g | 0;\r\n                    a = (Z(b[k >> 1] | 0, c) | 0) + a | 0;\r\n                    f = (Z(b[l >> 1] | 0, c) | 0) + f | 0;\r\n                    c = (Z(b[m >> 1] | 0, c) | 0) + d | 0;\r\n                    d = b[i + -2 >> 1] | 0;\r\n                    g = g + (Z(b[j + 2 >> 1] | 0, d) | 0) | 0;\r\n                    a = a + (Z(b[k + 2 >> 1] | 0, d) | 0) | 0;\r\n                    f = f + (Z(b[l + 2 >> 1] | 0, d) | 0) | 0;\r\n                    i = i + -4 | 0;\r\n                    d = c + (Z(b[m + 2 >> 1] | 0, d) | 0) | 0;\r\n                    h = h + -1 << 16 >> 16;\r\n                    c = b[i >> 1] | 0;\r\n                    if (!(h << 16 >> 16)) break; else {\r\n                        j = j + 4 | 0;\r\n                        k = k + 4 | 0;\r\n                        l = l + 4 | 0;\r\n                        m = m + 4 | 0\r\n                    }\r\n                }\r\n                j = (Z(b[s >> 1] | 0, c) | 0) + g | 0;\r\n                k = (Z(b[r >> 1] | 0, c) | 0) + a | 0;\r\n                l = (Z(b[q >> 1] | 0, c) | 0) + f | 0;\r\n                m = (Z(b[p >> 1] | 0, c) | 0) + d | 0;\r\n                b[n >> 1] = j >>> 12;\r\n                b[n + -2 >> 1] = k >>> 12;\r\n                b[n + -4 >> 1] = l >>> 12;\r\n                b[n + -6 >> 1] = m >>> 12;\r\n                e = e + -1 << 16 >> 16;\r\n                if (!(e << 16 >> 16)) break; else {\r\n                    p = p + -8 | 0;\r\n                    q = q + -8 | 0;\r\n                    r = r + -8 | 0;\r\n                    s = s + -8 | 0;\r\n                    o = o + -8 | 0;\r\n                    n = n + -8 | 0\r\n                }\r\n            }\r\n            return\r\n        }\r\n\r\n        function Ce(a, b) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            var d = 0;\r\n            d = a + 32768 | 0;\r\n            if ((a | 0) > -1 & (d ^ a | 0) < 0) {\r\n                c[b >> 2] = 1;\r\n                d = (a >>> 31) + 2147483647 | 0\r\n            }\r\n            return d >>> 16 & 65535 | 0\r\n        }\r\n\r\n        function De(a, b, d) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            d = d | 0;\r\n            var e = 0, f = 0;\r\n            e = b << 16 >> 16;\r\n            if (!(b << 16 >> 16)) return a | 0;\r\n            if (b << 16 >> 16 > 0) {\r\n                a = a << 16 >> 16 >> (b << 16 >> 16 > 15 ? 15 : e) & 65535;\r\n                return a | 0\r\n            }\r\n            f = 0 - e | 0;\r\n            b = a << 16 >> 16;\r\n            f = (f & 65535) << 16 >> 16 > 15 ? 15 : f << 16 >> 16;\r\n            e = b << f;\r\n            if ((e << 16 >> 16 >> f | 0) == (b | 0)) {\r\n                f = e & 65535;\r\n                return f | 0\r\n            }\r\n            c[d >> 2] = 1;\r\n            f = a << 16 >> 16 > 0 ? 32767 : -32768;\r\n            return f | 0\r\n        }\r\n\r\n        function Ee(a, b, c) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            c = c | 0;\r\n            if (b << 16 >> 16 > 15) {\r\n                b = 0;\r\n                return b | 0\r\n            }\r\n            c = De(a, b, c) | 0;\r\n            if (b << 16 >> 16 > 0) return c + ((1 << (b << 16 >> 16) + -1 & a << 16 >> 16 | 0) != 0 & 1) << 16 >> 16 | 0; else {\r\n                b = c;\r\n                return b | 0\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function Fe(a, d, f) {\r\n            a = a | 0;\r\n            d = d | 0;\r\n            f = f | 0;\r\n            var g = 0, h = 0, i = 0;\r\n            if ((a | 0) < 1) {\r\n                b[d >> 1] = 0;\r\n                f = 0;\r\n                return f | 0\r\n            }\r\n            h = (pe(a) | 0) & 65534;\r\n            i = h & 65535;\r\n            h = h << 16 >> 16;\r\n            if (i << 16 >> 16 > 0) {\r\n                g = a << h;\r\n                if ((g >> h | 0) != (a | 0)) g = a >> 31 ^ 2147483647\r\n            } else {\r\n                h = 0 - h << 16;\r\n                if ((h | 0) < 2031616) g = a >> (h >> 16); else g = 0\r\n            }\r\n            b[d >> 1] = i;\r\n            d = g >>> 25 & 63;\r\n            d = d >>> 0 > 15 ? d + -16 | 0 : d;\r\n            i = b[30216 + (d << 1) >> 1] | 0;\r\n            a = i << 16;\r\n            g = Z(i - (e[30216 + (d + 1 << 1) >> 1] | 0) << 16 >> 16, g >>> 10 & 32767) | 0;\r\n            if ((g | 0) == 1073741824) {\r\n                c[f >> 2] = 1;\r\n                h = 2147483647\r\n            } else h = g << 1;\r\n            g = a - h | 0;\r\n            if (((g ^ a) & (h ^ a) | 0) >= 0) {\r\n                f = g;\r\n                return f | 0\r\n            }\r\n            c[f >> 2] = 1;\r\n            f = (i >>> 15 & 1) + 2147483647 | 0;\r\n            return f | 0\r\n        }\r\n\r\n        function Ge(a, b, d) {\r\n            a = a | 0;\r\n            b = b | 0;\r\n            d = d | 0;\r\n            a = (a << 16 >> 16) - (b << 16 >> 16) | 0;\r\n            if ((a + 32768 | 0) >>> 0 <= 65535) {\r\n                d = a;\r\n                d = d & 65535;\r\n                return d | 0\r\n            }\r\n            c[d >> 2] = 1;\r\n            d = (a | 0) > 32767 ? 32767 : -32768;\r\n            d = d & 65535;\r\n            return d | 0\r\n        }\r\n\r\n        function He(a, c, d, e, f, g) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            f = f | 0;\r\n            g = g | 0;\r\n            var h = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0,\r\n                x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;\r\n            A = i;\r\n            i = i + 48 | 0;\r\n            o = A;\r\n            k = o;\r\n            h = f;\r\n            j = k + 20 | 0;\r\n            do {\r\n                b[k >> 1] = b[h >> 1] | 0;\r\n                k = k + 2 | 0;\r\n                h = h + 2 | 0\r\n            } while ((k | 0) < (j | 0));\r\n            n = o + 18 | 0;\r\n            s = a + 2 | 0;\r\n            t = a + 4 | 0;\r\n            p = c + 20 | 0;\r\n            u = a + 6 | 0;\r\n            v = a + 8 | 0;\r\n            w = a + 10 | 0;\r\n            x = a + 12 | 0;\r\n            y = a + 14 | 0;\r\n            z = a + 16 | 0;\r\n            q = a + 18 | 0;\r\n            r = a + 20 | 0;\r\n            j = b[n >> 1] | 0;\r\n            h = 5;\r\n            l = c;\r\n            m = d;\r\n            k = o + 20 | 0;\r\n            while (1) {\r\n                D = b[a >> 1] | 0;\r\n                C = (Z(D, b[l >> 1] | 0) | 0) + 2048 | 0;\r\n                D = (Z(b[l + 2 >> 1] | 0, D) | 0) + 2048 | 0;\r\n                o = j << 16 >> 16;\r\n                C = C - (Z(o, b[s >> 1] | 0) | 0) | 0;\r\n                B = b[t >> 1] | 0;\r\n                o = D - (Z(o, B) | 0) | 0;\r\n                D = b[n + -2 >> 1] | 0;\r\n                B = C - (Z(D, B) | 0) | 0;\r\n                C = b[u >> 1] | 0;\r\n                D = o - (Z(C, D) | 0) | 0;\r\n                o = b[n + -4 >> 1] | 0;\r\n                C = B - (Z(o, C) | 0) | 0;\r\n                B = b[v >> 1] | 0;\r\n                o = D - (Z(B, o) | 0) | 0;\r\n                D = b[n + -6 >> 1] | 0;\r\n                B = C - (Z(D, B) | 0) | 0;\r\n                C = b[w >> 1] | 0;\r\n                D = o - (Z(D, C) | 0) | 0;\r\n                o = b[n + -8 >> 1] | 0;\r\n                C = B - (Z(o, C) | 0) | 0;\r\n                B = b[x >> 1] | 0;\r\n                o = D - (Z(B, o) | 0) | 0;\r\n                D = b[n + -10 >> 1] | 0;\r\n                B = C - (Z(D, B) | 0) | 0;\r\n                C = b[y >> 1] | 0;\r\n                D = o - (Z(C, D) | 0) | 0;\r\n                o = b[n + -12 >> 1] | 0;\r\n                C = B - (Z(o, C) | 0) | 0;\r\n                B = b[z >> 1] | 0;\r\n                o = D - (Z(o, B) | 0) | 0;\r\n                D = b[n + -14 >> 1] | 0;\r\n                B = C - (Z(D, B) | 0) | 0;\r\n                C = b[q >> 1] | 0;\r\n                D = o - (Z(C, D) | 0) | 0;\r\n                o = b[n + -16 >> 1] | 0;\r\n                C = B - (Z(o, C) | 0) | 0;\r\n                B = b[r >> 1] | 0;\r\n                o = D - (Z(B, o) | 0) | 0;\r\n                B = C - (Z(b[n + -18 >> 1] | 0, B) | 0) | 0;\r\n                B = (B + 134217728 | 0) >>> 0 < 268435455 ? B >>> 12 & 65535 : (B | 0) > 134217727 ? 32767 : -32768;\r\n                o = o - (Z(b[s >> 1] | 0, B << 16 >> 16) | 0) | 0;\r\n                n = k + 2 | 0;\r\n                b[k >> 1] = B;\r\n                b[m >> 1] = B;\r\n                j = (o + 134217728 | 0) >>> 0 < 268435455 ? o >>> 12 & 65535 : (o | 0) > 134217727 ? 32767 : -32768;\r\n                b[n >> 1] = j;\r\n                b[m + 2 >> 1] = j;\r\n                h = h + -1 << 16 >> 16;\r\n                if (!(h << 16 >> 16)) break; else {\r\n                    l = l + 4 | 0;\r\n                    m = m + 4 | 0;\r\n                    k = k + 4 | 0\r\n                }\r\n            }\r\n            e = (e << 16 >> 16) + -10 | 0;\r\n            k = e >>> 1 & 65535;\r\n            if (k << 16 >> 16) {\r\n                o = d + 18 | 0;\r\n                j = c + 16 | 0;\r\n                n = b[o >> 1] | 0;\r\n                l = p;\r\n                h = d + 20 | 0;\r\n                while (1) {\r\n                    B = b[a >> 1] | 0;\r\n                    m = (Z(B, b[l >> 1] | 0) | 0) + 2048 | 0;\r\n                    B = (Z(b[j + 6 >> 1] | 0, B) | 0) + 2048 | 0;\r\n                    j = b[s >> 1] | 0;\r\n                    C = n << 16 >> 16;\r\n                    m = m - (Z(C, j) | 0) | 0;\r\n                    D = b[t >> 1] | 0;\r\n                    C = B - (Z(C, D) | 0) | 0;\r\n                    B = b[o + -2 >> 1] | 0;\r\n                    D = m - (Z(B, D) | 0) | 0;\r\n                    m = b[u >> 1] | 0;\r\n                    B = C - (Z(m, B) | 0) | 0;\r\n                    C = b[o + -4 >> 1] | 0;\r\n                    m = D - (Z(C, m) | 0) | 0;\r\n                    D = b[v >> 1] | 0;\r\n                    C = B - (Z(D, C) | 0) | 0;\r\n                    B = b[o + -6 >> 1] | 0;\r\n                    D = m - (Z(B, D) | 0) | 0;\r\n                    m = b[w >> 1] | 0;\r\n                    B = C - (Z(B, m) | 0) | 0;\r\n                    C = b[o + -8 >> 1] | 0;\r\n                    m = D - (Z(C, m) | 0) | 0;\r\n                    D = b[x >> 1] | 0;\r\n                    C = B - (Z(D, C) | 0) | 0;\r\n                    B = b[o + -10 >> 1] | 0;\r\n                    D = m - (Z(B, D) | 0) | 0;\r\n                    m = b[y >> 1] | 0;\r\n                    B = C - (Z(m, B) | 0) | 0;\r\n                    C = b[o + -12 >> 1] | 0;\r\n                    m = D - (Z(C, m) | 0) | 0;\r\n                    D = b[z >> 1] | 0;\r\n                    C = B - (Z(C, D) | 0) | 0;\r\n                    B = b[o + -14 >> 1] | 0;\r\n                    D = m - (Z(B, D) | 0) | 0;\r\n                    m = b[q >> 1] | 0;\r\n                    B = C - (Z(m, B) | 0) | 0;\r\n                    C = b[o + -16 >> 1] | 0;\r\n                    m = D - (Z(C, m) | 0) | 0;\r\n                    D = b[r >> 1] | 0;\r\n                    C = B - (Z(D, C) | 0) | 0;\r\n                    D = m - (Z(b[o + -18 >> 1] | 0, D) | 0) | 0;\r\n                    m = l + 4 | 0;\r\n                    D = (D + 134217728 | 0) >>> 0 < 268435455 ? D >>> 12 & 65535 : (D | 0) > 134217727 ? 32767 : -32768;\r\n                    j = C - (Z(j, D << 16 >> 16) | 0) | 0;\r\n                    o = h + 2 | 0;\r\n                    b[h >> 1] = D;\r\n                    do if ((j + 134217728 | 0) >>> 0 >= 268435455) {\r\n                        h = h + 4 | 0;\r\n                        if ((j | 0) > 134217727) {\r\n                            b[o >> 1] = 32767;\r\n                            j = 32767;\r\n                            break\r\n                        } else {\r\n                            b[o >> 1] = -32768;\r\n                            j = -32768;\r\n                            break\r\n                        }\r\n                    } else {\r\n                        j = j >>> 12 & 65535;\r\n                        b[o >> 1] = j;\r\n                        h = h + 4 | 0\r\n                    } while (0);\r\n                    k = k + -1 << 16 >> 16;\r\n                    if (!(k << 16 >> 16)) break; else {\r\n                        D = l;\r\n                        n = j;\r\n                        l = m;\r\n                        j = D\r\n                    }\r\n                }\r\n            }\r\n            if (!(g << 16 >> 16)) {\r\n                i = A;\r\n                return\r\n            }\r\n            k = f;\r\n            h = d + (e << 1) | 0;\r\n            j = k + 20 | 0;\r\n            do {\r\n                b[k >> 1] = b[h >> 1] | 0;\r\n                k = k + 2 | 0;\r\n                h = h + 2 | 0\r\n            } while ((k | 0) < (j | 0));\r\n            i = A;\r\n            return\r\n        }\r\n\r\n        function Ie(a, c, d) {\r\n            a = a | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            b[d >> 1] = b[a >> 1] | 0;\r\n            b[d + 2 >> 1] = ((Z(b[c >> 1] | 0, b[a + 2 >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n            b[d + 4 >> 1] = ((Z(b[c + 2 >> 1] | 0, b[a + 4 >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n            b[d + 6 >> 1] = ((Z(b[c + 4 >> 1] | 0, b[a + 6 >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n            b[d + 8 >> 1] = ((Z(b[c + 6 >> 1] | 0, b[a + 8 >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n            b[d + 10 >> 1] = ((Z(b[c + 8 >> 1] | 0, b[a + 10 >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n            b[d + 12 >> 1] = ((Z(b[c + 10 >> 1] | 0, b[a + 12 >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n            b[d + 14 >> 1] = ((Z(b[c + 12 >> 1] | 0, b[a + 14 >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n            b[d + 16 >> 1] = ((Z(b[c + 14 >> 1] | 0, b[a + 16 >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n            b[d + 18 >> 1] = ((Z(b[c + 16 >> 1] | 0, b[a + 18 >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n            b[d + 20 >> 1] = ((Z(b[c + 18 >> 1] | 0, b[a + 20 >> 1] | 0) | 0) + 16384 | 0) >>> 15;\r\n            return\r\n        }\r\n\r\n        function Je(a) {\r\n            a = a | 0;\r\n            var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0,\r\n                r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0,\r\n                G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0,\r\n                V = 0;\r\n            do if (a >>> 0 < 245) {\r\n                s = a >>> 0 < 11 ? 16 : a + 11 & -8;\r\n                a = s >>> 3;\r\n                m = c[26] | 0;\r\n                j = m >>> a;\r\n                if (j & 3) {\r\n                    e = (j & 1 ^ 1) + a | 0;\r\n                    b = e << 1;\r\n                    d = 144 + (b << 2) | 0;\r\n                    b = 144 + (b + 2 << 2) | 0;\r\n                    f = c[b >> 2] | 0;\r\n                    g = f + 8 | 0;\r\n                    h = c[g >> 2] | 0;\r\n                    do if ((d | 0) == (h | 0)) c[26] = m & ~(1 << e); else {\r\n                        if (h >>> 0 >= (c[30] | 0) >>> 0 ? (l = h + 12 | 0, (c[l >> 2] | 0) == (f | 0)) : 0) {\r\n                            c[l >> 2] = d;\r\n                            c[b >> 2] = h;\r\n                            break\r\n                        }\r\n                        ea()\r\n                    } while (0);\r\n                    U = e << 3;\r\n                    c[f + 4 >> 2] = U | 3;\r\n                    U = f + (U | 4) | 0;\r\n                    c[U >> 2] = c[U >> 2] | 1;\r\n                    break\r\n                }\r\n                b = c[28] | 0;\r\n                if (s >>> 0 > b >>> 0) {\r\n                    if (j) {\r\n                        f = 2 << a;\r\n                        f = j << a & (f | 0 - f);\r\n                        f = (f & 0 - f) + -1 | 0;\r\n                        g = f >>> 12 & 16;\r\n                        f = f >>> g;\r\n                        e = f >>> 5 & 8;\r\n                        f = f >>> e;\r\n                        d = f >>> 2 & 4;\r\n                        f = f >>> d;\r\n                        h = f >>> 1 & 2;\r\n                        f = f >>> h;\r\n                        i = f >>> 1 & 1;\r\n                        i = (e | g | d | h | i) + (f >>> i) | 0;\r\n                        f = i << 1;\r\n                        h = 144 + (f << 2) | 0;\r\n                        f = 144 + (f + 2 << 2) | 0;\r\n                        d = c[f >> 2] | 0;\r\n                        g = d + 8 | 0;\r\n                        e = c[g >> 2] | 0;\r\n                        do if ((h | 0) == (e | 0)) {\r\n                            c[26] = m & ~(1 << i);\r\n                            n = b\r\n                        } else {\r\n                            if (e >>> 0 >= (c[30] | 0) >>> 0 ? (k = e + 12 | 0, (c[k >> 2] | 0) == (d | 0)) : 0) {\r\n                                c[k >> 2] = h;\r\n                                c[f >> 2] = e;\r\n                                n = c[28] | 0;\r\n                                break\r\n                            }\r\n                            ea()\r\n                        } while (0);\r\n                        U = i << 3;\r\n                        b = U - s | 0;\r\n                        c[d + 4 >> 2] = s | 3;\r\n                        j = d + s | 0;\r\n                        c[d + (s | 4) >> 2] = b | 1;\r\n                        c[d + U >> 2] = b;\r\n                        if (n) {\r\n                            d = c[31] | 0;\r\n                            e = n >>> 3;\r\n                            h = e << 1;\r\n                            i = 144 + (h << 2) | 0;\r\n                            f = c[26] | 0;\r\n                            e = 1 << e;\r\n                            if (f & e) {\r\n                                f = 144 + (h + 2 << 2) | 0;\r\n                                h = c[f >> 2] | 0;\r\n                                if (h >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                    p = f;\r\n                                    q = h\r\n                                }\r\n                            } else {\r\n                                c[26] = f | e;\r\n                                p = 144 + (h + 2 << 2) | 0;\r\n                                q = i\r\n                            }\r\n                            c[p >> 2] = d;\r\n                            c[q + 12 >> 2] = d;\r\n                            c[d + 8 >> 2] = q;\r\n                            c[d + 12 >> 2] = i\r\n                        }\r\n                        c[28] = b;\r\n                        c[31] = j;\r\n                        break\r\n                    }\r\n                    a = c[27] | 0;\r\n                    if (a) {\r\n                        f = (a & 0 - a) + -1 | 0;\r\n                        T = f >>> 12 & 16;\r\n                        f = f >>> T;\r\n                        S = f >>> 5 & 8;\r\n                        f = f >>> S;\r\n                        U = f >>> 2 & 4;\r\n                        f = f >>> U;\r\n                        h = f >>> 1 & 2;\r\n                        f = f >>> h;\r\n                        j = f >>> 1 & 1;\r\n                        j = c[408 + ((S | T | U | h | j) + (f >>> j) << 2) >> 2] | 0;\r\n                        f = (c[j + 4 >> 2] & -8) - s | 0;\r\n                        h = j;\r\n                        while (1) {\r\n                            i = c[h + 16 >> 2] | 0;\r\n                            if (!i) {\r\n                                i = c[h + 20 >> 2] | 0;\r\n                                if (!i) {\r\n                                    b = f;\r\n                                    break\r\n                                }\r\n                            }\r\n                            h = (c[i + 4 >> 2] & -8) - s | 0;\r\n                            U = h >>> 0 < f >>> 0;\r\n                            f = U ? h : f;\r\n                            h = i;\r\n                            j = U ? i : j\r\n                        }\r\n                        a = c[30] | 0;\r\n                        if (j >>> 0 >= a >>> 0 ? (v = j + s | 0, j >>> 0 < v >>> 0) : 0) {\r\n                            e = c[j + 24 >> 2] | 0;\r\n                            i = c[j + 12 >> 2] | 0;\r\n                            do if ((i | 0) == (j | 0)) {\r\n                                h = j + 20 | 0;\r\n                                i = c[h >> 2] | 0;\r\n                                if (!i) {\r\n                                    h = j + 16 | 0;\r\n                                    i = c[h >> 2] | 0;\r\n                                    if (!i) {\r\n                                        t = 0;\r\n                                        break\r\n                                    }\r\n                                }\r\n                                while (1) {\r\n                                    g = i + 20 | 0;\r\n                                    f = c[g >> 2] | 0;\r\n                                    if (f) {\r\n                                        i = f;\r\n                                        h = g;\r\n                                        continue\r\n                                    }\r\n                                    g = i + 16 | 0;\r\n                                    f = c[g >> 2] | 0;\r\n                                    if (!f) break; else {\r\n                                        i = f;\r\n                                        h = g\r\n                                    }\r\n                                }\r\n                                if (h >>> 0 < a >>> 0) ea(); else {\r\n                                    c[h >> 2] = 0;\r\n                                    t = i;\r\n                                    break\r\n                                }\r\n                            } else {\r\n                                h = c[j + 8 >> 2] | 0;\r\n                                if ((h >>> 0 >= a >>> 0 ? (d = h + 12 | 0, (c[d >> 2] | 0) == (j | 0)) : 0) ? (o = i + 8 | 0, (c[o >> 2] | 0) == (j | 0)) : 0) {\r\n                                    c[d >> 2] = i;\r\n                                    c[o >> 2] = h;\r\n                                    t = i;\r\n                                    break\r\n                                }\r\n                                ea()\r\n                            } while (0);\r\n                            do if (e) {\r\n                                h = c[j + 28 >> 2] | 0;\r\n                                g = 408 + (h << 2) | 0;\r\n                                if ((j | 0) == (c[g >> 2] | 0)) {\r\n                                    c[g >> 2] = t;\r\n                                    if (!t) {\r\n                                        c[27] = c[27] & ~(1 << h);\r\n                                        break\r\n                                    }\r\n                                } else {\r\n                                    if (e >>> 0 < (c[30] | 0) >>> 0) ea();\r\n                                    h = e + 16 | 0;\r\n                                    if ((c[h >> 2] | 0) == (j | 0)) c[h >> 2] = t; else c[e + 20 >> 2] = t;\r\n                                    if (!t) break\r\n                                }\r\n                                g = c[30] | 0;\r\n                                if (t >>> 0 < g >>> 0) ea();\r\n                                c[t + 24 >> 2] = e;\r\n                                h = c[j + 16 >> 2] | 0;\r\n                                do if (h) if (h >>> 0 < g >>> 0) ea(); else {\r\n                                    c[t + 16 >> 2] = h;\r\n                                    c[h + 24 >> 2] = t;\r\n                                    break\r\n                                } while (0);\r\n                                h = c[j + 20 >> 2] | 0;\r\n                                if (h) if (h >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                    c[t + 20 >> 2] = h;\r\n                                    c[h + 24 >> 2] = t;\r\n                                    break\r\n                                }\r\n                            } while (0);\r\n                            if (b >>> 0 < 16) {\r\n                                U = b + s | 0;\r\n                                c[j + 4 >> 2] = U | 3;\r\n                                U = j + (U + 4) | 0;\r\n                                c[U >> 2] = c[U >> 2] | 1\r\n                            } else {\r\n                                c[j + 4 >> 2] = s | 3;\r\n                                c[j + (s | 4) >> 2] = b | 1;\r\n                                c[j + (b + s) >> 2] = b;\r\n                                e = c[28] | 0;\r\n                                if (e) {\r\n                                    d = c[31] | 0;\r\n                                    f = e >>> 3;\r\n                                    h = f << 1;\r\n                                    i = 144 + (h << 2) | 0;\r\n                                    g = c[26] | 0;\r\n                                    f = 1 << f;\r\n                                    if (g & f) {\r\n                                        h = 144 + (h + 2 << 2) | 0;\r\n                                        g = c[h >> 2] | 0;\r\n                                        if (g >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                            u = h;\r\n                                            w = g\r\n                                        }\r\n                                    } else {\r\n                                        c[26] = g | f;\r\n                                        u = 144 + (h + 2 << 2) | 0;\r\n                                        w = i\r\n                                    }\r\n                                    c[u >> 2] = d;\r\n                                    c[w + 12 >> 2] = d;\r\n                                    c[d + 8 >> 2] = w;\r\n                                    c[d + 12 >> 2] = i\r\n                                }\r\n                                c[28] = b;\r\n                                c[31] = v\r\n                            }\r\n                            g = j + 8 | 0;\r\n                            break\r\n                        }\r\n                        ea()\r\n                    } else V = 154\r\n                } else V = 154\r\n            } else if (a >>> 0 <= 4294967231) {\r\n                a = a + 11 | 0;\r\n                w = a & -8;\r\n                m = c[27] | 0;\r\n                if (m) {\r\n                    j = 0 - w | 0;\r\n                    a = a >>> 8;\r\n                    if (a) if (w >>> 0 > 16777215) l = 31; else {\r\n                        v = (a + 1048320 | 0) >>> 16 & 8;\r\n                        V = a << v;\r\n                        u = (V + 520192 | 0) >>> 16 & 4;\r\n                        V = V << u;\r\n                        l = (V + 245760 | 0) >>> 16 & 2;\r\n                        l = 14 - (u | v | l) + (V << l >>> 15) | 0;\r\n                        l = w >>> (l + 7 | 0) & 1 | l << 1\r\n                    } else l = 0;\r\n                    a = c[408 + (l << 2) >> 2] | 0;\r\n                    a:do if (!a) {\r\n                        i = 0;\r\n                        a = 0;\r\n                        V = 86\r\n                    } else {\r\n                        d = j;\r\n                        i = 0;\r\n                        b = w << ((l | 0) == 31 ? 0 : 25 - (l >>> 1) | 0);\r\n                        k = a;\r\n                        a = 0;\r\n                        while (1) {\r\n                            e = c[k + 4 >> 2] & -8;\r\n                            j = e - w | 0;\r\n                            if (j >>> 0 < d >>> 0) if ((e | 0) == (w | 0)) {\r\n                                e = k;\r\n                                a = k;\r\n                                V = 90;\r\n                                break a\r\n                            } else a = k; else j = d;\r\n                            V = c[k + 20 >> 2] | 0;\r\n                            k = c[k + 16 + (b >>> 31 << 2) >> 2] | 0;\r\n                            i = (V | 0) == 0 | (V | 0) == (k | 0) ? i : V;\r\n                            if (!k) {\r\n                                V = 86;\r\n                                break\r\n                            } else {\r\n                                d = j;\r\n                                b = b << 1\r\n                            }\r\n                        }\r\n                    } while (0);\r\n                    if ((V | 0) == 86) {\r\n                        if ((i | 0) == 0 & (a | 0) == 0) {\r\n                            a = 2 << l;\r\n                            a = m & (a | 0 - a);\r\n                            if (!a) {\r\n                                s = w;\r\n                                V = 154;\r\n                                break\r\n                            }\r\n                            a = (a & 0 - a) + -1 | 0;\r\n                            t = a >>> 12 & 16;\r\n                            a = a >>> t;\r\n                            q = a >>> 5 & 8;\r\n                            a = a >>> q;\r\n                            u = a >>> 2 & 4;\r\n                            a = a >>> u;\r\n                            v = a >>> 1 & 2;\r\n                            a = a >>> v;\r\n                            i = a >>> 1 & 1;\r\n                            i = c[408 + ((q | t | u | v | i) + (a >>> i) << 2) >> 2] | 0;\r\n                            a = 0\r\n                        }\r\n                        if (!i) {\r\n                            q = j;\r\n                            p = a\r\n                        } else {\r\n                            e = i;\r\n                            V = 90\r\n                        }\r\n                    }\r\n                    if ((V | 0) == 90) while (1) {\r\n                        V = 0;\r\n                        v = (c[e + 4 >> 2] & -8) - w | 0;\r\n                        i = v >>> 0 < j >>> 0;\r\n                        j = i ? v : j;\r\n                        a = i ? e : a;\r\n                        i = c[e + 16 >> 2] | 0;\r\n                        if (i) {\r\n                            e = i;\r\n                            V = 90;\r\n                            continue\r\n                        }\r\n                        e = c[e + 20 >> 2] | 0;\r\n                        if (!e) {\r\n                            q = j;\r\n                            p = a;\r\n                            break\r\n                        } else V = 90\r\n                    }\r\n                    if ((p | 0) != 0 ? q >>> 0 < ((c[28] | 0) - w | 0) >>> 0 : 0) {\r\n                        a = c[30] | 0;\r\n                        if (p >>> 0 >= a >>> 0 ? (H = p + w | 0, p >>> 0 < H >>> 0) : 0) {\r\n                            j = c[p + 24 >> 2] | 0;\r\n                            i = c[p + 12 >> 2] | 0;\r\n                            do if ((i | 0) == (p | 0)) {\r\n                                h = p + 20 | 0;\r\n                                i = c[h >> 2] | 0;\r\n                                if (!i) {\r\n                                    h = p + 16 | 0;\r\n                                    i = c[h >> 2] | 0;\r\n                                    if (!i) {\r\n                                        y = 0;\r\n                                        break\r\n                                    }\r\n                                }\r\n                                while (1) {\r\n                                    g = i + 20 | 0;\r\n                                    f = c[g >> 2] | 0;\r\n                                    if (f) {\r\n                                        i = f;\r\n                                        h = g;\r\n                                        continue\r\n                                    }\r\n                                    g = i + 16 | 0;\r\n                                    f = c[g >> 2] | 0;\r\n                                    if (!f) break; else {\r\n                                        i = f;\r\n                                        h = g\r\n                                    }\r\n                                }\r\n                                if (h >>> 0 < a >>> 0) ea(); else {\r\n                                    c[h >> 2] = 0;\r\n                                    y = i;\r\n                                    break\r\n                                }\r\n                            } else {\r\n                                h = c[p + 8 >> 2] | 0;\r\n                                if ((h >>> 0 >= a >>> 0 ? (r = h + 12 | 0, (c[r >> 2] | 0) == (p | 0)) : 0) ? (s = i + 8 | 0, (c[s >> 2] | 0) == (p | 0)) : 0) {\r\n                                    c[r >> 2] = i;\r\n                                    c[s >> 2] = h;\r\n                                    y = i;\r\n                                    break\r\n                                }\r\n                                ea()\r\n                            } while (0);\r\n                            do if (j) {\r\n                                i = c[p + 28 >> 2] | 0;\r\n                                h = 408 + (i << 2) | 0;\r\n                                if ((p | 0) == (c[h >> 2] | 0)) {\r\n                                    c[h >> 2] = y;\r\n                                    if (!y) {\r\n                                        c[27] = c[27] & ~(1 << i);\r\n                                        break\r\n                                    }\r\n                                } else {\r\n                                    if (j >>> 0 < (c[30] | 0) >>> 0) ea();\r\n                                    h = j + 16 | 0;\r\n                                    if ((c[h >> 2] | 0) == (p | 0)) c[h >> 2] = y; else c[j + 20 >> 2] = y;\r\n                                    if (!y) break\r\n                                }\r\n                                i = c[30] | 0;\r\n                                if (y >>> 0 < i >>> 0) ea();\r\n                                c[y + 24 >> 2] = j;\r\n                                h = c[p + 16 >> 2] | 0;\r\n                                do if (h) if (h >>> 0 < i >>> 0) ea(); else {\r\n                                    c[y + 16 >> 2] = h;\r\n                                    c[h + 24 >> 2] = y;\r\n                                    break\r\n                                } while (0);\r\n                                h = c[p + 20 >> 2] | 0;\r\n                                if (h) if (h >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                    c[y + 20 >> 2] = h;\r\n                                    c[h + 24 >> 2] = y;\r\n                                    break\r\n                                }\r\n                            } while (0);\r\n                            b:do if (q >>> 0 >= 16) {\r\n                                c[p + 4 >> 2] = w | 3;\r\n                                c[p + (w | 4) >> 2] = q | 1;\r\n                                c[p + (q + w) >> 2] = q;\r\n                                i = q >>> 3;\r\n                                if (q >>> 0 < 256) {\r\n                                    g = i << 1;\r\n                                    e = 144 + (g << 2) | 0;\r\n                                    f = c[26] | 0;\r\n                                    h = 1 << i;\r\n                                    if (f & h) {\r\n                                        h = 144 + (g + 2 << 2) | 0;\r\n                                        g = c[h >> 2] | 0;\r\n                                        if (g >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                            z = h;\r\n                                            A = g\r\n                                        }\r\n                                    } else {\r\n                                        c[26] = f | h;\r\n                                        z = 144 + (g + 2 << 2) | 0;\r\n                                        A = e\r\n                                    }\r\n                                    c[z >> 2] = H;\r\n                                    c[A + 12 >> 2] = H;\r\n                                    c[p + (w + 8) >> 2] = A;\r\n                                    c[p + (w + 12) >> 2] = e;\r\n                                    break\r\n                                }\r\n                                d = q >>> 8;\r\n                                if (d) if (q >>> 0 > 16777215) i = 31; else {\r\n                                    T = (d + 1048320 | 0) >>> 16 & 8;\r\n                                    U = d << T;\r\n                                    S = (U + 520192 | 0) >>> 16 & 4;\r\n                                    U = U << S;\r\n                                    i = (U + 245760 | 0) >>> 16 & 2;\r\n                                    i = 14 - (S | T | i) + (U << i >>> 15) | 0;\r\n                                    i = q >>> (i + 7 | 0) & 1 | i << 1\r\n                                } else i = 0;\r\n                                h = 408 + (i << 2) | 0;\r\n                                c[p + (w + 28) >> 2] = i;\r\n                                c[p + (w + 20) >> 2] = 0;\r\n                                c[p + (w + 16) >> 2] = 0;\r\n                                g = c[27] | 0;\r\n                                f = 1 << i;\r\n                                if (!(g & f)) {\r\n                                    c[27] = g | f;\r\n                                    c[h >> 2] = H;\r\n                                    c[p + (w + 24) >> 2] = h;\r\n                                    c[p + (w + 12) >> 2] = H;\r\n                                    c[p + (w + 8) >> 2] = H;\r\n                                    break\r\n                                }\r\n                                d = c[h >> 2] | 0;\r\n                                c:do if ((c[d + 4 >> 2] & -8 | 0) != (q | 0)) {\r\n                                    i = q << ((i | 0) == 31 ? 0 : 25 - (i >>> 1) | 0);\r\n                                    while (1) {\r\n                                        b = d + 16 + (i >>> 31 << 2) | 0;\r\n                                        h = c[b >> 2] | 0;\r\n                                        if (!h) break;\r\n                                        if ((c[h + 4 >> 2] & -8 | 0) == (q | 0)) {\r\n                                            C = h;\r\n                                            break c\r\n                                        } else {\r\n                                            i = i << 1;\r\n                                            d = h\r\n                                        }\r\n                                    }\r\n                                    if (b >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                        c[b >> 2] = H;\r\n                                        c[p + (w + 24) >> 2] = d;\r\n                                        c[p + (w + 12) >> 2] = H;\r\n                                        c[p + (w + 8) >> 2] = H;\r\n                                        break b\r\n                                    }\r\n                                } else C = d; while (0);\r\n                                d = C + 8 | 0;\r\n                                b = c[d >> 2] | 0;\r\n                                U = c[30] | 0;\r\n                                if (b >>> 0 >= U >>> 0 & C >>> 0 >= U >>> 0) {\r\n                                    c[b + 12 >> 2] = H;\r\n                                    c[d >> 2] = H;\r\n                                    c[p + (w + 8) >> 2] = b;\r\n                                    c[p + (w + 12) >> 2] = C;\r\n                                    c[p + (w + 24) >> 2] = 0;\r\n                                    break\r\n                                } else ea()\r\n                            } else {\r\n                                U = q + w | 0;\r\n                                c[p + 4 >> 2] = U | 3;\r\n                                U = p + (U + 4) | 0;\r\n                                c[U >> 2] = c[U >> 2] | 1\r\n                            } while (0);\r\n                            g = p + 8 | 0;\r\n                            break\r\n                        }\r\n                        ea()\r\n                    } else {\r\n                        s = w;\r\n                        V = 154\r\n                    }\r\n                } else {\r\n                    s = w;\r\n                    V = 154\r\n                }\r\n            } else {\r\n                s = -1;\r\n                V = 154\r\n            } while (0);\r\n            d:do if ((V | 0) == 154) {\r\n                a = c[28] | 0;\r\n                if (a >>> 0 >= s >>> 0) {\r\n                    b = a - s | 0;\r\n                    d = c[31] | 0;\r\n                    if (b >>> 0 > 15) {\r\n                        c[31] = d + s;\r\n                        c[28] = b;\r\n                        c[d + (s + 4) >> 2] = b | 1;\r\n                        c[d + a >> 2] = b;\r\n                        c[d + 4 >> 2] = s | 3\r\n                    } else {\r\n                        c[28] = 0;\r\n                        c[31] = 0;\r\n                        c[d + 4 >> 2] = a | 3;\r\n                        V = d + (a + 4) | 0;\r\n                        c[V >> 2] = c[V >> 2] | 1\r\n                    }\r\n                    g = d + 8 | 0;\r\n                    break\r\n                }\r\n                a = c[29] | 0;\r\n                if (a >>> 0 > s >>> 0) {\r\n                    V = a - s | 0;\r\n                    c[29] = V;\r\n                    g = c[32] | 0;\r\n                    c[32] = g + s;\r\n                    c[g + (s + 4) >> 2] = V | 1;\r\n                    c[g + 4 >> 2] = s | 3;\r\n                    g = g + 8 | 0;\r\n                    break\r\n                }\r\n                if (!(c[144] | 0)) Me();\r\n                m = s + 48 | 0;\r\n                d = c[146] | 0;\r\n                l = s + 47 | 0;\r\n                e = d + l | 0;\r\n                d = 0 - d | 0;\r\n                k = e & d;\r\n                if (k >>> 0 > s >>> 0) {\r\n                    a = c[136] | 0;\r\n                    if ((a | 0) != 0 ? (C = c[134] | 0, H = C + k | 0, H >>> 0 <= C >>> 0 | H >>> 0 > a >>> 0) : 0) {\r\n                        g = 0;\r\n                        break\r\n                    }\r\n                    e:do if (!(c[137] & 4)) {\r\n                        a = c[32] | 0;\r\n                        f:do if (a) {\r\n                            i = 552;\r\n                            while (1) {\r\n                                j = c[i >> 2] | 0;\r\n                                if (j >>> 0 <= a >>> 0 ? (x = i + 4 | 0, (j + (c[x >> 2] | 0) | 0) >>> 0 > a >>> 0) : 0) {\r\n                                    g = i;\r\n                                    a = x;\r\n                                    break\r\n                                }\r\n                                i = c[i + 8 >> 2] | 0;\r\n                                if (!i) {\r\n                                    V = 172;\r\n                                    break f\r\n                                }\r\n                            }\r\n                            j = e - (c[29] | 0) & d;\r\n                            if (j >>> 0 < 2147483647) {\r\n                                i = ga(j | 0) | 0;\r\n                                H = (i | 0) == ((c[g >> 2] | 0) + (c[a >> 2] | 0) | 0);\r\n                                a = H ? j : 0;\r\n                                if (H) {\r\n                                    if ((i | 0) != (-1 | 0)) {\r\n                                        A = i;\r\n                                        t = a;\r\n                                        V = 192;\r\n                                        break e\r\n                                    }\r\n                                } else V = 182\r\n                            } else a = 0\r\n                        } else V = 172; while (0);\r\n                        do if ((V | 0) == 172) {\r\n                            g = ga(0) | 0;\r\n                            if ((g | 0) != (-1 | 0)) {\r\n                                a = g;\r\n                                j = c[145] | 0;\r\n                                i = j + -1 | 0;\r\n                                if (!(i & a)) j = k; else j = k - a + (i + a & 0 - j) | 0;\r\n                                a = c[134] | 0;\r\n                                i = a + j | 0;\r\n                                if (j >>> 0 > s >>> 0 & j >>> 0 < 2147483647) {\r\n                                    H = c[136] | 0;\r\n                                    if ((H | 0) != 0 ? i >>> 0 <= a >>> 0 | i >>> 0 > H >>> 0 : 0) {\r\n                                        a = 0;\r\n                                        break\r\n                                    }\r\n                                    i = ga(j | 0) | 0;\r\n                                    V = (i | 0) == (g | 0);\r\n                                    a = V ? j : 0;\r\n                                    if (V) {\r\n                                        A = g;\r\n                                        t = a;\r\n                                        V = 192;\r\n                                        break e\r\n                                    } else V = 182\r\n                                } else a = 0\r\n                            } else a = 0\r\n                        } while (0);\r\n                        g:do if ((V | 0) == 182) {\r\n                            g = 0 - j | 0;\r\n                            do if (m >>> 0 > j >>> 0 & (j >>> 0 < 2147483647 & (i | 0) != (-1 | 0)) ? (B = c[146] | 0, B = l - j + B & 0 - B, B >>> 0 < 2147483647) : 0) if ((ga(B | 0) | 0) == (-1 | 0)) {\r\n                                ga(g | 0) | 0;\r\n                                break g\r\n                            } else {\r\n                                j = B + j | 0;\r\n                                break\r\n                            } while (0);\r\n                            if ((i | 0) != (-1 | 0)) {\r\n                                A = i;\r\n                                t = j;\r\n                                V = 192;\r\n                                break e\r\n                            }\r\n                        } while (0);\r\n                        c[137] = c[137] | 4;\r\n                        V = 189\r\n                    } else {\r\n                        a = 0;\r\n                        V = 189\r\n                    } while (0);\r\n                    if ((((V | 0) == 189 ? k >>> 0 < 2147483647 : 0) ? (D = ga(k | 0) | 0, E = ga(0) | 0, D >>> 0 < E >>> 0 & ((D | 0) != (-1 | 0) & (E | 0) != (-1 | 0))) : 0) ? (F = E - D | 0, G = F >>> 0 > (s + 40 | 0) >>> 0, G) : 0) {\r\n                        A = D;\r\n                        t = G ? F : a;\r\n                        V = 192\r\n                    }\r\n                    if ((V | 0) == 192) {\r\n                        j = (c[134] | 0) + t | 0;\r\n                        c[134] = j;\r\n                        if (j >>> 0 > (c[135] | 0) >>> 0) c[135] = j;\r\n                        q = c[32] | 0;\r\n                        h:do if (q) {\r\n                            g = 552;\r\n                            do {\r\n                                a = c[g >> 2] | 0;\r\n                                j = g + 4 | 0;\r\n                                i = c[j >> 2] | 0;\r\n                                if ((A | 0) == (a + i | 0)) {\r\n                                    I = a;\r\n                                    J = j;\r\n                                    K = i;\r\n                                    L = g;\r\n                                    V = 202;\r\n                                    break\r\n                                }\r\n                                g = c[g + 8 >> 2] | 0\r\n                            } while ((g | 0) != 0);\r\n                            if (((V | 0) == 202 ? (c[L + 12 >> 2] & 8 | 0) == 0 : 0) ? q >>> 0 < A >>> 0 & q >>> 0 >= I >>> 0 : 0) {\r\n                                c[J >> 2] = K + t;\r\n                                V = (c[29] | 0) + t | 0;\r\n                                U = q + 8 | 0;\r\n                                U = (U & 7 | 0) == 0 ? 0 : 0 - U & 7;\r\n                                T = V - U | 0;\r\n                                c[32] = q + U;\r\n                                c[29] = T;\r\n                                c[q + (U + 4) >> 2] = T | 1;\r\n                                c[q + (V + 4) >> 2] = 40;\r\n                                c[33] = c[148];\r\n                                break\r\n                            }\r\n                            j = c[30] | 0;\r\n                            if (A >>> 0 < j >>> 0) {\r\n                                c[30] = A;\r\n                                j = A\r\n                            }\r\n                            i = A + t | 0;\r\n                            a = 552;\r\n                            while (1) {\r\n                                if ((c[a >> 2] | 0) == (i | 0)) {\r\n                                    g = a;\r\n                                    i = a;\r\n                                    V = 210;\r\n                                    break\r\n                                }\r\n                                a = c[a + 8 >> 2] | 0;\r\n                                if (!a) {\r\n                                    i = 552;\r\n                                    break\r\n                                }\r\n                            }\r\n                            if ((V | 0) == 210) if (!(c[i + 12 >> 2] & 8)) {\r\n                                c[g >> 2] = A;\r\n                                o = i + 4 | 0;\r\n                                c[o >> 2] = (c[o >> 2] | 0) + t;\r\n                                o = A + 8 | 0;\r\n                                o = (o & 7 | 0) == 0 ? 0 : 0 - o & 7;\r\n                                l = A + (t + 8) | 0;\r\n                                l = (l & 7 | 0) == 0 ? 0 : 0 - l & 7;\r\n                                i = A + (l + t) | 0;\r\n                                p = o + s | 0;\r\n                                n = A + p | 0;\r\n                                a = i - (A + o) - s | 0;\r\n                                c[A + (o + 4) >> 2] = s | 3;\r\n                                i:do if ((i | 0) != (q | 0)) {\r\n                                    if ((i | 0) == (c[31] | 0)) {\r\n                                        V = (c[28] | 0) + a | 0;\r\n                                        c[28] = V;\r\n                                        c[31] = n;\r\n                                        c[A + (p + 4) >> 2] = V | 1;\r\n                                        c[A + (V + p) >> 2] = V;\r\n                                        break\r\n                                    }\r\n                                    b = t + 4 | 0;\r\n                                    h = c[A + (b + l) >> 2] | 0;\r\n                                    if ((h & 3 | 0) == 1) {\r\n                                        k = h & -8;\r\n                                        e = h >>> 3;\r\n                                        j:do if (h >>> 0 >= 256) {\r\n                                            d = c[A + ((l | 24) + t) >> 2] | 0;\r\n                                            g = c[A + (t + 12 + l) >> 2] | 0;\r\n                                            k:do if ((g | 0) == (i | 0)) {\r\n                                                f = l | 16;\r\n                                                g = A + (b + f) | 0;\r\n                                                h = c[g >> 2] | 0;\r\n                                                if (!h) {\r\n                                                    g = A + (f + t) | 0;\r\n                                                    h = c[g >> 2] | 0;\r\n                                                    if (!h) {\r\n                                                        R = 0;\r\n                                                        break\r\n                                                    }\r\n                                                }\r\n                                                while (1) {\r\n                                                    f = h + 20 | 0;\r\n                                                    e = c[f >> 2] | 0;\r\n                                                    if (e) {\r\n                                                        h = e;\r\n                                                        g = f;\r\n                                                        continue\r\n                                                    }\r\n                                                    f = h + 16 | 0;\r\n                                                    e = c[f >> 2] | 0;\r\n                                                    if (!e) break; else {\r\n                                                        h = e;\r\n                                                        g = f\r\n                                                    }\r\n                                                }\r\n                                                if (g >>> 0 < j >>> 0) ea(); else {\r\n                                                    c[g >> 2] = 0;\r\n                                                    R = h;\r\n                                                    break\r\n                                                }\r\n                                            } else {\r\n                                                f = c[A + ((l | 8) + t) >> 2] | 0;\r\n                                                do if (f >>> 0 >= j >>> 0) {\r\n                                                    j = f + 12 | 0;\r\n                                                    if ((c[j >> 2] | 0) != (i | 0)) break;\r\n                                                    h = g + 8 | 0;\r\n                                                    if ((c[h >> 2] | 0) != (i | 0)) break;\r\n                                                    c[j >> 2] = g;\r\n                                                    c[h >> 2] = f;\r\n                                                    R = g;\r\n                                                    break k\r\n                                                } while (0);\r\n                                                ea()\r\n                                            } while (0);\r\n                                            if (!d) break;\r\n                                            j = c[A + (t + 28 + l) >> 2] | 0;\r\n                                            h = 408 + (j << 2) | 0;\r\n                                            do if ((i | 0) != (c[h >> 2] | 0)) {\r\n                                                if (d >>> 0 < (c[30] | 0) >>> 0) ea();\r\n                                                h = d + 16 | 0;\r\n                                                if ((c[h >> 2] | 0) == (i | 0)) c[h >> 2] = R; else c[d + 20 >> 2] = R;\r\n                                                if (!R) break j\r\n                                            } else {\r\n                                                c[h >> 2] = R;\r\n                                                if (R) break;\r\n                                                c[27] = c[27] & ~(1 << j);\r\n                                                break j\r\n                                            } while (0);\r\n                                            j = c[30] | 0;\r\n                                            if (R >>> 0 < j >>> 0) ea();\r\n                                            c[R + 24 >> 2] = d;\r\n                                            i = l | 16;\r\n                                            h = c[A + (i + t) >> 2] | 0;\r\n                                            do if (h) if (h >>> 0 < j >>> 0) ea(); else {\r\n                                                c[R + 16 >> 2] = h;\r\n                                                c[h + 24 >> 2] = R;\r\n                                                break\r\n                                            } while (0);\r\n                                            i = c[A + (b + i) >> 2] | 0;\r\n                                            if (!i) break;\r\n                                            if (i >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                                c[R + 20 >> 2] = i;\r\n                                                c[i + 24 >> 2] = R;\r\n                                                break\r\n                                            }\r\n                                        } else {\r\n                                            h = c[A + ((l | 8) + t) >> 2] | 0;\r\n                                            g = c[A + (t + 12 + l) >> 2] | 0;\r\n                                            f = 144 + (e << 1 << 2) | 0;\r\n                                            do if ((h | 0) != (f | 0)) {\r\n                                                if (h >>> 0 >= j >>> 0 ? (c[h + 12 >> 2] | 0) == (i | 0) : 0) break;\r\n                                                ea()\r\n                                            } while (0);\r\n                                            if ((g | 0) == (h | 0)) {\r\n                                                c[26] = c[26] & ~(1 << e);\r\n                                                break\r\n                                            }\r\n                                            do if ((g | 0) == (f | 0)) M = g + 8 | 0; else {\r\n                                                if (g >>> 0 >= j >>> 0 ? (N = g + 8 | 0, (c[N >> 2] | 0) == (i | 0)) : 0) {\r\n                                                    M = N;\r\n                                                    break\r\n                                                }\r\n                                                ea()\r\n                                            } while (0);\r\n                                            c[h + 12 >> 2] = g;\r\n                                            c[M >> 2] = h\r\n                                        } while (0);\r\n                                        i = A + ((k | l) + t) | 0;\r\n                                        a = k + a | 0\r\n                                    }\r\n                                    i = i + 4 | 0;\r\n                                    c[i >> 2] = c[i >> 2] & -2;\r\n                                    c[A + (p + 4) >> 2] = a | 1;\r\n                                    c[A + (a + p) >> 2] = a;\r\n                                    i = a >>> 3;\r\n                                    if (a >>> 0 < 256) {\r\n                                        g = i << 1;\r\n                                        e = 144 + (g << 2) | 0;\r\n                                        f = c[26] | 0;\r\n                                        h = 1 << i;\r\n                                        do if (!(f & h)) {\r\n                                            c[26] = f | h;\r\n                                            S = 144 + (g + 2 << 2) | 0;\r\n                                            T = e\r\n                                        } else {\r\n                                            h = 144 + (g + 2 << 2) | 0;\r\n                                            g = c[h >> 2] | 0;\r\n                                            if (g >>> 0 >= (c[30] | 0) >>> 0) {\r\n                                                S = h;\r\n                                                T = g;\r\n                                                break\r\n                                            }\r\n                                            ea()\r\n                                        } while (0);\r\n                                        c[S >> 2] = n;\r\n                                        c[T + 12 >> 2] = n;\r\n                                        c[A + (p + 8) >> 2] = T;\r\n                                        c[A + (p + 12) >> 2] = e;\r\n                                        break\r\n                                    }\r\n                                    d = a >>> 8;\r\n                                    do if (!d) i = 0; else {\r\n                                        if (a >>> 0 > 16777215) {\r\n                                            i = 31;\r\n                                            break\r\n                                        }\r\n                                        T = (d + 1048320 | 0) >>> 16 & 8;\r\n                                        V = d << T;\r\n                                        S = (V + 520192 | 0) >>> 16 & 4;\r\n                                        V = V << S;\r\n                                        i = (V + 245760 | 0) >>> 16 & 2;\r\n                                        i = 14 - (S | T | i) + (V << i >>> 15) | 0;\r\n                                        i = a >>> (i + 7 | 0) & 1 | i << 1\r\n                                    } while (0);\r\n                                    h = 408 + (i << 2) | 0;\r\n                                    c[A + (p + 28) >> 2] = i;\r\n                                    c[A + (p + 20) >> 2] = 0;\r\n                                    c[A + (p + 16) >> 2] = 0;\r\n                                    g = c[27] | 0;\r\n                                    f = 1 << i;\r\n                                    if (!(g & f)) {\r\n                                        c[27] = g | f;\r\n                                        c[h >> 2] = n;\r\n                                        c[A + (p + 24) >> 2] = h;\r\n                                        c[A + (p + 12) >> 2] = n;\r\n                                        c[A + (p + 8) >> 2] = n;\r\n                                        break\r\n                                    }\r\n                                    d = c[h >> 2] | 0;\r\n                                    l:do if ((c[d + 4 >> 2] & -8 | 0) != (a | 0)) {\r\n                                        i = a << ((i | 0) == 31 ? 0 : 25 - (i >>> 1) | 0);\r\n                                        while (1) {\r\n                                            b = d + 16 + (i >>> 31 << 2) | 0;\r\n                                            h = c[b >> 2] | 0;\r\n                                            if (!h) break;\r\n                                            if ((c[h + 4 >> 2] & -8 | 0) == (a | 0)) {\r\n                                                U = h;\r\n                                                break l\r\n                                            } else {\r\n                                                i = i << 1;\r\n                                                d = h\r\n                                            }\r\n                                        }\r\n                                        if (b >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                            c[b >> 2] = n;\r\n                                            c[A + (p + 24) >> 2] = d;\r\n                                            c[A + (p + 12) >> 2] = n;\r\n                                            c[A + (p + 8) >> 2] = n;\r\n                                            break i\r\n                                        }\r\n                                    } else U = d; while (0);\r\n                                    d = U + 8 | 0;\r\n                                    b = c[d >> 2] | 0;\r\n                                    V = c[30] | 0;\r\n                                    if (b >>> 0 >= V >>> 0 & U >>> 0 >= V >>> 0) {\r\n                                        c[b + 12 >> 2] = n;\r\n                                        c[d >> 2] = n;\r\n                                        c[A + (p + 8) >> 2] = b;\r\n                                        c[A + (p + 12) >> 2] = U;\r\n                                        c[A + (p + 24) >> 2] = 0;\r\n                                        break\r\n                                    } else ea()\r\n                                } else {\r\n                                    V = (c[29] | 0) + a | 0;\r\n                                    c[29] = V;\r\n                                    c[32] = n;\r\n                                    c[A + (p + 4) >> 2] = V | 1\r\n                                } while (0);\r\n                                g = A + (o | 8) | 0;\r\n                                break d\r\n                            } else i = 552;\r\n                            while (1) {\r\n                                g = c[i >> 2] | 0;\r\n                                if (g >>> 0 <= q >>> 0 ? (h = c[i + 4 >> 2] | 0, f = g + h | 0, f >>> 0 > q >>> 0) : 0) break;\r\n                                i = c[i + 8 >> 2] | 0\r\n                            }\r\n                            i = g + (h + -39) | 0;\r\n                            i = g + (h + -47 + ((i & 7 | 0) == 0 ? 0 : 0 - i & 7)) | 0;\r\n                            j = q + 16 | 0;\r\n                            i = i >>> 0 < j >>> 0 ? q : i;\r\n                            h = i + 8 | 0;\r\n                            g = A + 8 | 0;\r\n                            g = (g & 7 | 0) == 0 ? 0 : 0 - g & 7;\r\n                            V = t + -40 - g | 0;\r\n                            c[32] = A + g;\r\n                            c[29] = V;\r\n                            c[A + (g + 4) >> 2] = V | 1;\r\n                            c[A + (t + -36) >> 2] = 40;\r\n                            c[33] = c[148];\r\n                            g = i + 4 | 0;\r\n                            c[g >> 2] = 27;\r\n                            c[h >> 2] = c[138];\r\n                            c[h + 4 >> 2] = c[139];\r\n                            c[h + 8 >> 2] = c[140];\r\n                            c[h + 12 >> 2] = c[141];\r\n                            c[138] = A;\r\n                            c[139] = t;\r\n                            c[141] = 0;\r\n                            c[140] = h;\r\n                            h = i + 28 | 0;\r\n                            c[h >> 2] = 7;\r\n                            if ((i + 32 | 0) >>> 0 < f >>> 0) do {\r\n                                V = h;\r\n                                h = h + 4 | 0;\r\n                                c[h >> 2] = 7\r\n                            } while ((V + 8 | 0) >>> 0 < f >>> 0);\r\n                            if ((i | 0) != (q | 0)) {\r\n                                a = i - q | 0;\r\n                                c[g >> 2] = c[g >> 2] & -2;\r\n                                c[q + 4 >> 2] = a | 1;\r\n                                c[i >> 2] = a;\r\n                                f = a >>> 3;\r\n                                if (a >>> 0 < 256) {\r\n                                    h = f << 1;\r\n                                    i = 144 + (h << 2) | 0;\r\n                                    g = c[26] | 0;\r\n                                    e = 1 << f;\r\n                                    if (g & e) {\r\n                                        d = 144 + (h + 2 << 2) | 0;\r\n                                        b = c[d >> 2] | 0;\r\n                                        if (b >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                            O = d;\r\n                                            P = b\r\n                                        }\r\n                                    } else {\r\n                                        c[26] = g | e;\r\n                                        O = 144 + (h + 2 << 2) | 0;\r\n                                        P = i\r\n                                    }\r\n                                    c[O >> 2] = q;\r\n                                    c[P + 12 >> 2] = q;\r\n                                    c[q + 8 >> 2] = P;\r\n                                    c[q + 12 >> 2] = i;\r\n                                    break\r\n                                }\r\n                                d = a >>> 8;\r\n                                if (d) if (a >>> 0 > 16777215) h = 31; else {\r\n                                    U = (d + 1048320 | 0) >>> 16 & 8;\r\n                                    V = d << U;\r\n                                    T = (V + 520192 | 0) >>> 16 & 4;\r\n                                    V = V << T;\r\n                                    h = (V + 245760 | 0) >>> 16 & 2;\r\n                                    h = 14 - (T | U | h) + (V << h >>> 15) | 0;\r\n                                    h = a >>> (h + 7 | 0) & 1 | h << 1\r\n                                } else h = 0;\r\n                                e = 408 + (h << 2) | 0;\r\n                                c[q + 28 >> 2] = h;\r\n                                c[q + 20 >> 2] = 0;\r\n                                c[j >> 2] = 0;\r\n                                d = c[27] | 0;\r\n                                b = 1 << h;\r\n                                if (!(d & b)) {\r\n                                    c[27] = d | b;\r\n                                    c[e >> 2] = q;\r\n                                    c[q + 24 >> 2] = e;\r\n                                    c[q + 12 >> 2] = q;\r\n                                    c[q + 8 >> 2] = q;\r\n                                    break\r\n                                }\r\n                                d = c[e >> 2] | 0;\r\n                                m:do if ((c[d + 4 >> 2] & -8 | 0) != (a | 0)) {\r\n                                    h = a << ((h | 0) == 31 ? 0 : 25 - (h >>> 1) | 0);\r\n                                    while (1) {\r\n                                        b = d + 16 + (h >>> 31 << 2) | 0;\r\n                                        e = c[b >> 2] | 0;\r\n                                        if (!e) break;\r\n                                        if ((c[e + 4 >> 2] & -8 | 0) == (a | 0)) {\r\n                                            Q = e;\r\n                                            break m\r\n                                        } else {\r\n                                            h = h << 1;\r\n                                            d = e\r\n                                        }\r\n                                    }\r\n                                    if (b >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                        c[b >> 2] = q;\r\n                                        c[q + 24 >> 2] = d;\r\n                                        c[q + 12 >> 2] = q;\r\n                                        c[q + 8 >> 2] = q;\r\n                                        break h\r\n                                    }\r\n                                } else Q = d; while (0);\r\n                                d = Q + 8 | 0;\r\n                                b = c[d >> 2] | 0;\r\n                                V = c[30] | 0;\r\n                                if (b >>> 0 >= V >>> 0 & Q >>> 0 >= V >>> 0) {\r\n                                    c[b + 12 >> 2] = q;\r\n                                    c[d >> 2] = q;\r\n                                    c[q + 8 >> 2] = b;\r\n                                    c[q + 12 >> 2] = Q;\r\n                                    c[q + 24 >> 2] = 0;\r\n                                    break\r\n                                } else ea()\r\n                            }\r\n                        } else {\r\n                            V = c[30] | 0;\r\n                            if ((V | 0) == 0 | A >>> 0 < V >>> 0) c[30] = A;\r\n                            c[138] = A;\r\n                            c[139] = t;\r\n                            c[141] = 0;\r\n                            c[35] = c[144];\r\n                            c[34] = -1;\r\n                            d = 0;\r\n                            do {\r\n                                V = d << 1;\r\n                                U = 144 + (V << 2) | 0;\r\n                                c[144 + (V + 3 << 2) >> 2] = U;\r\n                                c[144 + (V + 2 << 2) >> 2] = U;\r\n                                d = d + 1 | 0\r\n                            } while ((d | 0) != 32);\r\n                            V = A + 8 | 0;\r\n                            V = (V & 7 | 0) == 0 ? 0 : 0 - V & 7;\r\n                            U = t + -40 - V | 0;\r\n                            c[32] = A + V;\r\n                            c[29] = U;\r\n                            c[A + (V + 4) >> 2] = U | 1;\r\n                            c[A + (t + -36) >> 2] = 40;\r\n                            c[33] = c[148]\r\n                        } while (0);\r\n                        b = c[29] | 0;\r\n                        if (b >>> 0 > s >>> 0) {\r\n                            V = b - s | 0;\r\n                            c[29] = V;\r\n                            g = c[32] | 0;\r\n                            c[32] = g + s;\r\n                            c[g + (s + 4) >> 2] = V | 1;\r\n                            c[g + 4 >> 2] = s | 3;\r\n                            g = g + 8 | 0;\r\n                            break\r\n                        }\r\n                    }\r\n                    c[(Le() | 0) >> 2] = 12;\r\n                    g = 0\r\n                } else g = 0\r\n            } while (0);\r\n            return g | 0\r\n        }\r\n\r\n        function Ke(a) {\r\n            a = a | 0;\r\n            var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0,\r\n                r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0;\r\n            a:do if (a) {\r\n                f = a + -8 | 0;\r\n                k = c[30] | 0;\r\n                b:do if (f >>> 0 >= k >>> 0 ? (e = c[a + -4 >> 2] | 0, d = e & 3, (d | 0) != 1) : 0) {\r\n                    v = e & -8;\r\n                    w = a + (v + -8) | 0;\r\n                    do if (!(e & 1)) {\r\n                        f = c[f >> 2] | 0;\r\n                        if (!d) break a;\r\n                        l = -8 - f | 0;\r\n                        n = a + l | 0;\r\n                        o = f + v | 0;\r\n                        if (n >>> 0 < k >>> 0) break b;\r\n                        if ((n | 0) == (c[31] | 0)) {\r\n                            g = a + (v + -4) | 0;\r\n                            f = c[g >> 2] | 0;\r\n                            if ((f & 3 | 0) != 3) {\r\n                                B = n;\r\n                                g = o;\r\n                                break\r\n                            }\r\n                            c[28] = o;\r\n                            c[g >> 2] = f & -2;\r\n                            c[a + (l + 4) >> 2] = o | 1;\r\n                            c[w >> 2] = o;\r\n                            break a\r\n                        }\r\n                        d = f >>> 3;\r\n                        if (f >>> 0 < 256) {\r\n                            e = c[a + (l + 8) >> 2] | 0;\r\n                            g = c[a + (l + 12) >> 2] | 0;\r\n                            f = 144 + (d << 1 << 2) | 0;\r\n                            do if ((e | 0) != (f | 0)) {\r\n                                if (e >>> 0 >= k >>> 0 ? (c[e + 12 >> 2] | 0) == (n | 0) : 0) break;\r\n                                ea()\r\n                            } while (0);\r\n                            if ((g | 0) == (e | 0)) {\r\n                                c[26] = c[26] & ~(1 << d);\r\n                                B = n;\r\n                                g = o;\r\n                                break\r\n                            }\r\n                            do if ((g | 0) == (f | 0)) b = g + 8 | 0; else {\r\n                                if (g >>> 0 >= k >>> 0 ? (h = g + 8 | 0, (c[h >> 2] | 0) == (n | 0)) : 0) {\r\n                                    b = h;\r\n                                    break\r\n                                }\r\n                                ea()\r\n                            } while (0);\r\n                            c[e + 12 >> 2] = g;\r\n                            c[b >> 2] = e;\r\n                            B = n;\r\n                            g = o;\r\n                            break\r\n                        }\r\n                        h = c[a + (l + 24) >> 2] | 0;\r\n                        f = c[a + (l + 12) >> 2] | 0;\r\n                        do if ((f | 0) == (n | 0)) {\r\n                            e = a + (l + 20) | 0;\r\n                            f = c[e >> 2] | 0;\r\n                            if (!f) {\r\n                                e = a + (l + 16) | 0;\r\n                                f = c[e >> 2] | 0;\r\n                                if (!f) {\r\n                                    m = 0;\r\n                                    break\r\n                                }\r\n                            }\r\n                            while (1) {\r\n                                d = f + 20 | 0;\r\n                                b = c[d >> 2] | 0;\r\n                                if (b) {\r\n                                    f = b;\r\n                                    e = d;\r\n                                    continue\r\n                                }\r\n                                d = f + 16 | 0;\r\n                                b = c[d >> 2] | 0;\r\n                                if (!b) break; else {\r\n                                    f = b;\r\n                                    e = d\r\n                                }\r\n                            }\r\n                            if (e >>> 0 < k >>> 0) ea(); else {\r\n                                c[e >> 2] = 0;\r\n                                m = f;\r\n                                break\r\n                            }\r\n                        } else {\r\n                            e = c[a + (l + 8) >> 2] | 0;\r\n                            if ((e >>> 0 >= k >>> 0 ? (i = e + 12 | 0, (c[i >> 2] | 0) == (n | 0)) : 0) ? (j = f + 8 | 0, (c[j >> 2] | 0) == (n | 0)) : 0) {\r\n                                c[i >> 2] = f;\r\n                                c[j >> 2] = e;\r\n                                m = f;\r\n                                break\r\n                            }\r\n                            ea()\r\n                        } while (0);\r\n                        if (h) {\r\n                            f = c[a + (l + 28) >> 2] | 0;\r\n                            e = 408 + (f << 2) | 0;\r\n                            if ((n | 0) == (c[e >> 2] | 0)) {\r\n                                c[e >> 2] = m;\r\n                                if (!m) {\r\n                                    c[27] = c[27] & ~(1 << f);\r\n                                    B = n;\r\n                                    g = o;\r\n                                    break\r\n                                }\r\n                            } else {\r\n                                if (h >>> 0 < (c[30] | 0) >>> 0) ea();\r\n                                f = h + 16 | 0;\r\n                                if ((c[f >> 2] | 0) == (n | 0)) c[f >> 2] = m; else c[h + 20 >> 2] = m;\r\n                                if (!m) {\r\n                                    B = n;\r\n                                    g = o;\r\n                                    break\r\n                                }\r\n                            }\r\n                            e = c[30] | 0;\r\n                            if (m >>> 0 < e >>> 0) ea();\r\n                            c[m + 24 >> 2] = h;\r\n                            f = c[a + (l + 16) >> 2] | 0;\r\n                            do if (f) if (f >>> 0 < e >>> 0) ea(); else {\r\n                                c[m + 16 >> 2] = f;\r\n                                c[f + 24 >> 2] = m;\r\n                                break\r\n                            } while (0);\r\n                            f = c[a + (l + 20) >> 2] | 0;\r\n                            if (f) if (f >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                c[m + 20 >> 2] = f;\r\n                                c[f + 24 >> 2] = m;\r\n                                B = n;\r\n                                g = o;\r\n                                break\r\n                            } else {\r\n                                B = n;\r\n                                g = o\r\n                            }\r\n                        } else {\r\n                            B = n;\r\n                            g = o\r\n                        }\r\n                    } else {\r\n                        B = f;\r\n                        g = v\r\n                    } while (0);\r\n                    if (B >>> 0 < w >>> 0 ? (p = a + (v + -4) | 0, q = c[p >> 2] | 0, (q & 1 | 0) != 0) : 0) {\r\n                        if (!(q & 2)) {\r\n                            if ((w | 0) == (c[32] | 0)) {\r\n                                A = (c[29] | 0) + g | 0;\r\n                                c[29] = A;\r\n                                c[32] = B;\r\n                                c[B + 4 >> 2] = A | 1;\r\n                                if ((B | 0) != (c[31] | 0)) break a;\r\n                                c[31] = 0;\r\n                                c[28] = 0;\r\n                                break a\r\n                            }\r\n                            if ((w | 0) == (c[31] | 0)) {\r\n                                A = (c[28] | 0) + g | 0;\r\n                                c[28] = A;\r\n                                c[31] = B;\r\n                                c[B + 4 >> 2] = A | 1;\r\n                                c[B + A >> 2] = A;\r\n                                break a\r\n                            }\r\n                            j = (q & -8) + g | 0;\r\n                            d = q >>> 3;\r\n                            do if (q >>> 0 >= 256) {\r\n                                b = c[a + (v + 16) >> 2] | 0;\r\n                                g = c[a + (v | 4) >> 2] | 0;\r\n                                do if ((g | 0) == (w | 0)) {\r\n                                    f = a + (v + 12) | 0;\r\n                                    g = c[f >> 2] | 0;\r\n                                    if (!g) {\r\n                                        f = a + (v + 8) | 0;\r\n                                        g = c[f >> 2] | 0;\r\n                                        if (!g) {\r\n                                            x = 0;\r\n                                            break\r\n                                        }\r\n                                    }\r\n                                    while (1) {\r\n                                        e = g + 20 | 0;\r\n                                        d = c[e >> 2] | 0;\r\n                                        if (d) {\r\n                                            g = d;\r\n                                            f = e;\r\n                                            continue\r\n                                        }\r\n                                        e = g + 16 | 0;\r\n                                        d = c[e >> 2] | 0;\r\n                                        if (!d) break; else {\r\n                                            g = d;\r\n                                            f = e\r\n                                        }\r\n                                    }\r\n                                    if (f >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                        c[f >> 2] = 0;\r\n                                        x = g;\r\n                                        break\r\n                                    }\r\n                                } else {\r\n                                    f = c[a + v >> 2] | 0;\r\n                                    if ((f >>> 0 >= (c[30] | 0) >>> 0 ? (t = f + 12 | 0, (c[t >> 2] | 0) == (w | 0)) : 0) ? (u = g + 8 | 0, (c[u >> 2] | 0) == (w | 0)) : 0) {\r\n                                        c[t >> 2] = g;\r\n                                        c[u >> 2] = f;\r\n                                        x = g;\r\n                                        break\r\n                                    }\r\n                                    ea()\r\n                                } while (0);\r\n                                if (b) {\r\n                                    g = c[a + (v + 20) >> 2] | 0;\r\n                                    f = 408 + (g << 2) | 0;\r\n                                    if ((w | 0) == (c[f >> 2] | 0)) {\r\n                                        c[f >> 2] = x;\r\n                                        if (!x) {\r\n                                            c[27] = c[27] & ~(1 << g);\r\n                                            break\r\n                                        }\r\n                                    } else {\r\n                                        if (b >>> 0 < (c[30] | 0) >>> 0) ea();\r\n                                        g = b + 16 | 0;\r\n                                        if ((c[g >> 2] | 0) == (w | 0)) c[g >> 2] = x; else c[b + 20 >> 2] = x;\r\n                                        if (!x) break\r\n                                    }\r\n                                    g = c[30] | 0;\r\n                                    if (x >>> 0 < g >>> 0) ea();\r\n                                    c[x + 24 >> 2] = b;\r\n                                    f = c[a + (v + 8) >> 2] | 0;\r\n                                    do if (f) if (f >>> 0 < g >>> 0) ea(); else {\r\n                                        c[x + 16 >> 2] = f;\r\n                                        c[f + 24 >> 2] = x;\r\n                                        break\r\n                                    } while (0);\r\n                                    d = c[a + (v + 12) >> 2] | 0;\r\n                                    if (d) if (d >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                        c[x + 20 >> 2] = d;\r\n                                        c[d + 24 >> 2] = x;\r\n                                        break\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                e = c[a + v >> 2] | 0;\r\n                                g = c[a + (v | 4) >> 2] | 0;\r\n                                f = 144 + (d << 1 << 2) | 0;\r\n                                do if ((e | 0) != (f | 0)) {\r\n                                    if (e >>> 0 >= (c[30] | 0) >>> 0 ? (c[e + 12 >> 2] | 0) == (w | 0) : 0) break;\r\n                                    ea()\r\n                                } while (0);\r\n                                if ((g | 0) == (e | 0)) {\r\n                                    c[26] = c[26] & ~(1 << d);\r\n                                    break\r\n                                }\r\n                                do if ((g | 0) == (f | 0)) r = g + 8 | 0; else {\r\n                                    if (g >>> 0 >= (c[30] | 0) >>> 0 ? (s = g + 8 | 0, (c[s >> 2] | 0) == (w | 0)) : 0) {\r\n                                        r = s;\r\n                                        break\r\n                                    }\r\n                                    ea()\r\n                                } while (0);\r\n                                c[e + 12 >> 2] = g;\r\n                                c[r >> 2] = e\r\n                            } while (0);\r\n                            c[B + 4 >> 2] = j | 1;\r\n                            c[B + j >> 2] = j;\r\n                            if ((B | 0) == (c[31] | 0)) {\r\n                                c[28] = j;\r\n                                break a\r\n                            } else g = j\r\n                        } else {\r\n                            c[p >> 2] = q & -2;\r\n                            c[B + 4 >> 2] = g | 1;\r\n                            c[B + g >> 2] = g\r\n                        }\r\n                        f = g >>> 3;\r\n                        if (g >>> 0 < 256) {\r\n                            e = f << 1;\r\n                            g = 144 + (e << 2) | 0;\r\n                            b = c[26] | 0;\r\n                            d = 1 << f;\r\n                            if (b & d) {\r\n                                d = 144 + (e + 2 << 2) | 0;\r\n                                b = c[d >> 2] | 0;\r\n                                if (b >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                    y = d;\r\n                                    z = b\r\n                                }\r\n                            } else {\r\n                                c[26] = b | d;\r\n                                y = 144 + (e + 2 << 2) | 0;\r\n                                z = g\r\n                            }\r\n                            c[y >> 2] = B;\r\n                            c[z + 12 >> 2] = B;\r\n                            c[B + 8 >> 2] = z;\r\n                            c[B + 12 >> 2] = g;\r\n                            break a\r\n                        }\r\n                        b = g >>> 8;\r\n                        if (b) if (g >>> 0 > 16777215) f = 31; else {\r\n                            y = (b + 1048320 | 0) >>> 16 & 8;\r\n                            z = b << y;\r\n                            a = (z + 520192 | 0) >>> 16 & 4;\r\n                            z = z << a;\r\n                            f = (z + 245760 | 0) >>> 16 & 2;\r\n                            f = 14 - (a | y | f) + (z << f >>> 15) | 0;\r\n                            f = g >>> (f + 7 | 0) & 1 | f << 1\r\n                        } else f = 0;\r\n                        d = 408 + (f << 2) | 0;\r\n                        c[B + 28 >> 2] = f;\r\n                        c[B + 20 >> 2] = 0;\r\n                        c[B + 16 >> 2] = 0;\r\n                        b = c[27] | 0;\r\n                        e = 1 << f;\r\n                        c:do if (b & e) {\r\n                            d = c[d >> 2] | 0;\r\n                            d:do if ((c[d + 4 >> 2] & -8 | 0) != (g | 0)) {\r\n                                f = g << ((f | 0) == 31 ? 0 : 25 - (f >>> 1) | 0);\r\n                                while (1) {\r\n                                    b = d + 16 + (f >>> 31 << 2) | 0;\r\n                                    e = c[b >> 2] | 0;\r\n                                    if (!e) break;\r\n                                    if ((c[e + 4 >> 2] & -8 | 0) == (g | 0)) {\r\n                                        A = e;\r\n                                        break d\r\n                                    } else {\r\n                                        f = f << 1;\r\n                                        d = e\r\n                                    }\r\n                                }\r\n                                if (b >>> 0 < (c[30] | 0) >>> 0) ea(); else {\r\n                                    c[b >> 2] = B;\r\n                                    c[B + 24 >> 2] = d;\r\n                                    c[B + 12 >> 2] = B;\r\n                                    c[B + 8 >> 2] = B;\r\n                                    break c\r\n                                }\r\n                            } else A = d; while (0);\r\n                            b = A + 8 | 0;\r\n                            d = c[b >> 2] | 0;\r\n                            z = c[30] | 0;\r\n                            if (d >>> 0 >= z >>> 0 & A >>> 0 >= z >>> 0) {\r\n                                c[d + 12 >> 2] = B;\r\n                                c[b >> 2] = B;\r\n                                c[B + 8 >> 2] = d;\r\n                                c[B + 12 >> 2] = A;\r\n                                c[B + 24 >> 2] = 0;\r\n                                break\r\n                            } else ea()\r\n                        } else {\r\n                            c[27] = b | e;\r\n                            c[d >> 2] = B;\r\n                            c[B + 24 >> 2] = d;\r\n                            c[B + 12 >> 2] = B;\r\n                            c[B + 8 >> 2] = B\r\n                        } while (0);\r\n                        B = (c[34] | 0) + -1 | 0;\r\n                        c[34] = B;\r\n                        if (!B) b = 560; else break a;\r\n                        while (1) {\r\n                            b = c[b >> 2] | 0;\r\n                            if (!b) break; else b = b + 8 | 0\r\n                        }\r\n                        c[34] = -1;\r\n                        break a\r\n                    }\r\n                } while (0);\r\n                ea()\r\n            } while (0);\r\n            return\r\n        }\r\n\r\n        function Le() {\r\n            var a = 0;\r\n            if (!0) a = 600; else a = c[(da() | 0) + 60 >> 2] | 0;\r\n            return a | 0\r\n        }\r\n\r\n        function Me() {\r\n            var a = 0;\r\n            do if (!(c[144] | 0)) {\r\n                a = ca(30) | 0;\r\n                if (!(a + -1 & a)) {\r\n                    c[146] = a;\r\n                    c[145] = a;\r\n                    c[147] = -1;\r\n                    c[148] = -1;\r\n                    c[149] = 0;\r\n                    c[137] = 0;\r\n                    c[144] = (ha(0) | 0) & -16 ^ 1431655768;\r\n                    break\r\n                } else ea()\r\n            } while (0);\r\n            return\r\n        }\r\n\r\n        function Ne() {\r\n        }\r\n\r\n        function Oe(b, d, e) {\r\n            b = b | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0;\r\n            if ((e | 0) >= 4096) return ja(b | 0, d | 0, e | 0) | 0;\r\n            f = b | 0;\r\n            if ((b & 3) == (d & 3)) {\r\n                while (b & 3) {\r\n                    if (!e) return f | 0;\r\n                    a[b >> 0] = a[d >> 0] | 0;\r\n                    b = b + 1 | 0;\r\n                    d = d + 1 | 0;\r\n                    e = e - 1 | 0\r\n                }\r\n                while ((e | 0) >= 4) {\r\n                    c[b >> 2] = c[d >> 2];\r\n                    b = b + 4 | 0;\r\n                    d = d + 4 | 0;\r\n                    e = e - 4 | 0\r\n                }\r\n            }\r\n            while ((e | 0) > 0) {\r\n                a[b >> 0] = a[d >> 0] | 0;\r\n                b = b + 1 | 0;\r\n                d = d + 1 | 0;\r\n                e = e - 1 | 0\r\n            }\r\n            return f | 0\r\n        }\r\n\r\n        function Pe(b, c, d) {\r\n            b = b | 0;\r\n            c = c | 0;\r\n            d = d | 0;\r\n            var e = 0;\r\n            if ((c | 0) < (b | 0) & (b | 0) < (c + d | 0)) {\r\n                e = b;\r\n                c = c + d | 0;\r\n                b = b + d | 0;\r\n                while ((d | 0) > 0) {\r\n                    b = b - 1 | 0;\r\n                    c = c - 1 | 0;\r\n                    d = d - 1 | 0;\r\n                    a[b >> 0] = a[c >> 0] | 0\r\n                }\r\n                b = e\r\n            } else Oe(b, c, d) | 0;\r\n            return b | 0\r\n        }\r\n\r\n        function Qe(b, d, e) {\r\n            b = b | 0;\r\n            d = d | 0;\r\n            e = e | 0;\r\n            var f = 0, g = 0, h = 0, i = 0;\r\n            f = b + e | 0;\r\n            if ((e | 0) >= 20) {\r\n                d = d & 255;\r\n                h = b & 3;\r\n                i = d | d << 8 | d << 16 | d << 24;\r\n                g = f & ~3;\r\n                if (h) {\r\n                    h = b + 4 - h | 0;\r\n                    while ((b | 0) < (h | 0)) {\r\n                        a[b >> 0] = d;\r\n                        b = b + 1 | 0\r\n                    }\r\n                }\r\n                while ((b | 0) < (g | 0)) {\r\n                    c[b >> 2] = i;\r\n                    b = b + 4 | 0\r\n                }\r\n            }\r\n            while ((b | 0) < (f | 0)) {\r\n                a[b >> 0] = d;\r\n                b = b + 1 | 0\r\n            }\r\n            return b - e | 0\r\n        }\r\n\r\n// EMSCRIPTEN_END_FUNCS\r\n        return {\r\n            _free: Ke,\r\n            ___errno_location: Le,\r\n            _memmove: Pe,\r\n            _Decoder_Interface_Decode: xa,\r\n            _Decoder_Interface_exit: wa,\r\n            _Encoder_Interface_init: ya,\r\n            _memset: Qe,\r\n            _malloc: Je,\r\n            _memcpy: Oe,\r\n            _Encoder_Interface_exit: za,\r\n            _Decoder_Interface_init: va,\r\n            _Encoder_Interface_Encode: Aa,\r\n            runPostSets: Ne,\r\n            stackAlloc: ma,\r\n            stackSave: na,\r\n            stackRestore: oa,\r\n            establishStackSpace: pa,\r\n            setThrew: qa,\r\n            setTempRet0: ta,\r\n            getTempRet0: ua\r\n        }\r\n    })\r\n\r\n\r\n    // EMSCRIPTEN_END_ASM\r\n    (Module.asmGlobalArg, Module.asmLibraryArg, buffer);\r\n    var _Encoder_Interface_Encode = Module[\"_Encoder_Interface_Encode\"] = asm[\"_Encoder_Interface_Encode\"];\r\n    var _free = Module[\"_free\"] = asm[\"_free\"];\r\n    var runPostSets = Module[\"runPostSets\"] = asm[\"runPostSets\"];\r\n    var _memmove = Module[\"_memmove\"] = asm[\"_memmove\"];\r\n    var _Decoder_Interface_exit = Module[\"_Decoder_Interface_exit\"] = asm[\"_Decoder_Interface_exit\"];\r\n    var _Encoder_Interface_init = Module[\"_Encoder_Interface_init\"] = asm[\"_Encoder_Interface_init\"];\r\n    var _memset = Module[\"_memset\"] = asm[\"_memset\"];\r\n    var _malloc = Module[\"_malloc\"] = asm[\"_malloc\"];\r\n    var _memcpy = Module[\"_memcpy\"] = asm[\"_memcpy\"];\r\n    var _Decoder_Interface_Decode = Module[\"_Decoder_Interface_Decode\"] = asm[\"_Decoder_Interface_Decode\"];\r\n    var _Decoder_Interface_init = Module[\"_Decoder_Interface_init\"] = asm[\"_Decoder_Interface_init\"];\r\n    var _Encoder_Interface_exit = Module[\"_Encoder_Interface_exit\"] = asm[\"_Encoder_Interface_exit\"];\r\n    var ___errno_location = Module[\"___errno_location\"] = asm[\"___errno_location\"];\r\n    Runtime.stackAlloc = asm[\"stackAlloc\"];\r\n    Runtime.stackSave = asm[\"stackSave\"];\r\n    Runtime.stackRestore = asm[\"stackRestore\"];\r\n    Runtime.establishStackSpace = asm[\"establishStackSpace\"];\r\n    Runtime.setTempRet0 = asm[\"setTempRet0\"];\r\n    Runtime.getTempRet0 = asm[\"getTempRet0\"];\r\n\r\n    function ExitStatus(status) {\r\n        this.name = \"ExitStatus\";\r\n        this.message = \"Program terminated with exit(\" + status + \")\";\r\n        this.status = status\r\n    }\r\n\r\n    ExitStatus.prototype = new Error;\r\n    ExitStatus.prototype.constructor = ExitStatus;\r\n    var initialStackTop;\r\n    var preloadStartTime = null;\r\n    var calledMain = false;\r\n    dependenciesFulfilled = function runCaller() {\r\n        if (!Module[\"calledRun\"]) run();\r\n        if (!Module[\"calledRun\"]) dependenciesFulfilled = runCaller\r\n    };\r\n    Module[\"callMain\"] = Module.callMain = function callMain(args) {\r\n        assert(runDependencies == 0, \"cannot call main when async dependencies remain! (listen on __ATMAIN__)\");\r\n        assert(__ATPRERUN__.length == 0, \"cannot call main when preRun functions remain to be called\");\r\n        args = args || [];\r\n        ensureInitRuntime();\r\n        var argc = args.length + 1;\r\n\r\n        function pad() {\r\n            for (var i = 0; i < 4 - 1; i++) {\r\n                argv.push(0)\r\n            }\r\n        }\r\n\r\n        var argv = [allocate(intArrayFromString(Module[\"thisProgram\"]), \"i8\", ALLOC_NORMAL)];\r\n        pad();\r\n        for (var i = 0; i < argc - 1; i = i + 1) {\r\n            argv.push(allocate(intArrayFromString(args[i]), \"i8\", ALLOC_NORMAL));\r\n            pad()\r\n        }\r\n        argv.push(0);\r\n        argv = allocate(argv, \"i32\", ALLOC_NORMAL);\r\n        initialStackTop = Runtime.stackSave();\r\n        try {\r\n            var ret = Module[\"_main\"](argc, argv, 0);\r\n            exit(ret, true)\r\n        } catch (e) {\r\n            if (e instanceof ExitStatus) {\r\n                return\r\n            } else if (e == \"SimulateInfiniteLoop\") {\r\n                Module[\"noExitRuntime\"] = true;\r\n                Runtime.stackRestore(initialStackTop);\r\n                return\r\n            } else {\r\n                if (e && typeof e === \"object\" && e.stack) Module.printErr(\"exception thrown: \" + [e, e.stack]);\r\n                throw e\r\n            }\r\n        } finally {\r\n            calledMain = true\r\n        }\r\n    };\r\n\r\n    function run(args) {\r\n        args = args || Module[\"arguments\"];\r\n        if (preloadStartTime === null) preloadStartTime = Date.now();\r\n        if (runDependencies > 0) {\r\n            return\r\n        }\r\n        preRun();\r\n        if (runDependencies > 0) return;\r\n        if (Module[\"calledRun\"]) return;\r\n\r\n        function doRun() {\r\n            if (Module[\"calledRun\"]) return;\r\n            Module[\"calledRun\"] = true;\r\n            if (ABORT) return;\r\n            ensureInitRuntime();\r\n            preMain();\r\n            if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\r\n            if (Module[\"_main\"] && shouldRunNow) Module[\"callMain\"](args);\r\n            postRun()\r\n        }\r\n\r\n        if (Module[\"setStatus\"]) {\r\n            Module[\"setStatus\"](\"Running...\");\r\n            setTimeout((function () {\r\n                setTimeout((function () {\r\n                    Module[\"setStatus\"](\"\")\r\n                }), 1);\r\n                doRun()\r\n            }), 1)\r\n        } else {\r\n            doRun()\r\n        }\r\n    }\r\n\r\n    Module[\"run\"] = Module.run = run;\r\n\r\n    function exit(status, implicit) {\r\n        if (implicit && Module[\"noExitRuntime\"]) {\r\n            return\r\n        }\r\n        if (Module[\"noExitRuntime\"]) {\r\n        } else {\r\n            ABORT = true;\r\n            EXITSTATUS = status;\r\n            STACKTOP = initialStackTop;\r\n            exitRuntime();\r\n            if (Module[\"onExit\"]) Module[\"onExit\"](status)\r\n        }\r\n        if (ENVIRONMENT_IS_SHELL && typeof quit === \"function\") {\r\n            quit(status)\r\n        }\r\n        throw new ExitStatus(status)\r\n    }\r\n\r\n    Module[\"exit\"] = Module.exit = exit;\r\n    var abortDecorators = [];\r\n\r\n    function abort(what) {\r\n        if (what !== undefined) {\r\n            Module.print(what);\r\n            Module.printErr(what);\r\n            what = JSON.stringify(what)\r\n        } else {\r\n            what = \"\"\r\n        }\r\n        ABORT = true;\r\n        EXITSTATUS = 1;\r\n        var extra = \"\\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.\";\r\n        var output = \"abort(\" + what + \") at \" + stackTrace() + extra;\r\n        if (abortDecorators) {\r\n            abortDecorators.forEach((function (decorator) {\r\n                output = decorator(output, what)\r\n            }))\r\n        }\r\n        throw output\r\n    }\r\n\r\n    Module[\"abort\"] = Module.abort = abort;\r\n    if (Module[\"preInit\"]) {\r\n        if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\r\n        while (Module[\"preInit\"].length > 0) {\r\n            Module[\"preInit\"].pop()()\r\n        }\r\n    }\r\n    var shouldRunNow = true;\r\n    if (Module[\"noInitialRun\"]) {\r\n        shouldRunNow = false\r\n    }\r\n    Module[\"noExitRuntime\"] = true;\r\n    run()\r\n\r\n    Recorder.AMR=AMR;\r\n})();","/*\r\n录音 Recorder扩展，动态波形显示\r\nhttps://github.com/xiangyuecn/Recorder\r\n*/\r\n(function(){\r\n\r\nvar WaveView=function(set){\r\n\treturn new fn(set);\r\n};\r\nvar fn=function(set){\r\n\tvar This=this;\r\n\tvar o={\r\n\t\t/*\r\n\t\telem:\"css selector\" //自动显示到dom，并以此dom大小为显示大小\r\n\t\t\t//或者配置显示大小，手动把waveviewObj.elem显示到别的地方\r\n\t\t,width:0 //显示宽度\r\n\t\t,height:0 //显示高度\r\n\t\t\r\n\t\t以上配置二选一\r\n\t\t*/\r\n\t\t\r\n\t\tscale:2 //缩放系数，应为正整数，使用2(3? no!)倍宽高进行绘制，避免移动端绘制模糊\r\n\t\t,speed:8 //移动速度系数，越大越快\r\n\t\t\r\n\t\t,lineWidth:3 //线条基础粗细\r\n\t\t\r\n\t\t//渐变色配置：[位置，css颜色，...] 位置: 取值0.0-1.0之间\r\n\t\t,linear1:[0,\"rgba(150,96,238,1)\",0.2,\"rgba(170,79,249,1)\",1,\"rgba(53,199,253,1)\"] //线条渐变色1，从左到右\r\n\t\t,linear2:[0,\"rgba(209,130,255,0.6)\",1,\"rgba(53,199,255,0.6)\"] //线条渐变色2，从左到右\r\n\t\t,linearBg:[0,\"rgba(255,255,255,0.2)\",1,\"rgba(54,197,252,0.2)\"] //背景渐变色，从上到下\r\n\t};\r\n\tfor(var k in set){\r\n\t\to[k]=set[k];\r\n\t};\r\n\tThis.set=set=o;\r\n\t\r\n\tvar elem=set.elem;\r\n\tif(elem){\r\n\t\tif(typeof(elem)==\"string\"){\r\n\t\t\telem=document.querySelector(elem);\r\n\t\t}else if(elem.length){\r\n\t\t\telem=elem[0];\r\n\t\t};\r\n\t};\r\n\tif(elem){\r\n\t\tset.width=elem.offsetWidth;\r\n\t\tset.height=elem.offsetHeight;\r\n\t};\r\n\t\r\n\tvar scale=set.scale;\r\n\tvar width=set.width*scale;\r\n\tvar height=set.height*scale;\r\n\t\r\n\tvar thisElem=This.elem=document.createElement(\"div\");\r\n\tvar lowerCss=[\"\",\"transform-origin:0 0;\",\"transform:scale(\"+(1/scale)+\");\"];\r\n\tthisElem.innerHTML='<div style=\"width:'+set.width+'px;height:'+set.height+'px;overflow:hidden\"><div style=\"width:'+width+'px;height:'+height+'px;'+lowerCss.join(\"-webkit-\")+lowerCss.join(\"-ms-\")+lowerCss.join(\"-moz-\")+lowerCss.join(\"\")+'\"><canvas/></div></div>';\r\n\t\r\n\tvar canvas=This.canvas=thisElem.querySelector(\"canvas\");\r\n\tvar ctx=This.ctx=canvas.getContext(\"2d\");\r\n\tcanvas.width=width;\r\n\tcanvas.height=height;\r\n\t\r\n\tThis.linear1=This.genLinear(ctx,width,set.linear1);\r\n\tThis.linear2=This.genLinear(ctx,width,set.linear2);\r\n\tThis.linearBg=This.genLinear(ctx,height,set.linearBg,true);\r\n\t\r\n\tif(elem){\r\n\t\telem.innerHTML=\"\";\r\n\t\telem.appendChild(thisElem);\r\n\t};\r\n\t\r\n\tThis._phase=0;\r\n};\r\nfn.prototype=WaveView.prototype={\r\n\tgenLinear:function(ctx,size,colors,top){\r\n\t\tvar rtv=ctx.createLinearGradient(0,0,top?0:size,top?size:0);\r\n\t\tfor(var i=0;i<colors.length;){\r\n\t\t\trtv.addColorStop(colors[i++],colors[i++]);\r\n\t\t};\r\n\t\treturn rtv;\r\n\t}\r\n\t,genPath:function(frequency,amplitude,phase){\r\n\t\t//曲线生成算法参考 https://github.com/HaloMartin/MCVoiceWave/blob/f6dc28975fbe0f7fc6cc4dbc2e61b0aa5574e9bc/MCVoiceWave/MCVoiceWaveView.m#L268\r\n\t\tvar rtv=[];\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar scale=set.scale;\r\n\t\tvar width=set.width*scale;\r\n\t\tvar maxAmplitude=set.height*scale/2;\r\n\t\t\r\n\t\tfor(var x=0;x<width;x+=scale) {\r\n\t\t\tvar scaling=(1+Math.cos(Math.PI+(x/width)*2*Math.PI))/2;\r\n\t\t\tvar y=scaling*maxAmplitude*amplitude*Math.sin(2*Math.PI*(x/width)*frequency+phase)+maxAmplitude;\r\n\t\t\trtv.push(y);\r\n\t\t}\r\n\t\treturn rtv;\r\n\t}\r\n\t,input:function(pcmData,powerLevel,sampleRate){\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar ctx=This.ctx;\r\n\t\tvar scale=set.scale;\r\n\t\tvar width=set.width*scale;\r\n\t\tvar height=set.height*scale;\r\n\t\t\r\n\t\tvar speedx=set.speed*pcmData.length/sampleRate;\r\n\t\tvar phase=This._phase-=speedx;//位移速度\r\n\t\tvar amplitude=powerLevel/100;\r\n\t\tvar path1=This.genPath(2,amplitude,phase);\r\n\t\tvar path2=This.genPath(1.8,amplitude,phase+speedx*5);\r\n\t\t\r\n\t\t//开始绘制图形\r\n\t\tctx.clearRect(0,0,width,height);\r\n\t\t\r\n\t\t//绘制包围背景\r\n\t\tctx.beginPath();\r\n\t\tfor(var i=0,x=0;x<width;i++,x+=scale) {\r\n\t\t\tif (x==0) {\r\n\t\t\t\tctx.moveTo(x,path1[i]);\r\n\t\t\t}else {\r\n\t\t\t\tctx.lineTo(x,path1[i]);\r\n\t\t\t};\r\n\t\t};\r\n\t\ti--;\r\n\t\tfor(var x=width-1;x>=0;i--,x-=scale) {\r\n\t\t\tctx.lineTo(x,path2[i]);\r\n\t\t};\r\n\t\tctx.closePath();\r\n\t\tctx.fillStyle=This.linearBg;\r\n\t\tctx.fill();\r\n\t\t\r\n\t\t//绘制线\r\n\t\tThis.drawPath(path2,This.linear2);\r\n\t\tThis.drawPath(path1,This.linear1);\r\n\t}\r\n\t,drawPath:function(path,linear){\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar ctx=This.ctx;\r\n\t\tvar scale=set.scale;\r\n\t\tvar width=set.width*scale;\r\n\t\t\r\n\t\tctx.beginPath();\r\n\t\tfor(var i=0,x=0;x<width;i++,x+=scale) {\r\n\t\t\tif (x==0) {\r\n\t\t\t\tctx.moveTo(x,path[i]);\r\n\t\t\t}else {\r\n\t\t\t\tctx.lineTo(x,path[i]);\r\n\t\t\t};\r\n\t\t};\r\n\t\tctx.lineWidth=set.lineWidth*scale;\r\n\t\tctx.strokeStyle=linear;\r\n\t\tctx.stroke();\r\n\t}\r\n};\r\nRecorder.WaveView=WaveView;\r\n\r\n\t\r\n})();","/*\nmp3编码器，需带上mp3-engine.js引擎使用\nhttps://github.com/xiangyuecn/Recorder\n\n当然最佳推荐使用mp3、wav格式，代码也是优先照顾这两种格式\n浏览器支持情况\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats\n*/\n(function(){\n\"use strict\";\n\nRecorder.prototype.enc_mp3={\n\tstable:true\n\t,testmsg:\"采样率范围48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000\"\n};\n\n\n\n//*******标准UI线程转码支持函数************\n\nRecorder.prototype.mp3=function(res,True,False){\n\t\tvar This=this,set=This.set,size=res.length;\n\t\t\n\t\t//优先采用worker编码，太低版本下面用老方法提供兼容\n\t\tvar ctx=This.mp3_start(set);\n\t\tif(ctx){\n\t\t\tThis.mp3_encode(ctx,res);\n\t\t\tThis.mp3_complete(ctx,True,False,1);\n\t\t\treturn;\n\t\t};\n\t\t\n\t\t//https://github.com/wangpengfei15975/recorder.js\n\t\t//https://github.com/zhuker/lamejs bug:采样率必须和源一致，不然8k时没有声音，有问题fix：https://github.com/zhuker/lamejs/pull/11\n\t\tvar mp3=new Recorder.lamejs.Mp3Encoder(1,set.sampleRate,set.bitRate);\n\t\t\n\t\tvar blockSize=57600;\n\t\tvar data=[];\n\t\t\n\t\tvar idx=0,mp3Size=0;\n\t\tvar run=function(){\n\t\t\tif(idx<size){\n\t\t\t\tvar buf=mp3.encodeBuffer(res.subarray(idx,idx+blockSize));\n\t\t\t\tif(buf.length>0){\n\t\t\t\t\tmp3Size+=buf.buffer.byteLength;\n\t\t\t\t\tdata.push(buf.buffer);\n\t\t\t\t};\n\t\t\t\tidx+=blockSize;\n\t\t\t\tsetTimeout(run);//尽量避免卡ui\n\t\t\t}else{\n\t\t\t\tvar buf=mp3.flush();\n\t\t\t\tif(buf.length>0){\n\t\t\t\t\tmp3Size+=buf.buffer.byteLength;\n\t\t\t\t\tdata.push(buf.buffer);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t//去掉开头的标记信息帧\n\t\t\t\tvar meta=mp3TrimFix.fn(data,mp3Size,size,set.sampleRate);\n\t\t\t\tmp3TrimFixSetMeta(meta,set);\n\t\t\t\t\n\t\t\t\tTrue(new Blob(data,{type:\"audio/mp3\"}));\n\t\t\t};\n\t\t};\n\t\trun();\n\t}\n\n\n//********边录边转码(Worker)支持函数，如果提供就代表可能支持，否则只支持标准转码*********\n\n//全局共享一个Worker，后台串行执行。如果每次都开一个新的，编码速度可能会慢很多，可能是浏览器运行缓存的因素，并且可能瞬间产生多个并行操作占用大量cpu\nvar mp3Worker;\nRecorder.BindDestroy(\"mp3Worker\",function(){\n\tconsole.log(\"mp3Worker Destroy\");\n\tmp3Worker&&mp3Worker.terminate();\n\tmp3Worker=null;\n});\n\n\nRecorder.prototype.mp3_envCheck=function(envInfo,set){//检查环境下配置是否可用\n\tvar errMsg=\"\";\n\t//需要实时编码返回数据，此时需要检查环境是否有实时特性、和是否可实时编码\n\tif(set.takeoffEncodeChunk){\n\t\tif(!envInfo.canProcess){\n\t\t\terrMsg=envInfo.envName+\"环境不支持实时处理\";\n\t\t}else if(!newContext()){//浏览器不能创建实时编码环境\n\t\t\terrMsg=\"当前浏览器版本太低，无法实时处理\";\n\t\t};\n\t};\n\treturn errMsg;\n};\nRecorder.prototype.mp3_start=function(set){//如果返回null代表不支持\n\treturn newContext(set);\n};\nvar openList={id:0};\nvar newContext=function(setOrNull){\n\tvar worker=mp3Worker;\n\ttry{\n\t\tif(!worker){\n\t\t\tvar onmsg=function(e){\n\t\t\t\tvar ed=e.data;\n\t\t\t\tvar cur=wk_ctxs[ed.id];\n\t\t\t\tif(ed.action==\"init\"){\n\t\t\t\t\twk_ctxs[ed.id]={\n\t\t\t\t\t\tsampleRate:ed.sampleRate\n\t\t\t\t\t\t,bitRate:ed.bitRate\n\t\t\t\t\t\t,takeoff:ed.takeoff\n\t\t\t\t\t\t\n\t\t\t\t\t\t,mp3Size:0\n\t\t\t\t\t\t,pcmSize:0\n\t\t\t\t\t\t,encArr:[]\n\t\t\t\t\t\t,encObj:new wk_lame.Mp3Encoder(1,ed.sampleRate,ed.bitRate)\n\t\t\t\t\t};\n\t\t\t\t}else if(!cur){\n\t\t\t\t\treturn;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tswitch(ed.action){\n\t\t\t\tcase \"stop\":\n\t\t\t\t\tcur.encObj=null;\n\t\t\t\t\tdelete wk_ctxs[ed.id];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"encode\":\n\t\t\t\t\tcur.pcmSize+=ed.pcm.length;\n\t\t\t\t\tvar buf=cur.encObj.encodeBuffer(ed.pcm);\n\t\t\t\t\tif(buf.length>0){\n\t\t\t\t\t\tif(cur.takeoff){\n\t\t\t\t\t\t\tself.postMessage({action:\"takeoff\",id:ed.id,chunk:buf});\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tcur.mp3Size+=buf.buffer.byteLength;\n\t\t\t\t\t\t\tcur.encArr.push(buf.buffer);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"complete\":\n\t\t\t\t\tvar buf=cur.encObj.flush();\n\t\t\t\t\tif(buf.length>0){\n\t\t\t\t\t\tif(cur.takeoff){\n\t\t\t\t\t\t\tself.postMessage({action:\"takeoff\",id:ed.id,chunk:buf});\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tcur.mp3Size+=buf.buffer.byteLength;\n\t\t\t\t\t\t\tcur.encArr.push(buf.buffer);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t//去掉开头的标记信息帧\n\t\t\t\t\tvar meta=wk_mp3TrimFix.fn(cur.encArr,cur.mp3Size,cur.pcmSize,cur.sampleRate);\n\t\t\t\t\t\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\taction:ed.action\n\t\t\t\t\t\t,id:ed.id\n\t\t\t\t\t\t,blob:new Blob(cur.encArr,{type:\"audio/mp3\"})\n\t\t\t\t\t\t,meta:meta\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\t//创建一个新Worker\n\t\t\tvar jsCode=\");wk_lame();var wk_ctxs={};self.onmessage=\"+onmsg;\n\t\t\tjsCode+=\";var wk_mp3TrimFix={rm:\"+mp3TrimFix.rm+\",fn:\"+mp3TrimFix.fn+\"}\";\n\t\t\t\n\t\t\tvar lamejsCode=Recorder.lamejs.toString();\n\t\t\tvar url=(window.URL||webkitURL).createObjectURL(new Blob([\"var wk_lame=(\",lamejsCode,jsCode], {type:\"text/javascript\"}));\n\t\t\t\n\t\t\tworker=new Worker(url);\n\t\t\tsetTimeout(function(){\n\t\t\t\t(window.URL||webkitURL).revokeObjectURL(url);//必须要释放，不然每次调用内存都明显泄露内存\n\t\t\t},10000);//chrome 83 file协议下如果直接释放，将会使WebWorker无法启动\n\t\t\t\n\t\t\tworker.onmessage=function(e){\n\t\t\t\tvar data=e.data;\n\t\t\t\tvar ctx=openList[data.id];\n\t\t\t\tif(ctx){\n\t\t\t\t\tif(data.action==\"takeoff\"){\n\t\t\t\t\t\t//取走实时生成的mp3数据\n\t\t\t\t\t\tctx.set.takeoffEncodeChunk(new Uint8Array(data.chunk.buffer));\n\t\t\t\t\t}else{\n\t\t\t\t\t\t//complete\n\t\t\t\t\t\tctx.call&&ctx.call(data);\n\t\t\t\t\t\tctx.call=null;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\t\n\t\tvar ctx={worker:worker,set:setOrNull,takeoffQueue:[]};\n\t\tif(setOrNull){\n\t\t\tctx.id=++openList.id;\n\t\t\topenList[ctx.id]=ctx;\n\t\t\t\n\t\t\tworker.postMessage({\n\t\t\t\taction:\"init\"\n\t\t\t\t,id:ctx.id\n\t\t\t\t,sampleRate:setOrNull.sampleRate\n\t\t\t\t,bitRate:setOrNull.bitRate\n\t\t\t\t,takeoff:!!setOrNull.takeoffEncodeChunk\n\t\t\t\t\n\t\t\t\t,x:new Int16Array(5)//低版本浏览器不支持序列化TypedArray\n\t\t\t});\n\t\t}else{\n\t\t\tworker.postMessage({\n\t\t\t\tx:new Int16Array(5)//低版本浏览器不支持序列化TypedArray\n\t\t\t});\n\t\t};\n\t\t\n\t\t\n\t\tmp3Worker=worker;\n\t\treturn ctx;\n\t}catch(e){//出错了就不要提供了\n\t\tworker&&worker.terminate();\n\t\t\n\t\tconsole.error(e);\n\t\treturn null;\n\t};\n};\nRecorder.prototype.mp3_stop=function(startCtx){\n\tif(startCtx&&startCtx.worker){\n\t\tstartCtx.worker.postMessage({\n\t\t\taction:\"stop\"\n\t\t\t,id:startCtx.id\n\t\t});\n\t\tstartCtx.worker=null;\n\t\tdelete openList[startCtx.id];\n\t\t\n\t\t//疑似泄露检测 排除id\n\t\tvar opens=-1;\n\t\tfor(var k in openList){\n\t\t\topens++;\n\t\t};\n\t\tif(opens){\n\t\t\tconsole.warn(\"mp3 worker剩\"+opens+\"个在串行等待\");\n\t\t};\n\t};\n};\nRecorder.prototype.mp3_encode=function(startCtx,pcm){\n\tif(startCtx&&startCtx.worker){\n\t\tstartCtx.worker.postMessage({\n\t\t\taction:\"encode\"\n\t\t\t,id:startCtx.id\n\t\t\t,pcm:pcm\n\t\t});\n\t};\n};\nRecorder.prototype.mp3_complete=function(startCtx,True,False,autoStop){\n\tvar This=this;\n\tif(startCtx&&startCtx.worker){\n\t\tstartCtx.call=function(data){\n\t\t\tmp3TrimFixSetMeta(data.meta,startCtx.set);\n\t\t\tTrue(data.blob);\n\t\t\t\n\t\t\tif(autoStop){\n\t\t\t\tThis.mp3_stop(startCtx);\n\t\t\t};\n\t\t};\n\t\tstartCtx.worker.postMessage({\n\t\t\taction:\"complete\"\n\t\t\t,id:startCtx.id\n\t\t});\n\t}else{\n\t\tFalse(\"mp3编码器未打开\");\n\t};\n};\n\n\n\n\n\n\n\n//*******辅助函数************\n\n/*读取lamejs编码出来的mp3信息，只能读特定格式，如果读取失败返回null\nmp3Buffers=[ArrayBuffer,...]\nlength=mp3Buffers的数据二进制总长度\n*/\nRecorder.mp3ReadMeta=function(mp3Buffers,length){\n\t//kill babel-polyfill ES6 Number.parseInt 不然放到Worker里面找不到方法\n\tvar parseInt_ES3=typeof(window)==\"object\"?window.parseInt:self.parseInt;\n\t\n\tvar u8arr0=new Uint8Array(mp3Buffers[0]||[]);\n\tif(u8arr0.length<4){\n\t\treturn null;\n\t};\n\tvar byteAt=function(idx,u8){\n\t\treturn (\"0000000\"+((u8||u8arr0)[idx]||0).toString(2)).substr(-8);\n\t};\n\tvar b2=byteAt(0)+byteAt(1);\n\tvar b4=byteAt(2)+byteAt(3);\n\t\n\tif(!/^1{11}/.test(b2)){//未发现帧同步\n\t\treturn null;\n\t};\n\tvar version=({\"00\":2.5,\"10\":2,\"11\":1})[b2.substr(11,2)];\n\tvar layer=({\"01\":3})[b2.substr(13,2)];//仅支持Layer3\n\tvar sampleRate=({ //lamejs -> Tables.samplerate_table\n\t\t\"1\":[44100, 48000, 32000]\n\t\t,\"2\":[22050, 24000, 16000]\n\t\t,\"2.5\":[11025, 12000, 8000]\n\t})[version];\n\tsampleRate&&(sampleRate=sampleRate[parseInt_ES3(b4.substr(4,2),2)]);\n\tvar bitRate=[ //lamejs -> Tables.bitrate_table\n\t\t[0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160] //MPEG 2 2.5\n\t\t,[0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320]//MPEG 1\n\t][version==1?1:0][parseInt_ES3(b4.substr(0,4),2)];\n\t\n\tif(!version || !layer || !bitRate || !sampleRate){\n\t\treturn null;\n\t};\n\t\n\tvar duration=Math.round(length*8/bitRate);\n\tvar frame=layer==1?384:layer==2?1152:version==1?1152:576;\n\tvar frameDurationFloat=frame/sampleRate*1000;\n\tvar frameSize=Math.floor((frame*bitRate)/8/sampleRate*1000);\n\t\n\t//检测是否存在Layer3帧填充1字节。这里只获取第二帧的填充信息，首帧永远没有填充。其他帧可能隔一帧出现一个填充，或者隔很多帧出现一个填充；目测是取决于frameSize未舍入时的小数部分，因为有些采样率的frameSize会出现小数（11025、22050、44100 典型的除不尽），然后字节数无法表示这种小数，就通过一定步长来填充弥补小数部分丢失\n\tvar hasPadding=0,seek=0;\n\tfor(var i=0;i<mp3Buffers.length;i++){\n\t\t//寻找第二帧\n\t\tvar buf=mp3Buffers[i];\n\t\tseek+=buf.byteLength;\n\t\tif(seek>=frameSize+3){\n\t\t\tvar buf8=new Uint8Array(buf);\n\t\t\tvar idx=buf.byteLength-(seek-(frameSize+3)+1);\n\t\t\tvar ib4=byteAt(idx,buf8);\n\t\t\thasPadding=ib4.charAt(6)==\"1\";\n\t\t\tbreak;\n\t\t};\n\t};\n\tif(hasPadding){\n\t\tframeSize++;\n\t};\n\t\n\t\n\treturn {\n\t\tversion:version //1 2 2.5 -> MPEG1 MPEG2 MPEG2.5\n\t\t,layer:layer//3 -> Layer3\n\t\t,sampleRate:sampleRate //采样率 hz\n\t\t,bitRate:bitRate //比特率 kbps\n\t\t\n\t\t,duration:duration //音频时长 ms\n\t\t,size:length //总长度 byte\n\t\t,hasPadding:hasPadding //是否存在1字节填充，首帧永远没有，这个值其实代表的第二帧是否有填充，并不代表其他帧的\n\t\t,frameSize:frameSize //每帧最大长度，含可能存在的1字节padding byte\n\t\t,frameDurationFloat:frameDurationFloat //每帧时长，含小数 ms\n\t};\n};\n\n//去掉lamejs开头的标记信息帧，免得mp3解码出来的时长比pcm的长太多\nvar mp3TrimFix={//minfiy keep name\nrm:Recorder.mp3ReadMeta\n,fn:function(mp3Buffers,length,pcmLength,pcmSampleRate){\n\tvar meta=this.rm(mp3Buffers,length);\n\tif(!meta){\n\t\treturn {err:\"mp3非预定格式\"};\n\t};\n\tvar pcmDuration=Math.round(pcmLength/pcmSampleRate*1000);\n\t\n\t//开头多出这么多帧，移除掉；正常情况下最多为2帧\n\tvar num=Math.floor((meta.duration-pcmDuration)/meta.frameDurationFloat);\n\tif(num>0){\n\t\tvar size=num*meta.frameSize-(meta.hasPadding?1:0);//首帧没有填充，第二帧可能有填充，这里假设最多为2帧（测试并未出现3帧以上情况），其他帧不管，就算出现了并且导致了错误后面自动容错\n\t\tlength-=size;\n\t\tvar arr0=0,arrs=[];\n\t\tfor(var i=0;i<mp3Buffers.length;i++){\n\t\t\tvar arr=mp3Buffers[i];\n\t\t\tif(size<=0){\n\t\t\t\tbreak;\n\t\t\t};\n\t\t\tif(size>=arr.byteLength){\n\t\t\t\tsize-=arr.byteLength;\n\t\t\t\tarrs.push(arr);\n\t\t\t\tmp3Buffers.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}else{\n\t\t\t\tmp3Buffers[i]=arr.slice(size);\n\t\t\t\tarr0=arr;\n\t\t\t\tsize=0;\n\t\t\t};\n\t\t};\n\t\tvar checkMeta=this.rm(mp3Buffers,length);\n\t\tif(!checkMeta){\n\t\t\t//还原变更，应该不太可能会出现\n\t\t\tarr0&&(mp3Buffers[0]=arr0);\n\t\t\tfor(var i=0;i<arrs.length;i++){\n\t\t\t\tmp3Buffers.splice(i,0,arrs[i]);\n\t\t\t};\n\t\t\tmeta.err=\"fix后数据错误，已还原，错误原因不明\";\n\t\t};\n\t\t\n\t\tvar fix=meta.trimFix={};\n\t\tfix.remove=num;\n\t\tfix.removeDuration=Math.round(num*meta.frameDurationFloat);\n\t\tfix.duration=Math.round(length*8/meta.bitRate);\n\t};\n\treturn meta;\n}\n};\nvar mp3TrimFixSetMeta=function(meta,set){\n\tvar tag=\"MP3信息 \";\n\tif(meta.sampleRate&&meta.sampleRate!=set.sampleRate || meta.bitRate&&meta.bitRate!=set.bitRate){\n\t\tconsole.warn(tag+\"和设置的不匹配set:\"+set.bitRate+\"kbps \"+set.sampleRate+\"hz，已更新set:\"+meta.bitRate+\"kbps \"+meta.sampleRate+\"hz\",set);\n\t\tset.sampleRate=meta.sampleRate;\n\t\tset.bitRate=meta.bitRate;\n\t};\n\t\n\tvar trimFix=meta.trimFix;\n\tif(trimFix){\n\t\ttag+=\"Fix移除\"+trimFix.remove+\"帧\"+trimFix.removeDuration+\"ms -> \"+trimFix.duration+\"ms\";\n\t\tif(trimFix.remove>2){\n\t\t\tmeta.err=(meta.err?meta.err+\", \":\"\")+\"移除帧数过多\";\n\t\t};\n\t}else{\n\t\ttag+=(meta.duration||\"-\")+\"ms\";\n\t};\n\t\n\tif(meta.err){\n\t\tconsole.error(tag,meta.err,meta);\n\t}else{\n\t\tconsole.log(tag,meta);\n\t};\n};\n\n\n\t\n})();","/*\r\n录音 RecordApp： app统一录音接口支持，用于兼容原生应用、ios上的微信 等，需要和app-ios-weixin-support.js（支持IOS上的微信）、app-native-support.js（支持原生应用）配合使用，注：这几个support源码文件会自动加载，dist目录内已自动压缩合并到本文件中。\r\n\r\n特别注明：使用本功能虽然可以最大限度的兼容Android和IOS，但需ios-weixin需要后端提供支持，native需要app端提供支持，具体情况查看相应的文件。\r\n\r\n本功能独立于recorder-core.js，可以仅使用RecordApp作为入口，可以不关心recorder-core中的方法，因为RecordApp已经对他进行了一次封装，并且屏蔽了非通用的功能。\r\n\r\n注意：此文件并非拿来就能用的，需要改动【需实现】标注的地方；也可以不改动此文件，使用另外的初始化配置文件来进行配置，可参考app-support-sample目录内的配置文件。\r\n\r\nhttps://github.com/xiangyuecn/Recorder\r\n*/\r\n(function(factory){\r\n\tfactory(window);\r\n\t//umd returnExports.js\r\n\tif(typeof(define)=='function' && define.amd){\r\n\t\tdefine(function(){\r\n\t\t\treturn RecordApp;\r\n\t\t});\r\n\t};\r\n\tif(typeof(module)=='object' && module.exports){\r\n\t\tmodule.exports=RecordApp;\r\n\t};\r\n}(function(window){\r\n\"use strict\";\r\nvar IsWx=/MicroMessenger/i.test(navigator.userAgent);\r\n\r\n\r\n//文件基础目录，此目录内包含recorder-core.js、engine等。实际取值需自行根据自己的网站目录调整，或者加载本js前，设置RecordAppBaseFolder全局变量。\r\n//【需实现】\r\nvar BaseFolder=window.RecordAppBaseFolder || /*=:=*/ \"/Recorder/src/\" /*<@ \"/Recorder/dist/\" @>*/; //编译指令：源码时使用前面的文件夹，压缩时使用后面的文件夹\r\n\r\n\r\n//提供一个回调fn()，免得BaseFolder要在这个文件之前定义，其他值又要在之后定义的麻烦。\r\nvar OnInstalled=window.OnRecordAppInstalled;\r\n\r\n\r\n/*\r\n可能支持的底层平台列表实现配置，对应的都会有一个app-xxx-support.js文件(Default为使用recorder-core.js除外)\r\n\r\n每个实现配置内包含两个值：Support和Config\r\nSupport: fn( call(canUse) ) 判断此底层是否支持或开启，如果底层可用需回调call(true)选择使用这个底层平台，并忽略其他平台\r\nConfig: 此平台的配置选项，会传入app-xxx-support.js中，具体需要什么配置也一样参考这个js文件里面的说明\r\n*/\r\nvar Config_SupportPlatforms=[\r\n\t{\r\n\t\tKey:\"Native\"\r\n\t\t,Support:function(call){\r\n\t\t\tif(!App.AlwaysAppUseJS){\r\n\t\t\t\tNative.Config.IsApp(call);\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\t\t\t//不支持app原生录音\r\n\t\t\tcall(false);\r\n\t\t}\r\n\t\t,CanProcess:function(){\r\n\t\t\treturn true;//支持实时回调\r\n\t\t}\r\n\t\t,Config:{\r\n\t\t\tIsApp:function(call){\r\n\t\t\t\t//如需打开原生App支持，此方法【需实现】，此方法用来判断：1. 判断app是否是在环境中 2. app支持录音\r\n\t\t\t\tcall(false);//默认实现不支持app原生录音，支持就回调call(true)\r\n\t\t\t}\r\n\t\t\t,JsBridgeRequestPermission:function(success,fail){\r\n\t\t\t\t/*如需打开原生App支持，此方法【需实现】\r\n\t\t\t\t\tsuccess:fn() 有权限时回调\r\n\t\t\t\t\tfail:fn(errMsg,isUserNotAllow) 出错回调\r\n\t\t\t\t*/\r\n\t\t\t\tfail(\"JsBridgeRequestPermission未实现\");\r\n\t\t\t}\r\n\t\t\t,JsBridgeStart:function(set,success,fail){\r\n\t\t\t\t/*如需打开原生App支持，此方法【需实现】，app打开录音后原生层定时返回PCM数据时JsBridge js层需要回调set.onProcess。建议JsBridge增加一个Alive接口，为录音时定时心跳请求，如果网页超过10秒未调用此接口，app原生层自动停止录音，防止stop不能调用导致的资源泄露。\r\n\t\t\t\t\tset:RecordApp.Start的set参数\r\n\t\t\t\t\tsuccess:fn() 打开录音时回调\r\n\t\t\t\t\tfail:fn(errMsg) 开启录音出错时回调\r\n\t\t\t\t*/\r\n\t\t\t\tfail(\"JsBridgeStart未实现\");\r\n\t\t\t}\r\n\t\t\t,JsBridgeStop:function(success,fail){\r\n\t\t\t\t/*如需打开原生App支持，此方法【需实现】\r\n\t\t\t\t\tsuccess:fn() 结束录音时回调\r\n\t\t\t\t\tfail:fn(errMsg) 结束录音出错时回调\r\n\t\t\t\t*/\r\n\t\t\t\tfail(\"JsBridgeStop未实现\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t,paths:[//当在app中使用此实现时，会自动把这些js全部加载\r\n\t\t\t\t{url:BaseFolder+\"app-support/app-native-support.js\",check:function(){return !Native.IsInit}}\r\n\t\t\t]\r\n\t\t}\r\n\t\t,ExtendDefault:true //初始化时自动加载Recorder\r\n\t}\r\n\t,{\r\n\t\tKey:\"IOS-Weixin\"\r\n\t\t,Support:function(call){\r\n\t\t\tif(!App.AlwaysUseWeixinJS){\r\n\t\t\t\tif(Recorder.Support()){//浏览器支持录音就不走微信的渣渣接口了\r\n\t\t\t\t\tcall(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\t//如果是微信环境 就返回支持\r\n\t\t\tWeixin.Config.Enable(function(enable){\r\n\t\t\t\tcall(enable?IsWx:false);\r\n\t\t\t});\r\n\t\t}\r\n\t\t,CanProcess:function(){\r\n\t\t\treturn false;//不支持实时回调\r\n\t\t}\r\n\t\t,Config:{\r\n\t\t\tEnable:function(call){\r\n\t\t\t\t//是否启用微信支持，默认启用，如果要禁用就回调call(false)\r\n\t\t\t\tcall(true);\r\n\t\t\t}\r\n\t\t\t,WxReady:function(call){\r\n\t\t\t\t//【需实现】\r\n\t\t\t\t//此方法需要自行实现，需要在微信JsSDK wx.config好后调用call(wx,errMsg)函数，成功只需要提供wx对象，如果失败需要提供errMsg错误原因。微信JsSDK wx.config需使用到后端接口进行签名，文档: https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html 阅读：通过config接口注入权限验证配置、附录1-JS-SDK使用权限签名算法\r\n\t\t\t\tcall(null,\"未实现IOS-Weixin.Config.WxReady\");\r\n\t\t\t}\r\n\t\t\t,DownWxMedia:function(param,success,fail){\r\n\t\t\t\t/*【需实现】\r\n\t\t\t\t\t下载微信录音素材，服务器端接口文档： https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1444738727\r\n\t\t\t\t\tparam:{//接口调用参数\r\n\t\t\t\t\t\tmediaId：\"\" 录音接口上传得到的微信服务器上的ID，用于下载单个素材（如果录音分了多段，会循环调用DownWxMedia）；如果服务器会进行转码，请忽略这个参数\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttransform_mediaIds:\"mediaId,mediaId,mediaId\" 1个及以上mediaId，半角逗号分隔，用于服务器端进行转码用的，正常情况下这个参数用不到。如果服务器端会进行转码，需要把这些素材全部下载下来，然后按顺序合并为一个音频文件\r\n\t\t\t\t\t\ttransform_type:\"mp3\" 录音set中的类型，用于转码结果类型，正常情况下这个参数用不到。如果服务器端会进行转码，接口返回的mime必须是：audio/type(如：audio/mp3)。\r\n\t\t\t\t\t\ttransform_bitRate:123 建议的比特率，转码用的，同transform_type\r\n\t\t\t\t\t\ttransform_sampleRate:123 建议的采样率，转码用的，同transform_type\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t* 素材下载的amr音质很渣，也许可以通过高清接口获得清晰点的speex音频，那么transform_*参数就有用武之地；直接下载的amr只需用mediaId参数就可以了。\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsuccess： fn(obj) 下载成功返回结果\r\n\t\t\t\t\t\tobj:{\r\n\t\t\t\t\t\t\tmime:\"audio/amr\" //这个值是服务器端请求临时素材接口返回的Content-Type响应头，未转码必须是audio/amr；如果服务器进行了转码，是转码后的类型mime，并且提供duration\r\n\t\t\t\t\t\t\t,data:\"base64文本\" //服务器端下载到或转码的文件二进制内容进行base64编码\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t,duration:0 //音频时长，如果服务器端进行了转码，必须返回这个参数并且>0，否则不要提供或者直接给0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tfail: fn(msg) 下载出错回调\r\n\t\t\t\t*/\r\n\t\t\t\tfail(\"下载素材接口DownWxMedia未实现\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t,paths:[//当在微信中使用此实现时，会自动把这些js全部加载\r\n\t\t\t\t{url:BaseFolder+\"app-support/app-ios-weixin-support.js\",check:function(){return !Weixin.IsInit}}\r\n\t\t\t\t\r\n\t\t\t\t//amr解码引擎文件，因为微信临时素材接口返回的音频为amr格式，刚好有amr解码器，省去了服务器端的复杂性。amr解码器只是在Stop时才需要，因此可以在Stop前任何时候进行延迟加载\r\n\t\t\t\t,{url:BaseFolder+\"engine/beta-amr.js\",lazyBeforeStop:1,check:function(){return !Recorder.prototype.amr}}\r\n\t\t\t\t/*=:=*/\r\n\t\t\t\t\t,{url:BaseFolder+\"engine/beta-amr-engine.js\",lazyBeforeStop:1,check:function(){return !Recorder.AMR}}\r\n\t\t\t\t\t,{url:BaseFolder+\"engine/wav.js\",lazyBeforeStop:1,check:function(){return !Recorder.prototype.wav}}\r\n\t\t\t\t/*<@ @>*/\r\n\t\t\t]\r\n\t\t}\r\n\t\t,ExtendDefault:true //初始化时自动加载Recorder\r\n\t}\r\n\t,{\r\n\t\tKey:\"Default\"\r\n\t\t,Support:function(call){\r\n\t\t\t//默认的始终要支持\r\n\t\t\tcall(true);\r\n\t\t}\r\n\t\t,CanProcess:function(){\r\n\t\t\treturn true;//支持实时回调\r\n\t\t}\r\n\t\t,Config:{\r\n\t\t\tpaths:[//当使用默认实现时，会自动把这些js全部加载，如果core和编码器已手动加载，可以把此数组清空；另外需要其他编码格式的时候，直接把编码引擎加在后面（不需要mp3格式就删掉），会自动加载\r\n\t\t\t\t{url:BaseFolder+\"recorder-core.js\",check:function(){return !window.Recorder}}\r\n\t\t\t\t\r\n\t\t\t\t//自动加载需要的编码引擎，这里默认提供mp3格式。因为编码引擎只有在Start时才需要，因此可以在Start前任何时候进行延迟加载\r\n\t\t\t\t,{url:BaseFolder+\"engine/mp3.js\",lazyBeforeStart:1,check:function(){return !Recorder.prototype.mp3}}\r\n\t\t\t\t/*=:=*/ ,{url:BaseFolder+\"engine/mp3-engine.js\",lazyBeforeStart:1,check:function(){return !Recorder.lamejs}} /*<@ @>*/ //编译指令：压缩后mp3-engine已包含在了mp3.js中\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar Native=Config_SupportPlatforms[0];\r\nvar Weixin=Config_SupportPlatforms[1];\r\nvar Default=Config_SupportPlatforms[2];\r\n//给Default实现统一接口\r\nDefault.RequestPermission=function(success,fail){\r\n\tvar old=App.__Rec;\r\n\tif(old){\r\n\t\told.close();\r\n\t\tApp.__Rec=null;\r\n\t};\r\n\t\r\n\tvar rec=Recorder();\r\n\trec.open(function(){\r\n\t\t//rec.close(); keep stream Stop时再关，免得Start再次请求权限\r\n\t\tsuccess();\r\n\t},fail);\r\n};\r\nDefault.Start=function(set,success,fail){\r\n\tvar appRec=App.__Rec;\r\n\tif(appRec!=null){\r\n\t\tappRec.close();//stream已经被使用过了，close更好\r\n\t};\r\n\tApp.__Rec=appRec=Recorder(set);\r\n\tappRec.appSet=set;\r\n\tappRec.open(function(){\r\n\t\tappRec.start();\r\n\t\tsuccess();\r\n\t},function(msg){\r\n\t\tfail(msg);\r\n\t});\r\n};\r\nDefault.Stop=function(success,fail){\r\n\tvar appRec=App.__Rec;\r\n\tif(!appRec){\r\n\t\tif(Recorder.IsOpen()){\r\n\t\t\t//释放检测权限时已打开的录音\r\n\t\t\tappRec=Recorder();\r\n\t\t\tappRec.open();\r\n\t\t\tappRec.close();\r\n\t\t};\r\n\t\tfail(\"未开始录音\");\r\n\t\treturn;\r\n\t};\r\n\tvar end=function(){\r\n\t\tappRec.close();\r\n\t\t//把可能变更的配置写回去\r\n\t\tfor(var k in appRec.set){\r\n\t\t\tappRec.appSet[k]=appRec.set[k];\r\n\t\t};\r\n\t};\r\n\t\r\n\tvar stopFail=function(msg){\r\n\t\tend();\r\n\t\tfail(msg);\r\n\t\tApp.__Rec=null;\r\n\t};\r\n\tif(!success){\r\n\t\tstopFail(\"仅清理资源\");\r\n\t\treturn;\r\n\t};\r\n\tappRec.stop(function(blob,duration){\r\n\t\tend();\r\n\t\tsuccess(blob,duration);\r\n\t\tApp.__Rec=null;\r\n\t},stopFail);\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar App={\r\nLM:\"2020-5-16 18:35:30\"\r\n,Current:0\r\n,IsWx:IsWx\r\n,BaseFolder:BaseFolder\r\n,UseLazyLoad:true //默认为true开启部分非核心组件的延迟加载，不会阻塞Install，Install后通过RecordApp.Current.OnLazyReady事件来确定组件是否已全部加载；如果设为false，将忽略组件的延迟加载属性，Install时会将所有组件一次性加载完成后才会Install成功\r\n,AlwaysUseWeixinJS:false //测试用的，微信里面总是使用微信的接口，方便Android上调试\r\n,AlwaysAppUseJS:false //测试用的，App里面总是使用网页版录音，用于测试App里面的网页兼容性\r\n,Platforms:{\r\n\tNative:Native\r\n\t,Weixin:Weixin\r\n\t,Default:Default\r\n}\r\n,Js:function(urls,True,False,win){\r\n\twin=win||window;\r\n\tvar doc=win.document;\r\n\tvar load=function(idx){\r\n\t\tif(idx>=urls.length){\r\n\t\t\tTrue();\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tvar itm=urls[idx];\r\n\t\tvar url=itm.url;\r\n\t\tif(itm.check()===false){\r\n\t\t\tload(idx+1);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\tvar elem=doc.createElement(\"script\");\r\n\t\telem.setAttribute(\"type\",\"text/javascript\");\r\n\t\telem.setAttribute(\"src\",url);\r\n\t\telem.onload=function(){\r\n\t\t\tload(idx+1);\r\n\t\t};\r\n\t\telem.onerror=function(e){\r\n\t\t\tFalse(\"请求失败:\"+(e.message||\"-\")+\"，\"+url);\r\n\t\t};\r\n\t\tdoc.body.appendChild(elem);\r\n\t};\r\n\tload(0);\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n初始化安装，可反复调用\r\nsuccess: fn() 初始化成功\r\nfail: fn(msg) 初始化失败\r\n*/\r\n,Install:function(success,fail){\r\n\t//因为此操作是异步的，为了避免竞争Current资源，此代码保证得到结果前只会发起一次调用\r\n\tvar reqs=App.__reqs||(App.__reqs=[]);\r\n\treqs.push({s:success,f:fail});\r\n\tsuccess=function(){\r\n\t\tcall(\"s\",arguments);\r\n\t};\r\n\tfail=function(errMsg,isUserNotAllow){\r\n\t\tcall(\"f\",arguments);\r\n\t};\r\n\tvar call=function(fn,args){\r\n\t\tfor(var i=0;i<reqs.length;i++){\r\n\t\t\treqs[i][fn].apply(null,args);\r\n\t\t};\r\n\t\treqs.length=0;\r\n\t};\r\n\tif(reqs.length>1){\r\n\t\treturn;\r\n\t};\r\n\t\r\n\t\r\n\tvar readConfigPaths=function(platform,jsLazyStart,jsLazyStop){\r\n\t\tvar config=platform.Config;\r\n\t\tvar paths=config.paths,jsArr=[];\r\n\t\tfor(var i=0,o;i<paths.length;i++){\r\n\t\t\to=paths[i];\r\n\t\t\tif(App.UseLazyLoad){\r\n\t\t\t\tif(o.lazyBeforeStart){\r\n\t\t\t\t\tjsLazyStart&&jsLazyStart.push(o);\r\n\t\t\t\t}else if(o.lazyBeforeStop){\r\n\t\t\t\t\tjsLazyStop&&jsLazyStop.push(o);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tjsArr.push(o);\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\tjsArr.push(o);\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn jsArr;\r\n\t};\r\n\tvar idx=0;\r\n\tvar initPlatform=function(platform,end){\r\n\t\t//此平台已完成初始化\r\n\t\tif(platform.IsInit){\r\n\t\t\tend();\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\tvar jsArr=readConfigPaths(platform);\r\n\t\tconsole.log(\"Install \"+platform.Key+\"...\",jsArr);\r\n\t\t\r\n\t\t//加载需要的支持js文件\r\n\t\tApp.Js(jsArr,function(){\r\n\t\t\tplatform.IsInit=true;\r\n\t\t\tend();\r\n\t\t},function(msg){\r\n\t\t\tmsg=\"初始化js库失败：\"+msg;\r\n\t\t\tconsole.log(msg,platform);\r\n\t\t\tfail(msg);\r\n\t\t});\r\n\t};\r\n\tvar tryLazyLoad=function(platform,first){\r\n\t\t//尝试进行延迟加载，可能已经加载完成、未加载、加载错误\r\n\t\tvar jsLazyStart=[],jsLazyStop=[];\r\n\t\treadConfigPaths(platform,jsLazyStart,jsLazyStop);\r\n\t\tif(platform.ExtendDefault){\r\n\t\t\treadConfigPaths(Default,jsLazyStart,jsLazyStop);\r\n\t\t};\r\n\t\t\r\n\t\tvar data=platform.LazyReady;\r\n\t\tif(!data){\r\n\t\t\tdata=platform.LazyReady={\r\n\t\t\t\tfsta:[] //start bind functions\r\n\t\t\t\t,fsto:[] //stop bind functions\r\n\t\t\t\t,fall:[] //all ready bind functions\r\n\t\t\t\t,usta:0 //start status 0未加载 1加载失败 2加载中 3加载成功\r\n\t\t\t\t,usto:0 //stop status\r\n\t\t\t\t,msta:\"\" //start error msg\r\n\t\t\t\t,msto:\"\" //stop error msg\r\n\t\t\t};\r\n\t\t\tplatform.LazyAtStart=function(fn){\r\n\t\t\t\tstartLoadEnd()?fn(data.msta):data.fsta.push(fn);\r\n\t\t\t};\r\n\t\t\tplatform.LazyAtStop=function(fn){\r\n\t\t\t\tstopLoadEnd()?fn(data.msto):data.fsto.push(fn);\r\n\t\t\t};\r\n\t\t\tplatform.OnLazyReady=function(fn){\r\n\t\t\t\tstartLoadEnd()&&stopLoadEnd()?fn(data.msta||data.msto):data.fall.push(fn);\r\n\t\t\t};\r\n\t\t};\r\n\t\tvar startLoadEnd=function(){return data.usta==1||data.usta==3};\r\n\t\tvar stopLoadEnd=function(){return data.usto==1||data.usto==3};\r\n\t\t\r\n\t\tvar statusKey=first?\"usta\":\"usto\";\r\n\t\tvar msgKey=first?\"msta\":\"msto\";\r\n\t\tvar fnsKey=first?\"fsta\":\"fsto\";\r\n\t\t\r\n\t\tvar loadNext=function(loadEnd){\r\n\t\t\tif(loadEnd){\r\n\t\t\t\tconsole.log(\"Lazy Load:\"+statusKey);\r\n\t\t\t};\r\n\t\t\tvar callBinds=function(key,err){\r\n\t\t\t\tvar fns=data[key];\r\n\t\t\t\tdata[key]=[];//先清空再说\r\n\t\t\t\tfor(var i=0;i<fns.length;i++){\r\n\t\t\t\t\tfns[i](err);\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\tif(data[statusKey]!=2){\r\n\t\t\t\tcallBinds(fnsKey,data[msgKey]);\r\n\t\t\t};\r\n\t\t\tif(startLoadEnd()&&stopLoadEnd()){\r\n\t\t\t\tcallBinds(\"fall\",data.msta||data.msto);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif(first){\r\n\t\t\t\ttryLazyLoad(platform);\r\n\t\t\t};\r\n\t\t};\r\n\t\tif(data[statusKey]<2){\r\n\t\t\tdata[msgKey]=\"\";\r\n\t\t\tdata[statusKey]=2;\r\n\t\t\tvar jsArr=first?jsLazyStart:jsLazyStop;\r\n\t\t\tconsole.log(\"Lazy Load...\"+statusKey,jsArr);\r\n\t\t\tApp.Js(jsArr,function(){\r\n\t\t\t\tdata[statusKey]=3;\r\n\t\t\t\tloadNext(1);\r\n\t\t\t},function(msg){\r\n\t\t\t\tmsg=\"加载js库失败[\"+statusKey+\"]：\"+msg;\r\n\t\t\t\tconsole.log(msg,platform);\r\n\t\t\t\tdata[statusKey]=1;\r\n\t\t\t\tdata[msgKey]=msg;\r\n\t\t\t\tloadNext(1);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tloadNext();\r\n\t\t};\r\n\t};\r\n\tvar next=function(cur){\r\n\t\t//遍历选择支持的底层平台\r\n\t\tif(!cur){\r\n\t\t\tcur=Config_SupportPlatforms[idx];\t\t\t\r\n\t\t\tvar initEnd=function(){\r\n\t\t\t\tcur.Support(function(canUse){\r\n\t\t\t\t\tif(canUse){\r\n\t\t\t\t\t\tinitPlatform(cur,function(){\r\n\t\t\t\t\t\t\tnext(cur);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tidx++;\r\n\t\t\t\t\t\tnext();\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t//需要Default平台支持，先初始化再说\r\n\t\t\tif(cur.ExtendDefault){\r\n\t\t\t\tinitPlatform(Default,initEnd);\r\n\t\t\t}else{\r\n\t\t\t\tinitEnd();\r\n\t\t\t};\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\t//先注册延迟加载事件函数，开始进行延迟加载\r\n\t\ttryLazyLoad(cur,1);\r\n\t\t\r\n\t\t//已获取支持的底层平台\r\n\t\tconsole.log(\"Install Success\");\r\n\t\tApp.Current=cur;\r\n\t\tsuccess();\r\n\t};\r\n\t\r\n\t\r\n\tnext(App.Current);\r\n}\r\n\r\n\r\n/*\r\n获取底层平台录音过程中会使用用来处理实时数据的Recorder对象实例rec，如果底层录音过程中不实用Recorder进行数据的实时处理，将返回null。除了微信平台外，其他平台均会返回rec，但Start调用前和Stop调用后均会返回null，只有Start后和Stop彻底完成前之间才会返回rec。\r\n\r\nrec中的方法不一定都能使用，主要用来获取内部缓冲用的，比如实时清理缓冲。\r\n*/\r\n,GetStartUsedRecOrNull:function(){\r\n\treturn App.__Rec||null;\r\n}\r\n\r\n\r\n/*\r\n请求录音权限，如果当前环境不支持录音或用户拒绝将调用错误回调，调用start前需先至少调用一次此方法；请求权限后如果不使用了，不管有没有调用Start，至少要调用一次Stop来清理可能持有的资源。\r\nsuccess:fn() 有权限时回调\r\nfail:fn(errMsg,isUserNotAllow) 没有权限或者不能录音时回调，如果是用户主动拒绝的录音权限，除了有错误消息外，isUserNotAllow=true，方便程序中做不同的提示，提升用户主动授权概率\r\n*/\r\n,RequestPermission:function(success,fail){\r\n\tApp.Install(function(){\r\n\t\tvar cur=App.Current;\r\n\t\tconsole.log(\"开始请求\"+cur.Key+\"录音权限\");\r\n\t\t\r\n\t\tcur.RequestPermission(function(){\r\n\t\t\tconsole.log(\"录音权限请求成功\");\r\n\t\t\tsuccess&&success();\r\n\t\t},function(errMsg,isUserNotAllow){\r\n\t\t\tconsole.log(\"录音权限请求失败：\"+errMsg+\",isUserNotAllow:\"+isUserNotAllow);\r\n\t\t\tfail&&fail(errMsg,isUserNotAllow);\r\n\t\t});\r\n\t},function(err){\r\n\t\tconsole.log(\"Install失败\",err);\r\n\t\tfail&&fail(err);\r\n\t});\r\n}\r\n/*\r\n开始录音，需先调用RequestPermission\r\n注：如果对应的底层实现可以实时返回PCM数据，Platform应调用set.onProcess方法。注意如果回调速率超过1秒10次，建议限制成一秒10次(可丢弃未回调数据)\r\n\r\nset：设置默认值：{\r\n\ttype:\"mp3\"//最佳输出格式，如果底层实现能够支持就应当优先返回此格式\r\n\tsampleRate:16000//最佳采样率hz\r\n\tbitRate:16//最佳比特率kbps\r\n\tonProcess:NOOP //如果当前环境支持实时回调（RecordApp.Current.CanProcess()），接收到录音数据时的回调函数：fn(buffers,powerLevel,bufferDuration,bufferSampleRate)\r\n} 注意：此对象会被修改，因为平台实现时需要把实际使用的值存入此对象\r\nsuccess:fn() 打开录音时回调\r\nfail:fn(errMsg) 开启录音出错时回调\r\n*/\r\n,Start:function(set,success,fail){\r\n\tvar cur=App.Current;\r\n\tif(!cur){\r\n\t\tfail&&fail(\"需先调用RequestPermission\");\r\n\t\treturn;\r\n\t};\r\n\tset||(set={});\r\n\tvar obj={\r\n\t\ttype:\"mp3\"\r\n\t\t,sampleRate:16000\r\n\t\t,bitRate:16\r\n\t\t,onProcess:function(){}\r\n\t};\r\n\tfor(var k in obj){\r\n\t\tset[k]||(set[k]=obj[k]);\r\n\t};\r\n\t\r\n\t//先执行一下环境配置检查\r\n\tvar checkRec=Recorder(set);\r\n\tvar checkMsg=checkRec.envCheck({envName:cur.Key,canProcess:cur.CanProcess()});\r\n\tif(checkMsg){\r\n\t\tfail&&fail(\"不能录音：\"+checkMsg);\r\n\t\treturn;\r\n\t};\r\n\t\r\n\tvar readyWait=0;\r\n\tcur.LazyAtStart(function(err){\r\n\t\tif(readyWait){\r\n\t\t\tconsole.warn(\"Start Wait Ready \"+(Date.now()-readyWait)+\"ms\");\r\n\t\t};\r\n\t\treadyWait=1;\r\n\t\t\r\n\t\tvar failCall=function(msg){\r\n\t\t\tconsole.log(\"开始录音失败：\"+msg);\r\n\t\t\tfail&&fail(msg);\r\n\t\t};\r\n\t\tif(err){\r\n\t\t\tfailCall(err);\r\n\t\t}else{\r\n\t\t\tcur.Start(set,function(){\r\n\t\t\t\tconsole.log(\"开始录音\",set);\r\n\t\t\t\tsuccess&&success();\r\n\t\t\t},failCall);\r\n\t\t};\r\n\t});\r\n\tif(!readyWait){\r\n\t\tconsole.warn(\"Start Wait Ready...\");\r\n\t};\r\n\treadyWait=Date.now();\r\n}\r\n/*\r\n结束录音\r\n\r\nsuccess:fn(blob,duration)\t结束录音时回调\r\n\tblob:Blob 录音数据audio/mp3|wav...格式\r\n\tduration:123 //音频持续时间\r\n\t\r\nfail:fn(errMsg) 录音出错时回调\r\n\r\n本方法可以用来清理持有的资源，如果不提供success参数=null时，将不会进行音频编码操作，只进行清理完可能持有的资源后走fail回调\r\n*/\r\n,Stop:function(success,fail){\r\n\tvar cur=App.Current;\r\n\tif(!cur){\r\n\t\tfail&&fail(\"需先调用RequestPermission\");\r\n\t\treturn;\r\n\t};\r\n\t\r\n\tvar readyWait=0;\r\n\tcur.LazyAtStop(function(err){\r\n\t\tif(readyWait){\r\n\t\t\tconsole.warn(\"Stop Wait Ready \"+(Date.now()-readyWait)+\"ms\");\r\n\t\t};\r\n\t\treadyWait=1;\r\n\t\t\r\n\t\tvar failCall=function(msg){\r\n\t\t\tconsole.log(\"结束录音失败：\"+msg);\r\n\t\t\tfail&&fail(msg);\r\n\t\t};\r\n\t\tif(err){\r\n\t\t\tfailCall(err);\r\n\t\t}else{\r\n\t\t\tcur.Stop(!success?null:function(blob,duration){\r\n\t\t\t\tconsole.log(\"结束录音\"+blob.size+\"b \"+duration+\"ms\",blob);\r\n\t\t\t\tsuccess(blob, duration);\r\n\t\t\t},failCall);\r\n\t\t};\r\n\t});\r\n\tif(!readyWait){\r\n\t\tconsole.warn(\"Stop Wait Ready...\");\r\n\t};\r\n\treadyWait=Date.now();\r\n}\r\n\r\n};\r\n\r\nwindow.RecordApp=App;\r\n\r\nOnInstalled&&OnInstalled();\r\n\r\n}));","/*\r\n录音 RecordApp：ios上的微信支持文件。\r\n\r\n特别注明：本文件涉及的功能需要后端的支持，如果你不能提供微信JsSDK签名、素材下载api，并且坚决要使用本文件，那将会很困难。\r\n\r\n本文件诞生的原因是因为IOS端WKWebView(UIWebView)中未开放getUserMedia功能来录音，对应的微信内也不能用H5录音，只能寻求其他解决方案。Android端没有此问题。当以后IOS任何地方的网页都能录音时，本文件就可以删除了。\r\n\r\n本文件源码可以不用改动，因为需要改动的地方已放到了app.js的IOS-Weixin.Config中了；最终实际实现可参考app-support-sample目录内的配置文件。\r\n\r\nhttps://github.com/xiangyuecn/Recorder\r\n*/\r\n(function(){\r\n\"use strict\";\r\n\r\nvar App=RecordApp;\r\nvar platform=App.Platforms.Weixin;\r\nvar config=platform.Config;\r\n\r\nplatform.IsInit=true;\r\n\r\nvar WXRecordData={};\r\n\r\n/*******给IOS-Weixin实现统一接口*******/\r\n\r\nplatform.RequestPermission=function(success,fail){\r\n\tconfig.WxReady(function(wx,err){\r\n\t\tWXRecordData.wx=null;\r\n\t\tif(err){\r\n\t\t\tfail(\"微信JsSDK准备失败：\"+err);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tWXRecordData.wx=wx; \r\n\t\t//可能已经在录音了，暴力直接关掉一次再说，不然没法start\r\n\t\tkillStart(function(){\r\n\t\t\t//微信不能提前发起授权请求，需要开始录音时才会调起授权 ，并且授权一次后管很久，因此开始录音然后关闭就能检测出权限\r\n\t\t\twx.startRecord({\r\n\t\t\t\tsuccess:function(){\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tstopNow(function(e){\r\n\t\t\t\t\t\t\tif(!e || /short/i.test(e)){ //排除stopRecord:tooshort错误\r\n\t\t\t\t\t\t\t\tsuccess();\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tfail(\"清理资源出错：\"+e);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},100);\r\n\t\t\t\t}\r\n\t\t\t\t,fail:function(o){\r\n\t\t\t\t\tfail(\"无法录音：\"+o.errMsg);\r\n\t\t\t\t}\r\n\t\t\t\t,cancel:function(o){\r\n\t\t\t\t\tfail(\"用户不允许录音：\"+o.errMsg,true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n};\r\nvar isWaitStart,isStart;\r\nvar stopNow=function(call){\r\n\tisStart=0;\r\n\tisWaitStart=0;\r\n\tWXRecordData.wx.stopRecord({\r\n\t\tsuccess:function(){\r\n\t\t\tcall&&call();\r\n\t\t},fail:function(o){\r\n\t\t\tcall&&call(\"无法结束录音：\"+o.errMsg);\r\n\t\t}\r\n\t});\r\n};\r\nvar killStart=function(call){\r\n\tif(isStart){\r\n\t\tconsole.warn(\"录音中，正在kill重试\");\r\n\t};\r\n\tstopNow(function(){\r\n\t\tsetTimeout(call,300);\r\n\t});\r\n};\r\nvar timeLog=function(msg){\r\n\tconsole.log(\"[\"+Date.now()+\"]\"+msg);\r\n};\r\nplatform.Start=function(set,success,fail){\r\n\tvar wx=WXRecordData.wx;\r\n\tif(!wx){\r\n\t\tfail(\"请先调用RequestPermission\");\r\n\t\treturn;\r\n\t};\r\n\tif(isStart){\r\n\t\tkillStart(function(){\r\n\t\t\tplatform.Start(set,success,fail);\r\n\t\t});\r\n\t\treturn;\r\n\t};\r\n\tif(isWaitStart){\r\n\t\tconsole.log(\"等待上次wx.startRecord回调后重试\");\r\n\t\tsetTimeout(function(){\r\n\t\t\tplatform.Start(set,success,fail);\r\n\t\t},600);\r\n\t\treturn;\r\n\t};\r\n\t\r\n\tisStart=0;\r\n\tisWaitStart=1;\r\n\tvar startFail=function(o){\r\n\t\tisWaitStart=0;\r\n\t\tfail(\"无法录音：\"+o.errMsg);\r\n\t\tstopNow();\r\n\t};\r\n\twx.startRecord({\r\n\t\tsuccess:function(){\r\n\t\t\tisStart=1;\r\n\t\t\tisWaitStart=0;\r\n\t\t\tWXRecordData.startTime=Date.now();\r\n\t\t\tWXRecordData.start=set;\r\n\t\t\ttimeLog(\"已开始录音\");\r\n\t\t\tsuccess();\r\n\t\t}\r\n\t\t,fail:startFail\r\n\t\t,cancel:startFail\r\n\t});\r\n\t\r\n\t//监听超时自动停止后接续录音\r\n\tWXRecordData.chunks=[];\r\n\tWXRecordData.chunkErr=\"\";\r\n\tWXRecordData.stopJoinEnd=null;\r\n\twx.onVoiceRecordEnd({\r\n\t\tcomplete:function(res){\r\n\t\t\tvar t1=Date.now();\r\n\t\t\tif(WXRecordData.stopJoinEnd){\r\n\t\t\t\t//正在进行stop调用时发生了onVoiceRecordEnd，此时不会触发stop回调，需要手动触发\r\n\t\t\t\tWXRecordData.stopJoinEnd(res,\"chunk\");\r\n\t\t\t}else{\r\n\t\t\t\tif(res.localId && WXRecordData.chunks){\r\n\t\t\t\t\tWXRecordData.chunks.push({res:res,duration:t1-WXRecordData.startTime,time:t1,from:\"chunk\"});\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//已彻底停止录音了，就不要塞数据了，丢弃\r\n\t\t\t\t\tconsole.error(\"已忽略chunk数据\",res);\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\ttimeLog(\"微信录音超时，正在重启...\");\r\n\t\t\tif(!isStart){\r\n\t\t\t\tconsole.error(\"已停止录音，拒绝重启\");\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\t\t\twx.startRecord({\r\n\t\t\t\tsuccess:function(){\r\n\t\t\t\t\tWXRecordData.startTime=Date.now();\r\n\t\t\t\t\tconsole.log(\"已接续录音,中断\"+(Date.now()-t1)+\"ms\");\r\n\t\t\t\t}\r\n\t\t\t\t,fail:function(o){\r\n\t\t\t\t\tvar msg=\"无法接续录音：\"+o.errMsg;\r\n\t\t\t\t\tconsole.error(msg,o);\r\n\t\t\t\t\tWXRecordData.chunkErr=msg;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n};\r\nplatform.Stop=function(successx,failx){\r\n\tvar wx=WXRecordData.wx;\r\n\tisStart=0;\r\n\ttimeLog(\"开始停止录音\");\r\n\t\r\n\tvar fail=function(msg){\r\n\t\tfailx(\"录音失败：\"+(msg.errMsg||msg));\r\n\t};\r\n\tvar set=WXRecordData.start;\r\n\tif(!set){\r\n\t\tfail(\"未开始录音\");\r\n\t\treturn;\r\n\t};\r\n\tWXRecordData.start=null;\r\n\tvar dwxData={list:[]};\r\n\tset.DownWxMediaData=dwxData;\r\n\t\r\n\t//格式转换 音质差是跟微信服务器返回的amr本来就音质差，转其他格式几乎无损音质，和微信本地播放音质有区别\r\n\tvar transform=function(){\r\n\t\tvar list=dwxData.list;\r\n\t\tvar list0=list[0];\r\n\t\tif(list0.duration){\r\n\t\t\t//服务器端已经转码了，就直接返回\r\n\t\t\tvar bstr=atob(list0.data),n=bstr.length,u8arr=new Uint8Array(n);\r\n\t\t\twhile(n--){\r\n\t\t\t\tu8arr[n]=bstr.charCodeAt(n);\r\n\t\t\t};\r\n\t\t\tvar blob=new Blob([u8arr.buffer], {type:list0.mime});\r\n\t\t\t\r\n\t\t\tsuccessx(blob,list0.duration);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\tvar pcms=[];\r\n\t\tvar enTime=0;\r\n\t\tvar encode=function(){\r\n\t\t\tenTime||(enTime=Date.now());\r\n\t\t\tvar pcm=[];\r\n\t\t\tfor(var i=0;i<pcms.length;i++){\r\n\t\t\t\tvar o=pcms[i];\r\n\t\t\t\tfor(var j=0;j<o.length;j++){\r\n\t\t\t\t\tpcm.push(o[j]);\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar rec=Recorder(set).mock(pcm,8000);\r\n\t\t\trec.stop(function(blob,duration){\r\n\t\t\t\tdwxData.encodeTime=Date.now()-enTime;\r\n\t\t\t\t\r\n\t\t\t\t//把可能变更的配置写回去\r\n\t\t\t\tfor(var k in rec.set){\r\n\t\t\t\t\tset[k]=rec.set[k];\r\n\t\t\t\t};\r\n\t\t\t\tsuccessx(blob,duration);\r\n\t\t\t},fail);\r\n\t\t};\r\n\t\t\r\n\t\tvar deidx=0;\r\n\t\tvar deTime=0;\r\n\t\tvar decode=function(){\r\n\t\t\tdeTime||(deTime=Date.now());\r\n\t\t\tif(deidx>=list.length){\r\n\t\t\t\tdwxData.decodeTime=Date.now()-deTime;\r\n\t\t\t\tencode();\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar data=list[deidx];\r\n\t\t\tdata.duration=chunkList[deidx].duration;\r\n\t\t\tdata.isAmr=true;\r\n\t\t\tvar bstr=atob(data.data),n=bstr.length,u8arr=new Uint8Array(n);\r\n\t\t\twhile(n--){\r\n\t\t\t\tu8arr[n]=bstr.charCodeAt(n);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tRecorder.AMR.decode(u8arr,function(pcm){\r\n\t\t\t\tpcms.push(pcm);\r\n\t\t\t\tdeidx++;\r\n\t\t\t\tdecode();\r\n\t\t\t},function(msg){\r\n\t\t\t\tfail(\"AMR音频\"+(deidx+1)+\"无法解码:\"+msg);\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\tif(Recorder.AMR){\r\n\t\t\tdecode();\r\n\t\t}else{\r\n\t\t\tfail(\"未加载AMR转换引擎\");\r\n\t\t};\r\n\t};\r\n\t\r\n\t\r\n\tvar mediaIds=[];\r\n\tvar stopFn=function(){\r\n\t\tif(!successx){//仅清理资源的直接返回，避免进行上传和下载操作\r\n\t\t\tfail(\"仅清理资源\");\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\tvar upIds=[];\r\n\t\tfor(var i=0;i<chunkList.length;i++){\r\n\t\t\tupIds.push(chunkList[i].res.localId);\r\n\t\t};\r\n\t\ttimeLog(\"结束录音共\"+upIds.length+\"段，开始上传下载\");\r\n\t\tconsole.log(upIds,chunkList);\r\n\t\t\r\n\t\t//下载片段\r\n\t\tvar downidx=0;\r\n\t\tvar downStart=0;\r\n\t\tvar downEnd=function(){\r\n\t\t\tdwxData.downTime=Date.now()-downStart;\r\n\t\t\t//上传下载都完成了，进行转码\r\n\t\t\ttransform();\r\n\t\t};\r\n\t\tvar down=function(){\r\n\t\t\tdownStart||(downStart=Date.now());\r\n\t\t\tif(downidx>=mediaIds.length){\r\n\t\t\t\tdownEnd();\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\t\t\tvar serverId=mediaIds[downidx];\r\n\t\t\t\r\n\t\t\tconfig.DownWxMedia({\r\n\t\t\t\tmediaId:serverId\r\n\t\t\t\t,transform_mediaIds:mediaIds.join(\",\")\r\n\t\t\t\t,transform_type:set.type\r\n\t\t\t\t,transform_bitRate:set.bitRate\r\n\t\t\t\t,transform_sampleRate:set.sampleRate\r\n\t\t\t},function(data){\r\n\t\t\t\tdwxData.list.push(data);\r\n\t\t\t\t//转码结果，已全部转换合并好了\r\n\t\t\t\tif(data.duration){\r\n\t\t\t\t\tdownEnd();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tif(/amr/i.test(data.mime)){\r\n\t\t\t\t\tdownidx++;\r\n\t\t\t\t\tdown();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfail(\"微信服务器返回了未知音频类型：\"+data.mime);\r\n\t\t\t\t};\r\n\t\t\t},function(msg){\r\n\t\t\t\tfail(\"下载音频失败：\"+msg);\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t//微信上传所有片段\r\n\t\tvar upidx=0;\r\n\t\tvar up=function(){\r\n\t\t\tif(upidx>=upIds.length){\r\n\t\t\t\tdwxData.uploadTime=Date.now()-upStart;\r\n\t\t\t\tdown();\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\t\t\tvar localId=upIds[upidx];\r\n\t\t\tconsole.log(\"微信录音片段\"+upidx+\" wx.playVoice({localId:'\"+localId+\"'})\");\r\n\t\t\twx.uploadVoice({\r\n\t\t\t\tlocalId:localId\r\n\t\t\t\t,isShowProgressTips:0\r\n\t\t\t\t,fail:fail\r\n\t\t\t\t,success:function(res){\r\n\t\t\t\t\tvar serverId=res.serverId;\r\n\t\t\t\t\tconsole.log(\"serverId:\"+serverId);\r\n\t\t\t\t\t\r\n\t\t\t\t\tmediaIds.push(serverId);\r\n\t\t\t\t\tupidx++;\r\n\t\t\t\t\tup();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\tvar upStart=Date.now();\r\n\t\tup();\r\n\t};\r\n\t\r\n\tvar chunkList=WXRecordData.chunks;\r\n\tif(WXRecordData.chunkErr){\r\n\t\tconsole.error(WXRecordData.chunkErr,chunkList);\r\n\t\tfail(\"录制失败，已录制\"+chunkList.length+\"分钟，但后面出错：\"+WXRecordData.chunkErr);\r\n\t\treturn;\r\n\t};\r\n\tif(chunkList.length){\r\n\t\tif(Date.now()-chunkList[chunkList.length-1].time<900){\r\n\t\t\tconsole.error(\"丢弃结尾未停止太短录音\");\r\n\t\t\tstopNow();\r\n\t\t\tstopFn();\r\n\t\t\treturn;\r\n\t\t};\r\n\t};\r\n\t\r\n\t//等待停止回调，或者onVoiceRecordEnd回调，如果停止过程中发生了onVoiceRecordEnd可能不会触发stop回调\r\n\tWXRecordData.stopJoinEnd=function(res,from){\r\n\t\tWXRecordData.stopJoinEnd=null;\r\n\t\t\r\n\t\tvar t1=Date.now();\r\n\t\tif(res.localId){\r\n\t\t\tchunkList.push({res:res,duration:t1-WXRecordData.startTime,time:t1,from:from});\r\n\t\t}else{\r\n\t\t\t//定时n分钟录音时，当刚刚接续录音，然后立即出发停止时，返回数据没有localId\r\n\t\t\tconsole.error(\"已忽略\"+from+\"数据\",res);\r\n\t\t};\r\n\t\tWXRecordData.chunks=null;//不要继续塞数据了，就算有也丢弃\r\n\t\t\r\n\t\tstopFn();\r\n\t};\r\n\twx.stopRecord({\r\n\t\tfail:fail\r\n\t\t,success:function(res){\r\n\t\t\tWXRecordData.stopJoinEnd&&WXRecordData.stopJoinEnd(res,\"stop\");\r\n\t\t}\r\n\t});\r\n};\r\n})();","/*\r\n录音 RecordApp: Hybrid App Native支持文件。\r\n\r\n特别注明：本文件涉及的功能需要IOS、Android App端的支持，如果你不能修改App的源码，并且坚决要使用本文件，那将会很困难。\r\n\r\n本文件诞生的原因是因为IOS端WKWebView(UIWebView)中未开放getUserMedia功能来录音，只能寻求其他解决方案。Android端没有此问题，但Android里面使用网页的录音权限问题可能比原生的权限机制要复杂，为了简化js端的复杂性（出问题了好甩锅），不管是Android还是IOS都实现一下可能会简单很多。当以后IOS任何地方的网页都能录音时，本文件就可以删除了。\r\n\r\n录音功能由原生App(Native)代码实现，通过JsBridge和h5进行交互。Native层需要提供：请求权限、开始录音、结束录音、定时回调PCM[Int16]片段 这4个功能、接口。因为js层已自动加载Recorder和相应的js编码引擎，所以，Native层无需进行编码（Android和IOS的音频编码并非易事，且不易更新），大大简化App的逻辑和弹性。\r\n\r\n录音必须是单声道的，因为这个库从头到尾就没有打算支持双声道。\r\n\r\nJsBridge可以是自己实现的交互方式 或 别人提供的框架。因为不知道具体使用的桥接方式，对应的请求已抽象成了3个方法在Native.Config中，需自行实现。\r\n\r\n本文件源码可以不用改动，因为需要改动的地方已放到了app.js的Native.Config中了；最终实际实现可参考app-support-sample目录内的配置文件，另外此目录内还有Android和IOS的demo项目，copy源码改改就能用。\r\n\r\nhttps://github.com/xiangyuecn/Recorder\r\n*/\r\n(function(){\r\n\"use strict\";\r\n\r\nvar App=RecordApp;\r\nvar platform=App.Platforms.Native;\r\nvar config=platform.Config;\r\n\r\nplatform.IsInit=true;\r\n\r\n/*******Hybrid App Native层在录音时定时回调本js方法*******/\r\n/*\r\npcmDataBase64: base64<Int16[]>字符串 当前单声道录音缓冲PCM片段，正常情况下为上次回调本接口开始到现在的录音数据，Int16[]二进制数组需要编码成base64字符串\r\nsampleRate：123456 录制音频实际的采样率\r\n*/\r\nvar onRecFn=window.NativeRecordReceivePCM=window.top.NativeRecordReceivePCM=function(pcmDataBase64,sampleRate){//无视iframe\r\n\tvar rec=onRecFn.rec;\r\n\tif(!rec){\r\n\t\tconsole.error(\"未开始录音，但收到Native PCM数据\");\r\n\t\treturn;\r\n\t};\r\n\tif(!rec._appStart){\r\n\t\trec.envStart({\r\n\t\t\tenvName:platform.Key,canProcess:platform.CanProcess()\r\n\t\t},sampleRate);\r\n\t};\r\n\trec._appStart=1;\r\n\t\r\n\tvar bstr=atob(pcmDataBase64),n=bstr.length;\r\n\tvar pcm=new Int16Array(n/2);\r\n\tvar sum=0;\r\n\tfor(var idx=0,s,i=0;i+2<=n;idx++,i+=2){\r\n\t\ts=((bstr.charCodeAt(i)|(bstr.charCodeAt(i+1)<<8))<<16)>>16;\r\n\t\tpcm[idx]=s;\r\n\t\tsum+=Math.abs(s);\r\n\t};\r\n\t\r\n\trec.envIn(pcm,sum);\r\n};\r\n\r\n\r\n/*******实现统一接口，以下方法参数请参考app.js RecordApp中的同名方法*******/\r\n\r\nplatform.RequestPermission=function(success,fail){\r\n\tconfig.JsBridgeRequestPermission(success,fail);\r\n};\r\nplatform.Start=function(set,success,fail){\r\n\tonRecFn.param=set;\r\n\tvar rec=Recorder(set);\r\n\trec.set.disableEnvInFix=true; //不要音频输入丢失补偿\r\n\t\r\n\tonRecFn.rec=rec;//等待第一个数据到来再调用rec.start\r\n\tApp.__Rec=rec;//rec在stop时需要即时清理，因此暴露的内部变量需另外赋值\r\n\t\r\n\tconfig.JsBridgeStart(set,success,fail);\r\n};\r\nplatform.Stop=function(success,fail){\r\n\tvar failCall=function(msg){\r\n\t\tfail(msg);\r\n\t\tonRecFn.rec=null;\r\n\t\tApp.__Rec=null;\r\n\t};\r\n\tconfig.JsBridgeStop(function(){\r\n\t\tvar rec=onRecFn.rec;\r\n\t\tonRecFn.rec=null;\r\n\t\t\r\n\t\tif(!rec){\r\n\t\t\tfailCall(\"未开始录音\");\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\tconsole.log(\"rec encode start: pcm:\"+rec.recSize+\" src:\"+rec.srcSampleRate+\" set:\"+JSON.stringify(onRecFn.param));\r\n\t\t\r\n\t\tvar end=function(){\r\n\t\t\t//把可能变更的配置写回去\r\n\t\t\tfor(var k in rec.set){\r\n\t\t\t\tonRecFn.param[k]=rec.set[k];\r\n\t\t\t};\r\n\t\t};\r\n\t\tif(!success){\r\n\t\t\tend();\r\n\t\t\tfailCall(\"仅清理资源\");\r\n\t\t\treturn;\r\n\t\t};\r\n\t\trec.stop(function(blob,duration){\r\n\t\t\tconsole.log(\"rec encode end\")\r\n\t\t\tend();\r\n\t\t\tsuccess(blob,duration);\r\n\t\t\tApp.__Rec=null;\r\n\t\t},function(msg){\r\n\t\t\tend();\r\n\t\t\tfailCall(msg);\r\n\t\t});\r\n\t},failCall);\r\n};\r\n})();","/*\namr编码器，beta版，需带上amr-engine.js引擎使用。如果需要播放amr音频，需要额外带上wav.js引擎来把amr转成wav\nhttps://github.com/xiangyuecn/Recorder\n\n当然最佳推荐使用mp3、wav格式，代码也是优先照顾这两种格式\n浏览器支持情况\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats\n*/\n(function(){\n\"use strict\";\n\nRecorder.prototype.enc_amr={\n\tstable:false\n\t,testmsg:\"采样率比特率设置无效，只提供8000hz，AMR12.2(12.8kbps)\"\n};\n\n//True(wavBlob,duration),False(msg)\nRecorder.amr2wav=function(amrBlob,True,False){\n\tvar reader=new FileReader();\n\treader.onload=function(){\n\t\tvar amr=new Uint8Array(reader.result);\n\t\tRecorder.AMR.decode(amr,function(pcm){\n\t\t\tRecorder({type:\"wav\"}).mock(pcm,8000).stop(function(wavBlob,duration){\n\t\t\t\tTrue(wavBlob,duration);\n\t\t\t},False);\n\t\t},False);\n\t};\n\treader.readAsArrayBuffer(amrBlob);\n};\n\nRecorder.prototype.amr=function(res,True,False){\n\t\tvar This=this,set=This.set,size=res.length;\n\t\tset.bitRate=12.8;\n\t\tvar sampleRate=set.sampleRate;\n\t\tif(sampleRate!=8000){\n\t\t\tconsole.log(\"amr mock start\")\n\t\t\tset.sampleRate=8000;\n\t\t\tRecorder(set).mock(res,sampleRate).stop(function(blob,d){\n\t\t\t\tconsole.log(\"amr mock end\")\n\t\t\t\tTrue(blob);\n\t\t\t},False);\n\t\t\treturn;\n\t\t};\n\t\tRecorder.AMR.encode(res,function(data){\n\t\t\tTrue(new Blob([data.buffer],{type:\"audio/amr\"}));\n\t\t});\n\t}\n\t\n})();","/*\nwav编码器+编码引擎\nhttps://github.com/xiangyuecn/Recorder\n\n当然最佳推荐使用mp3、wav格式，代码也是优先照顾这两种格式\n浏览器支持情况\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats\n*/\n(function(){\n\"use strict\";\n\nRecorder.prototype.enc_wav={\n\tstable:true\n\t,testmsg:\"比特率取值范围8位、16位\"\n};\nRecorder.prototype.wav=function(res,True,False){\n\t\tvar This=this,set=This.set\n\t\t\t,size=res.length\n\t\t\t,sampleRate=set.sampleRate\n\t\t\t,bitRate=set.bitRate==8?8:16;\n\t\t\n\t\t//编码数据 https://github.com/mattdiamond/Recorderjs https://www.cnblogs.com/blqw/p/3782420.html https://www.cnblogs.com/xiaoqi/p/6993912.html\n\t\tvar dataLength=size*(bitRate/8);\n\t\tvar buffer=new ArrayBuffer(44+dataLength);\n\t\tvar data=new DataView(buffer);\n\t\t\n\t\tvar offset=0;\n\t\tvar writeString=function(str){\n\t\t\tfor (var i=0;i<str.length;i++,offset++) {\n\t\t\t\tdata.setUint8(offset,str.charCodeAt(i));\n\t\t\t};\n\t\t};\n\t\tvar write16=function(v){\n\t\t\tdata.setUint16(offset,v,true);\n\t\t\toffset+=2;\n\t\t};\n\t\tvar write32=function(v){\n\t\t\tdata.setUint32(offset,v,true);\n\t\t\toffset+=4;\n\t\t};\n\t\t\n\t\t/* RIFF identifier */\n\t\twriteString('RIFF');\n\t\t/* RIFF chunk length */\n\t\twrite32(36+dataLength);\n\t\t/* RIFF type */\n\t\twriteString('WAVE');\n\t\t/* format chunk identifier */\n\t\twriteString('fmt ');\n\t\t/* format chunk length */\n\t\twrite32(16);\n\t\t/* sample format (raw) */\n\t\twrite16(1);\n\t\t/* channel count */\n\t\twrite16(1);\n\t\t/* sample rate */\n\t\twrite32(sampleRate);\n\t\t/* byte rate (sample rate * block align) */\n\t\twrite32(sampleRate*(bitRate/8));\n\t\t/* block align (channel count * bytes per sample) */\n\t\twrite16(bitRate/8);\n\t\t/* bits per sample */\n\t\twrite16(bitRate);\n\t\t/* data chunk identifier */\n\t\twriteString('data');\n\t\t/* data chunk length */\n\t\twrite32(dataLength);\n\t\t// 写入采样数据\n\t\tif(bitRate==8) {\n\t\t\tfor(var i=0;i<size;i++,offset++) {\n\t\t\t\t//16转8据说是雷霄骅的 https://blog.csdn.net/sevennight1989/article/details/85376149 细节比blqw的按比例的算法清晰点，虽然都有明显杂音\n\t\t\t\tvar val=(res[i]>>8)+128;\n\t\t\t\tdata.setInt8(offset,val,true);\n\t\t\t};\n\t\t}else{\n\t\t\tfor (var i=0;i<size;i++,offset+=2){\n\t\t\t\tdata.setInt16(offset,res[i],true);\n\t\t\t};\n\t\t};\n\t\t\n\t\t\n\t\tTrue(new Blob([data.buffer],{type:\"audio/wav\"}));\n\t}\n})();","/*\nmp3编码器用到的lamejs编码引擎，一般都用MP3格式，浏览器支持广泛，此引擎测试的也比较多，稳定\nhttps://github.com/xiangyuecn/Recorder\n*/\n(function(){\n\"use strict\";\n\n//end2 ****开始copy lamejs*****\n/*\nmp3编码依赖lamejs，如果无需mp3支持直接移除此代码\nhttps://github.com/zhuker/lamejs/blob/bfb7f6c6d7877e0fe1ad9e72697a871676119a0e/lame.all.js\n*/\n\nfunction lamejs() {\nvar Math_log10=function(s){//坚决不能用也不要报语言问题的错误\n\treturn Math.log(s)/Math.log(10);\n};\n\nfunction new_byte(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n(args) {\n    if (args.length == 1) {\n        return new_float(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n(args));\n    }\n    return A;\n}\nfunction new_int_n(args) {\n    if (args.length == 1) {\n        return new_int(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n(args));\n    }\n    return A;\n}\n\n\nvar Arrays = {};\n\nArrays.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System = {};\n\nSystem.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\n\nvar Util = {};\nUtil.SQRT2 = 1.41421356237309504880;\nUtil.FAST_LOG10 = function (x) {\n    return Math_log10(x);\n};\n\nUtil.FAST_LOG10_X = function (x, y) {\n    return Math_log10(x) * y;\n};\n\nfunction ShortBlock(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock.short_block_allowed = new ShortBlock(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock.short_block_coupled = new ShortBlock(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock.short_block_dispensed = new ShortBlock(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock.short_block_forced = new ShortBlock(3);\n\nvar Float = {};\nFloat.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode.vbr_off = new VbrMode(0);\nVbrMode.vbr_mt = new VbrMode(1);\nVbrMode.vbr_rh = new VbrMode(2);\nVbrMode.vbr_abr = new VbrMode(3);\nVbrMode.vbr_mtrh = new VbrMode(4);\nVbrMode.vbr_default = VbrMode.vbr_mtrh;\n\nvar assert = function (x) {\n    //console.assert(x);\n};\n\nvar module_exports = {\n    \"System\": System,\n    \"VbrMode\": VbrMode,\n    \"Float\": Float,\n    \"ShortBlock\": ShortBlock,\n    \"Util\": Util,\n    \"Arrays\": Arrays,\n    \"new_array_n\": new_array_n,\n    \"new_byte\": new_byte,\n    \"new_double\": new_double,\n    \"new_float\": new_float,\n    \"new_float_n\": new_float_n,\n    \"new_int\": new_int,\n    \"new_int_n\": new_int_n,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert\n};\n//package mp3;\n\n/* MPEG modes */\nfunction MPEGMode(ordinal) {\n    var _ordinal = ordinal;\n    this.ordinal = function () {\n        return _ordinal;\n    }\n}\n\nMPEGMode.STEREO = new MPEGMode(0);\nMPEGMode.JOINT_STEREO = new MPEGMode(1);\nMPEGMode.DUAL_CHANNEL = new MPEGMode(2);\nMPEGMode.MONO = new MPEGMode(3);\nMPEGMode.NOT_SET = new MPEGMode(4);\n\nfunction Version() {\n\n    /**\n     * URL for the LAME website.\n     */\n    var LAME_URL = \"http://www.mp3dev.org/\";\n\n    /**\n     * Major version number.\n     */\n    var LAME_MAJOR_VERSION = 3;\n    /**\n     * Minor version number.\n     */\n    var LAME_MINOR_VERSION = 98;\n    /**\n     * Patch level.\n     */\n    var LAME_PATCH_VERSION = 4;\n\n    /**\n     * Major version number.\n     */\n    var PSY_MAJOR_VERSION = 0;\n    /**\n     * Minor version number.\n     */\n    var PSY_MINOR_VERSION = 93;\n\n    /**\n     * A string which describes the version of LAME.\n     *\n     * @return string which describes the version of LAME\n     */\n    this.getLameVersion = function () {\n        // primary to write screen reports\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    }\n\n    /**\n     * The short version of the LAME version string.\n     *\n     * @return short version of the LAME version string\n     */\n    this.getLameShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        // validation\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    }\n\n    /**\n     * The shortest version of the LAME version string.\n     *\n     * @return shortest version of the LAME version string\n     */\n    this.getLameVeryShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\n    }\n\n    /**\n     * String which describes the version of GPSYCHO\n     *\n     * @return string which describes the version of GPSYCHO\n     */\n    this.getPsyVersion = function () {\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\n    }\n\n    /**\n     * String which is a URL for the LAME website.\n     *\n     * @return string which is a URL for the LAME website\n     */\n    this.getLameUrl = function () {\n        return LAME_URL;\n    }\n\n    /**\n     * Quite useless for a java version, however we are compatible ;-)\n     *\n     * @return \"32bits\"\n     */\n    this.getLameOsBitness = function () {\n        return \"32bits\";\n    }\n\n}\n\n/*\n *\tMP3 huffman table selecting and bit counting\n *\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\n\n\nfunction Takehiro() {\n\n    var qupvt = null;\n    this.qupvt = null;\n\n    this.setModules = function (_qupvt) {\n        this.qupvt = _qupvt;\n        qupvt = _qupvt;\n    }\n\n    function Bits(b) {\n        this.bits = 0 | b;\n    }\n\n    var subdv_table = [[0, 0], /* 0 bands */\n        [0, 0], /* 1 bands */\n        [0, 0], /* 2 bands */\n        [0, 0], /* 3 bands */\n        [0, 0], /* 4 bands */\n        [0, 1], /* 5 bands */\n        [1, 1], /* 6 bands */\n        [1, 1], /* 7 bands */\n        [1, 2], /* 8 bands */\n        [2, 2], /* 9 bands */\n        [2, 3], /* 10 bands */\n        [2, 3], /* 11 bands */\n        [3, 4], /* 12 bands */\n        [3, 4], /* 13 bands */\n        [3, 4], /* 14 bands */\n        [4, 5], /* 15 bands */\n        [4, 5], /* 16 bands */\n        [4, 6], /* 17 bands */\n        [5, 6], /* 18 bands */\n        [5, 6], /* 19 bands */\n        [5, 7], /* 20 bands */\n        [6, 7], /* 21 bands */\n        [6, 7], /* 22 bands */\n    ];\n\n\n    /**\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\n     * Takes into account the fact that we are quantizing xr . ix, but we want\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\n     * mean ix is as close as possible to xr, which is different.)\n     *\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\n     *\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\n     * If you need the ASM code, check CVS circa Aug 2000.\n     *\n     * 01/2004: Optimizations by Gabriel Bouvigne\n     */\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\n        var compareval0 = (1.0 - 0.4054) / istep;\n\n        l = l >> 1;\n        while ((l--) != 0) {\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n        }\n    }\n\n    /**\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\n     * ROUNDFAC= -0.0946<BR>\n     *\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\n     * ROUNDFAC=0.4054<BR>\n     *\n     * Note: using floor() or 0| is extremely slow. On machines where the\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\n     * some ASM for XRPOW_FTOI().\n     */\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\n\n        l = l >> 1;\n        var remaining = l % 2;\n        l = l >> 1;\n        while (l-- != 0) {\n            var x0, x1, x2, x3;\n            var rx0, rx1, rx2, rx3;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            x2 = xr[xrPos++] * istep;\n            rx1 = 0 | x1;\n            x3 = xr[xrPos++] * istep;\n            rx2 = 0 | x2;\n            x0 += qupvt.adj43[rx0];\n            rx3 = 0 | x3;\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            x2 += qupvt.adj43[rx2];\n            ix[ixPos++] = 0 | x1;\n            x3 += qupvt.adj43[rx3];\n            ix[ixPos++] = 0 | x2;\n            ix[ixPos++] = 0 | x3;\n        }\n        if (remaining != 0) {\n            var x0, x1;\n            var rx0, rx1;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            rx1 = 0 | x1;\n            x0 += qupvt.adj43[rx0];\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            ix[ixPos++] = 0 | x1;\n        }\n    }\n\n    /**\n     * Quantization function This function will select which lines to quantize\n     * and call the proper quantization function\n     */\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\n        /* quantize on xr^(3/4) instead of xr */\n        var sfb;\n        var sfbmax;\n        var j = 0;\n        var prev_data_use;\n        var accumulate = 0;\n        var accumulate01 = 0;\n        var xpPos = 0;\n        var iData = pi;\n        var iDataPos = 0;\n        var acc_iData = iData;\n        var acc_iDataPos = 0;\n        var acc_xp = xp;\n        var acc_xpPos = 0;\n\n        /*\n         * Reusing previously computed data does not seems to work if global\n         * gain is changed. Finding why it behaves this way would allow to use a\n         * cache of previously computed values (let's 10 cached values per sfb)\n         * that would probably provide a noticeable speedup\n         */\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\n\n        if (codInfo.block_type == Encoder.SHORT_TYPE)\n            sfbmax = 38;\n        else\n            sfbmax = 21;\n\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\n            var step = -1;\n\n            if (prev_data_use || codInfo.block_type == Encoder.NORM_TYPE) {\n                step = codInfo.global_gain\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\n                        : 0)) << (codInfo.scalefac_scale + 1))\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\n            }\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\n                /*\n                 * do not recompute this part, but compute accumulated lines\n                 */\n                if (accumulate != 0) {\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                        acc_iData, acc_iDataPos);\n                    accumulate = 0;\n                }\n                if (accumulate01 != 0) {\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                        acc_xpPos, acc_iData, acc_iDataPos);\n                    accumulate01 = 0;\n                }\n            } else { /* should compute this part */\n                var l = codInfo.width[sfb];\n\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\n                    /* do not compute upper zero part */\n                    var usefullsize;\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\n                    Arrays.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\n                    l = usefullsize;\n\n                    if (l < 0) {\n                        l = 0;\n                    }\n\n                    /* no need to compute higher sfb values */\n                    sfb = sfbmax + 1;\n                }\n\n                /* accumulate lines to quantize */\n                if (0 == accumulate && 0 == accumulate01) {\n                    acc_iData = iData;\n                    acc_iDataPos = iDataPos;\n                    acc_xp = xp;\n                    acc_xpPos = xpPos;\n                }\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\n                    && sfb >= prevNoise.sfb_count1\n                    && prevNoise.step[sfb] > 0\n                    && step >= prevNoise.step[sfb]) {\n\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate01 += l;\n                } else {\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate += l;\n                }\n\n                if (l <= 0) {\n                    /*\n                     * rh: 20040215 may happen due to \"prev_data_use\"\n                     * optimization\n                     */\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                    }\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                    }\n\n                    break;\n                    /* ends for-loop */\n                }\n            }\n            if (sfb <= sfbmax) {\n                iDataPos += codInfo.width[sfb];\n                xpPos += codInfo.width[sfb];\n                j += codInfo.width[sfb];\n            }\n        }\n        if (accumulate != 0) { /* last data part */\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate = 0;\n        }\n        if (accumulate01 != 0) { /* last data part */\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate01 = 0;\n        }\n\n    }\n\n    /**\n     * ix_max\n     */\n    function ix_max(ix, ixPos, endPos) {\n        var max1 = 0, max2 = 0;\n\n        do {\n            var x1 = ix[ixPos++];\n            var x2 = ix[ixPos++];\n            if (max1 < x1)\n                max1 = x1;\n\n            if (max2 < x2)\n                max2 = x2;\n        } while (ixPos < endPos);\n        if (max1 < max2)\n            max1 = max2;\n        return max1;\n    }\n\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\n        /* ESC-table is used */\n        var linbits = Tables.ht[t1].xlen * 65536 + Tables.ht[t2].xlen;\n        var sum = 0, sum2;\n\n        do {\n            var x = ix[ixPos++];\n            var y = ix[ixPos++];\n\n            if (x != 0) {\n                if (x > 14) {\n                    x = 15;\n                    sum += linbits;\n                }\n                x *= 16;\n            }\n\n            if (y != 0) {\n                if (y > 14) {\n                    y = 15;\n                    sum += linbits;\n                }\n                x += y;\n            }\n\n            sum += Tables.largetbl[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1 = t2;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC(ix, ixPos, end, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var hlen1 = Tables.ht[1].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n        } while (ixPos < end);\n\n        s.bits += sum1;\n        return 1;\n    }\n\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum = 0, sum2;\n        var xlen = Tables.ht[t1].xlen;\n        var hlen;\n        if (t1 == 2)\n            hlen = Tables.table23;\n        else\n            hlen = Tables.table56;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum += hlen[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1++;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var sum2 = 0;\n        var sum3 = 0;\n        var xlen = Tables.ht[t1].xlen;\n        var hlen1 = Tables.ht[t1].hlen;\n        var hlen2 = Tables.ht[t1 + 1].hlen;\n        var hlen3 = Tables.ht[t1 + 2].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n            sum2 += hlen2[x];\n            sum3 += hlen3[x];\n        } while (ixPos < end);\n        var t = t1;\n        if (sum1 > sum2) {\n            sum1 = sum2;\n            t++;\n        }\n        if (sum1 > sum3) {\n            sum1 = sum3;\n            t = t1 + 2;\n        }\n        s.bits += sum1;\n\n        return t;\n    }\n\n    /*************************************************************************/\n    /* choose table */\n    /*************************************************************************/\n\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\n        13, 13, 13, 13, 13, 13];\n\n    /**\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\n     * bits.\n     *\n     * Note: This code contains knowledge about the sizes and characteristics of\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\n     * with any arbitrary tables.\n     */\n    function choose_table(ix, ixPos, endPos, s) {\n        var max = ix_max(ix, ixPos, endPos);\n\n        switch (max) {\n            case 0:\n                return max;\n\n            case 1:\n                return count_bit_noESC(ix, ixPos, endPos, s);\n\n            case 2:\n            case 3:\n                return count_bit_noESC_from2(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                return count_bit_noESC_from3(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            default:\n                /* try tables with linbits */\n                if (max > QuantizePVT.IXMAX_VAL) {\n                    s.bits = QuantizePVT.LARGE_BITS;\n                    return -1;\n                }\n                max -= 15;\n                var choice2;\n                for (choice2 = 24; choice2 < 32; choice2++) {\n                    if (Tables.ht[choice2].linmax >= max) {\n                        break;\n                    }\n                }\n                var choice;\n                for (choice = choice2 - 8; choice < 24; choice++) {\n                    if (Tables.ht[choice].linmax >= max) {\n                        break;\n                    }\n                }\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\n        }\n    }\n\n    /**\n     * count_bit\n     */\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\n        var ix = gi.l3_enc;\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\n\n        if (prev_noise != null)\n            prev_noise.sfb_count1 = 0;\n\n        /* Determine count1 region */\n        for (; i > 1; i -= 2)\n            if ((ix[i - 1] | ix[i - 2]) != 0)\n                break;\n        gi.count1 = i;\n\n        /* Determines the number of bits to encode the quadruples. */\n        var a1 = 0;\n        var a2 = 0;\n        for (; i > 3; i -= 4) {\n            var p;\n            /* hack to check if all values <= 1 */\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\n            //if (true) {\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\n                break;\n            }\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\n            a1 += Tables.t32l[p];\n            a2 += Tables.t33l[p];\n        }\n        var bits = a1;\n        gi.count1table_select = 0;\n        if (a1 > a2) {\n            bits = a2;\n            gi.count1table_select = 1;\n        }\n\n        gi.count1bits = bits;\n        gi.big_values = i;\n        if (i == 0)\n            return bits;\n\n        if (gi.block_type == Encoder.SHORT_TYPE) {\n            a1 = 3 * gfc.scalefac_band.s[3];\n            if (a1 > gi.big_values)\n                a1 = gi.big_values;\n            a2 = gi.big_values;\n\n        } else if (gi.block_type == Encoder.NORM_TYPE) {\n            /* bv_scf has 576 entries (0..575) */\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\n\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\n            a1 = gfc.scalefac_band.l[a1 + 1];\n            if (a2 < i) {\n                var bi = new Bits(bits);\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\n                bits = bi.bits;\n            }\n        } else {\n            gi.region0_count = 7;\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\n            gi.region1_count = Encoder.SBMAX_l - 1 - 7 - 1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            a2 = i;\n            if (a1 > a2) {\n                a1 = a2;\n            }\n        }\n\n        /* have to allow for the case when bigvalues < region0 < region1 */\n        /* (and region0, region1 are ignored) */\n        a1 = Math.min(a1, i);\n        a2 = Math.min(a2, i);\n\n\n        /* Count the number of bits necessary to code the bigvalues region. */\n        if (0 < a1) {\n            var bi = new Bits(bits);\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\n            bits = bi.bits;\n        }\n        if (a1 < a2) {\n            var bi = new Bits(bits);\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\n            bits = bi.bits;\n        }\n        if (gfc.use_best_huffman == 2) {\n            gi.part2_3_length = bits;\n            best_huffman_divide(gfc, gi);\n            bits = gi.part2_3_length;\n        }\n\n        if (prev_noise != null) {\n            if (gi.block_type == Encoder.NORM_TYPE) {\n                var sfb = 0;\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\n                    sfb++;\n                }\n                prev_noise.sfb_count1 = sfb;\n            }\n        }\n\n        return bits;\n    }\n\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\n        var ix = gi.l3_enc;\n\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\n        var w = (QuantizePVT.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\n\n        if (gi.xrpow_max > w)\n            return QuantizePVT.LARGE_BITS;\n\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\n\n        if ((gfc.substep_shaping & 2) != 0) {\n            var j = 0;\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\n            var gain = gi.global_gain + gi.scalefac_scale;\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\n                var width = gi.width[sfb];\n                if (0 == gfc.pseudohalf[sfb]) {\n                    j += width;\n                } else {\n                    var k;\n                    for (k = j, j += width; k < j; ++k) {\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\n                    }\n                }\n            }\n        }\n        return this.noquant_count_bits(gfc, gi, prev_noise);\n    }\n\n    /**\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\n     * kept in the bit reservoir.\n     */\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info.big_values;\n\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\n            r01_bits[r0] = QuantizePVT.LARGE_BITS;\n        }\n\n        for (var r0 = 0; r0 < 16; r0++) {\n            var a1 = gfc.scalefac_band.l[r0 + 1];\n            if (a1 >= bigv)\n                break;\n            var r0bits = 0;\n            var bi = new Bits(r0bits);\n            var r0t = choose_table(ix, 0, a1, bi);\n            r0bits = bi.bits;\n\n            for (var r1 = 0; r1 < 8; r1++) {\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\n                if (a2 >= bigv)\n                    break;\n                var bits = r0bits;\n                bi = new Bits(bits);\n                var r1t = choose_table(ix, a1, a2, bi);\n                bits = bi.bits;\n                if (r01_bits[r0 + r1] > bits) {\n                    r01_bits[r0 + r1] = bits;\n                    r01_div[r0 + r1] = r0;\n                    r0_tbl[r0 + r1] = r0t;\n                    r1_tbl[r0 + r1] = r1t;\n                }\n            }\n        }\n    }\n\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info2.big_values;\n\n        for (var r2 = 2; r2 < Encoder.SBMAX_l + 1; r2++) {\n            var a2 = gfc.scalefac_band.l[r2];\n            if (a2 >= bigv)\n                break;\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\n            if (gi.part2_3_length <= bits)\n                break;\n\n            var bi = new Bits(bits);\n            var r2t = choose_table(ix, a2, bigv, bi);\n            bits = bi.bits;\n            if (gi.part2_3_length <= bits)\n                continue;\n\n            gi.assign(cod_info2);\n            gi.part2_3_length = bits;\n            gi.region0_count = r01_div[r2 - 2];\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\n            gi.table_select[0] = r0_tbl[r2 - 2];\n            gi.table_select[1] = r1_tbl[r2 - 2];\n            gi.table_select[2] = r2t;\n        }\n    }\n\n    this.best_huffman_divide = function (gfc, gi) {\n        var cod_info2 = new GrInfo();\n        var ix = gi.l3_enc;\n        var r01_bits = new_int(7 + 15 + 1);\n        var r01_div = new_int(7 + 15 + 1);\n        var r0_tbl = new_int(7 + 15 + 1);\n        var r1_tbl = new_int(7 + 15 + 1);\n\n        /* SHORT BLOCK stuff fails for MPEG2 */\n        if (gi.block_type == Encoder.SHORT_TYPE && gfc.mode_gr == 1)\n            return;\n\n        cod_info2.assign(gi);\n        if (gi.block_type == Encoder.NORM_TYPE) {\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        }\n        var i = cod_info2.big_values;\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\n            return;\n\n        i = gi.count1 + 2;\n        if (i > 576)\n            return;\n\n        /* Determines the number of bits to encode the quadruples. */\n        cod_info2.assign(gi);\n        cod_info2.count1 = i;\n        var a1 = 0;\n        var a2 = 0;\n\n\n        for (; i > cod_info2.big_values; i -= 4) {\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\n                + ix[i - 1];\n            a1 += Tables.t32l[p];\n            a2 += Tables.t33l[p];\n        }\n        cod_info2.big_values = i;\n\n        cod_info2.count1table_select = 0;\n        if (a1 > a2) {\n            a1 = a2;\n            cod_info2.count1table_select = 1;\n        }\n\n        cod_info2.count1bits = a1;\n\n        if (cod_info2.block_type == Encoder.NORM_TYPE)\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        else {\n            /* Count the number of bits necessary to code the bigvalues region. */\n            cod_info2.part2_3_length = a1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            if (a1 > i) {\n                a1 = i;\n            }\n            if (a1 > 0) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (i > a1) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (gi.part2_3_length > cod_info2.part2_3_length)\n                gi.assign(cod_info2);\n        }\n    }\n\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    Takehiro.slen1_tab = slen1_tab;\n    Takehiro.slen2_tab = slen2_tab;\n\n    function scfsi_calc(ch, l3_side) {\n        var sfb;\n        var gi = l3_side.tt[1][ch];\n        var g0 = l3_side.tt[0][ch];\n\n        for (var i = 0; i < Tables.scfsi_band.length - 1; i++) {\n            for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\n                    && gi.scalefac[sfb] >= 0)\n                    break;\n            }\n            if (sfb == Tables.scfsi_band[i + 1]) {\n                for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\n                    gi.scalefac[sfb] = -1;\n                }\n                l3_side.scfsi[ch][i] = 1;\n            }\n        }\n        var s1 = 0;\n        var c1 = 0;\n        for (sfb = 0; sfb < 11; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c1++;\n            if (s1 < gi.scalefac[sfb])\n                s1 = gi.scalefac[sfb];\n        }\n        var s2 = 0;\n        var c2 = 0;\n        for (; sfb < Encoder.SBPSY_l; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c2++;\n            if (s2 < gi.scalefac[sfb])\n                s2 = gi.scalefac[sfb];\n        }\n\n        for (var i = 0; i < 16; i++) {\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\n                if (gi.part2_length > c) {\n                    gi.part2_length = c;\n                    gi.scalefac_compress = i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Find the optimal way to store the scalefactors. Only call this routine\n     * after final scalefactors have been chosen and the channel/granule will\n     * not be re-encoded.\n     */\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\n        /* use scalefac_scale if we can */\n        var gi = l3_side.tt[gr][ch];\n        var sfb, i, j, l;\n        var recalc = 0;\n\n        /*\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\n         * ISO docs. added mt 3/00\n         */\n        /* check if l3_enc=0 */\n        j = 0;\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            var width = gi.width[sfb];\n            j += width;\n            for (l = -width; l < 0; l++) {\n                if (gi.l3_enc[l + j] != 0)\n                    break;\n            }\n            if (l == 0)\n                gi.scalefac[sfb] = recalc = -2;\n            /* anything goes. */\n            /*\n             * only best_scalefac_store and calc_scfsi know--and only they\n             * should know--about the magic number -2.\n             */\n        }\n\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\n            var s = 0;\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                if (gi.scalefac[sfb] > 0)\n                    s |= gi.scalefac[sfb];\n\n            if (0 == (s & 1) && s != 0) {\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] >>= 1;\n\n                gi.scalefac_scale = recalc = 1;\n            }\n        }\n\n        if (0 == gi.preflag && gi.block_type != Encoder.SHORT_TYPE\n            && gfc.mode_gr == 2) {\n            for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\n                    && gi.scalefac[sfb] != -2)\n                    break;\n            if (sfb == Encoder.SBPSY_l) {\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\n\n                gi.preflag = recalc = 1;\n            }\n        }\n\n        for (i = 0; i < 4; i++)\n            l3_side.scfsi[ch][i] = 0;\n\n        if (gfc.mode_gr == 2 && gr == 1\n            && l3_side.tt[0][ch].block_type != Encoder.SHORT_TYPE\n            && l3_side.tt[1][ch].block_type != Encoder.SHORT_TYPE) {\n            scfsi_calc(ch, l3_side);\n            recalc = 0;\n        }\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            if (gi.scalefac[sfb] == -2) {\n                gi.scalefac[sfb] = 0;\n                /* if anything goes, then 0 is a good choice */\n            }\n        }\n        if (recalc != 0) {\n            if (gfc.mode_gr == 2) {\n                this.scale_bitcount(gi);\n            } else {\n                this.scale_bitcount_lsf(gfc, gi);\n            }\n        }\n    }\n\n    function all_scalefactors_not_negative(scalefac, n) {\n        for (var i = 0; i < n; ++i) {\n            if (scalefac[i] < 0)\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\n        54, 72, 90, 72, 90, 108, 108, 126];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\n        52, 70, 88, 69, 87, 105, 104, 122];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\n     */\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\n        52, 43, 53, 63, 64, 74];\n\n    /**\n     * Also calculates the number of bits necessary to code the scalefactors.\n     */\n    this.scale_bitcount = function (cod_info) {\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\n\n        /* maximum values */\n        var tab;\n        var scalefac = cod_info.scalefac;\n\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            tab = scale_short;\n            if (cod_info.mixed_block_flag != 0)\n                tab = scale_mixed;\n        } else { /* block_type == 1,2,or 3 */\n            tab = scale_long;\n            if (0 == cod_info.preflag) {\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\n                        break;\n\n                if (sfb == Encoder.SBPSY_l) {\n                    cod_info.preflag = 1;\n                    for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                        scalefac[sfb] -= qupvt.pretab[sfb];\n                }\n            }\n        }\n\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\n            if (max_slen1 < scalefac[sfb])\n                max_slen1 = scalefac[sfb];\n\n        for (; sfb < cod_info.sfbmax; sfb++)\n            if (max_slen2 < scalefac[sfb])\n                max_slen2 = scalefac[sfb];\n\n        /*\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\n         * posible values of scalefac_compress to find the one which uses the\n         * smallest number of bits. ISO would stop at first valid index\n         */\n        cod_info.part2_length = QuantizePVT.LARGE_BITS;\n        for (k = 0; k < 16; k++) {\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\n                && cod_info.part2_length > tab[k]) {\n                cod_info.part2_length = tab[k];\n                cod_info.scalefac_compress = k;\n            }\n        }\n        return cod_info.part2_length == QuantizePVT.LARGE_BITS;\n    }\n\n    /**\n     * table of largest scalefactor values for MPEG2\n     */\n    var max_range_sfac_tab = [[15, 15, 7, 7],\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\n        [7, 7, 7, 0], [3, 3, 0, 0]];\n\n    /**\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\n     *\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\n     * \"Audio Decoding Layer III\"\n     */\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\n        var table_number, row_in_table, partition, nr_sfb, window;\n        var over;\n        var i, sfb;\n        var max_sfac = new_int(4);\n//var partition_table;\n        var scalefac = cod_info.scalefac;\n\n        /*\n         * Set partition table. Note that should try to use table one, but do\n         * not yet...\n         */\n        if (cod_info.preflag != 0)\n            table_number = 2;\n        else\n            table_number = 0;\n\n        for (i = 0; i < 4; i++)\n            max_sfac[i] = 0;\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            row_in_table = 1;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition] / 3;\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    for (window = 0; window < 3; window++)\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\n            }\n        } else {\n            row_in_table = 0;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition];\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    if (scalefac[sfb] > max_sfac[partition])\n                        max_sfac[partition] = scalefac[sfb];\n            }\n        }\n\n        for (over = false, partition = 0; partition < 4; partition++) {\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\n                over = true;\n        }\n        if (!over) {\n            var slen1, slen2, slen3, slen4;\n\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (partition = 0; partition < 4; partition++)\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\n\n            /* set scalefac_compress */\n            slen1 = cod_info.slen[0];\n            slen2 = cod_info.slen[1];\n            slen3 = cod_info.slen[2];\n            slen4 = cod_info.slen[3];\n\n            switch (table_number) {\n                case 0:\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\n                        + (slen3 << 2) + slen4;\n                    break;\n\n                case 1:\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\n                        + slen3;\n                    break;\n\n                case 2:\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\n                    break;\n\n                default:\n                    System.err.printf(\"intensity stereo not implemented yet\\n\");\n                    break;\n            }\n        }\n        if (!over) {\n            cod_info.part2_length = 0;\n            for (partition = 0; partition < 4; partition++)\n                cod_info.part2_length += cod_info.slen[partition]\n                    * cod_info.sfb_partition_table[partition];\n        }\n        return over;\n    }\n\n    /*\n     * Since no bands have been over-amplified, we can set scalefac_compress and\n     * slen[] for the formatter\n     */\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\n        4, 4, 4, 4];\n\n    this.huffman_init = function (gfc) {\n        for (var i = 2; i <= 576; i += 2) {\n            var scfb_anz = 0, bv_index;\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\n                ;\n\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                /*\n                 * this is an indication that everything is going to be encoded\n                 * as region0: bigvalues < region0 < region1 so lets set\n                 * region0, region1 to some value larger than bigvalues\n                 */\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            }\n\n            gfc.bv_scf[i - 2] = bv_index;\n\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            }\n\n            gfc.bv_scf[i - 1] = bv_index;\n        }\n    }\n}\n\n/*\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n *  concept and filter values by David Robinson (David@Robinson.org)\n *    -- blame him if you think the idea is flawed\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\n *\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\n *    -- credit him for all the _good_ programming ;)\n *\n *\n *  For an explanation of the concepts and the basic algorithms involved, go to:\n *    http://www.replaygain.org/\n */\n\n/*\n *  Here's the deal. Call\n *\n *    InitGainAnalysis ( long samplefreq );\n *\n *  to initialize everything. Call\n *\n *    AnalyzeSamples ( var Float_t*  left_samples,\n *                     var Float_t*  right_samples,\n *                     size_t          num_samples,\n *                     int             num_channels );\n *\n *  as many times as you want, with as many or as few samples as you want.\n *  If mono, pass the sample buffer in through left_samples, leave\n *  right_samples NULL, and make sure num_channels = 1.\n *\n *    GetTitleGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\n *\n *    GetAlbumGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\n *\n *  Pseudo-code to process an album:\n *\n *    Float_t       l_samples [4096];\n *    Float_t       r_samples [4096];\n *    size_t        num_samples;\n *    unsigned int  num_songs;\n *    unsigned int  i;\n *\n *    InitGainAnalysis ( 44100 );\n *    for ( i = 1; i <= num_songs; i++ ) {\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\n *    }\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\n */\n\n/*\n *  So here's the main source of potential code confusion:\n *\n *  The filters applied to the incoming samples are IIR filters,\n *  meaning they rely on up to <filter order> number of previous samples\n *  AND up to <filter order> number of previous filtered samples.\n *\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\n *  complexity. The speed isn't compromised too much (I don't think), but the\n *  internal complexity is higher than it should be for such a relatively\n *  simple routine.\n *\n *  Optimization/clarity suggestions are welcome.\n */\n\n/**\n * Table entries per dB\n */\nGainAnalysis.STEPS_per_dB = 100.;\n/**\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\n */\nGainAnalysis.MAX_dB = 120.;\nGainAnalysis.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nGainAnalysis.GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis.GAIN_ANALYSIS_OK = 1;\nGainAnalysis.INIT_GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis.INIT_GAIN_ANALYSIS_OK = 1;\n\nGainAnalysis.YULE_ORDER = 10;\nGainAnalysis.MAX_ORDER = GainAnalysis.YULE_ORDER;\n\nGainAnalysis.MAX_SAMP_FREQ = 48000;\nGainAnalysis.RMS_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysis.RMS_WINDOW_TIME_DENOMINATOR = 20;\nGainAnalysis.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis.MAX_SAMP_FREQ * GainAnalysis.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR + 1);\n\nfunction GainAnalysis() {\n\t//fix 精简\n}\n\n\nfunction Presets() {\n    function VBRPresets(qual, comp, compS,\n                        y, shThreshold, shThresholdS,\n                        adj, adjShort, lower,\n                        curve, sens, inter,\n                        joint, mod, fix) {\n        this.vbr_q = qual;\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.expY = y;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.masking_adj = adj;\n        this.masking_adj_short = adjShort;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.ath_sensitivity = sens;\n        this.interch = inter;\n        this.safejoint = joint;\n        this.sfb21mod = mod;\n        this.msfix = fix;\n    }\n\n    function ABRPresets(kbps, comp, compS,\n                        joint, fix, shThreshold,\n                        shThresholdS, bass, sc,\n                        mask, lower, curve,\n                        interCh, sfScale) {\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.safejoint = joint;\n        this.nsmsfix = fix;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.nsbass = bass;\n        this.scale = sc;\n        this.masking_adj = mask;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.interch = interCh;\n        this.sfscale = sfScale;\n    }\n\n    var lame;\n\n    this.setModules = function (_lame) {\n        lame = _lame;\n    };\n\n    /**\n     * <PRE>\n     * Switch mappings for VBR mode VBR_RH\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_old_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\n    ];\n\n    /**\n     * <PRE>\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_psy_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\n    ];\n\n    function apply_vbr_preset(gfp, a, enforce) {\n        var vbr_preset = gfp.VBR == VbrMode.vbr_rh ? vbr_old_switch_map\n            : vbr_psy_switch_map;\n\n        var x = gfp.VBR_q_frac;\n        var p = vbr_preset[a];\n        var q = vbr_preset[a + 1];\n        var set = p;\n\n        // NOOP(vbr_q);\n        // NOOP(quant_comp);\n        // NOOP(quant_comp_s);\n        // NOOP(expY);\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\n        // LERP(st_lrm);\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\n        // LERP(st_s);\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\n        // LERP(masking_adj);\n        p.masking_adj_short = p.masking_adj_short + x\n            * (q.masking_adj_short - p.masking_adj_short);\n        // LERP(masking_adj_short);\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\n        // LERP(ath_lower);\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\n        // LERP(ath_curve);\n        p.ath_sensitivity = p.ath_sensitivity + x\n            * (q.ath_sensitivity - p.ath_sensitivity);\n        // LERP(ath_sensitivity);\n        p.interch = p.interch + x * (q.interch - p.interch);\n        // LERP(interch);\n        // NOOP(safejoint);\n        // NOOP(sfb21mod);\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\n        // LERP(msfix);\n\n        lame_set_VBR_q(gfp, set.vbr_q);\n\n        if (enforce != 0)\n            gfp.quant_comp = set.quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = set.quant_comp;\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = set.quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = set.quant_comp_s;\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\n        if (set.expY != 0) {\n            gfp.experimentalY = set.expY != 0;\n        }\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\n        if (enforce != 0)\n            gfp.maskingadjust = set.masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = set.masking_adj;\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\n        if (enforce != 0)\n            gfp.maskingadjust_short = set.masking_adj_short;\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n            gfp.maskingadjust_short = set.masking_adj_short;\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\n        if (enforce != 0)\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = set.ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = set.ath_curve;\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\n        if (enforce != 0)\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\n        if (set.interch > 0) {\n            if (enforce != 0)\n                gfp.interChRatio = set.interch;\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n                gfp.interChRatio = set.interch;\n            // SET_OPTION(interChRatio, set.interch, -1);\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (set.safejoint > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\n        }\n        if (set.sfb21mod > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\n        }\n        if (enforce != 0)\n            gfp.msfix = set.msfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = set.msfix;\n        // SET_OPTION(msfix, set.msfix, -1);\n\n        if (enforce == 0) {\n            gfp.VBR_q = a;\n            gfp.VBR_q_frac = x;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  Switch mappings for ABR mode\n     *\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\n     * </PRE>\n     */\n    var abr_switch_map = [\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\n    ];\n\n    function apply_abr_preset(gfp, preset, enforce) {\n        /* Variables for the ABR stuff */\n        var actual_bitrate = preset;\n\n        var r = lame.nearestBitrateFullIndex(preset);\n\n        gfp.VBR = VbrMode.vbr_abr;\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\n            gfp.disable_reservoir = true;\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (abr_switch_map[r].safejoint > 0)\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\n        /* safejoint */\n\n        if (abr_switch_map[r].sfscale > 0) {\n            gfp.internal_flags.noise_shaping = 2;\n        }\n        /* ns-bass tweaks */\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\n            var k = (int)(abr_switch_map[r].nsbass * 4);\n            if (k < 0)\n                k += 64;\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\n        }\n\n        if (enforce != 0)\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\n\n        if (enforce != 0)\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\n\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\n\n        /*\n         * ABR seems to have big problems with clipping, especially at low\n         * bitrates\n         */\n        /*\n         * so we compensate for that here by using a scale value depending on\n         * bitrate\n         */\n        if (enforce != 0)\n            gfp.scale = abr_switch_map[r].scale;\n        else if (!(Math.abs(gfp.scale - -1) > 0))\n            gfp.scale = abr_switch_map[r].scale;\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\n\n        if (enforce != 0)\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\n        if (abr_switch_map[r].masking_adj > 0) {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // .9, 0);\n        } else {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // 1.1, 0);\n        }\n\n        if (enforce != 0)\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\n\n        if (enforce != 0)\n            gfp.interChRatio = abr_switch_map[r].interch;\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n            gfp.interChRatio = abr_switch_map[r].interch;\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\n\n        return preset;\n    }\n\n    this.apply_preset = function(gfp, preset, enforce) {\n        /* translate legacy presets */\n        switch (preset) {\n            case Lame.R3MIX:\n            {\n                preset = Lame.V3;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.MEDIUM:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.MEDIUM_FAST:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.STANDARD:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.STANDARD_FAST:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.EXTREME:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.EXTREME_FAST:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.INSANE:\n            {\n                preset = 320;\n                gfp.preset = preset;\n                apply_abr_preset(gfp, preset, enforce);\n                gfp.VBR = VbrMode.vbr_off;\n                return preset;\n            }\n        }\n\n        gfp.preset = preset;\n        {\n            switch (preset) {\n                case Lame.V9:\n                    apply_vbr_preset(gfp, 9, enforce);\n                    return preset;\n                case Lame.V8:\n                    apply_vbr_preset(gfp, 8, enforce);\n                    return preset;\n                case Lame.V7:\n                    apply_vbr_preset(gfp, 7, enforce);\n                    return preset;\n                case Lame.V6:\n                    apply_vbr_preset(gfp, 6, enforce);\n                    return preset;\n                case Lame.V5:\n                    apply_vbr_preset(gfp, 5, enforce);\n                    return preset;\n                case Lame.V4:\n                    apply_vbr_preset(gfp, 4, enforce);\n                    return preset;\n                case Lame.V3:\n                    apply_vbr_preset(gfp, 3, enforce);\n                    return preset;\n                case Lame.V2:\n                    apply_vbr_preset(gfp, 2, enforce);\n                    return preset;\n                case Lame.V1:\n                    apply_vbr_preset(gfp, 1, enforce);\n                    return preset;\n                case Lame.V0:\n                    apply_vbr_preset(gfp, 0, enforce);\n                    return preset;\n                default:\n                    break;\n            }\n        }\n        if (8 <= preset && preset <= 320) {\n            return apply_abr_preset(gfp, preset, enforce);\n        }\n\n        /* no corresponding preset found */\n        gfp.preset = 0;\n        return preset;\n    }\n\n    // Rest from getset.c:\n\n    /**\n     * VBR quality level.<BR>\n     * 0 = highest<BR>\n     * 9 = lowest\n     */\n    function lame_set_VBR_q(gfp, VBR_q) {\n        var ret = 0;\n\n        if (0 > VBR_q) {\n            /* Unknown VBR quality level! */\n            ret = -1;\n            VBR_q = 0;\n        }\n        if (9 < VBR_q) {\n            ret = -1;\n            VBR_q = 9;\n        }\n\n        gfp.VBR_q = VBR_q;\n        gfp.VBR_q_frac = 0;\n        return ret;\n    }\n\n}\n\n/*\n *      bit reservoir source file\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n/**\n * ResvFrameBegin:<BR>\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\n * the reservoir, and checks to make sure main_data_begin was set properly by\n * the formatter<BR>\n * Background information:\n * \n * This is the original text from the ISO standard. Because of sooo many bugs\n * and irritations correcting comments are added in brackets []. A '^W' means\n * you should remove the last word.\n * \n * <PRE>\n *  1. The following rule can be used to calculate the maximum\n *     number of bits used for one granule [^W frame]:<BR>\n *     At the highest possible bitrate of Layer III (320 kbps\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\n *     [^W^W^W are designed to have] constant length, i.e.\n *     one buffer [^W^W the frame] length is:<BR>\n * \n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\n * \n *     This value is used as the maximum buffer per channel [^W^W] at\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\n *     [per granule and channel] at 48 kHz sampling frequency.\n *     This means that there is a maximum deviation (short time buffer\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\n *     The actual deviation is equal to the number of bytes [with the\n *     meaning of octets] denoted by the main_data_end offset pointer.\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\n *     ... The xchange of buffer bits between the left and right channel\n *     is allowed without restrictions [exception: dual channel].\n *     Because of the [constructed] constraint on the buffer size\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\n *     all data are allocated between adjacent header [^W sync] words\n *     [, i.e. there is no buffering at all].\n * </PRE>\n */\n\n\nfunction Reservoir() {\n\tvar bs;\n\n\tthis.setModules  = function(_bs) {\n\t\tbs = _bs;\n\t}\n\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar maxmp3buf;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar frameLength = bs.getframebits(gfp);\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\n\n\t\t/**\n\t\t * <PRE>\n\t\t *  Meaning of the variables:\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\n\t\t *          Number of bits can be stored in previous frame(s) due to\n\t\t *          counter size constaints\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\n\t\t *          value for MPEG-1 and -2)\n\t\t * \n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\n\t\t *          so this is the absolute maximum supported by the format.\n\t\t * \n\t\t * \n\t\t *      fullFrameBits:  maximum number of bits available for encoding\n\t\t *                      the current frame.\n\t\t * \n\t\t *      mean_bits:      target number of bits per granule.\n\t\t * \n\t\t *      frameLength:\n\t\t * \n\t\t *      gfc.ResvMax:   maximum allowed reservoir\n\t\t * \n\t\t *      gfc.ResvSize:  current reservoir size\n\t\t * \n\t\t *      l3_side.resvDrain_pre:\n\t\t *         ancillary data to be added to previous frame:\n\t\t *         (only usefull in VBR modes if it is possible to have\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\n\t\t *         see #define NEW_DRAIN\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\n\t\t *                     as there exists one example, where the FhG decoder\n\t\t *                     can't decode a -b320 CBR file anymore.\n\t\t * \n\t\t *      l3_side.resvDrain_post:\n\t\t *         ancillary data to be added to this frame:\n\t\t * \n\t\t * </PRE>\n\t\t */\n\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\n\n\t\t/*\n\t\t * maximum allowed frame size. dont use more than this number of bits,\n\t\t * even if the frame has the space for them:\n\t\t */\n\t\tif (gfp.brate > 320) {\n\t\t\t/* in freeformat the buffer is constant */\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t} else {\n\t\t\t/*\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\n\t\t\t * size of a 320kbps 32kHz frame\n\t\t\t */\n\t\t\tmaxmp3buf = 8 * 1440;\n\n\t\t\t/*\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\n\t\t\t * instead of using 8*960.\n\t\t\t */\n\n\t\t\tif (gfp.strict_ISO) {\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t\t}\n\t\t}\n\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\n\t\tif (gfc.ResvMax > resvLimit)\n\t\t\tgfc.ResvMax = resvLimit;\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\n\t\t\tgfc.ResvMax = 0;\n\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\n\n\t\tif (fullFrameBits > maxmp3buf)\n\t\t\tfullFrameBits = maxmp3buf;\n\n\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t// frame analyzer code\n\t\tif (gfc.pinfo != null) {\n\t\t\t/*\n\t\t\t * expected bits per channel per granule [is this also right for\n\t\t\t * mono/stereo, MPEG-1/2 ?]\n\t\t\t */\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\n\t\t}\n\n\t\treturn fullFrameBits;\n\t}\n\n\t/**\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\n\t * extra_bits: amount extra available from reservoir<BR>\n\t * Mark Taylor 4/99\n\t */\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar add_bits;\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\n\n\t\t/* compensate the saved bits used in the 1st granule */\n\t\tif (cbr != 0)\n\t\t\tResvSize += mean_bits;\n\n\t\tif ((gfc.substep_shaping & 1) != 0)\n\t\t\tResvMax *= 0.9;\n\n\t\ttarg_bits.bits = mean_bits;\n\n\t\t/* extra bits if the reservoir is almost full */\n\t\tif (ResvSize * 10 > ResvMax * 9) {\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\n\t\t\ttarg_bits.bits += add_bits;\n\t\t\tgfc.substep_shaping |= 0x80;\n\t\t} else {\n\t\t\tadd_bits = 0;\n\t\t\tgfc.substep_shaping &= 0x7f;\n\t\t\t/*\n\t\t\t * build up reservoir. this builds the reservoir a little slower\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\n\t\t\t * always produce 100 (the old value) at 128kbs\n\t\t\t */\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\n\t\t}\n\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\n\t\textra_bits -= add_bits;\n\n\t\tif (extra_bits < 0)\n\t\t\textra_bits = 0;\n\t\treturn extra_bits;\n\t}\n\n\t/**\n\t * Called after a granule's bit allocation. Readjusts the size of the\n\t * reservoir to reflect the granule's usage.\n\t */\n\tthis.ResvAdjust = function(gfc, gi) {\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\n\t}\n\n\t/**\n\t * Called after all granules in a frame have been allocated. Makes sure that\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\n\t */\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\n\t\tvar over_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\n\t\tvar stuffingBits = 0;\n\t\tl3_side.resvDrain_post = 0;\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t/* we must be byte aligned */\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\n\t\t\tstuffingBits += over_bits;\n\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\n\t\tif (over_bits > 0) {\n\t\t\tstuffingBits += over_bits;\n\t\t}\n\n\t\t/*\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\n\t\t * frame at 32 kHz sample rate.\n\t\t * \n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * Robert Hegemann, 2010-02-13.\n\t\t */\n\t\t/*\n\t\t * drain as many bits as possible into previous frame ancillary data In\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\n\t\t * mt 4/00\n\t\t */\n\t\t{\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\n\t\t\tstuffingBits -= 8 * mdb_bytes;\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\n\t\t}\n\t\t/* drain the rest into this frames ancillary data */\n\t\tl3_side.resvDrain_post += stuffingBits;\n\t\tgfc.ResvSize -= stuffingBits;\n\t}\n}\n\n\n/**\n * A Vbr header may be present in the ancillary data field of the first frame of\n * an mp3 bitstream<BR>\n * The Vbr header (optionally) contains\n * <UL>\n * <LI>frames total number of audio frames in the bitstream\n * <LI>bytes total number of bytes in the bitstream\n * <LI>toc table of contents\n * </UL>\n *\n * toc (table of contents) gives seek points for random access.<BR>\n * The ith entry determines the seek point for i-percent duration.<BR>\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\n */\nVBRTag.NUMTOCENTRIES = 100;\nVBRTag.MAXFRAMESIZE = 2880;\n\nfunction VBRTag() {\n\n    var lame;\n    var bs;\n    var v;\n\n    this.setModules = function (_lame, _bs, _v) {\n        lame = _lame;\n        bs = _bs;\n        v = _v;\n    };\n\t\n\t//fix 精简\n\t\n    /**\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\n     * x^16+x^15+x^2+1\n     */\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\n        0x4100, 0x81C1, 0x8081, 0x4040];\n\t\t\n\t//fix 精简\n\t\n    /**\n     * Fast CRC-16 computation (uses table crc16Lookup).\n     *\n     * @param value\n     * @param crc\n     * @return\n     */\n    function crcUpdateLookup(value, crc) {\n        var tmp = crc ^ value;\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\n        return crc;\n    }\n\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\n        for (var i = 0; i < size; ++i)\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\n    }\n\n\t//fix 精简\n}\n\n\n\nBitStream.EQ = function (a, b) {\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\n        .abs(a) * 1e-6))\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\n};\n\nBitStream.NEQ = function (a, b) {\n    return !BitStream.EQ(a, b);\n};\n\nfunction BitStream() {\n    var self = this;\n    var CRC16_POLYNOMIAL = 0x8005;\n\n    /*\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\n     * MAX_LENGTH-2 just to be on the safe side\n     */\n    var MAX_LENGTH = 32;\n\n    //GainAnalysis ga;\n    //MPGLib mpg;\n    //Version ver;\n    //VBRTag vbr;\n    var ga = null;\n    var mpg = null;\n    var ver = null;\n    var vbr = null;\n\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\n    //\tVBRTag vbr) {\n\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\n        ga = _ga;\n        mpg = _mpg;\n        ver = _ver;\n        vbr = _vbr;\n    };\n\n    /**\n     * Bit stream buffer.\n     */\n    //private byte[] buf;\n    var buf = null;\n    /**\n     * Bit counter of bit stream.\n     */\n    var totbit = 0;\n    /**\n     * Pointer to top byte in buffer.\n     */\n    var bufByteIdx = 0;\n    /**\n     * Pointer to top bit of top byte in buffer.\n     */\n    var bufBitIdx = 0;\n\n    /**\n     * compute bitsperframe and mean_bits for a layer III frame\n     */\n    this.getframebits = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var bit_rate;\n\n        /* get bitrate in kbps [?] */\n        if (gfc.bitrate_index != 0)\n            bit_rate = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        else\n            bit_rate = gfp.brate;\n\n        /* main encoding routine toggles padding on and off */\n        /* one Layer3 Slot consists of 8 bits */\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\n        return 8 * bytes;\n    };\n\n    function putheader_bits(gfc) {\n        System.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\n        bufByteIdx += gfc.sideinfo_len;\n        totbit += gfc.sideinfo_len * 8;\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\n    }\n\n    /**\n     * write j bits into the bit stream\n     */\n    function putbits2(gfc, val, j) {\n\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\n                    putheader_bits(gfc);\n                }\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            /* 32 too large on 32 bit machines */\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * write j bits into the bit stream, ignoring frame headers\n     */\n    function putbits_noheaders(gfc, val, j) {\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            /* 32 too large on 32 bit machines */\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\n     * out a frame using just main_data, due to the limited number of bits to\n     * indicate main_data_length. In these situations, we put stuffing bits into\n     * the ancillary data...\n     */\n    function drain_into_ancillary(gfp, remainingBits) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4c, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x41, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4d, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x45, 8);\n            remainingBits -= 8;\n        }\n\n        if (remainingBits >= 32) {\n            var version = ver.getLameShortVersion();\n            if (remainingBits >= 32)\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\n                    remainingBits -= 8;\n                    putbits2(gfc, version.charCodeAt(i), 8); //fix 错误的使用charAt\n                }\n        }\n\n        for (; remainingBits >= 1; remainingBits -= 1) {\n            putbits2(gfc, gfc.ancillary_flag, 1);\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\n        }\n\n\n    }\n\n    /**\n     * write N bits into the header\n     */\n    function writeheader(gfc, val, j) {\n        var ptr = gfc.header[gfc.h_ptr].ptr;\n\n        while (j > 0) {\n            var k = Math.min(j, 8 - (ptr & 7));\n            j -= k;\n            /* >> 32 too large for 32 bit machines */\n\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\n            ptr += k;\n        }\n        gfc.header[gfc.h_ptr].ptr = ptr;\n    }\n\n    function CRC_update(value, crc) {\n        value <<= 8;\n        for (var i = 0; i < 8; i++) {\n            value <<= 1;\n            crc <<= 1;\n\n            if ((((crc ^ value) & 0x10000) != 0))\n                crc ^= CRC16_POLYNOMIAL;\n        }\n        return crc;\n    }\n\n    this.CRC_writeheader = function (gfc, header) {\n        var crc = 0xffff;\n        /* (jo) init crc16 for error_protection */\n\n        crc = CRC_update(header[2] & 0xff, crc);\n        crc = CRC_update(header[3] & 0xff, crc);\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\n            crc = CRC_update(header[i] & 0xff, crc);\n        }\n\n        header[4] = (byte)(crc >> 8);\n        header[5] = (byte)(crc & 255);\n    };\n\n    function encodeSideInfo2(gfp, bitsPerFrame) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var gr, ch;\n\n        l3_side = gfc.l3_side;\n        gfc.header[gfc.h_ptr].ptr = 0;\n        Arrays.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\n        if (gfp.out_samplerate < 16000)\n            writeheader(gfc, 0xffe, 12);\n        else\n            writeheader(gfc, 0xfff, 12);\n        writeheader(gfc, (gfp.version), 1);\n        writeheader(gfc, 4 - 3, 2);\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\n        writeheader(gfc, (gfc.bitrate_index), 4);\n        writeheader(gfc, (gfc.samplerate_index), 2);\n        writeheader(gfc, (gfc.padding), 1);\n        writeheader(gfc, (gfp.extension), 1);\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\n        writeheader(gfc, (gfc.mode_ext), 2);\n        writeheader(gfc, (gfp.copyright), 1);\n        writeheader(gfc, (gfp.original), 1);\n        writeheader(gfc, (gfp.emphasis), 2);\n        if (gfp.error_protection) {\n            writeheader(gfc, 0, 16);\n            /* dummy */\n        }\n\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            writeheader(gfc, (l3_side.main_data_begin), 9);\n\n            if (gfc.channels_out == 2)\n                writeheader(gfc, l3_side.private_bits, 3);\n            else\n                writeheader(gfc, l3_side.private_bits, 5);\n\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var band;\n                for (band = 0; band < 4; band++) {\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\n                }\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                    writeheader(gfc, gi.big_values / 2, 9);\n                    writeheader(gfc, gi.global_gain, 8);\n                    writeheader(gfc, gi.scalefac_compress, 4);\n\n                    if (gi.block_type != Encoder.NORM_TYPE) {\n                        writeheader(gfc, 1, 1);\n                        /* window_switching_flag */\n                        writeheader(gfc, gi.block_type, 2);\n                        writeheader(gfc, gi.mixed_block_flag, 1);\n\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n\n                        writeheader(gfc, gi.subblock_gain[0], 3);\n                        writeheader(gfc, gi.subblock_gain[1], 3);\n                        writeheader(gfc, gi.subblock_gain[2], 3);\n                    } else {\n                        writeheader(gfc, 0, 1);\n                        /* window_switching_flag */\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n                        if (gi.table_select[2] == 14)\n                            gi.table_select[2] = 16;\n                        writeheader(gfc, gi.table_select[2], 5);\n\n                        writeheader(gfc, gi.region0_count, 4);\n                        writeheader(gfc, gi.region1_count, 3);\n                    }\n                    writeheader(gfc, gi.preflag, 1);\n                    writeheader(gfc, gi.scalefac_scale, 1);\n                    writeheader(gfc, gi.count1table_select, 1);\n                }\n            }\n        } else {\n            /* MPEG2 */\n            writeheader(gfc, (l3_side.main_data_begin), 8);\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\n\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                writeheader(gfc, gi.big_values / 2, 9);\n                writeheader(gfc, gi.global_gain, 8);\n                writeheader(gfc, gi.scalefac_compress, 9);\n\n                if (gi.block_type != Encoder.NORM_TYPE) {\n                    writeheader(gfc, 1, 1);\n                    /* window_switching_flag */\n                    writeheader(gfc, gi.block_type, 2);\n                    writeheader(gfc, gi.mixed_block_flag, 1);\n\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n\n                    writeheader(gfc, gi.subblock_gain[0], 3);\n                    writeheader(gfc, gi.subblock_gain[1], 3);\n                    writeheader(gfc, gi.subblock_gain[2], 3);\n                } else {\n                    writeheader(gfc, 0, 1);\n                    /* window_switching_flag */\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n                    if (gi.table_select[2] == 14)\n                        gi.table_select[2] = 16;\n                    writeheader(gfc, gi.table_select[2], 5);\n\n                    writeheader(gfc, gi.region0_count, 4);\n                    writeheader(gfc, gi.region1_count, 3);\n                }\n\n                writeheader(gfc, gi.scalefac_scale, 1);\n                writeheader(gfc, gi.count1table_select, 1);\n            }\n        }\n\n        if (gfp.error_protection) {\n            /* (jo) error_protection: add crc16 information to header */\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\n        }\n\n        {\n            var old = gfc.h_ptr;\n\n            gfc.h_ptr = (old + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\n                + bitsPerFrame;\n\n            if (gfc.h_ptr == gfc.w_ptr) {\n                /* yikes! we are out of header buffer space */\n                System.err\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n            }\n\n        }\n    }\n\n    function huffman_coder_count1(gfc, gi) {\n        /* Write count1 area */\n        var h = Tables.ht[gi.count1table_select + 32];\n        var i, bits = 0;\n\n        var ix = gi.big_values;\n        var xr = gi.big_values;\n\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\n            var huffbits = 0;\n            var p = 0, v;\n\n            v = gi.l3_enc[ix + 0];\n            if (v != 0) {\n                p += 8;\n                if (gi.xr[xr + 0] < 0)\n                    huffbits++;\n            }\n\n            v = gi.l3_enc[ix + 1];\n            if (v != 0) {\n                p += 4;\n                huffbits *= 2;\n                if (gi.xr[xr + 1] < 0)\n                    huffbits++;\n            }\n\n            v = gi.l3_enc[ix + 2];\n            if (v != 0) {\n                p += 2;\n                huffbits *= 2;\n                if (gi.xr[xr + 2] < 0)\n                    huffbits++;\n            }\n\n            v = gi.l3_enc[ix + 3];\n            if (v != 0) {\n                p++;\n                huffbits *= 2;\n                if (gi.xr[xr + 3] < 0)\n                    huffbits++;\n            }\n\n            ix += 4;\n            xr += 4;\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\n            bits += h.hlen[p];\n        }\n        return bits;\n    }\n\n    /**\n     * Implements the pseudocode of page 98 of the IS\n     */\n    function Huffmancode(gfc, tableindex, start, end, gi) {\n        var h = Tables.ht[tableindex];\n        var bits = 0;\n\n        if (0 == tableindex)\n            return bits;\n\n        for (var i = start; i < end; i += 2) {\n            var cbits = 0;\n            var xbits = 0;\n            var linbits = h.xlen;\n            var xlen = h.xlen;\n            var ext = 0;\n            var x1 = gi.l3_enc[i];\n            var x2 = gi.l3_enc[i + 1];\n\n            if (x1 != 0) {\n                if (gi.xr[i] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            if (tableindex > 15) {\n                /* use ESC-words */\n                if (x1 > 14) {\n                    var linbits_x1 = x1 - 15;\n                    ext |= linbits_x1 << 1;\n                    xbits = linbits;\n                    x1 = 15;\n                }\n\n                if (x2 > 14) {\n                    var linbits_x2 = x2 - 15;\n                    ext <<= linbits;\n                    ext |= linbits_x2;\n                    xbits += linbits;\n                    x2 = 15;\n                }\n                xlen = 16;\n            }\n\n            if (x2 != 0) {\n                ext <<= 1;\n                if (gi.xr[i + 1] < 0)\n                    ext++;\n                cbits--;\n            }\n\n\n            x1 = x1 * xlen + x2;\n            xbits -= cbits;\n            cbits += h.hlen[x1];\n\n\n            putbits2(gfc, h.table[x1], cbits);\n            putbits2(gfc, ext, xbits);\n            bits += cbits + xbits;\n        }\n        return bits;\n    }\n\n    /**\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\n     * well as the definitions of the side information on pages 26 and 27.\n     */\n    function ShortHuffmancodebits(gfc, gi) {\n        var region1Start = 3 * gfc.scalefac_band.s[3];\n        if (region1Start > gi.big_values)\n            region1Start = gi.big_values;\n\n        /* short blocks do not have a region2 */\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            gi.big_values, gi);\n        return bits;\n    }\n\n    function LongHuffmancodebits(gfc, gi) {\n        var bigvalues, bits;\n        var region1Start, region2Start;\n\n        bigvalues = gi.big_values;\n\n        var i = gi.region0_count + 1;\n        region1Start = gfc.scalefac_band.l[i];\n        i += gi.region1_count + 1;\n        region2Start = gfc.scalefac_band.l[i];\n\n        if (region1Start > bigvalues)\n            region1Start = bigvalues;\n\n        if (region2Start > bigvalues)\n            region2Start = bigvalues;\n\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            region2Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\n            gi);\n        return bits;\n    }\n\n    function writeMainData(gfp) {\n        var gr, ch, sfb, data_bits, tot_bits = 0;\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n\n        if (gfp.version == 1) {\n            /* MPEG 1 */\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    var slen1 = Takehiro.slen1_tab[gi.scalefac_compress];\n                    var slen2 = Takehiro.slen2_tab[gi.scalefac_compress];\n                    data_bits = 0;\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\n                        data_bits += slen1;\n                    }\n                    for (; sfb < gi.sfbmax; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\n                        data_bits += slen2;\n                    }\n\n                    if (gi.block_type == Encoder.SHORT_TYPE) {\n                        data_bits += ShortHuffmancodebits(gfc, gi);\n                    } else {\n                        data_bits += LongHuffmancodebits(gfc, gi);\n                    }\n                    data_bits += huffman_coder_count1(gfc, gi);\n                    /* does bitcount in quantize.c agree with actual bit count? */\n                    tot_bits += data_bits;\n                }\n                /* for ch */\n            }\n            /* for gr */\n        } else {\n            /* MPEG 2 */\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                var i, sfb_partition, scale_bits = 0;\n                data_bits = 0;\n                sfb = 0;\n                sfb_partition = 0;\n\n                if (gi.block_type == Encoder.SHORT_TYPE) {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\n                            scale_bits += 3 * slen;\n                        }\n                    }\n                    data_bits += ShortHuffmancodebits(gfc, gi);\n                } else {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\n                            scale_bits += slen;\n                        }\n                    }\n                    data_bits += LongHuffmancodebits(gfc, gi);\n                }\n                data_bits += huffman_coder_count1(gfc, gi);\n                /* does bitcount in quantize.c agree with actual bit count? */\n                tot_bits += scale_bits + data_bits;\n            }\n            /* for ch */\n        }\n        /* for gf */\n        return tot_bits;\n    }\n\n    /* main_data */\n\n    function TotalBytes() {\n        this.total = 0;\n    }\n\n    /*\n     * compute the number of bits required to flush all mp3 frames currently in\n     * the buffer. This should be the same as the reservoir size. Only call this\n     * routine between frames - i.e. only after all headers and data have been\n     * added to the buffer by format_bitstream().\n     *\n     * Also compute total_bits_output = size of mp3 buffer (including frame\n     * headers which may not have yet been send to the mp3 buffer) + number of\n     * bits needed to flush all mp3 frames.\n     *\n     * total_bytes_output is the size of the mp3 output buffer if\n     * lame_encode_flush_nogap() was called right now.\n     */\n    function compute_flushbits(gfp, total_bytes_output) {\n        var gfc = gfp.internal_flags;\n        var flushbits, remaining_headers;\n        var bitsPerFrame;\n        var last_ptr, first_ptr;\n        first_ptr = gfc.w_ptr;\n        /* first header to add to bitstream */\n        last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\n\n        /* add this many bits to bitstream so we can flush all headers */\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\n        total_bytes_output.total = flushbits;\n\n        if (flushbits >= 0) {\n            /* if flushbits >= 0, some headers have not yet been written */\n            /* reduce flushbits by the size of the headers */\n            remaining_headers = 1 + last_ptr - first_ptr;\n            if (last_ptr < first_ptr)\n                remaining_headers = 1 + last_ptr - first_ptr\n                    + LameInternalFlags.MAX_HEADER_BUF;\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\n        }\n\n        /*\n         * finally, add some bits so that the last frame is complete these bits\n         * are not necessary to decode the last frame, but some decoders will\n         * ignore last frame if these bits are missing\n         */\n        bitsPerFrame = self.getframebits(gfp);\n        flushbits += bitsPerFrame;\n        total_bytes_output.total += bitsPerFrame;\n        /* round up: */\n        if ((total_bytes_output.total % 8) != 0)\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\n        else\n            total_bytes_output.total = (total_bytes_output.total / 8);\n        total_bytes_output.total += bufByteIdx + 1;\n\n        if (flushbits < 0) {\n            System.err.println(\"strange error flushing buffer ... \\n\");\n        }\n        return flushbits;\n    }\n\n    this.flush_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var flushbits;\n        var last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\n        l3_side = gfc.l3_side;\n\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\n            return;\n        drain_into_ancillary(gfp, flushbits);\n\n        /* check that the 100% of the last frame has been written to bitstream */\n\n        /*\n         * we have padded out all frames with ancillary data, which is the same\n         * as filling the bitreservoir with ancillary data, so :\n         */\n        gfc.ResvSize = 0;\n        l3_side.main_data_begin = 0;\n\n        /* save the ReplayGain value */\n        if (gfc.findReplayGain) {\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\n            /* round to nearest */\n        }\n\n        /* find the gain and scale change required for no clipping */\n        if (gfc.findPeakSample) {\n            gfc.noclipGainChange = Math.ceil(\n                        Math_log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\n            /* round up */\n\n            if (gfc.noclipGainChange > 0) {\n                /* clipping occurs */\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\n                    gfc.noclipScale = (Math\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\n                /* round down */\n                else {\n                    /*\n                     * the user specified his own scaling factor. We could\n                     * suggest the scaling factor of\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\n                     * very inaccurate. So we'd rather not advice him on the\n                     * scaling factor.\n                     */\n                    gfc.noclipScale = -1;\n                }\n            } else\n            /* no clipping */\n                gfc.noclipScale = -1;\n        }\n    };\n\n    this.add_dummy_byte = function (gfp, val, n) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        while (n-- > 0) {\n            putbits_noheaders(gfc, val, 8);\n\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing += 8;\n        }\n    };\n\n    /**\n     * This is called after a frame of audio has been quantized and coded. It\n     * will write the encoded audio to the bitstream. Note that from a layer3\n     * encoder's perspective the bit stream is primarily a series of main_data()\n     * blocks, with header and side information inserted at the proper locations\n     * to maintain framing. (See Figure A.7 in the IS).\n     */\n    this.format_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        l3_side = gfc.l3_side;\n\n        var bitsPerFrame = this.getframebits(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\n\n        encodeSideInfo2(gfp, bitsPerFrame);\n        var bits = 8 * gfc.sideinfo_len;\n        bits += writeMainData(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\n        bits += l3_side.resvDrain_post;\n\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\n\n        /*\n         * compare number of bits needed to clear all buffered mp3 frames with\n         * what we think the resvsize is:\n         */\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\n            System.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\n        }\n\n        /*\n         * compare main_data_begin for the next frame with what we think the\n         * resvsize is:\n         */\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\n            System.err.printf(\"bit reservoir error: \\n\"\n                + \"l3_side.main_data_begin: %d \\n\"\n                + \"Resvoir size:             %d \\n\"\n                + \"resv drain (post)         %d \\n\"\n                + \"resv drain (pre)          %d \\n\"\n                + \"header and sideinfo:      %d \\n\"\n                + \"data bits:                %d \\n\"\n                + \"total bits:               %d (remainder: %d) \\n\"\n                + \"bitsperframe:             %d \\n\",\n                8 * l3_side.main_data_begin, gfc.ResvSize,\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\n\n            System.err.println(\"This is a fatal error.  It has several possible causes:\");\n            System.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\n            System.err.println(\" 9%%  Your system is overclocked\");\n            System.err.println(\" 1%%  bug in LAME encoding library\");\n\n            gfc.ResvSize = l3_side.main_data_begin * 8;\n        }\n        //;\n\n        if (totbit > 1000000000) {\n            /*\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\n             * bit counter\n             */\n            var i;\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing -= totbit;\n            totbit = 0;\n        }\n\n        return 0;\n    };\n\n    /**\n     * <PRE>\n     * copy data out of the internal MP3 bit buffer into a user supplied\n     *       unsigned char buffer.\n     *\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\n     *       mp3data=1      data is real mp3 frame data.\n     * </PRE>\n     */\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\n        var minimum = bufByteIdx + 1;\n        if (minimum <= 0)\n            return 0;\n        if (size != 0 && minimum > size) {\n            /* buffer is too small */\n            return -1;\n        }\n        System.arraycopy(buf, 0, buffer, bufferPos, minimum);\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n\n        if (mp3data != 0) {\n            var crc = new_int(1);\n            crc[0] = gfc.nMusicCRC;\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\n            gfc.nMusicCRC = crc[0];\n\n            /**\n             * sum number of bytes belonging to the mp3 stream this info will be\n             * written into the Xing/LAME header for seeking\n             */\n            if (minimum > 0) {\n                gfc.VBR_seek_table.nBytesWritten += minimum;\n            }\n\n            if (gfc.decode_on_the_fly) { /* decode the frame */\n                var pcm_buf = new_float_n([2, 1152]);\n                var mp3_in = minimum;\n                var samples_out = -1;\n                var i;\n\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\n                while (samples_out != 0) {\n\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\n                    /*\n                     * samples_out = 0: need more data to decode samples_out =\n                     * -1: error. Lets assume 0 pcm output samples_out = number\n                     * of samples output\n                     */\n\n                    /*\n                     * set the lenght of the mp3 input buffer to zero, so that\n                     * in the next iteration of the loop we will be querying\n                     * mpglib about buffered data\n                     */\n                    mp3_in = 0;\n\n                    if (samples_out == -1) {\n                        /*\n                         * error decoding. Not fatal, but might screw up the\n                         * ReplayGain tag. What should we do? Ignore for now\n                         */\n                        samples_out = 0;\n                    }\n                    if (samples_out > 0) {\n                        /* process the PCM data */\n\n                        /*\n                         * this should not be possible, and indicates we have\n                         * overflown the pcm_buf buffer\n                         */\n\n                        if (gfc.findPeakSample) {\n                            for (i = 0; i < samples_out; i++) {\n                                if (pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = pcm_buf[0][i];\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = -pcm_buf[0][i];\n                            }\n                            if (gfc.channels_out > 1)\n                                for (i = 0; i < samples_out; i++) {\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = pcm_buf[1][i];\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = -pcm_buf[1][i];\n                                }\n                        }\n\n                        if (gfc.findReplayGain)\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\n                                    pcm_buf[1], 0, samples_out,\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                                return -6;\n\n                    }\n                    /* if (samples_out>0) */\n                }\n                /* while (samples_out!=0) */\n            }\n            /* if (gfc.decode_on_the_fly) */\n\n        }\n        /* if (mp3data) */\n        return minimum;\n    };\n\n    this.init_bit_stream_w = function (gfc) {\n        buf = new_byte(Lame.LAME_MAXMP3BUFFER);\n\n        gfc.h_ptr = gfc.w_ptr = 0;\n        gfc.header[gfc.h_ptr].write_timing = 0;\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n        totbit = 0;\n    };\n\n    // From machine.h\n\n\n}\n\nfunction HuffCodeTab(len, max, tab, hl) {\n    this.xlen = len;\n    this.linmax = max;\n    this.table = tab;\n    this.hlen = hl;\n}\n\nvar Tables = {};\n\n\nTables.t1HB = [\n    1, 1,\n    1, 0\n];\n\nTables.t2HB = [\n    1, 2, 1,\n    3, 1, 1,\n    3, 2, 0\n];\n\nTables.t3HB = [\n    3, 2, 1,\n    1, 1, 1,\n    3, 2, 0\n];\n\nTables.t5HB = [\n    1, 2, 6, 5,\n    3, 1, 4, 4,\n    7, 5, 7, 1,\n    6, 1, 1, 0\n];\n\nTables.t6HB = [\n    7, 3, 5, 1,\n    6, 2, 3, 2,\n    5, 4, 4, 1,\n    3, 3, 2, 0\n];\n\nTables.t7HB = [\n    1, 2, 10, 19, 16, 10,\n    3, 3, 7, 10, 5, 3,\n    11, 4, 13, 17, 8, 4,\n    12, 11, 18, 15, 11, 2,\n    7, 6, 9, 14, 3, 1,\n    6, 4, 5, 3, 2, 0\n];\n\nTables.t8HB = [\n    3, 4, 6, 18, 12, 5,\n    5, 1, 2, 16, 9, 3,\n    7, 3, 5, 14, 7, 3,\n    19, 17, 15, 13, 10, 4,\n    13, 5, 8, 11, 5, 1,\n    12, 4, 4, 1, 1, 0\n];\n\nTables.t9HB = [\n    7, 5, 9, 14, 15, 7,\n    6, 4, 5, 5, 6, 7,\n    7, 6, 8, 8, 8, 5,\n    15, 6, 9, 10, 5, 1,\n    11, 7, 9, 6, 4, 1,\n    14, 4, 6, 2, 6, 0\n];\n\nTables.t10HB = [\n    1, 2, 10, 23, 35, 30, 12, 17,\n    3, 3, 8, 12, 18, 21, 12, 7,\n    11, 9, 15, 21, 32, 40, 19, 6,\n    14, 13, 22, 34, 46, 23, 18, 7,\n    20, 19, 33, 47, 27, 22, 9, 3,\n    31, 22, 41, 26, 21, 20, 5, 3,\n    14, 13, 10, 11, 16, 6, 5, 1,\n    9, 8, 7, 8, 4, 4, 2, 0\n];\n\nTables.t11HB = [\n    3, 4, 10, 24, 34, 33, 21, 15,\n    5, 3, 4, 10, 32, 17, 11, 10,\n    11, 7, 13, 18, 30, 31, 20, 5,\n    25, 11, 19, 59, 27, 18, 12, 5,\n    35, 33, 31, 58, 30, 16, 7, 5,\n    28, 26, 32, 19, 17, 15, 8, 14,\n    14, 12, 9, 13, 14, 9, 4, 1,\n    11, 4, 6, 6, 6, 3, 2, 0\n];\n\nTables.t12HB = [\n    9, 6, 16, 33, 41, 39, 38, 26,\n    7, 5, 6, 9, 23, 16, 26, 11,\n    17, 7, 11, 14, 21, 30, 10, 7,\n    17, 10, 15, 12, 18, 28, 14, 5,\n    32, 13, 22, 19, 18, 16, 9, 5,\n    40, 17, 31, 29, 17, 13, 4, 2,\n    27, 12, 11, 15, 10, 7, 4, 1,\n    27, 12, 8, 12, 6, 3, 1, 0\n];\n\nTables.t13HB = [\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\n];\n\nTables.t15HB = [\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\n];\n\nTables.t16HB = [\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\n];\n\nTables.t24HB = [\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\n];\n\nTables.t32HB = [\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\n];\n\nTables.t33HB = [\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\n];\n\nTables.t1l = [\n    1, 4,\n    3, 5\n];\n\nTables.t2l = [\n    1, 4, 7,\n    4, 5, 7,\n    6, 7, 8\n];\n\nTables.t3l = [\n    2, 3, 7,\n    4, 4, 7,\n    6, 7, 8\n];\n\nTables.t5l = [\n    1, 4, 7, 8,\n    4, 5, 8, 9,\n    7, 8, 9, 10,\n    8, 8, 9, 10\n];\n\nTables.t6l = [\n    3, 4, 6, 8,\n    4, 4, 6, 7,\n    5, 6, 7, 8,\n    7, 7, 8, 9\n];\n\nTables.t7l = [\n    1, 4, 7, 9, 9, 10,\n    4, 6, 8, 9, 9, 10,\n    7, 7, 9, 10, 10, 11,\n    8, 9, 10, 11, 11, 11,\n    8, 9, 10, 11, 11, 12,\n    9, 10, 11, 12, 12, 12\n];\n\nTables.t8l = [\n    2, 4, 7, 9, 9, 10,\n    4, 4, 6, 10, 10, 10,\n    7, 6, 8, 10, 10, 11,\n    9, 10, 10, 11, 11, 12,\n    9, 9, 10, 11, 12, 12,\n    10, 10, 11, 11, 13, 13\n];\n\nTables.t9l = [\n    3, 4, 6, 7, 9, 10,\n    4, 5, 6, 7, 8, 10,\n    5, 6, 7, 8, 9, 10,\n    7, 7, 8, 9, 9, 10,\n    8, 8, 9, 9, 10, 11,\n    9, 9, 10, 10, 11, 11\n];\n\nTables.t10l = [\n    1, 4, 7, 9, 10, 10, 10, 11,\n    4, 6, 8, 9, 10, 11, 10, 10,\n    7, 8, 9, 10, 11, 12, 11, 11,\n    8, 9, 10, 11, 12, 12, 11, 12,\n    9, 10, 11, 12, 12, 12, 12, 12,\n    10, 11, 12, 12, 13, 13, 12, 13,\n    9, 10, 11, 12, 12, 12, 13, 13,\n    10, 10, 11, 12, 12, 13, 13, 13\n];\n\nTables.t11l = [\n    2, 4, 6, 8, 9, 10, 9, 10,\n    4, 5, 6, 8, 10, 10, 9, 10,\n    6, 7, 8, 9, 10, 11, 10, 10,\n    8, 8, 9, 11, 10, 12, 10, 11,\n    9, 10, 10, 11, 11, 12, 11, 12,\n    9, 10, 11, 12, 12, 13, 12, 13,\n    9, 9, 9, 10, 11, 12, 12, 12,\n    9, 9, 10, 11, 12, 12, 12, 12\n];\n\nTables.t12l = [\n    4, 4, 6, 8, 9, 10, 10, 10,\n    4, 5, 6, 7, 9, 9, 10, 10,\n    6, 6, 7, 8, 9, 10, 9, 10,\n    7, 7, 8, 8, 9, 10, 10, 10,\n    8, 8, 9, 9, 10, 10, 10, 11,\n    9, 9, 10, 10, 10, 11, 10, 11,\n    9, 9, 9, 10, 10, 11, 11, 12,\n    10, 10, 10, 11, 11, 11, 11, 12\n];\n\nTables.t13l = [\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\n];\n\nTables.t15l = [\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\n];\n\nTables.t16_5l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\n];\n\nTables.t16l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\n];\n\nTables.t24l = [\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\n];\n\nTables.t32l = [\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\n];\n\nTables.t33l = [\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\n];\n\nTables.ht = [\n    /* xlen, linmax, table, hlen */\n    new HuffCodeTab(0, 0, null, null),\n    new HuffCodeTab(2, 0, Tables.t1HB, Tables.t1l),\n    new HuffCodeTab(3, 0, Tables.t2HB, Tables.t2l),\n    new HuffCodeTab(3, 0, Tables.t3HB, Tables.t3l),\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\n    new HuffCodeTab(4, 0, Tables.t5HB, Tables.t5l),\n    new HuffCodeTab(4, 0, Tables.t6HB, Tables.t6l),\n    new HuffCodeTab(6, 0, Tables.t7HB, Tables.t7l),\n    new HuffCodeTab(6, 0, Tables.t8HB, Tables.t8l),\n    new HuffCodeTab(6, 0, Tables.t9HB, Tables.t9l),\n    new HuffCodeTab(8, 0, Tables.t10HB, Tables.t10l),\n    new HuffCodeTab(8, 0, Tables.t11HB, Tables.t11l),\n    new HuffCodeTab(8, 0, Tables.t12HB, Tables.t12l),\n    new HuffCodeTab(16, 0, Tables.t13HB, Tables.t13l),\n    new HuffCodeTab(0, 0, null, Tables.t16_5l), /* Apparently not used */\n    new HuffCodeTab(16, 0, Tables.t15HB, Tables.t15l),\n\n    new HuffCodeTab(1, 1, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(2, 3, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(3, 7, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(4, 15, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(6, 63, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(8, 255, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(10, 1023, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(13, 8191, Tables.t16HB, Tables.t16l),\n\n    new HuffCodeTab(4, 15, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(5, 31, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(6, 63, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(7, 127, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(8, 255, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(9, 511, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(11, 2047, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(13, 8191, Tables.t24HB, Tables.t24l),\n\n    new HuffCodeTab(0, 0, Tables.t32HB, Tables.t32l),\n    new HuffCodeTab(0, 0, Tables.t33HB, Tables.t33l),\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 16*16; i++) [\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables.largetbl = [\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\n];\n/**\n * <CODE>\n *  for (i = 0; i < 3*3; i++) [\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables.table23 = [\n    0x010002, 0x040003, 0x070007,\n    0x040004, 0x050004, 0x070007,\n    0x060006, 0x070007, 0x080008\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 4*4; i++) [\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\n *   ]\n * </CODE>\n *\n */\nTables.table56 = [\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\n];\n\nTables.bitrate_table = [\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\n];\n\n/**\n * MPEG 2, MPEG 1, MPEG 2.5.\n */\nTables.samplerate_table = [\n    [22050, 24000, 16000, -1],\n    [44100, 48000, 32000, -1],\n    [11025, 12000, 8000, -1],\n];\n\n/**\n * This is the scfsi_band table from 2.4.2.7 of the IS.\n */\nTables.scfsi_band = [0, 6, 11, 16, 21];\n\nfunction MeanBits(meanBits) {\n    this.bits = meanBits;\n}\n\n//package mp3;\n\nfunction CalcNoiseResult() {\n    /**\n     * sum of quantization noise > masking\n     */\n    this.over_noise = 0.;\n    /**\n     * sum of all quantization noise\n     */\n    this.tot_noise = 0.;\n    /**\n     * max quantization noise\n     */\n    this.max_noise = 0.;\n    /**\n     * number of quantization noise > masking\n     */\n    this.over_count = 0;\n    /**\n     * SSD-like cost of distorted bands\n     */\n    this.over_SSD = 0;\n    this.bits = 0;\n}\n\nfunction VBRQuantize() {\n    var qupvt;\n    var tak;\n\n    this.setModules = function (_qupvt, _tk) {\n        qupvt = _qupvt;\n        tak = _tk;\n    }\n    //TODO\n\n}\n\n\n\n/**\n * ATH related stuff, if something new ATH related has to be added, please plug\n * it here into the ATH.\n */\nfunction ATH() {\n    /**\n     * Method for the auto adjustment.\n     */\n    this.useAdjust = 0;\n    /**\n     * factor for tuning the (sample power) point below which adaptive threshold\n     * of hearing adjustment occurs\n     */\n    this.aaSensitivityP = 0.;\n    /**\n     * Lowering based on peak volume, 1 = no lowering.\n     */\n    this.adjust = 0.;\n    /**\n     * Limit for dynamic ATH adjust.\n     */\n    this.adjustLimit = 0.;\n    /**\n     * Determined to lower x dB each second.\n     */\n    this.decay = 0.;\n    /**\n     * Lowest ATH value.\n     */\n    this.floor = 0.;\n    /**\n     * ATH for sfbs in long blocks.\n     */\n    this.l = new_float(Encoder.SBMAX_l);\n    /**\n     * ATH for sfbs in short blocks.\n     */\n    this.s = new_float(Encoder.SBMAX_s);\n    /**\n     * ATH for partitioned sfb21 in long blocks.\n     */\n    this.psfb21 = new_float(Encoder.PSFB21);\n    /**\n     * ATH for partitioned sfb12 in short blocks.\n     */\n    this.psfb12 = new_float(Encoder.PSFB12);\n    /**\n     * ATH for long block convolution bands.\n     */\n    this.cb_l = new_float(Encoder.CBANDS);\n    /**\n     * ATH for short block convolution bands.\n     */\n    this.cb_s = new_float(Encoder.CBANDS);\n    /**\n     * Equal loudness weights (based on ATH).\n     */\n    this.eql_w = new_float(Encoder.BLKSIZE / 2);\n}\n\n\nfunction LameGlobalFlags() {\n\n    this.class_id = 0;\n\n    /* input description */\n\n    /**\n     * number of samples. default=-1\n     */\n    this.num_samples = 0;\n    /**\n     * input number of channels. default=2\n     */\n    this.num_channels = 0;\n    /**\n     * input_samp_rate in Hz. default=44.1 kHz\n     */\n    this.in_samplerate = 0;\n    /**\n     * output_samp_rate. default: LAME picks best value at least not used for\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\n     */\n    this.out_samplerate = 0;\n    /**\n     * scale input by this amount before encoding at least not used for MP3\n     * decoding\n     */\n    this.scale = 0.;\n    /**\n     * scale input of channel 0 (left) by this amount before encoding\n     */\n    this.scale_left = 0.;\n    /**\n     * scale input of channel 1 (right) by this amount before encoding\n     */\n    this.scale_right = 0.;\n\n    /* general control params */\n    /**\n     * collect data for a MP3 frame analyzer?\n     */\n    this.analysis = false;\n    /**\n     * add Xing VBR tag?\n     */\n    this.bWriteVbrTag = false;\n\n    /**\n     * use lame/mpglib to convert mp3 to wav\n     */\n    this.decode_only = false;\n    /**\n     * quality setting 0=best, 9=worst default=5\n     */\n    this.quality = 0;\n    /**\n     * see enum default = LAME picks best value\n     */\n    this.mode = MPEGMode.STEREO;\n    /**\n     * force M/S mode. requires mode=1\n     */\n    this.force_ms = false;\n    /**\n     * use free format? default=0\n     */\n    this.free_format = false;\n    /**\n     * find the RG value? default=0\n     */\n    this.findReplayGain = false;\n    /**\n     * decode on the fly? default=0\n     */\n    this.decode_on_the_fly = false;\n    /**\n     * 1 (default) writes ID3 tags, 0 not\n     */\n    this.write_id3tag_automatic = false;\n\n    /*\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\n     * the variable not set. Default is compression_ratio = 11.025\n     */\n    /**\n     * bitrate\n     */\n    this.brate = 0;\n    /**\n     * sizeof(wav file)/sizeof(mp3 file)\n     */\n    this.compression_ratio = 0.;\n\n    /* frame params */\n    /**\n     * mark as copyright. default=0\n     */\n    this.copyright = 0;\n    /**\n     * mark as original. default=1\n     */\n    this.original = 0;\n    /**\n     * the MP3 'private extension' bit. Meaningless\n     */\n    this.extension = 0;\n    /**\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\n     * take it into account, and last but not least many decoders don't care\n     * about these bits\n     */\n    this.emphasis = 0;\n    /**\n     * use 2 bytes per frame for a CRC checksum. default=0\n     */\n    this.error_protection = 0;\n    /**\n     * enforce ISO spec as much as possible\n     */\n    this.strict_ISO = false;\n\n    /**\n     * use bit reservoir?\n     */\n    this.disable_reservoir = false;\n\n    /* quantization/noise shaping */\n    this.quant_comp = 0;\n    this.quant_comp_short = 0;\n    this.experimentalY = false;\n    this.experimentalZ = 0;\n    this.exp_nspsytune = 0;\n\n    this.preset = 0;\n\n    /* VBR control */\n    this.VBR = null;\n    /**\n     * Range [0,...,1[\n     */\n    this.VBR_q_frac = 0.;\n    /**\n     * Range [0,...,9]\n     */\n    this.VBR_q = 0;\n    this.VBR_mean_bitrate_kbps = 0;\n    this.VBR_min_bitrate_kbps = 0;\n    this.VBR_max_bitrate_kbps = 0;\n    /**\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\n     * silence\n     */\n    this.VBR_hard_min = 0;\n\n    /* resampling and filtering */\n\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.lowpassfreq = 0;\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.highpassfreq = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.lowpasswidth = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.highpasswidth = 0;\n\n    /*\n     * psycho acoustics and other arguments which you should not change unless\n     * you know what you are doing\n     */\n\n    this.maskingadjust = 0.;\n    this.maskingadjust_short = 0.;\n    /**\n     * only use ATH\n     */\n    this.ATHonly = false;\n    /**\n     * only use ATH for short blocks\n     */\n    this.ATHshort = false;\n    /**\n     * disable ATH\n     */\n    this.noATH = false;\n    /**\n     * select ATH formula\n     */\n    this.ATHtype = 0;\n    /**\n     * change ATH formula 4 shape\n     */\n    this.ATHcurve = 0.;\n    /**\n     * lower ATH by this many db\n     */\n    this.ATHlower = 0.;\n    /**\n     * select ATH auto-adjust scheme\n     */\n    this.athaa_type = 0;\n    /**\n     * select ATH auto-adjust loudness calc\n     */\n    this.athaa_loudapprox = 0;\n    /**\n     * dB, tune active region of auto-level\n     */\n    this.athaa_sensitivity = 0.;\n    this.short_blocks = null;\n    /**\n     * use temporal masking effect\n     */\n    this.useTemporal = false;\n    this.interChRatio = 0.;\n    /**\n     * Naoki's adjustment of Mid/Side maskings\n     */\n    this.msfix = 0.;\n\n    /**\n     * 0 off, 1 on\n     */\n    this.tune = false;\n    /**\n     * used to pass values for debugging and stuff\n     */\n    this.tune_value_a = 0.;\n\n    /************************************************************************/\n    /* internal variables, do not set... */\n    /* provided because they may be of use to calling application */\n    /************************************************************************/\n\n    /**\n     * 0=MPEG-2/2.5 1=MPEG-1\n     */\n    this.version = 0;\n    this.encoder_delay = 0;\n    /**\n     * number of samples of padding appended to input\n     */\n    this.encoder_padding = 0;\n    this.framesize = 0;\n    /**\n     * number of frames encoded\n     */\n    this.frameNum = 0;\n    /**\n     * is this struct owned by calling program or lame?\n     */\n    this.lame_allocated_gfp = 0;\n    /**************************************************************************/\n    /* more internal variables are stored in this structure: */\n    /**************************************************************************/\n    this.internal_flags = null;\n}\n\n\n\nfunction CBRNewIterationLoop(_quantize)  {\n    var quantize = _quantize;\n    this.quantize = quantize;\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\n\t\tvar gfc = gfp.internal_flags;\n        var l3_xmin = new_float(L3Side.SFBMAX);\n\t\tvar xrpow = new_float(576);\n\t\tvar targ_bits = new_int(2);\n\t\tvar mean_bits = 0, max_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar mb = new MeanBits(mean_bits);\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\n\t\tmean_bits = mb.bits;\n\n\t\t/* quantize! */\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\n\t\t\t/*\n\t\t\t * calculate needed bits\n\t\t\t */\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\n\t\t\t\t\tgr, gr);\n\n\t\t\tif (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\n\t\t\t\t\t\tmean_bits, max_bits);\n\t\t\t}\n\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\t\tvar adjust, masking_lower_db;\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\n\n\t\t\t\tif (cod_info.block_type != Encoder.SHORT_TYPE) {\n\t\t\t\t\t// NORM, START or STOP type\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\n\t\t\t\t} else {\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n\t\t\t\t}\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\n\t\t\t\t\t\tmasking_lower_db * 0.1);\n\n\t\t\t\t/*\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\n\t\t\t\t */\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\n\t\t\t\t\t * masking abilities find some good quantization in\n\t\t\t\t\t * outer_loop\n\t\t\t\t\t */\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n\t\t\t\t\t\t\tl3_xmin);\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\n\t\t\t\t\t\t\ttarg_bits[ch]);\n\t\t\t\t}\n\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\n\t\t\t} /* for ch */\n\t\t} /* for gr */\n\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\n\t}\n}\n\n\nfunction ReplayGain() {\n\t//fix 精简\n}\n\n//package mp3;\n\n/**\n * Layer III side information.\n *\n * @author Ken\n *\n */\n\n\n\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\n\n    this.l = new_int(1 + Encoder.SBMAX_l);\n    this.s = new_int(1 + Encoder.SBMAX_s);\n    this.psfb21 = new_int(1 + Encoder.PSFB21);\n    this.psfb12 = new_int(1 + Encoder.PSFB12);\n    var l = this.l;\n    var s = this.s;\n\n    if (arguments.length == 4) {\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\n        //    final int[] arr12) {\n        this.arrL = arguments[0];\n        this.arrS = arguments[1];\n        this.arr21 = arguments[2];\n        this.arr12 = arguments[3];\n\n        System.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\n        System.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\n        System.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\n        System.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\n    }\n}\n\n/*\n *      quantize_pvt source file\n *\n *      Copyright (c) 1999-2002 Takehiro Tominaga\n *      Copyright (c) 2000-2002 Robert Hegemann\n *      Copyright (c) 2001 Naoki Shibata\n *      Copyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: QuantizePVT.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n\nQuantizePVT.Q_MAX = (256 + 1);\nQuantizePVT.Q_MAX2 = 116;\nQuantizePVT.LARGE_BITS = 100000;\nQuantizePVT.IXMAX_VAL = 8206;\n\nfunction QuantizePVT() {\n\n    var tak = null;\n    var rv = null;\n    var psy = null;\n\n    this.setModules = function (_tk, _rv, _psy) {\n        tak = _tk;\n        rv = _rv;\n        psy = _psy;\n    };\n\n    function POW20(x) {\n        return pow20[x + QuantizePVT.Q_MAX2];\n    }\n\n    this.IPOW20 = function (x) {\n        return ipow20[x];\n    }\n\n    /**\n     * smallest such that 1.0+DBL_EPSILON != 1.0\n     */\n    var DBL_EPSILON = 2.2204460492503131e-016;\n\n    /**\n     * ix always <= 8191+15. see count_bits()\n     */\n    var IXMAX_VAL = QuantizePVT.IXMAX_VAL;\n\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\n\n    var Q_MAX = QuantizePVT.Q_MAX;\n\n\n    /**\n     * <CODE>\n     * minimum possible number of\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n     *\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\n     * </CODE>\n     */\n    var Q_MAX2 = QuantizePVT.Q_MAX2;\n\n    var LARGE_BITS = QuantizePVT.LARGE_BITS;\n\n\n    /**\n     * Assuming dynamic range=96dB, this value should be 92\n     */\n    var NSATHSCALE = 100;\n\n    /**\n     * The following table is used to implement the scalefactor partitioning for\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\n     * to the way the tables are presented in the IS:\n     *\n     * [table_number][row_in_table][column of nr_of_sfb]\n     */\n    this.nr_of_sfb_block = [\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n\n    /**\n     * Table B.6: layer3 preemphasis\n     */\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n        2, 2, 3, 3, 3, 2, 0];\n    this.pretab = pretab;\n\n    /**\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\n     * bands. <BR>\n     * Index into this using a method such as:<BR>\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\n     */\n    this.sfBandIndex = [\n        // Table B.2.b: 22.05 kHz\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\n        ),\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\n                540, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.2.a: 16 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.b: 44.1 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.c: 48 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\n                576],\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.a: 32 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 11.025 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 12 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 8 kHz */\n        new ScaleFac([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\n                572, 574, 576],\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\n                492 / 3, 498 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        )\n    ];\n\n    var pow20 = new_float(Q_MAX + Q_MAX2 + 1);\n    var ipow20 = new_float(Q_MAX);\n    var pow43 = new_float(PRECALC_SIZE);\n\n    var adj43 = new_float(PRECALC_SIZE);\n    this.adj43 = adj43;\n\n    /**\n     * <PRE>\n     * compute the ATH for each scalefactor band cd range: 0..96db\n     *\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\n     * -9db 0db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\n     *\n     *\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\n     * -11 - 96 = -107db = ATH at 3.3kHz.\n     *\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\n     * </PRE>\n     */\n    function ATHmdct(gfp, f) {\n        var ath = psy.ATHformula(f, gfp);\n\n        ath -= NSATHSCALE;\n\n        /* modify the MDCT scaling for the ATH and convert to energy */\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\n        return ath;\n    }\n\n    function compute_ath(gfp) {\n        var ATH_l = gfp.internal_flags.ATH.l;\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\n        var ATH_s = gfp.internal_flags.ATH.s;\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\n        var gfc = gfp.internal_flags;\n        var samp_freq = gfp.out_samplerate;\n\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            ATH_l[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\n            var start = gfc.scalefac_band.psfb21[sfb];\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\n            ATH_psfb21[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\n            var start = gfc.scalefac_band.s[sfb];\n            var end = gfc.scalefac_band.s[sfb + 1];\n            ATH_s[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\n            }\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\n        }\n\n        for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\n            var start = gfc.scalefac_band.psfb12[sfb];\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\n            ATH_psfb12[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\n            }\n            /* not sure about the following */\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\n        }\n\n        /*\n         * no-ATH mode: reduce ATH to -200 dB\n         */\n        if (gfp.noATH) {\n            for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n                ATH_l[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\n                ATH_psfb21[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\n                ATH_s[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\n                ATH_psfb12[sfb] = 1E-20;\n            }\n        }\n\n        /*\n         * work in progress, don't rely on it too much\n         */\n        gfc.ATH.floor = 10. * Math_log10(ATHmdct(gfp, -1.));\n    }\n\n    /**\n     * initialization for iteration_loop\n     */\n    this.iteration_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var i;\n\n        if (gfc.iteration_init_init == 0) {\n            gfc.iteration_init_init = 1;\n\n            l3_side.main_data_begin = 0;\n            compute_ath(gfp);\n\n            pow43[0] = 0.0;\n            for (i = 1; i < PRECALC_SIZE; i++)\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\n\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\n                adj43[i] = ((i + 1) - Math.pow(\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\n            adj43[i] = 0.5;\n\n            for (i = 0; i < Q_MAX; i++)\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\n\n            tak.huffman_init(gfc);\n\n            {\n                var bass, alto, treble, sfb21;\n\n                i = (gfp.exp_nspsytune >> 2) & 63;\n                if (i >= 32)\n                    i -= 64;\n                bass = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 8) & 63;\n                if (i >= 32)\n                    i -= 64;\n                alto = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 14) & 63;\n                if (i >= 32)\n                    i -= 64;\n                treble = Math.pow(10, i / 4.0 / 10.0);\n\n                /*\n                 * to be compatible with Naoki's original code, the next 6 bits\n                 * define only the amount of changing treble for sfb21\n                 */\n                i = (gfp.exp_nspsytune >> 20) & 63;\n                if (i >= 32)\n                    i -= 64;\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\n                for (i = 0; i < Encoder.SBMAX_l; i++) {\n                    var f;\n                    if (i <= 6)\n                        f = bass;\n                    else if (i <= 13)\n                        f = alto;\n                    else if (i <= 20)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.longfact[i] = f;\n                }\n                for (i = 0; i < Encoder.SBMAX_s; i++) {\n                    var f;\n                    if (i <= 5)\n                        f = bass;\n                    else if (i <= 10)\n                        f = alto;\n                    else if (i <= 11)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.shortfact[i] = f;\n                }\n            }\n        }\n    }\n\n    /**\n     * allocate bits among 2 channels based on PE<BR>\n     * mt 6/99<BR>\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\n     */\n    this.on_pe = function (gfp, pe,\n                           targ_bits, mean_bits, gr, cbr) {\n        var gfc = gfp.internal_flags;\n        var tbits = 0, bits;\n        var add_bits = new_int(2);\n        var ch;\n\n        /* allocate targ_bits for granule */\n        var mb = new MeanBits(tbits);\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\n        tbits = mb.bits;\n        /* maximum allowed bits for this granule */\n        var max_bits = tbits + extra_bits;\n        if (max_bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n            // hard limit per granule\n            max_bits = LameInternalFlags.MAX_BITS_PER_GRANULE;\n        }\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            /******************************************************************\n             * allocate bits for each channel\n             ******************************************************************/\n            targ_bits[ch] = Math.min(LameInternalFlags.MAX_BITS_PER_CHANNEL,\n                tbits / gfc.channels_out);\n\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\n\n            /* at most increase bits by 1.5*average */\n            if (add_bits[ch] > mean_bits * 3 / 4)\n                add_bits[ch] = mean_bits * 3 / 4;\n\n            if (add_bits[ch] < 0)\n                add_bits[ch] = 0;\n\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                add_bits[ch] = Math.max(0,\n                    LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\n\n            bits += add_bits[ch];\n        }\n        if (bits > extra_bits) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\n            }\n        }\n\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\n            targ_bits[ch] += add_bits[ch];\n            extra_bits -= add_bits[ch];\n        }\n\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            bits += targ_bits[ch];\n        }\n        if (bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                targ_bits[ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                targ_bits[ch] /= bits;\n                sum += targ_bits[ch];\n            }\n        }\n\n        return max_bits;\n    }\n\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\n\n        /*\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\n         * allocate 50/50 mid/side fac= 0\n         */\n        /* 75/25 split is fac=.5 */\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\n        if (fac < 0)\n            fac = 0;\n        if (fac > .5)\n            fac = .5;\n\n        /* number of bits to move from side channel to mid channel */\n        /* move_bits = fac*targ_bits[1]; */\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\n\n        if (move_bits > LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\n            move_bits = LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0];\n        }\n        if (move_bits < 0)\n            move_bits = 0;\n\n        if (targ_bits[1] >= 125) {\n            /* dont reduce side channel below 125 bits */\n            if (targ_bits[1] - move_bits > 125) {\n\n                /* if mid channel already has 2x more than average, dont bother */\n                /* mean_bits = bits per granule (for both channels) */\n                if (targ_bits[0] < mean_bits)\n                    targ_bits[0] += move_bits;\n                targ_bits[1] -= move_bits;\n            } else {\n                targ_bits[0] += targ_bits[1] - 125;\n                targ_bits[1] = 125;\n            }\n        }\n\n        move_bits = targ_bits[0] + targ_bits[1];\n        if (move_bits > max_bits) {\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\n        }\n    };\n\n    /**\n     *  Robert Hegemann 2001-04-27:\n     *  this adjusts the ATH, keeping the original noise floor\n     *  affects the higher frequencies more than the lower ones\n     */\n    this.athAdjust = function (a, x, athFloor) {\n        /*\n         * work in progress\n         */\n        var o = 90.30873362;\n        var p = 94.82444863;\n        var u = Util.FAST_LOG10_X(x, 10.0);\n        var v = a * a;\n        var w = 0.0;\n        u -= athFloor;\n        /* undo scaling */\n        if (v > 1E-20)\n            w = 1. + Util.FAST_LOG10_X(v, 10.0 / o);\n        if (w < 0)\n            w = 0.;\n        u *= w;\n        u += athFloor + o - p;\n        /* redo scaling */\n\n        return Math.pow(10., 0.1 * u);\n    };\n\n    /**\n     * Calculate the allowed distortion for each scalefactor band, as determined\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\n     *\n     * returns number of sfb's with energy > ATH\n     */\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\n        var pxminPos = 0;\n        var gfc = gfp.internal_flags;\n        var gsfb, j = 0, ath_over = 0;\n        var ATH = gfc.ATH;\n        var xr = cod_info.xr;\n        var enable_athaa_fix = (gfp.VBR == VbrMode.vbr_mtrh) ? 1 : 0;\n        var masking_lower = gfc.masking_lower;\n\n        if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\n            /* was already done in PSY-Model */\n            masking_lower = 1.0;\n        }\n\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\n            var en0, xmin;\n            var rh1, rh2;\n            var width, l;\n\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\n            else\n                xmin = ATH.adjust * ATH.l[gsfb];\n\n            width = cod_info.width[gsfb];\n            rh1 = xmin / width;\n            rh2 = DBL_EPSILON;\n            l = width >> 1;\n            en0 = 0.0;\n            do {\n                var xa, xb;\n                xa = xr[j] * xr[j];\n                en0 += xa;\n                rh2 += (xa < rh1) ? xa : rh1;\n                j++;\n                xb = xr[j] * xr[j];\n                en0 += xb;\n                rh2 += (xb < rh1) ? xb : rh1;\n                j++;\n            } while (--l > 0);\n            if (en0 > xmin)\n                ath_over++;\n\n            if (gsfb == Encoder.SBPSY_l) {\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\n                if (rh2 < x) {\n                    rh2 = x;\n                }\n            }\n            if (enable_athaa_fix != 0) {\n                xmin = rh2;\n            }\n            if (!gfp.ATHonly) {\n                var e = ratio.en.l[gsfb];\n                if (e > 0.0) {\n                    var x;\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\n                    if (enable_athaa_fix != 0)\n                        x *= gfc.nsPsy.longfact[gsfb];\n                    if (xmin < x)\n                        xmin = x;\n                }\n            }\n            if (enable_athaa_fix != 0)\n                pxmin[pxminPos++] = xmin;\n            else\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\n        }\n        /* end of long block loop */\n\n        /* use this function to determine the highest non-zero coeff */\n        var max_nonzero = 575;\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\n            // NORM, START or STOP type, but not SHORT\n            var k = 576;\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\n                max_nonzero = k;\n            }\n        }\n        cod_info.max_nonzero_coeff = max_nonzero;\n\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\n            var width, b;\n            var tmpATH;\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\n            else\n                tmpATH = ATH.adjust * ATH.s[sfb];\n\n            width = cod_info.width[gsfb];\n            for (b = 0; b < 3; b++) {\n                var en0 = 0.0, xmin;\n                var rh1, rh2;\n                var l = width >> 1;\n\n                rh1 = tmpATH / width;\n                rh2 = DBL_EPSILON;\n                do {\n                    var xa, xb;\n                    xa = xr[j] * xr[j];\n                    en0 += xa;\n                    rh2 += (xa < rh1) ? xa : rh1;\n                    j++;\n                    xb = xr[j] * xr[j];\n                    en0 += xb;\n                    rh2 += (xb < rh1) ? xb : rh1;\n                    j++;\n                } while (--l > 0);\n                if (en0 > tmpATH)\n                    ath_over++;\n                if (sfb == Encoder.SBPSY_s) {\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\n                    if (rh2 < x) {\n                        rh2 = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    xmin = rh2;\n                else\n                    xmin = tmpATH;\n\n                if (!gfp.ATHonly && !gfp.ATHshort) {\n                    var e = ratio.en.s[sfb][b];\n                    if (e > 0.0) {\n                        var x;\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\n                        if (enable_athaa_fix != 0)\n                            x *= gfc.nsPsy.shortfact[sfb];\n                        if (xmin < x)\n                            xmin = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    pxmin[pxminPos++] = xmin;\n                else\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\n            }\n            /* b */\n            if (gfp.useTemporal) {\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\n                        * gfc.decay;\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\n                        * gfc.decay;\n            }\n        }\n        /* end of short block sfb loop */\n\n        return ath_over;\n    };\n\n    function StartLine(j) {\n        this.s = j;\n    }\n\n    this.calc_noise_core = function (cod_info, startline, l, step) {\n        var noise = 0;\n        var j = startline.s;\n        var ix = cod_info.l3_enc;\n\n        if (j > cod_info.count1) {\n            while ((l--) != 0) {\n                var temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n            }\n        } else if (j > cod_info.big_values) {\n            var ix01 = new_float(2);\n            ix01[0] = 0;\n            ix01[1] = step;\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n            }\n        } else {\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n            }\n        }\n\n        startline.s = j;\n        return noise;\n    }\n\n    /**\n     * <PRE>\n     * -oo dB  =>  -1.00\n     * - 6 dB  =>  -0.97\n     * - 3 dB  =>  -0.80\n     * - 2 dB  =>  -0.64\n     * - 1 dB  =>  -0.38\n     *   0 dB  =>   0.00\n     * + 1 dB  =>  +0.49\n     * + 2 dB  =>  +1.06\n     * + 3 dB  =>  +1.68\n     * + 6 dB  =>  +3.69\n     * +10 dB  =>  +6.45\n     * </PRE>\n     */\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\n        var distortPos = 0;\n        var l3_xminPos = 0;\n        var sfb, l, over = 0;\n        var over_noise_db = 0;\n        /* 0 dB relative to masking */\n        var tot_noise_db = 0;\n        /* -200 dB relative to masking */\n        var max_noise = -20.0;\n        var j = 0;\n        var scalefac = cod_info.scalefac;\n        var scalefacPos = 0;\n\n        res.over_SSD = 0;\n\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\n            var s = cod_info.global_gain\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\n                    : 0)) << (cod_info.scalefac_scale + 1))\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n            var noise = 0.0;\n\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\n\n                /* use previously computed values */\n                noise = prev_noise.noise[sfb];\n                j += cod_info.width[sfb];\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                noise = prev_noise.noise_log[sfb];\n\n            } else {\n                var step = POW20(s);\n                l = cod_info.width[sfb] >> 1;\n\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\n                    var usefullsize;\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\n\n                    if (usefullsize > 0)\n                        l = usefullsize >> 1;\n                    else\n                        l = 0;\n                }\n\n                var sl = new StartLine(j);\n                noise = this.calc_noise_core(cod_info, sl, l, step);\n                j = sl.s;\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.step[sfb] = s;\n                    prev_noise.noise[sfb] = noise;\n                }\n\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                /* multiplying here is adding in dB, but can overflow */\n                noise = Util.FAST_LOG10(Math.max(noise, 1E-20));\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.noise_log[sfb] = noise;\n                }\n            }\n\n            if (prev_noise != null) {\n                /* save noise values */\n                prev_noise.global_gain = cod_info.global_gain;\n            }\n\n            tot_noise_db += noise;\n\n            if (noise > 0.0) {\n                var tmp;\n\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\n                res.over_SSD += tmp * tmp;\n\n                over++;\n                /* multiplying here is adding in dB -but can overflow */\n                /* over_noise *= noise; */\n                over_noise_db += noise;\n            }\n            max_noise = Math.max(max_noise, noise);\n\n        }\n\n        res.over_count = over;\n        res.tot_noise = tot_noise_db;\n        res.over_noise = over_noise_db;\n        res.max_noise = max_noise;\n\n        return over;\n    }\n\n    /**\n     * updates plotting data\n     *\n     * Mark Taylor 2000-??-??\n     *\n     * Robert Hegemann: moved noise/distortion calc into it\n     */\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\n        var gfc = gfp.internal_flags;\n        var sfb, sfb2;\n        var l;\n        var en0, en1;\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\n        var scalefac = cod_info.scalefac;\n\n        var l3_xmin = new_float(L3Side.SFBMAX);\n        var xfsf = new_float(L3Side.SFBMAX);\n        var noise = new CalcNoiseResult();\n\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\n\n        var j = 0;\n        sfb2 = cod_info.sfb_lmax;\n        if (cod_info.block_type != Encoder.SHORT_TYPE\n            && 0 == cod_info.mixed_block_flag)\n            sfb2 = 22;\n        for (sfb = 0; sfb < sfb2; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            var bw = end - start;\n            for (en0 = 0.0; j < end; j++)\n                en0 += cod_info.xr[j] * cod_info.xr[j];\n            en0 /= bw;\n            /* convert to MDCT units */\n            /* scaling so it shows up on FFT plot */\n            en1 = 1e15;\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\n\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\n                en0 = en0 / ratio.en.l[sfb];\n            else\n                en0 = 0.0;\n\n            gfc.pinfo.thr[gr][ch][sfb] = en1\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\n\n            /* there is no scalefactor bands >= SBPSY_l */\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\n            if (cod_info.preflag != 0 && sfb >= 11)\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\n\n            if (sfb < Encoder.SBPSY_l) {\n                /* scfsi should be decoded by caller side */\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\n            }\n        }\n        /* for sfb */\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            sfb2 = sfb;\n            for (sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                var bw = end - start;\n                for (var i = 0; i < 3; i++) {\n                    for (en0 = 0.0, l = start; l < end; l++) {\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\n                        j++;\n                    }\n                    en0 = Math.max(en0 / bw, 1e-20);\n                    /* convert to MDCT units */\n                    /* scaling so it shows up on FFT plot */\n                    en1 = 1e15;\n\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\n                        * xfsf[sfb2] / bw;\n                    if (ratio.en.s[sfb][i] > 0)\n                        en0 = en0 / ratio.en.s[sfb][i];\n                    else\n                        en0 = 0.0;\n                    if (gfp.ATHonly || gfp.ATHshort)\n                        en0 = 0;\n\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\n                            gfc.ATH.s[sfb]);\n\n                    /* there is no scalefactor bands >= SBPSY_s */\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\n                        * cod_info.subblock_gain[i];\n                    if (sfb < Encoder.SBPSY_s) {\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\n                            * scalefac[sfb2];\n                    }\n                    sfb2++;\n                }\n            }\n        }\n        /* block type short */\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\n            + cod_info.part2_length;\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\n\n        gfc.pinfo.over[gr][ch] = noise.over_count;\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\n    }\n\n    /**\n     * updates plotting data for a whole frame\n     *\n     * Robert Hegemann 2000-10-21\n     */\n    function set_frame_pinfo(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n\n        gfc.masking_lower = 1.0;\n\n        /*\n         * for every granule and channel patch l3_enc and set info\n         */\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n                var scalefac_sav = new_int(L3Side.SFBMAX);\n                System.arraycopy(cod_info.scalefac, 0, scalefac_sav, 0,\n                    scalefac_sav.length);\n\n                /*\n                 * reconstruct the scalefactors in case SCFSI was used\n                 */\n                if (gr == 1) {\n                    var sfb;\n                    for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n                        if (cod_info.scalefac[sfb] < 0) /* scfsi */\n                            cod_info.scalefac[sfb] = gfc.l3_side.tt[0][ch].scalefac[sfb];\n                    }\n                }\n\n                set_pinfo(gfp, cod_info, ratio[gr][ch], gr, ch);\n                System.arraycopy(scalefac_sav, 0, cod_info.scalefac, 0,\n                    scalefac_sav.length);\n            }\n            /* for ch */\n        }\n        /* for gr */\n    }\n\n}\n\n\nfunction CalcNoiseData() {\n    this.global_gain = 0;\n    this.sfb_count1 = 0;\n    this.step = new_int(39);\n    this.noise = new_float(39);\n    this.noise_log = new_float(39);\n}\n\n//package mp3;\n\n\nfunction GrInfo() {\n    //float xr[] = new float[576];\n    this.xr = new_float(576);\n    //int l3_enc[] = new int[576];\n    this.l3_enc = new_int(576);\n    //int scalefac[] = new int[L3Side.SFBMAX];\n    this.scalefac = new_int(L3Side.SFBMAX);\n    this.xrpow_max = 0.;\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.count1 = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.table_select = new_int(3);\n    this.subblock_gain = new_int(3 + 1);\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n\n    this.part2_length = 0;\n    this.sfb_lmax = 0;\n    this.sfb_smin = 0;\n    this.psy_lmax = 0;\n    this.sfbmax = 0;\n    this.psymax = 0;\n    this.sfbdivide = 0;\n    this.width = new_int(L3Side.SFBMAX);\n    this.window = new_int(L3Side.SFBMAX);\n    this.count1bits = 0;\n    /**\n     * added for LSF\n     */\n    this.sfb_partition_table = null;\n    this.slen = new_int(4);\n\n    this.max_nonzero_coeff = 0;\n\n    var self = this;\n    function clone_int(array) {\n        return new Int32Array(array);\n    }\n    function clone_float(array) {\n        return new Float32Array(array);\n    }\n    this.assign = function (other) {\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\n        self.xrpow_max = other.xrpow_max;\n\n        self.part2_3_length = other.part2_3_length;\n        self.big_values = other.big_values;\n        self.count1 = other.count1;\n        self.global_gain = other.global_gain;\n        self.scalefac_compress = other.scalefac_compress;\n        self.block_type = other.block_type;\n        self.mixed_block_flag = other.mixed_block_flag;\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n        self.region0_count = other.region0_count;\n        self.region1_count = other.region1_count;\n        self.preflag = other.preflag;\n        self.scalefac_scale = other.scalefac_scale;\n        self.count1table_select = other.count1table_select;\n\n        self.part2_length = other.part2_length;\n        self.sfb_lmax = other.sfb_lmax;\n        self.sfb_smin = other.sfb_smin;\n        self.psy_lmax = other.psy_lmax;\n        self.sfbmax = other.sfbmax;\n        self.psymax = other.psymax;\n        self.sfbdivide = other.sfbdivide;\n        self.width = clone_int(other.width); //.slice(0); //.clone();\n        self.window = clone_int(other.window); //.slice(0); //.clone();\n        self.count1bits = other.count1bits;\n\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\n    }\n}\n\n\nvar L3Side = {};\n\n\n\t/**\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\n\t */\nL3Side.SFBMAX = (Encoder.SBMAX_s * 3);\n\n/*\n * MP3 quantization\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 1999-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2007 Robert Hegemann\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\n\nfunction Quantize() {\n    var bs;\n    this.rv = null;\n    var rv;\n    this.qupvt = null;\n    var qupvt;\n\n    var vbr = new VBRQuantize();\n    var tk;\n\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\n        bs = _bs;\n        rv = _rv;\n        this.rv = _rv;\n        qupvt = _qupvt;\n        this.qupvt = _qupvt;\n        tk = _tk;\n        vbr.setModules(qupvt, tk);\n    }\n\n    /**\n     * convert from L/R <. Mid/Side\n     */\n    this.ms_convert = function (l3_side, gr) {\n        for (var i = 0; i < 576; ++i) {\n            var l = l3_side.tt[gr][0].xr[i];\n            var r = l3_side.tt[gr][1].xr[i];\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util.SQRT2 * 0.5);\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util.SQRT2 * 0.5);\n        }\n    };\n\n    /**\n     * mt 6/99\n     *\n     * initializes cod_info, scalefac and xrpow\n     *\n     * returns 0 if all energies in xr are zero, else 1\n     */\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\n        sum = 0;\n        for (var i = 0; i <= upper; ++i) {\n            var tmp = Math.abs(cod_info.xr[i]);\n            sum += tmp;\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\n\n            if (xrpow[i] > cod_info.xrpow_max)\n                cod_info.xrpow_max = xrpow[i];\n        }\n        return sum;\n    }\n\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\n        var sum = 0;\n        var upper = 0 | cod_info.max_nonzero_coeff;\n\n        cod_info.xrpow_max = 0;\n\n        /*\n         * check if there is some energy we have to quantize and calculate xrpow\n         * matching our fresh scalefactors\n         */\n\n        Arrays.fill(xrpow, upper, 576, 0);\n\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\n\n        /*\n         * return 1 if we have something to quantize, else 0\n         */\n        if (sum > 1E-20) {\n            var j = 0;\n            if ((gfc.substep_shaping & 2) != 0)\n                j = 1;\n\n            for (var i = 0; i < cod_info.psymax; i++)\n                gfc.pseudohalf[i] = j;\n\n            return true;\n        }\n\n        Arrays.fill(cod_info.l3_enc, 0, 576, 0);\n        return false;\n    }\n\n    /**\n     * Gabriel Bouvigne feb/apr 2003<BR>\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\n     *\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\n     * stops on the first coeff higher than ath.\n     */\n    function psfb21_analogsilence(gfc, cod_info) {\n        var ath = gfc.ATH;\n        var xr = cod_info.xr;\n\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\n            /* NORM, START or STOP type, but not SHORT blocks */\n            var stop = false;\n            for (var gsfb = Encoder.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\n                var start = gfc.scalefac_band.psfb21[gsfb];\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\n                    ath.floor);\n\n                if (gfc.nsPsy.longfact[21] > 1e-12)\n                    ath21 *= gfc.nsPsy.longfact[21];\n\n                for (var j = end - 1; j >= start; j--) {\n                    if (Math.abs(xr[j]) < ath21)\n                        xr[j] = 0;\n                    else {\n                        stop = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            /* note: short blocks coeffs are reordered */\n            for (var block = 0; block < 3; block++) {\n                var stop = false;\n                for (var gsfb = Encoder.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\n                    var start = gfc.scalefac_band.s[12]\n                        * 3\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                        * block\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\n                    var end = start\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\n                        ath.floor);\n\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\n                        ath12 *= gfc.nsPsy.shortfact[12];\n\n                    for (var j = end - 1; j >= start; j--) {\n                        if (Math.abs(xr[j]) < ath12)\n                            xr[j] = 0;\n                        else {\n                            stop = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.init_outer_loop = function (gfc, cod_info) {\n        /*\n         * initialize fresh cod_info\n         */\n        cod_info.part2_3_length = 0;\n        cod_info.big_values = 0;\n        cod_info.count1 = 0;\n        cod_info.global_gain = 210;\n        cod_info.scalefac_compress = 0;\n        /* mixed_block_flag, block_type was set in psymodel.c */\n        cod_info.table_select[0] = 0;\n        cod_info.table_select[1] = 0;\n        cod_info.table_select[2] = 0;\n        cod_info.subblock_gain[0] = 0;\n        cod_info.subblock_gain[1] = 0;\n        cod_info.subblock_gain[2] = 0;\n        cod_info.subblock_gain[3] = 0;\n        /* this one is always 0 */\n        cod_info.region0_count = 0;\n        cod_info.region1_count = 0;\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 0;\n        cod_info.count1table_select = 0;\n        cod_info.part2_length = 0;\n        cod_info.sfb_lmax = Encoder.SBPSY_l;\n        cod_info.sfb_smin = Encoder.SBPSY_s;\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder.SBMAX_l : Encoder.SBPSY_l;\n        cod_info.psymax = cod_info.psy_lmax;\n        cod_info.sfbmax = cod_info.sfb_lmax;\n        cod_info.sfbdivide = 11;\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\n                - gfc.scalefac_band.l[sfb];\n            /* which is always 0. */\n            cod_info.window[sfb] = 3;\n        }\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            var ixwork = new_float(576);\n\n            cod_info.sfb_smin = 0;\n            cod_info.sfb_lmax = 0;\n            if (cod_info.mixed_block_flag != 0) {\n                /*\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\n                 * sfbs 0-5 long block, 3-12 short blocks\n                 */\n                cod_info.sfb_smin = 3;\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\n            }\n            cod_info.psymax = cod_info.sfb_lmax\n                + 3\n                * ((gfc.sfb21_extra ? Encoder.SBMAX_s : Encoder.SBPSY_s) - cod_info.sfb_smin);\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\n                * (Encoder.SBPSY_s - cod_info.sfb_smin);\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\n            cod_info.psy_lmax = cod_info.sfb_lmax;\n            /* re-order the short blocks, for more efficient encoding below */\n            /* By Takehiro TOMINAGA */\n            /*\n             * Within each scalefactor band, data is given for successive time\n             * windows, beginning with window 0 and ending with window 2. Within\n             * each window, the quantized values are then arranged in order of\n             * increasing frequency...\n             */\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            System.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                for (var window = 0; window < 3; window++) {\n                    for (var l = start; l < end; l++) {\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\n                    }\n                }\n            }\n\n            var j = cod_info.sfb_lmax;\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\n                    - gfc.scalefac_band.s[sfb];\n                cod_info.window[j] = 0;\n                cod_info.window[j + 1] = 1;\n                cod_info.window[j + 2] = 2;\n                j += 3;\n            }\n        }\n\n        cod_info.count1bits = 0;\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\n        cod_info.slen[0] = 0;\n        cod_info.slen[1] = 0;\n        cod_info.slen[2] = 0;\n        cod_info.slen[3] = 0;\n\n        cod_info.max_nonzero_coeff = 575;\n\n        /*\n         * fresh scalefactors are all zero\n         */\n        Arrays.fill(cod_info.scalefac, 0);\n\n        psfb21_analogsilence(gfc, cod_info);\n    };\n\n    function BinSearchDirection(ordinal) {\n        this.ordinal = ordinal;\n    }\n\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\n\n    /**\n     * author/date??\n     *\n     * binary step size search used by outer_loop to get a quantizer step size\n     * to start with\n     */\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\n        var nBits;\n        var CurrentStep = gfc.CurrentStep[ch];\n        var flagGoneOver = false;\n        var start = gfc.OldValue[ch];\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\n        cod_info.global_gain = start;\n        desired_rate -= cod_info.part2_length;\n\n        for (; ;) {\n            var step;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n\n            if (CurrentStep == 1 || nBits == desired_rate)\n                break;\n            /* nothing to adjust anymore */\n\n            if (nBits > desired_rate) {\n                /* increase Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_UP;\n                step = CurrentStep;\n            } else {\n                /* decrease Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\n                step = -CurrentStep;\n            }\n            cod_info.global_gain += step;\n            if (cod_info.global_gain < 0) {\n                cod_info.global_gain = 0;\n                flagGoneOver = true;\n            }\n            if (cod_info.global_gain > 255) {\n                cod_info.global_gain = 255;\n                flagGoneOver = true;\n            }\n        }\n\n\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\n            cod_info.global_gain++;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n        }\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\n        gfc.OldValue[ch] = cod_info.global_gain;\n        cod_info.part2_3_length = nBits;\n        return nBits;\n    }\n\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\n        var distort = new_float(L3Side.SFBMAX);\n\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder.SHORT_TYPE)\n            || (gfc.substep_shaping & 0x80) != 0)\n            return;\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult(), null);\n        for (var j = 0; j < 576; j++) {\n            var xr = 0.0;\n            if (gi.l3_enc[j] != 0)\n                xr = Math.abs(gi.xr[j]);\n            work[j] = xr;\n        }\n\n        var j = 0;\n        var sfb = 8;\n        if (gi.block_type == Encoder.SHORT_TYPE)\n            sfb = 6;\n        do {\n            var allowedNoise, trancateThreshold;\n            var nsame, start;\n\n            var width = gi.width[sfb];\n            j += width;\n            if (distort[sfb] >= 1.0)\n                continue;\n\n            Arrays.sort(work, j - width, width);\n            if (BitStream.EQ(work[j - 1], 0.0))\n                continue;\n            /* all zero sfb */\n\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\n            trancateThreshold = 0.0;\n            start = 0;\n            do {\n                var noise;\n                for (nsame = 1; start + nsame < width; nsame++)\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\n                        + nsame - width]))\n                        break;\n\n                noise = work[start + j - width] * work[start + j - width]\n                    * nsame;\n                if (allowedNoise < noise) {\n                    if (start != 0)\n                        trancateThreshold = work[start + j - width - 1];\n                    break;\n                }\n                allowedNoise -= noise;\n                start += nsame;\n            } while (start < width);\n            if (BitStream.EQ(trancateThreshold, 0.0))\n                continue;\n\n            do {\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\n                    gi.l3_enc[j - width] = 0;\n            } while (--width > 0);\n        } while (++sfb < gi.psymax);\n\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\n    };\n\n    /**\n     * author/date??\n     *\n     * Function: Returns zero if there is a scalefac which has not been\n     * amplified. Otherwise it returns one.\n     */\n    function loop_break(cod_info) {\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\n            if (cod_info.scalefac[sfb]\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\n                return false;\n\n        return true;\n    }\n\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\n\n    function penalties(noise) {\n        return Util.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\n    }\n\n    /**\n     * author/date??\n     *\n     * several different codes to decide which quantization is better\n     */\n    function get_klemm_noise(distort, gi) {\n        var klemm_noise = 1E-37;\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\n            klemm_noise += penalties(distort[sfb]);\n\n        return Math.max(1e-20, klemm_noise);\n    }\n\n    function quant_compare(quant_comp, best, calc, gi, distort) {\n        /**\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\n         *\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\n         * max_noise: max quantization noise\n         */\n        var better;\n\n        switch (quant_comp) {\n            default:\n            case 9:\n            {\n                if (best.over_count > 0) {\n                    /* there are distorted sfb */\n                    better = calc.over_SSD <= best.over_SSD;\n                    if (calc.over_SSD == best.over_SSD)\n                        better = calc.bits < best.bits;\n                } else {\n                    /* no distorted sfb */\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\n                }\n                break;\n            }\n\n            case 0:\n                better = calc.over_count < best.over_count\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\n                    || (calc.over_count == best.over_count\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n\n            case 8:\n                calc.max_noise = get_klemm_noise(distort, gi);\n            //$FALL-THROUGH$\n            case 1:\n                better = calc.max_noise < best.max_noise;\n                break;\n            case 2:\n                better = calc.tot_noise < best.tot_noise;\n                break;\n            case 3:\n                better = (calc.tot_noise < best.tot_noise)\n                    && (calc.max_noise < best.max_noise);\n                break;\n            case 4:\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\n                    + calc.over_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\n                    + calc.over_noise + calc.over_noise < best.tot_noise\n                    + best.over_noise + best.over_noise);\n                break;\n            case 5:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n            case 6:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\n                break;\n            case 7:\n                better = calc.over_count < best.over_count\n                    || calc.over_noise < best.over_noise;\n                break;\n        }\n\n        if (best.over_count == 0) {\n            /*\n             * If no distorted bands, only use this quantization if it is\n             * better, and if it uses less bits. Unfortunately, part2_3_length\n             * is sometimes a poor estimator of the final size at low bitrates.\n             */\n            better = better && calc.bits < best.bits;\n        }\n\n        return better;\n    }\n\n    /**\n     * author/date??\n     *\n     * <PRE>\n     *  Amplify the scalefactor bands that violate the masking threshold.\n     *  See ISO 11172-3 Section C.1.5.4.3.5\n     *\n     *  distort[] = noise/masking\n     *  distort[] > 1   ==> noise is not masked\n     *  distort[] < 1   ==> noise is masked\n     *  max_dist = maximum value of distort[]\n     *\n     *  Three algorithms:\n     *  noise_shaping_amp\n     *        0             Amplify all bands with distort[]>1.\n     *\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\n     *                     ( 50% in the db scale)\n     *\n     *        2             Amplify first band with distort[] >= max_dist;\n     *\n     *\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\n     *  amplify at least one band.\n     * </PRE>\n     */\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n        var ifqstep34;\n\n        if (cod_info.scalefac_scale == 0) {\n            ifqstep34 = 1.29683955465100964055;\n            /* 2**(.75*.5) */\n        } else {\n            ifqstep34 = 1.68179283050742922612;\n            /* 2**(.75*1) */\n        }\n\n        /* compute maximum value of distort[] */\n        var trigger = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            if (trigger < distort[sfb])\n                trigger = distort[sfb];\n        }\n\n        var noise_shaping_amp = gfc.noise_shaping_amp;\n        if (noise_shaping_amp == 3) {\n            if (bRefine)\n                noise_shaping_amp = 2;\n            else\n                noise_shaping_amp = 1;\n        }\n        switch (noise_shaping_amp) {\n            case 2:\n                /* amplify exactly 1 band */\n                break;\n\n            case 1:\n                /* amplify bands within 50% of max (on db scale) */\n                if (trigger > 1.0)\n                    trigger = Math.pow(trigger, .5);\n                else\n                    trigger *= .95;\n                break;\n\n            case 0:\n            default:\n                /* ISO algorithm. amplify all bands with distort>1 */\n                if (trigger > 1.0)\n                    trigger = 1.0;\n                else\n                    trigger *= .95;\n                break;\n        }\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var l;\n            j += width;\n            if (distort[sfb] < trigger)\n                continue;\n\n            if ((gfc.substep_shaping & 2) != 0) {\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\n                    return;\n            }\n            cod_info.scalefac[sfb]++;\n            for (l = -width; l < 0; l++) {\n                xrpow[j + l] *= ifqstep34;\n                if (xrpow[j + l] > cod_info.xrpow_max)\n                    cod_info.xrpow_max = xrpow[j + l];\n            }\n\n            if (gfc.noise_shaping_amp == 2)\n                return;\n        }\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * turns on scalefac scale and adjusts scalefactors\n     */\n    function inc_scalefac_scale(cod_info, xrpow) {\n        var ifqstep34 = 1.29683955465100964055;\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var s = cod_info.scalefac[sfb];\n            if (cod_info.preflag != 0)\n                s += qupvt.pretab[sfb];\n            j += width;\n            if ((s & 1) != 0) {\n                s++;\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= ifqstep34;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n            cod_info.scalefac[sfb] = s >> 1;\n        }\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 1;\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * increases the subblock gain and adjusts scalefactors\n     */\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\n        var sfb;\n        var scalefac = cod_info.scalefac;\n\n        /* subbloc_gain can't do anything in the long block region */\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n            if (scalefac[sfb] >= 16)\n                return true;\n        }\n\n        for (var window = 0; window < 3; window++) {\n            var s1 = 0;\n            var s2 = 0;\n\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\n                if (s1 < scalefac[sfb])\n                    s1 = scalefac[sfb];\n            }\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\n                if (s2 < scalefac[sfb])\n                    s2 = scalefac[sfb];\n            }\n\n            if (s1 < 16 && s2 < 8)\n                continue;\n\n            if (cod_info.subblock_gain[window] >= 7)\n                return true;\n\n            /*\n             * even though there is no scalefactor for sfb12 subblock gain\n             * affects upper frequencies too, that's why we have to go up to\n             * SBMAX_s\n             */\n            cod_info.subblock_gain[window]++;\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\n                var amp;\n                var width = cod_info.width[sfb];\n                var s = scalefac[sfb];\n                s = s - (4 >> cod_info.scalefac_scale);\n                if (s >= 0) {\n                    scalefac[sfb] = s;\n                    j += width * 3;\n                    continue;\n                }\n\n                scalefac[sfb] = 0;\n                {\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\n                    amp = qupvt.IPOW20(gain);\n                }\n                j += width * (window + 1);\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n                j += width * (3 - window - 1);\n            }\n\n            {\n                var amp = qupvt.IPOW20(202);\n                j += cod_info.width[sfb] * (window + 1);\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <PRE>\n     *  Takehiro Tominaga /date??\n     *  Robert Hegemann 2000-09-06: made a function of it\n     *\n     *  amplifies scalefactor bands,\n     *   - if all are already amplified returns 0\n     *   - if some bands are amplified too much:\n     *      * try to increase scalefac_scale\n     *      * if already scalefac_scale was set\n     *          try on short blocks to increase subblock gain\n     * </PRE>\n     */\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\n\n        /*\n         * check to make sure we have not amplified too much loop_break returns\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\n         * scalefactors are too large\n         */\n\n        var status = loop_break(cod_info);\n\n        if (status)\n            return false;\n        /* all bands amplified */\n\n        /*\n         * not all scalefactors have been amplified. so these scalefacs are\n         * possibly valid. encode them:\n         */\n        if (gfc.mode_gr == 2)\n            status = tk.scale_bitcount(cod_info);\n        else\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\n\n        if (!status)\n            return true;\n        /* amplified some bands not exceeding limits */\n\n        /*\n         * some scalefactors are too large. lets try setting scalefac_scale=1\n         */\n        if (gfc.noise_shaping > 1) {\n            Arrays.fill(gfc.pseudohalf, 0);\n            if (0 == cod_info.scalefac_scale) {\n                inc_scalefac_scale(cod_info, xrpow);\n                status = false;\n            } else {\n                if (cod_info.block_type == Encoder.SHORT_TYPE\n                    && gfc.subblock_gain > 0) {\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\n                }\n            }\n        }\n\n        if (!status) {\n            if (gfc.mode_gr == 2)\n                status = tk.scale_bitcount(cod_info);\n            else\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\n        }\n        return !status;\n    }\n\n    /**\n     * <PRE>\n     *  Function: The outer iteration loop controls the masking conditions\n     *  of all scalefactorbands. It computes the best scalefac and\n     *  global gain. This module calls the inner iteration loop\n     *\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\n     *  mid/side channels with L/R or mid/side masking thresholds,\n     *  and chooses best quantization instead of last quantization when\n     *  no distortion free quantization can be found.\n     *\n     *  added VBR support mt 5/99\n\n     *\n     *  some code shuffle rh 9/00\n     * </PRE>\n     *\n     * @param l3_xmin\n     *            allowed distortion\n     * @param xrpow\n     *            coloured magnitudes of spectral\n     * @param targ_bits\n     *            maximum allowed bits\n     */\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\n        var gfc = gfp.internal_flags;\n        var cod_info_w = new GrInfo();\n        var save_xrpow = new_float(576);\n        var distort = new_float(L3Side.SFBMAX);\n        var best_noise_info = new CalcNoiseResult();\n        var better;\n        var prev_noise = new CalcNoiseData();\n        var best_part2_3_length = 9999999;\n        var bEndOfSearch = false;\n        var bRefine = false;\n        var best_ggain_pass1 = 0;\n\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\n\n        if (0 == gfc.noise_shaping)\n        /* fast mode, no noise shaping, we are ready */\n            return 100;\n        /* default noise_info.over_count */\n\n        /* compute the distortion in this quantization */\n        /* coefficients and thresholds both l/r (or both mid/side) */\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\n            prev_noise);\n        best_noise_info.bits = cod_info.part2_3_length;\n\n        cod_info_w.assign(cod_info);\n        var age = 0;\n        System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n\n        while (!bEndOfSearch) {\n            /* BEGIN MAIN LOOP */\n            do {\n                var noise_info = new CalcNoiseResult();\n                var search_limit;\n                var maxggain = 255;\n\n                /*\n                 * When quantization with no distorted bands is found, allow up\n                 * to X new unsuccesful tries in serial. This gives us more\n                 * possibilities for different quant_compare modes. Much more\n                 * than 3 makes not a big difference, it is only slower.\n                 */\n\n                if ((gfc.substep_shaping & 2) != 0) {\n                    search_limit = 20;\n                } else {\n                    search_limit = 3;\n                }\n\n                /*\n                 * Check if the last scalefactor band is distorted. in VBR mode\n                 * we can't get rid of the distortion, so quit now and VBR mode\n                 * will try again with more bits. (makes a 10% speed increase,\n                 * the files I tested were binary identical, 2000/05/20 Robert\n                 * Hegemann) distort[] > 1 means noise > allowed noise\n                 */\n                if (gfc.sfb21_extra) {\n                    if (distort[cod_info_w.sfbmax] > 1.0)\n                        break;\n                    if (cod_info_w.block_type == Encoder.SHORT_TYPE\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\n                        break;\n                }\n\n                /* try a new scalefactor conbination on cod_info_w */\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\n                    break;\n                if (cod_info_w.scalefac_scale != 0)\n                    maxggain = 254;\n\n                /*\n                 * inner_loop starts with the initial quantization step computed\n                 * above and slowly increases until the bits < huff_bits. Thus\n                 * it is important not to start with too large of an inital\n                 * quantization step. Too small is ok, but inner_loop will take\n                 * longer\n                 */\n                var huff_bits = targ_bits - cod_info_w.part2_length;\n                if (huff_bits <= 0)\n                    break;\n\n                /*\n                 * increase quantizer stepsize until needed bits are below\n                 * maximum\n                 */\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\n                    cod_info_w, prev_noise)) > huff_bits\n                && cod_info_w.global_gain <= maxggain)\n                    cod_info_w.global_gain++;\n\n                if (cod_info_w.global_gain > maxggain)\n                    break;\n\n                if (best_noise_info.over_count == 0) {\n\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\n                    && cod_info_w.global_gain <= maxggain)\n                        cod_info_w.global_gain++;\n\n                    if (cod_info_w.global_gain > maxggain)\n                        break;\n                }\n\n                /* compute the distortion in this quantization */\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\n                    prev_noise);\n                noise_info.bits = cod_info_w.part2_3_length;\n\n                /*\n                 * check if this quantization is better than our saved\n                 * quantization\n                 */\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    better = gfp.quant_comp;\n                } else\n                    better = gfp.quant_comp_short;\n\n                better = quant_compare(better, best_noise_info, noise_info,\n                    cod_info_w, distort) ? 1 : 0;\n\n                /* save data so we can restore this quantization later */\n                if (better != 0) {\n                    best_part2_3_length = cod_info.part2_3_length;\n                    best_noise_info = noise_info;\n                    cod_info.assign(cod_info_w);\n                    age = 0;\n                    /* save data so we can restore this quantization later */\n                    /* store for later reuse */\n                    System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n                } else {\n                    /* early stop? */\n                    if (gfc.full_outer_loop == 0) {\n                        if (++age > search_limit\n                            && best_noise_info.over_count == 0)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3)\n                            && bRefine\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\n                            break;\n                    }\n                }\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\n\n            if (gfc.noise_shaping_amp == 3) {\n                if (!bRefine) {\n                    /* refine search */\n                    cod_info_w.assign(cod_info);\n                    System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n                    age = 0;\n                    best_ggain_pass1 = cod_info_w.global_gain;\n\n                    bRefine = true;\n                } else {\n                    /* search already refined, stop */\n                    bEndOfSearch = true;\n                }\n\n            } else {\n                bEndOfSearch = true;\n            }\n        }\n\n        /*\n         * finish up\n         */\n        if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n        /* restore for reuse on next try */\n            System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n        /*\n         * do the 'substep shaping'\n         */\n        else if ((gfc.substep_shaping & 1) != 0)\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\n\n        return best_noise_info.over_count;\n    }\n\n    /**\n     * Robert Hegemann 2000-09-06\n     *\n     * update reservoir status after FINAL quantization/bitrate\n     */\n    this.iteration_finish_one = function (gfc, gr, ch) {\n        var l3_side = gfc.l3_side;\n        var cod_info = l3_side.tt[gr][ch];\n\n        /*\n         * try some better scalefac storage\n         */\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\n\n        /*\n         * best huffman_divide may save some bits too\n         */\n        if (gfc.use_best_huffman == 1)\n            tk.best_huffman_divide(gfc, cod_info);\n\n        /*\n         * update reservoir status after FINAL quantization/bitrate\n         */\n        rv.ResvAdjust(gfc, cod_info);\n    };\n\n    /**\n     *\n     * 2000-09-04 Robert Hegemann\n     *\n     * @param l3_xmin\n     *            allowed distortion of the scalefactor\n     * @param xrpow\n     *            coloured magnitudes of spectral values\n     */\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\n        var gfc = gfp.internal_flags;\n        var bst_cod_info = new GrInfo();\n        var bst_xrpow = new_float(576);\n        var Max_bits = max_bits;\n        var real_bits = max_bits + 1;\n        var this_bits = (max_bits + min_bits) / 2;\n        var dbits, over, found = 0;\n        var sfb21_extra = gfc.sfb21_extra;\n\n        Arrays.fill(bst_cod_info.l3_enc, 0);\n\n        /*\n         * search within round about 40 bits of optimal\n         */\n        do {\n\n            if (this_bits > Max_bits - 42)\n                gfc.sfb21_extra = false;\n            else\n                gfc.sfb21_extra = sfb21_extra;\n\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\n\n            /*\n             * is quantization as good as we are looking for ? in this case: is\n             * no scalefactor band distorted?\n             */\n            if (over <= 0) {\n                found = 1;\n                /*\n                 * now we know it can be done with \"real_bits\" and maybe we can\n                 * skip some iterations\n                 */\n                real_bits = cod_info.part2_3_length;\n\n                /*\n                 * store best quantization so far\n                 */\n                bst_cod_info.assign(cod_info);\n                System.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\n\n                /*\n                 * try with fewer bits\n                 */\n                max_bits = real_bits - 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n            } else {\n                /*\n                 * try with more bits\n                 */\n                min_bits = this_bits + 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n\n                if (found != 0) {\n                    found = 2;\n                    /*\n                     * start again with best quantization so far\n                     */\n                    cod_info.assign(bst_cod_info);\n                    System.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\n                }\n            }\n        } while (dbits > 12);\n\n        gfc.sfb21_extra = sfb21_extra;\n\n        /*\n         * found=0 => nothing found, use last one found=1 => we just found the\n         * best and left the loop found=2 => we restored a good one and have now\n         * l3_enc to restore too\n         */\n        if (found == 2) {\n            System.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\n        }\n    }\n\n    /**\n     * Robert Hegemann 2000-09-05\n     *\n     * calculates * how many bits are available for analog silent granules * how\n     * many bits to use for the lowest allowed bitrate * how many bits each\n     * bitrate would provide\n     */\n    this.get_framebits = function (gfp, frameBits) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * always use at least this many bits per granule per channel unless we\n         * detect analog silence, see below\n         */\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\n        var bitsPerFrame = bs.getframebits(gfp);\n\n        /*\n         * bits for analog silence\n         */\n        gfc.bitrate_index = 1;\n        bitsPerFrame = bs.getframebits(gfp);\n\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\n            gfc.bitrate_index = i;\n            var mb = new MeanBits(bitsPerFrame);\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\n            bitsPerFrame = mb.bits;\n        }\n    };\n\n    /* RH: this one needs to be overhauled sometime */\n\n    /**\n     * <PRE>\n     *  2000-09-04 Robert Hegemann\n     *\n     *  * converts LR to MS coding when necessary\n     *  * calculates allowed/adjusted quantization noise amounts\n     *  * detects analog silent frames\n     *\n     *  some remarks:\n     *  - lower masking depending on Quality setting\n     *  - quality control together with adjusted ATH MDCT scaling\n     *    on lower quality setting allocate more noise from\n     *    ATH masking, and on higher quality setting allocate\n     *    less noise from ATH masking.\n     *  - experiments show that going more than 2dB over GPSYCHO's\n     *    limits ends up in very annoying artefacts\n     * </PRE>\n     */\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\n                                     max_bits, bands) {\n        var gfc = gfp.internal_flags;\n\n        var masking_lower_db, adjust = 0.0;\n        var analog_silence = 1;\n        var bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\n\n        get_framebits(gfp, frameBits);\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    adjust = 1.28 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\n                } else {\n                    adjust = 2.56 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n                }\n                gfc.masking_lower = Math.pow(10.0,\n                    masking_lower_db * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                    l3_xmin[gr][ch]);\n                if (bands[gr][ch] != 0)\n                    analog_silence = 0;\n\n                min_bits[gr][ch] = 126;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\n                    max_bits[gr][ch] /= bits;\n                }\n                if (min_bits[gr][ch] > max_bits[gr][ch])\n                    min_bits[gr][ch] = max_bits[gr][ch];\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = gfc.l3_side.tt[gr][ch];\n                var pxmin = l3_xmin[gr][ch];\n                var pxminPos = 0;\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                        / Encoder.SBMAX_l / Encoder.SBMAX_l;\n\n                if (gi.block_type == Encoder.SHORT_TYPE) {\n                    for (var sfb = gi.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                    }\n                }\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\n                        0.9 * max_bits[gr][ch]);\n            }\n        }\n    };\n\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\n        var gfc = gfp.internal_flags;\n\n        var analog_silence = 1;\n        var avg = 0, bits = 0;\n        var maximum_framebits;\n\n        if (!gfp.free_format) {\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\n\n            var mb = new MeanBits(avg);\n            rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n\n            get_framebits(gfp, frameBits);\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\n        } else {\n            gfc.bitrate_index = 0;\n            var mb = new MeanBits(avg);\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n            frameBits[0] = maximum_framebits;\n        }\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                gfc.masking_lower = Math.pow(10.0,\n                    gfc.PSY.mask_adjust * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                        l3_xmin[gr][ch]))\n                    analog_silence = 0;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > maximum_framebits) {\n                    max_bits[gr][ch] *= maximum_framebits;\n                    max_bits[gr][ch] /= bits;\n                }\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    /**\n     * calculates target bits for ABR encoding\n     *\n     * mt 2000/05/31\n     */\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var res_factor;\n        var gr, ch, totbits, mean_bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var mb = new MeanBits(mean_bits);\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\n        mean_bits = mb.bits;\n\n        gfc.bitrate_index = 1;\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\n\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\n        if ((gfc.substep_shaping & 1) != 0)\n            mean_bits *= 1.09;\n        mean_bits /= gfp.out_samplerate;\n        mean_bits -= gfc.sideinfo_len * 8;\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\n\n        /**\n         * <PRE>\n         *           res_factor is the percentage of the target bitrate that should\n         *           be used on average.  the remaining bits are added to the\n         *           bitreservoir and used for difficult to encode frames.\n         *\n         *           Since we are tracking the average bitrate, we should adjust\n         *           res_factor \"on the fly\", increasing it if the average bitrate\n         *           is greater than the requested bitrate, and decreasing it\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\n         *\n         *           Until we get the above suggestion working, we use the following\n         *           tuning:\n         *           compression ratio    res_factor\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\n         *           11   (128kbps)         .93      7% held for reservoir\n         *\n         *           with linear interpolation for other values.\n         * </PRE>\n         */\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\n            / (11.0 - 5.5);\n        if (res_factor < .90)\n            res_factor = .90;\n        if (res_factor > 1.00)\n            res_factor = 1.00;\n\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                if (pe[gr][ch] > 700) {\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\n\n                    var cod_info = l3_side.tt[gr][ch];\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                    /* short blocks use a little extra, no matter what the pe */\n                    if (cod_info.block_type == Encoder.SHORT_TYPE) {\n                        if (add_bits < mean_bits / 2)\n                            add_bits = mean_bits / 2;\n                    }\n                    /* at most increase bits by 1.5*average */\n                    if (add_bits > mean_bits * 3 / 2)\n                        add_bits = mean_bits * 3 / 2;\n                    else if (add_bits < 0)\n                        add_bits = 0;\n\n                    targ_bits[gr][ch] += add_bits;\n                }\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                }\n                sum += targ_bits[gr][ch];\n            }\n            /* for ch */\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                    targ_bits[gr][ch] /= sum;\n                }\n            }\n        }\n        /* for gr */\n\n        if (gfc.mode_ext == Encoder.MPG_MD_MS_LR)\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\n                    * gfc.channels_out,\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\n            }\n\n        /*\n         * sum target bits\n         */\n        totbits = 0;\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                totbits += targ_bits[gr][ch];\n            }\n        }\n\n        /*\n         * repartion target bits if needed\n         */\n        if (totbits > max_frame_bits[0]) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    targ_bits[gr][ch] *= max_frame_bits[0];\n                    targ_bits[gr][ch] /= totbits;\n                }\n            }\n        }\n    }\n\n}\n\n/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\n\n\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder.SHORT_TYPE];\n\tvar cx = win[Encoder.SHORT_TYPE];\n\tvar ca = win[Encoder.SHORT_TYPE];\n\tvar cs = win[Encoder.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n//package mp3;\n\n\nfunction III_psy_ratio() {\n\tthis.thm = new III_psy_xmin();\n\tthis.en = new III_psy_xmin();\n}\n\n\n/**\n * ENCDELAY The encoder delay.\n *\n * Minimum allowed is MDCTDELAY (see below)\n *\n * The first 96 samples will be attenuated, so using a value less than 96\n * will result in corrupt data for the first 96-ENCDELAY samples.\n *\n * suggested: 576 set to 1160 to sync with FhG.\n */\nEncoder.ENCDELAY = 576;\n/**\n * make sure there is at least one complete frame after the last frame\n * containing real data\n *\n * Using a value of 288 would be sufficient for a a very sophisticated\n * decoder that can decode granule-by-granule instead of frame by frame. But\n * lets not assume this, and assume the decoder will not decode frame N\n * unless it also has data for frame N+1\n */\nEncoder.POSTDELAY = 1152;\n\n/**\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\n * 528! Takehiro's routines:\n */\nEncoder.MDCTDELAY = 48;\nEncoder.FFTOFFSET = (224 + Encoder.MDCTDELAY);\n\n/**\n * Most decoders, including the one we use, have a delay of 528 samples.\n */\nEncoder.DECDELAY = 528;\n\n/**\n * number of subbands\n */\nEncoder.SBLIMIT = 32;\n\n/**\n * parition bands bands\n */\nEncoder.CBANDS = 64;\n\n/**\n * number of critical bands/scale factor bands where masking is computed\n */\nEncoder.SBPSY_l = 21;\nEncoder.SBPSY_s = 12;\n\n/**\n * total number of scalefactor bands encoded\n */\nEncoder.SBMAX_l = 22;\nEncoder.SBMAX_s = 13;\nEncoder.PSFB21 = 6;\nEncoder.PSFB12 = 6;\n\n/**\n * FFT sizes\n */\nEncoder.BLKSIZE = 1024;\nEncoder.HBLKSIZE = (Encoder.BLKSIZE / 2 + 1);\nEncoder.BLKSIZE_s = 256;\nEncoder.HBLKSIZE_s = (Encoder.BLKSIZE_s / 2 + 1);\n\nEncoder.NORM_TYPE = 0;\nEncoder.START_TYPE = 1;\nEncoder.SHORT_TYPE = 2;\nEncoder.STOP_TYPE = 3;\n\n/**\n * <PRE>\n * Mode Extention:\n * When we are in stereo mode, there are 4 possible methods to store these\n * two channels. The stereo modes -m? are using a subset of them.\n *\n *  -ms: MPG_MD_LR_LR\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\n *  -mf: MPG_MD_MS_LR\n *  -mi: all\n * </PRE>\n */\nEncoder.MPG_MD_LR_LR = 0;\nEncoder.MPG_MD_LR_I = 1;\nEncoder.MPG_MD_MS_LR = 2;\nEncoder.MPG_MD_MS_I = 3;\n\nEncoder.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\n\nfunction Encoder() {\n\n    var FFTOFFSET = Encoder.FFTOFFSET;\n    var MPG_MD_MS_LR = Encoder.MPG_MD_MS_LR;\n    //BitStream bs;\n    //PsyModel psy;\n    //VBRTag vbr;\n    //QuantizePVT qupvt;\n    var bs = null;\n    this.psy = null;\n    var psy = null;\n    var vbr = null;\n    var qupvt = null;\n\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\n    //    VBRTag vbr) {\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\n        bs = _bs;\n        this.psy = _psy;\n        psy = _psy;\n        vbr = _vbr;\n        qupvt = _qupvt;\n    };\n\n    var newMDCT = new NewMDCT();\n\n    /***********************************************************************\n     *\n     * encoder and decoder delays\n     *\n     ***********************************************************************/\n\n    /**\n     * <PRE>\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\n     * layer  II enc->dec delay:   480  (481?)   (observed)\n     *\n     * polyphase 256-16             (dec or enc)        = 240\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\n     * total:    512+16\n     *\n     * My guess is that delay of polyphase filterbank is actualy 240.5\n     * (there are technical reasons for this, see postings in mp3encoder).\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\n     * </PRE>\n     */\n\n\n    /**\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\n     *\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\n     */\n//private void adjust_ATH(final LameInternalFlags gfc) {\n    function adjust_ATH(gfc) {\n        var gr2_max, max_pow;\n\n        if (gfc.ATH.useAdjust == 0) {\n            gfc.ATH.adjust = 1.0;\n            /* no adjustment */\n            return;\n        }\n\n        /* jd - 2001 mar 12, 27, jun 30 */\n        /* loudness based on equal loudness curve; */\n        /* use granule with maximum combined loudness */\n        max_pow = gfc.loudness_sq[0][0];\n        gr2_max = gfc.loudness_sq[1][0];\n        if (gfc.channels_out == 2) {\n            max_pow += gfc.loudness_sq[0][1];\n            gr2_max += gfc.loudness_sq[1][1];\n        } else {\n            max_pow += max_pow;\n            gr2_max += gr2_max;\n        }\n        if (gfc.mode_gr == 2) {\n            max_pow = Math.max(max_pow, gr2_max);\n        }\n        max_pow *= 0.5;\n        /* max_pow approaches 1.0 for full band noise */\n\n        /* jd - 2001 mar 31, jun 30 */\n        /* user tuning of ATH adjustment region */\n        max_pow *= gfc.ATH.aaSensitivityP;\n\n        /*\n         * adjust ATH depending on range of maximum value\n         */\n\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\n        /* continuous curves based on approximation */\n        /* to GB's original values. */\n        /* For an increase in approximate loudness, */\n        /* set ATH adjust to adjust_limit immediately */\n        /* after a delay of one frame. */\n        /* For a loudness decrease, reduce ATH adjust */\n        /* towards adjust_limit gradually. */\n        /* max_pow is a loudness squared or a power. */\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\n            if (gfc.ATH.adjust >= 1.0) {\n                gfc.ATH.adjust = 1.0;\n            } else {\n                /* preceding frame has lower ATH adjust; */\n                /* ascend only to the preceding adjust_limit */\n                /* in case there is leading low volume */\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                }\n            }\n            gfc.ATH.adjustLimit = 1.0;\n        } else { /* adjustment curve */\n            /* about 32 dB maximum adjust (0.000625) */\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\n                    gfc.ATH.adjust = adj_lim_new;\n                }\n            } else { /* ascend */\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\n                    gfc.ATH.adjust = adj_lim_new;\n                } else {\n                    /* preceding frame has lower ATH adjust; */\n                    /* ascend only to the preceding adjust_limit */\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                    }\n                }\n            }\n            gfc.ATH.adjustLimit = adj_lim_new;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  some simple statistics\n     *\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\n     *  : bitrates, kbps depending on MPEG version\n     *  bitrate index 15: forbidden\n     *\n     *  mode_ext:\n     *  0:  LR\n     *  1:  LR-i\n     *  2:  MS\n     *  3:  MS-i\n     * </PRE>\n     */\n    function updateStats(gfc) {\n        var gr, ch;\n\n        /* count bitrate indices */\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\n        gfc.bitrate_stereoMode_Hist[15][4]++;\n\n        /* count 'em for every mode extension in case of 2 channel encoding */\n        if (gfc.channels_out == 2) {\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\n        }\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\n                    bt = 4;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\n                gfc.bitrate_blockType_Hist[15][bt]++;\n                gfc.bitrate_blockType_Hist[15][5]++;\n            }\n        }\n    }\n\n    function lame_encode_frame_init(gfp, inbuf) {\n        var gfc = gfp.internal_flags;\n\n        var ch, gr;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* prime the MDCT/polyphase filterbank with a short block */\n            var i, j;\n            var primebuff0 = new_float(286 + 1152 + 576);\n            var primebuff1 = new_float(286 + 1152 + 576);\n            gfc.lame_encode_frame_init = 1;\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\n                if (i < 576 * gfc.mode_gr) {\n                    primebuff0[i] = 0;\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = 0;\n                } else {\n                    primebuff0[i] = inbuf[0][j];\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = inbuf[1][j];\n                    ++j;\n                }\n            }\n            /* polyphase filtering / mdct */\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.SHORT_TYPE;\n                }\n            }\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\n\n            /* check FFT will not use a negative starting offset */\n            /* check if we have enough data for FFT */\n            /* check if we have enough data for polyphase filterbank */\n        }\n\n    }\n\n    /**\n     * <PRE>\n     * encodeframe()           Layer 3\n     *\n     * encode a single frame\n     *\n     *\n     *    lame_encode_frame()\n     *\n     *\n     *                           gr 0            gr 1\n     *    inbuf:           |--------------|--------------|--------------|\n     *\n     *\n     *    Polyphase (18 windows, each shifted 32)\n     *    gr 0:\n     *    window1          <----512---.\n     *    window18                 <----512---.\n     *\n     *    gr 1:\n     *    window1                         <----512---.\n     *    window18                                <----512---.\n     *\n     *\n     *\n     *    MDCT output:  |--------------|--------------|--------------|\n     *\n     *    FFT's                    <---------1024---------.\n     *                                             <---------1024-------.\n     *\n     *\n     *\n     *        inbuf = buffer of PCM data size=MP3 framesize\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\n     *\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\n     *        next granule.\n     *        FFT is centered over granule:  224+576+224\n     *        So FFT starts at:   576-224-MDCTDELAY\n     *\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\n     *\n     *        MPEG2:  polyphase first window:  [0..511]\n     *                          18th window:   [544..1055]          (1056)\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\n     *                data needed:  512+framesize-32\n     *\n     *        A close look newmdct.c shows that the polyphase filterbank\n     *        only uses data from [0..510] for each window.  Perhaps because the window\n     *        used by the filterbank is zero for the last point, so Takehiro's\n     *        code doesn't bother to compute with it.\n     *\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\n     *\n     * </PRE>\n     */\n\n\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var mp3count;\n        var masking_LR = new_array_n([2, 2]);\n        /*\n         * LR masking &\n         * energy\n         */\n        masking_LR[0][0] = new III_psy_ratio();\n        masking_LR[0][1] = new III_psy_ratio();\n        masking_LR[1][0] = new III_psy_ratio();\n        masking_LR[1][1] = new III_psy_ratio();\n        var masking_MS = new_array_n([2, 2]);\n        /* MS masking & energy */\n        masking_MS[0][0] = new III_psy_ratio();\n        masking_MS[0][1] = new III_psy_ratio();\n        masking_MS[1][0] = new III_psy_ratio();\n        masking_MS[1][1] = new III_psy_ratio();\n        //III_psy_ratio masking[][];\n        var masking;\n        /* pointer to selected maskings */\n        var inbuf = [null, null];\n        var gfc = gfp.internal_flags;\n\n        var tot_ener = new_float_n([2, 4]);\n        var ms_ener_ratio = [.5, .5];\n        var pe = [[0., 0.], [0., 0.]];\n        var pe_MS = [[0., 0.], [0., 0.]];\n\n//float[][] pe_use;\n        var pe_use;\n\n        var ch, gr;\n\n        inbuf[0] = inbuf_l;\n        inbuf[1] = inbuf_r;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* first run? */\n            lame_encode_frame_init(gfp, inbuf);\n\n        }\n\n        /********************** padding *****************************/\n        /**\n         * <PRE>\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\n         * by Martin Sieler, Ralph Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         * </PRE>\n         */\n        gfc.padding = 0;\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\n            gfc.slot_lag += gfp.out_samplerate;\n            gfc.padding = 1;\n        }\n\n        /****************************************\n         * Stage 1: psychoacoustic model *\n         ****************************************/\n\n        if (gfc.psymodel != 0) {\n            /*\n             * psychoacoustic model psy model has a 1 granule (576) delay that\n             * we must compensate for (mt 6/99).\n             */\n            var ret;\n            var bufp = [null, null];\n            /* address of beginning of left & right granule */\n            var bufpPos = 0;\n            /* address of beginning of left & right granule */\n            var blocktype = new_int(2);\n\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    bufp[ch] = inbuf[ch];\n                    bufpPos = 576 + gr * 576 - Encoder.FFTOFFSET;\n                }\n                if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                } else {\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                }\n                if (ret != 0)\n                    return -4;\n\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\n                    if (ms_ener_ratio[gr] > 0)\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\n                }\n\n                /* block type flags */\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var cod_info = gfc.l3_side.tt[gr][ch];\n                    cod_info.block_type = blocktype[ch];\n                    cod_info.mixed_block_flag = 0;\n                }\n            }\n        } else {\n            /* no psy model */\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.NORM_TYPE;\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\n                }\n        }\n\n        /* auto-adjust of ATH, useful for low volume */\n        adjust_ATH(gfc);\n\n        /****************************************\n         * Stage 2: MDCT *\n         ****************************************/\n\n        /* polyphase filtering / mdct */\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\n\n        /****************************************\n         * Stage 3: MS/LR decision *\n         ****************************************/\n\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\n        gfc.mode_ext = Encoder.MPG_MD_LR_LR;\n\n        if (gfp.force_ms) {\n            gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            /*\n             * ms_ratio = is scaled, for historical reasons, to look like a\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\n             * uncorrelated\n             */\n\n            /**\n             * <PRE>\n             * [0] and [1] are the results for the two granules in MPEG-1,\n             * in MPEG-2 it's only a faked averaging of the same value\n             * _prev is the value of the last granule of the previous frame\n             * _next is the value of the first granule of the next frame\n             * </PRE>\n             */\n\n            var sum_pe_MS = 0.;\n            var sum_pe_LR = 0.;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    sum_pe_MS += pe_MS[gr][ch];\n                    sum_pe_LR += pe[gr][ch];\n                }\n            }\n\n            /* based on PE: M/S coding would not use much more bits than L/R */\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\n\n                var gi0 = gfc.l3_side.tt[0];\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\n\n                if (gi0[0].block_type == gi0[1].block_type\n                    && gi1[0].block_type == gi1[1].block_type) {\n\n                    gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n                }\n            }\n        }\n\n        /* bit and noise allocation */\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\n            masking = masking_MS;\n            /* use MS masking */\n            pe_use = pe_MS;\n        } else {\n            masking = masking_LR;\n            /* use LR masking */\n            pe_use = pe;\n        }\n\n        /* copy data for MP3 frame analyzer */\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\n                    System.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\n                        gfc.pinfo.xr[gr][ch], 0, 576);\n                    /*\n                     * in psymodel, LR and MS data was stored in pinfo. switch\n                     * to MS data:\n                     */\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\n                        System.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\n                            gfc.pinfo.energy[gr][ch], 0,\n                            gfc.pinfo.energy[gr][ch].length);\n                    }\n                }\n            }\n        }\n\n        /****************************************\n         * Stage 4: quantization loop *\n         ****************************************/\n\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr) {\n\n            var i;\n            var f;\n\n            for (i = 0; i < 18; i++)\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\n\n            f = 0.0;\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    f += pe_use[gr][ch];\n            gfc.nsPsy.pefirbuf[18] = f;\n\n            f = gfc.nsPsy.pefirbuf[9];\n            for (i = 0; i < 9; i++)\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\n                    * Encoder.fircoef[i];\n\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    pe_use[gr][ch] *= f;\n                }\n            }\n        }\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\n\n        /****************************************\n         * Stage 5: bitstream formatting *\n         ****************************************/\n\n        /* write the frame to the bitstream */\n        bs.format_bitstream(gfp);\n\n        /* copy mp3 bit buffer into array */\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\n\n        if (gfp.bWriteVbrTag)\n            vbr.addVbrFrame(gfp);\n\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var j;\n                for (j = 0; j < FFTOFFSET; j++)\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\n                    + gfp.framesize];\n                for (j = FFTOFFSET; j < 1600; j++) {\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\n                }\n            }\n            qupvt.set_frame_pinfo(gfp, masking);\n        }\n\n        updateStats(gfc);\n\n        return mp3count;\n    }\n}\n\n\n//package mp3;\n\nfunction VBRSeekInfo() {\n    /**\n     * What we have seen so far.\n     */\n    this.sum = 0;\n    /**\n     * How many frames we have seen in this chunk.\n     */\n    this.seen = 0;\n    /**\n     * How many frames we want to collect into one chunk.\n     */\n    this.want = 0;\n    /**\n     * Actual position in our bag.\n     */\n    this.pos = 0;\n    /**\n     * Size of our bag.\n     */\n    this.size = 0;\n    /**\n     * Pointer to our bag.\n     */\n    this.bag = null;\n    this.nVbrNumFrames = 0;\n    this.nBytesWritten = 0;\n    /* VBR tag data */\n    this.TotalFrameSize = 0;\n}\n\n\n\nfunction IIISideInfo() {\n    this.tt = [[null, null], [null, null]];\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.resvDrain_pre = 0;\n    this.resvDrain_post = 0;\n    this.scfsi = [new_int(4), new_int(4)];\n\n    for (var gr = 0; gr < 2; gr++) {\n        for (var ch = 0; ch < 2; ch++) {\n            this.tt[gr][ch] = new GrInfo();\n        }\n    }\n}\n\n\nfunction III_psy_xmin() {\n    this.l = new_float(Encoder.SBMAX_l);\n    this.s = new_float_n([Encoder.SBMAX_s, 3]);\n\n    var self = this;\n    this.assign = function (iii_psy_xmin) {\n        System.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder.SBMAX_l);\n        for (var i = 0; i < Encoder.SBMAX_s; i++) {\n            for (var j = 0; j < 3; j++) {\n                self.s[i][j] = iii_psy_xmin.s[i][j];\n            }\n        }\n    }\n}\n\n\n\n//package mp3;\n\n/**\n * Variables used for --nspsytune\n *\n * @author Ken\n *\n */\nfunction NsPsy() {\n    this.last_en_subshort = new_float_n([4, 9]);\n    this.lastAttacks = new_int(4);\n    this.pefirbuf = new_float(19);\n    this.longfact = new_float(Encoder.SBMAX_l);\n    this.shortfact = new_float(Encoder.SBMAX_s);\n\n    /**\n     * short block tuning\n     */\n    this.attackthre = 0.;\n    this.attackthre_s = 0.;\n}\n\n\n\n\nLameInternalFlags.MFSIZE = (3 * 1152 + Encoder.ENCDELAY - Encoder.MDCTDELAY);\nLameInternalFlags.MAX_HEADER_BUF = 256;\nLameInternalFlags.MAX_BITS_PER_CHANNEL = 4095;\nLameInternalFlags.MAX_BITS_PER_GRANULE = 7680;\nLameInternalFlags.BPC = 320;\n\nfunction LameInternalFlags() {\n    var MAX_HEADER_LEN = 40;\n\n\n    /********************************************************************\n     * internal variables NOT set by calling program, and should not be *\n     * modified by the calling program *\n     ********************************************************************/\n\n    /**\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\n     * pointer to this struct. It is very unlikely that a pointer to\n     * lame_global_flags has the same 32 bits in it's structure (large and other\n     * special properties, for instance prime).\n     *\n     * To test that the structure is right and initialized, use: if ( gfc .\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\n     * NOT \"if (flag)\". Unintended modification of this element will be\n     * otherwise misinterpreted as an init.\n     */\n    this.Class_ID = 0;\n\n    this.lame_encode_frame_init = 0;\n    this.iteration_init_init = 0;\n    this.fill_buffer_resample_init = 0;\n\n    //public float mfbuf[][] = new float[2][MFSIZE];\n    this.mfbuf = new_float_n([2, LameInternalFlags.MFSIZE]);\n\n    /**\n     * granules per frame\n     */\n    this.mode_gr = 0;\n    /**\n     * number of channels in the input data stream (PCM or decoded PCM)\n     */\n    this.channels_in = 0;\n    /**\n     * number of channels in the output data stream (not used for decoding)\n     */\n    this.channels_out = 0;\n    /**\n     * input_samp_rate/output_samp_rate\n     */\n        //public double resample_ratio;\n    this.resample_ratio = 0.;\n\n    this.mf_samples_to_encode = 0;\n    this.mf_size = 0;\n    /**\n     * min bitrate index\n     */\n    this.VBR_min_bitrate = 0;\n    /**\n     * max bitrate index\n     */\n    this.VBR_max_bitrate = 0;\n    this.bitrate_index = 0;\n    this.samplerate_index = 0;\n    this.mode_ext = 0;\n\n    /* lowpass and highpass filter control */\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.lowpass1 = 0.;\n    this.lowpass2 = 0.;\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.highpass1 = 0.;\n    this.highpass2 = 0.;\n\n    /**\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\n     */\n    this.noise_shaping = 0;\n\n    /**\n     * 0 = ISO model: amplify all distorted bands<BR>\n     * 1 = amplify within 50% of max (on db scale)<BR>\n     * 2 = amplify only most distorted band<BR>\n     * 3 = method 1 and refine with method 2<BR>\n     */\n    this.noise_shaping_amp = 0;\n    /**\n     * 0 = no substep<BR>\n     * 1 = use substep shaping at last step(VBR only)<BR>\n     * (not implemented yet)<BR>\n     * 2 = use substep inside loop<BR>\n     * 3 = use substep inside loop and last step<BR>\n     */\n    this.substep_shaping = 0;\n\n    /**\n     * 1 = gpsycho. 0 = none\n     */\n    this.psymodel = 0;\n    /**\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\n     * a scalefac has reached max value<BR>\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\n     * 2 = stop when all scalefacs amplified\n     */\n    this.noise_shaping_stop = 0;\n\n    /**\n     * 0 = no, 1 = yes\n     */\n    this.subblock_gain = 0;\n    /**\n     * 0 = no. 1=outside loop 2=inside loop(slow)\n     */\n    this.use_best_huffman = 0;\n\n    /**\n     * 0 = stop early after 0 distortion found. 1 = full search\n     */\n    this.full_outer_loop = 0;\n\n    //public IIISideInfo l3_side = new IIISideInfo();\n    this.l3_side = new IIISideInfo();\n    this.ms_ratio = new_float(2);\n\n    /* used for padding */\n    /**\n     * padding for the current frame?\n     */\n    this.padding = 0;\n    this.frac_SpF = 0;\n    this.slot_lag = 0;\n\n    /**\n     * optional ID3 tags\n     */\n        //public ID3TagSpec tag_spec;\n    this.tag_spec = null;\n    this.nMusicCRC = 0;\n\n    /* variables used by Quantize */\n    //public int OldValue[] = new int[2];\n    this.OldValue = new_int(2);\n    //public int CurrentStep[] = new int[2];\n    this.CurrentStep = new_int(2);\n\n    this.masking_lower = 0.;\n    //public int bv_scf[] = new int[576];\n    this.bv_scf = new_int(576);\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\n    this.pseudohalf = new_int(L3Side.SFBMAX);\n\n    /**\n     * will be set in lame_init_params\n     */\n    this.sfb21_extra = false;\n\n    /* BPC = maximum number of filter convolution windows to precompute */\n    //public float[][] inbuf_old = new float[2][];\n    this.inbuf_old = new Array(2);\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\n    this.blackfilt = new Array(2 * LameInternalFlags.BPC + 1);\n    //public double itime[] = new double[2];\n    this.itime = new_double(2);\n    this.sideinfo_len = 0;\n\n    /* variables for newmdct.c */\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\n    this.sb_sample = new_float_n([2, 2, 18, Encoder.SBLIMIT]);\n    this.amp_filter = new_float(32);\n\n    /* variables for BitStream */\n\n    /**\n     * <PRE>\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\n     * max number of frames in reservoir:  8\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\n     * with VBR, if you are encoding all silence, it is possible to\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\n     * to buffer up to 255 headers!\n     * </PRE>\n     */\n    /**\n     * also, max_header_buf has to be a power of two\n     */\n    /**\n     * max size of header is 38\n     */\n\n    function Header() {\n        this.write_timing = 0;\n        this.ptr = 0;\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\n        this.buf = new_byte(MAX_HEADER_LEN);\n    }\n\n    this.header = new Array(LameInternalFlags.MAX_HEADER_BUF);\n\n    this.h_ptr = 0;\n    this.w_ptr = 0;\n    this.ancillary_flag = 0;\n\n    /* variables for Reservoir */\n    /**\n     * in bits\n     */\n    this.ResvSize = 0;\n    /**\n     * in bits\n     */\n    this.ResvMax = 0;\n\n    //public ScaleFac scalefac_band = new ScaleFac();\n    this.scalefac_band = new ScaleFac();\n\n    /* daa from PsyModel */\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\n    /* to be remembered for the unpredictability measure. For \"r\" and */\n    /* \"phi_sav\", the first index from the left is the channel select and */\n    /* the second index is the \"age\" of the data. */\n    this.minval_l = new_float(Encoder.CBANDS);\n    this.minval_s = new_float(Encoder.CBANDS);\n    this.nb_1 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_2 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_s1 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_s2 = new_float_n([4, Encoder.CBANDS]);\n    this.s3_ss = null;\n    this.s3_ll = null;\n    this.decay = 0.;\n\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\n    this.thm = new Array(4);\n    this.en = new Array(4);\n\n    /**\n     * fft and energy calculation\n     */\n    this.tot_ener = new_float(4);\n\n    /* loudness calculation (for adaptive threshold of hearing) */\n    /**\n     * loudness^2 approx. per granule and channel\n     */\n    this.loudness_sq = new_float_n([2, 2]);\n    /**\n     * account for granule delay of L3psycho_anal\n     */\n    this.loudness_sq_save = new_float(2);\n\n    /**\n     * Scale Factor Bands\n     */\n    this.mld_l = new_float(Encoder.SBMAX_l);\n    this.mld_s = new_float(Encoder.SBMAX_s);\n    this.bm_l = new_int(Encoder.SBMAX_l);\n    this.bo_l = new_int(Encoder.SBMAX_l);\n    this.bm_s = new_int(Encoder.SBMAX_s);\n    this.bo_s = new_int(Encoder.SBMAX_s);\n    this.npart_l = 0;\n    this.npart_s = 0;\n\n    this.s3ind = new_int_n([Encoder.CBANDS, 2]);\n    this.s3ind_s = new_int_n([Encoder.CBANDS, 2]);\n\n    this.numlines_s = new_int(Encoder.CBANDS);\n    this.numlines_l = new_int(Encoder.CBANDS);\n    this.rnumlines_l = new_float(Encoder.CBANDS);\n    this.mld_cb_l = new_float(Encoder.CBANDS);\n    this.mld_cb_s = new_float(Encoder.CBANDS);\n    this.numlines_s_num1 = 0;\n    this.numlines_l_num1 = 0;\n\n    /* ratios */\n    this.pe = new_float(4);\n    this.ms_ratio_s_old = 0.;\n    this.ms_ratio_l_old = 0.;\n    this.ms_ener_ratio_old = 0.;\n\n    /**\n     * block type\n     */\n    this.blocktype_old = new_int(2);\n\n    /**\n     * variables used for --nspsytune\n     */\n    this.nsPsy = new NsPsy();\n\n    /**\n     * used for Xing VBR header\n     */\n    this.VBR_seek_table = new VBRSeekInfo();\n\n    /**\n     * all ATH related stuff\n     */\n        //public ATH ATH;\n    this.ATH = null;\n\n    this.PSY = null;\n\n    this.nogap_total = 0;\n    this.nogap_current = 0;\n\n    /* ReplayGain */\n    this.decode_on_the_fly = true;\n    this.findReplayGain = true;\n    this.findPeakSample = true;\n    this.PeakSample = 0.;\n    this.RadioGain = 0;\n    this.AudiophileGain = 0;\n    //public ReplayGain rgdata;\n    this.rgdata = null;\n\n    /**\n     * gain change required for preventing clipping\n     */\n    this.noclipGainChange = 0;\n    /**\n     * user-specified scale factor required for preventing clipping\n     */\n    this.noclipScale = 0.;\n\n    /* simple statistics */\n    this.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\n    /**\n     * norm/start/short/stop/mixed(short)/sum\n     */\n    this.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\n\n    //public PlottingData pinfo;\n    //public MPGLib.mpstr_tag hip;\n    this.pinfo = null;\n    this.hip = null;\n\n    this.in_buffer_nsamples = 0;\n    //public float[] in_buffer_0;\n    //public float[] in_buffer_1;\n    this.in_buffer_0 = null;\n    this.in_buffer_1 = null;\n\n    //public IIterationLoop iteration_loop;\n    this.iteration_loop = null;\n\n    for (var i = 0; i < this.en.length; i++) {\n        this.en[i] = new III_psy_xmin();\n    }\n    for (var i = 0; i < this.thm.length; i++) {\n        this.thm[i] = new III_psy_xmin();\n    }\n    for (var i = 0; i < this.header.length; i++) {\n        this.header[i] = new Header();\n    }\n\n}\n\n\n\nfunction FFT() {\n\n    var window = new_float(Encoder.BLKSIZE);\n    var window_s = new_float(Encoder.BLKSIZE_s / 2);\n\n    var costab = [\n        9.238795325112867e-01, 3.826834323650898e-01,\n        9.951847266721969e-01, 9.801714032956060e-02,\n        9.996988186962042e-01, 2.454122852291229e-02,\n        9.999811752826011e-01, 6.135884649154475e-03\n    ];\n\n    function fht(fz, fzPos, n) {\n        var tri = 0;\n        var k4;\n        var fi;\n        var gi;\n\n        n <<= 1;\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\n        var fn = fzPos + n;\n        k4 = 4;\n        do {\n            var s1, c1;\n            var i, k1, k2, k3, kx;\n            kx = k4 >> 1;\n            k1 = k4;\n            k2 = k4 << 1;\n            k3 = k2 + k1;\n            k4 = k2 << 1;\n            fi = fzPos;\n            gi = fi + kx;\n            do {\n                var f0, f1, f2, f3;\n                f1 = fz[fi + 0] - fz[fi + k1];\n                f0 = fz[fi + 0] + fz[fi + k1];\n                f3 = fz[fi + k2] - fz[fi + k3];\n                f2 = fz[fi + k2] + fz[fi + k3];\n                fz[fi + k2] = f0 - f2;\n                fz[fi + 0] = f0 + f2;\n                fz[fi + k3] = f1 - f3;\n                fz[fi + k1] = f1 + f3;\n                f1 = fz[gi + 0] - fz[gi + k1];\n                f0 = fz[gi + 0] + fz[gi + k1];\n                f3 = (Util.SQRT2 * fz[gi + k3]);\n                f2 = (Util.SQRT2 * fz[gi + k2]);\n                fz[gi + k2] = f0 - f2;\n                fz[gi + 0] = f0 + f2;\n                fz[gi + k3] = f1 - f3;\n                fz[gi + k1] = f1 + f3;\n                gi += k4;\n                fi += k4;\n            } while (fi < fn);\n            c1 = costab[tri + 0];\n            s1 = costab[tri + 1];\n            for (i = 1; i < kx; i++) {\n                var c2, s2;\n                c2 = 1 - (2 * s1) * s1;\n                s2 = (2 * s1) * c1;\n                fi = fzPos + i;\n                gi = fzPos + k1 - i;\n                do {\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\n                    f1 = fz[fi + 0] - a;\n                    f0 = fz[fi + 0] + a;\n                    g1 = fz[gi + 0] - b;\n                    g0 = fz[gi + 0] + b;\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\n                    f3 = fz[fi + k2] - a;\n                    f2 = fz[fi + k2] + a;\n                    g3 = fz[gi + k2] - b;\n                    g2 = fz[gi + k2] + b;\n                    b = s1 * f2 - c1 * g3;\n                    a = c1 * f2 + s1 * g3;\n                    fz[fi + k2] = f0 - a;\n                    fz[fi + 0] = f0 + a;\n                    fz[gi + k3] = g1 - b;\n                    fz[gi + k1] = g1 + b;\n                    b = c1 * g2 - s1 * f3;\n                    a = s1 * g2 + c1 * f3;\n                    fz[gi + k2] = g0 - a;\n                    fz[gi + 0] = g0 + a;\n                    fz[fi + k3] = f1 - b;\n                    fz[fi + k1] = f1 + b;\n                    gi += k4;\n                    fi += k4;\n                } while (fi < fn);\n                c2 = c1;\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\n            }\n            tri += 2;\n        } while (k4 < n);\n    }\n\n    var rv_tbl = [0x00, 0x80, 0x40,\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\n\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\n        for (var b = 0; b < 3; b++) {\n            var x = Encoder.BLKSIZE_s / 2;\n            var k = 0xffff & ((576 / 3) * (b + 1));\n            var j = Encoder.BLKSIZE_s / 8 - 1;\n            do {\n                var f0, f1, f2, f3, w;\n                var i = rv_tbl[j << 2] & 0xff;\n\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x -= 4;\n                x_real[b][x + 0] = f0 + f2;\n                x_real[b][x + 2] = f0 - f2;\n                x_real[b][x + 1] = f1 + f3;\n                x_real[b][x + 3] = f1 - f3;\n\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 0] = f0 + f2;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 2] = f0 - f2;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 1] = f1 + f3;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 3] = f1 - f3;\n            } while (--j >= 0);\n\n            fht(x_real[b], x, Encoder.BLKSIZE_s / 2);\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\n        }\n    }\n\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\n        var jj = Encoder.BLKSIZE / 8 - 1;\n        var x = Encoder.BLKSIZE / 2;\n\n        do {\n            var f0, f1, f2, f3, w;\n            var i = rv_tbl[jj] & 0xff;\n            f0 = window[i] * buffer[chn][bufPos + i];\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            x -= 4;\n            y[x + 0] = f0 + f2;\n            y[x + 2] = f0 - f2;\n            y[x + 1] = f1 + f3;\n            y[x + 3] = f1 - f3;\n\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            y[x + Encoder.BLKSIZE / 2 + 0] = f0 + f2;\n            y[x + Encoder.BLKSIZE / 2 + 2] = f0 - f2;\n            y[x + Encoder.BLKSIZE / 2 + 1] = f1 + f3;\n            y[x + Encoder.BLKSIZE / 2 + 3] = f1 - f3;\n        } while (--jj >= 0);\n\n        fht(y, x, Encoder.BLKSIZE / 2);\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\n    }\n\n    this.init_fft = function (gfc) {\n        /* The type of window used here will make no real difference, but */\n        /*\n         * in the interest of merging nspsytune stuff - switch to blackman\n         * window\n         */\n        for (var i = 0; i < Encoder.BLKSIZE; i++)\n            /* blackman window */\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\n                / Encoder.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\n                / Encoder.BLKSIZE));\n\n        for (var i = 0; i < Encoder.BLKSIZE_s / 2; i++)\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\n                * (i + 0.5) / Encoder.BLKSIZE_s)));\n\n    }\n\n}\n\n/*\n *      psymodel.c\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 2001-2002 Naoki Shibata\n *      Copyright (c) 2000-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2008 Robert Hegemann\n *      Copyright (c) 2000-2005 Gabriel Bouvigne\n *      Copyright (c) 2000-2005 Alexander Leidinger\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: PsyModel.java,v 1.27 2011/05/24 20:48:06 kenchis Exp $ */\n\n\n/*\n PSYCHO ACOUSTICS\n\n\n This routine computes the psycho acoustics, delayed by one granule.\n\n Input: buffer of PCM data (1024 samples).\n\n This window should be centered over the 576 sample granule window.\n The routine will compute the psycho acoustics for\n this granule, but return the psycho acoustics computed\n for the *previous* granule.  This is because the block\n type of the previous granule can only be determined\n after we have computed the psycho acoustics for the following\n granule.\n\n Output:  maskings and energies for each scalefactor band.\n block type, PE, and some correlation measures.\n The PE is used by CBR modes to determine if extra bits\n from the bit reservoir should be used.  The correlation\n measures are used to determine mid/side or regular stereo.\n */\n/*\n Notation:\n\n barks:  a non-linear frequency scale.  Mapping from frequency to\n barks is given by freq2bark()\n\n scalefactor bands: The spectrum (frequencies) are broken into\n SBMAX \"scalefactor bands\".  Thes bands\n are determined by the MPEG ISO spec.  In\n the noise shaping/quantization code, we allocate\n bits among the partition bands to achieve the\n best possible quality\n\n partition bands:   The spectrum is also broken into about\n 64 \"partition bands\".  Each partition\n band is about .34 barks wide.  There are about 2-5\n partition bands for each scalefactor band.\n\n LAME computes all psycho acoustic information for each partition\n band.  Then at the end of the computations, this information\n is mapped to scalefactor bands.  The energy in each scalefactor\n band is taken as the sum of the energy in all partition bands\n which overlap the scalefactor band.  The maskings can be computed\n in the same way (and thus represent the average masking in that band)\n or by taking the minmum value multiplied by the number of\n partition bands used (which represents a minimum masking in that band).\n */\n/*\n The general outline is as follows:\n\n 1. compute the energy in each partition band\n 2. compute the tonality in each partition band\n 3. compute the strength of each partion band \"masker\"\n 4. compute the masking (via the spreading function applied to each masker)\n 5. Modifications for mid/side masking.\n\n Each partition band is considiered a \"masker\".  The strength\n of the i'th masker in band j is given by:\n\n s3(bark(i)-bark(j))*strength(i)\n\n The strength of the masker is a function of the energy and tonality.\n The more tonal, the less masking.  LAME uses a simple linear formula\n (controlled by NMT and TMN) which says the strength is given by the\n energy divided by a linear function of the tonality.\n */\n/*\n s3() is the \"spreading function\".  It is given by a formula\n determined via listening tests.\n\n The total masking in the j'th partition band is the sum over\n all maskings i.  It is thus given by the convolution of\n the strength with s3(), the \"spreading function.\"\n\n masking(j) = sum_over_i  s3(i-j)*strength(i)  = s3 o strength\n\n where \"o\" = convolution operator.  s3 is given by a formula determined\n via listening tests.  It is normalized so that s3 o 1 = 1.\n\n Note: instead of a simple convolution, LAME also has the\n option of using \"additive masking\"\n\n The most critical part is step 2, computing the tonality of each\n partition band.  LAME has two tonality estimators.  The first\n is based on the ISO spec, and measures how predictiable the\n signal is over time.  The more predictable, the more tonal.\n The second measure is based on looking at the spectrum of\n a single granule.  The more peaky the spectrum, the more\n tonal.  By most indications, the latter approach is better.\n\n Finally, in step 5, the maskings for the mid and side\n channel are possibly increased.  Under certain circumstances,\n noise in the mid & side channels is assumed to also\n be masked by strong maskers in the L or R channels.\n\n\n Other data computed by the psy-model:\n\n ms_ratio        side-channel / mid-channel masking ratio (for previous granule)\n ms_ratio_next   side-channel / mid-channel masking ratio for this granule\n\n percep_entropy[2]     L and R values (prev granule) of PE - A measure of how\n much pre-echo is in the previous granule\n percep_entropy_MS[2]  mid and side channel values (prev granule) of percep_entropy\n energy[4]             L,R,M,S energy in each channel, prev granule\n blocktype_d[2]        block type to use for previous granule\n */\n//package mp3;\n\n//import java.util.Arrays;\n\n\nfunction PsyModel() {\n\n    var fft = new FFT();\n\n    var LOG10 = 2.30258509299404568402;\n\n    var rpelev = 2;\n    var rpelev2 = 16;\n    var rpelev_s = 2;\n    var rpelev2_s = 16;\n\n    /* size of each partition band, in barks: */\n    var DELBARK = .34;\n\n    /* tuned for output level (sensitive to energy scale) */\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder.BLKSIZE / 2));\n\n    var temporalmask_sustain_sec = 0.01;\n\n    var NS_PREECHO_ATT0 = 0.8;\n    var NS_PREECHO_ATT1 = 0.6;\n    var NS_PREECHO_ATT2 = 0.3;\n\n    var NS_MSFIX = 3.5;\n\n    var NSATTACKTHRE = 4.4;\n    var NSATTACKTHRE_S = 25;\n\n    var NSFIRLEN = 21;\n\n    /* size of each partition band, in barks: */\n    var LN_TO_LOG10 = 0.2302585093;\n\n    function NON_LINEAR_SCALE_ENERGY(x) {\n        return x;\n    }\n\n    /**\n     * <PRE>\n     *       L3psycho_anal.  Compute psycho acoustics.\n     *\n     *       Data returned to the calling program must be delayed by one\n     *       granule.\n     *\n     *       This is done in two places.\n     *       If we do not need to know the blocktype, the copying\n     *       can be done here at the top of the program: we copy the data for\n     *       the last granule (computed during the last call) before it is\n     *       overwritten with the new data.  It looks like this:\n     *\n     *       0. static psymodel_data\n     *       1. calling_program_data = psymodel_data\n     *       2. compute psymodel_data\n     *\n     *       For data which needs to know the blocktype, the copying must be\n     *       done at the end of this loop, and the old values must be saved:\n     *\n     *       0. static psymodel_data_old\n     *       1. compute psymodel_data\n     *       2. compute possible block type of this granule\n     *       3. compute final block type of previous granule based on #2.\n     *       4. calling_program_data = psymodel_data_old\n     *       5. psymodel_data_old = psymodel_data\n     *     psycho_loudness_approx\n     *       jd - 2001 mar 12\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\n     *             of 1.0 for signals near clipping.\n     *    notes:   When calibrated, feeding this function binary white noise at sample\n     *             values +32767 or -32768 should return values that approach 3.\n     *             ATHformula is used to approximate an equal loudness curve.\n     *    future:  Data indicates that the shape of the equal loudness curve varies\n     *             with intensity.  This function might be improved by using an equal\n     *             loudness curve shaped for typical playback levels (instead of the\n     *             ATH, that is shaped for the threshold).  A flexible realization might\n     *             simply bend the existing ATH curve to achieve the desired shape.\n     *             However, the potential gain may not be enough to justify an effort.\n     * </PRE>\n     */\n    function psycho_loudness_approx(energy, gfc) {\n        var loudness_power = 0.0;\n        /* apply weights to power in freq. bands */\n        for (var i = 0; i < Encoder.BLKSIZE / 2; ++i)\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\n        loudness_power *= VO_SCALE;\n\n        return loudness_power;\n    }\n\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        /* FFT data for mid and side channel is derived from L & R */\n        else if (chn == 2) {\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n            for (var b = 2; b >= 0; --b) {\n                for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util.SQRT2 * 0.5;\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util.SQRT2 * 0.5;\n                }\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 - j];\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 + j];\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        for (var b = 2; b >= 0; --b) {\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\n            for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\n                / 2 - j];\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\n                / 2 + j];\n                fftenergy_s[b][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                    * re + im * im) * 0.5);\n            }\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n\n        /*********************************************************************\n         * compute loudness approximation (used for ATH auto-level adjustment)\n         *********************************************************************/\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    /* mask_add optimization */\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\n\n    /**\n     * <PRE>\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\n     *\n     * abs(i)>8 is equivalent (as i is an integer) to\n     * abs(i)>=9\n     * i>=9 || i<=-9\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\n     * exp10 is strictly increasing thus this is equivalent to\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\n     * </PRE>\n     */\n\n    /**\n     * as in if(i>8)\n     */\n    var I1LIMIT = 8;\n    /**\n     * as in if(i>24) . changed 23\n     */\n    var I2LIMIT = 23;\n    /**\n     * as in if(m<15)\n     */\n    var MLIMIT = 15;\n\n    var ma_max_i1;\n    var ma_max_i2;\n    var ma_max_m;\n\n    /**\n     * This is the masking table:<BR>\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\n     * After additive masking computation, 8dB are added, so final values are\n     * going from 8dB to 17.3dB\n     *\n     * pow(10, -0.0..-0.6)\n     */\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\n\n    function init_mask_add_max_values() {\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\n    }\n\n    var table1 = [3.3246 * 3.3246,\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\n\n    var table2 = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    var table3 = [2.35364 * 2.35364,\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\n        1.03826 * 1.03826];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\n        var ratio;\n\n        if (m2 > m1) {\n            if (m2 < (m1 * ma_max_i2))\n                ratio = m2 / m1;\n            else\n                return (m1 + m2);\n        } else {\n            if (m1 >= (m2 * ma_max_i2))\n                return (m1 + m2);\n            ratio = m1 / m2;\n        }\n\n        /* Should always be true, just checking */\n\n        m1 += m2;\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\n        if ((b + 3) <= 3 + 3) {\n            /* approximately, 1 bark = 3 partitions */\n            /* 65% of the cases */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                /* 43% of the total */\n                return m1;\n            }\n\n            /* 22% of the total */\n            var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\n            return m1 * table2[i];\n        }\n\n        /**\n         * <PRE>\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\n         * </PRE>\n         */\n        var i = 0 | Util.FAST_LOG10_X(ratio, 16.0);\n        if (shortblock != 0) {\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\n        } else {\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\n        }\n        if (m1 < ma_max_m * m2) {\n            /* 3% of the total */\n            /* Originally if (m > 0) { */\n            if (m1 > m2) {\n                var f, r;\n\n                f = 1.0;\n                if (i <= 13)\n                    f = table3[i];\n\n                r = Util.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\n                return m1 * ((table1[i] - f) * r + f);\n            }\n\n            if (i > 13)\n                return m1;\n\n            return m1 * table3[i];\n        }\n\n        /* 10% of total */\n        return m1 * table1[i];\n    }\n\n    var table2_ = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function vbrpsy_mask_add(m1, m2, b) {\n        var ratio;\n\n        if (m1 < 0) {\n            m1 = 0;\n        }\n        if (m2 < 0) {\n            m2 = 0;\n        }\n        if (m1 <= 0) {\n            return m2;\n        }\n        if (m2 <= 0) {\n            return m1;\n        }\n        if (m2 > m1) {\n            ratio = m2 / m1;\n        } else {\n            ratio = m1 / m2;\n        }\n        if (-2 <= b && b <= 2) {\n            /* approximately, 1 bark = 3 partitions */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                return m1 + m2;\n            } else {\n                var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\n                return (m1 + m2) * table2_[i];\n            }\n        }\n        if (ratio < ma_max_i2) {\n            return m1 + m2;\n        }\n        if (m1 < m2) {\n            m1 = m2;\n        }\n        return m1;\n    }\n\n    /**\n     * compute interchannel masking effects\n     */\n    function calc_interchannel_masking(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n        if (gfc.channels_out > 1) {\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n                var l = gfc.thm[0].l[sb];\n                var r = gfc.thm[1].l[sb];\n                gfc.thm[0].l[sb] += r * ratio;\n                gfc.thm[1].l[sb] += l * ratio;\n            }\n            for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                for (var sblock = 0; sblock < 3; sblock++) {\n                    var l = gfc.thm[0].s[sb][sblock];\n                    var r = gfc.thm[1].s[sb][sblock];\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\n                }\n            }\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function msfix1(gfc) {\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n            /* use this fix if L & R masking differs by 2db or less */\n            /* if db = 10*log10(x2/x1) < 2 */\n            /* if (x2 < 1.58*x1) { */\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\n                continue;\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\n            var rmid = Math.max(gfc.thm[2].l[sb],\n                Math.min(gfc.thm[3].l[sb], mld));\n\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\n            var rside = Math.max(gfc.thm[3].l[sb],\n                Math.min(gfc.thm[2].l[sb], mld));\n            gfc.thm[2].l[sb] = rmid;\n            gfc.thm[3].l[sb] = rside;\n        }\n\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\n                    continue;\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\n\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\n\n                gfc.thm[2].s[sb][sblock] = rmid;\n                gfc.thm[3].s[sb][sblock] = rside;\n            }\n        }\n    }\n\n    /**\n     * Adjust M/S maskings if user set \"msfix\"\n     *\n     * Naoki Shibata 2000\n     */\n    function ns_msfix(gfc, msfix, athadjust) {\n        var msfix2 = msfix;\n        var athlower = Math.pow(10, athadjust);\n\n        msfix *= 2.0;\n        msfix2 *= 2.0;\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n            var thmLR, thmM, thmS, ath;\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\n                Math.max(gfc.thm[1].l[sb], ath));\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\n            if (thmLR * msfix < thmM + thmS) {\n                var f = thmLR * msfix2 / (thmM + thmS);\n                thmM *= f;\n                thmS *= f;\n            }\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\n        }\n\n        athlower *= ( Encoder.BLKSIZE_s / Encoder.BLKSIZE);\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thmLR, thmM, thmS, ath;\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\n\n                if (thmLR * msfix < thmM + thmS) {\n                    var f = thmLR * msfix / (thmM + thmS);\n                    thmM *= f;\n                    thmS *= f;\n                }\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\n                    thmM);\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\n                    thmS);\n            }\n        }\n    }\n\n    /**\n     * short block threshold calculation (part 2)\n     *\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\n     * to the next one sfb+1; enn and thmm have to be split between them\n     */\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder.SBMAX_s; ++b, ++sb) {\n            var bo_s_sb = gfc.bo_s[sb];\n            var npart_s = gfc.npart_s;\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\n            while (b < b_lim) {\n                // iff failed, it may indicate some index error elsewhere\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].s[sb][sblock] = enn;\n            gfc.thm[chn].s[sb][sblock] = thmm;\n\n            if (b >= npart_s) {\n                ++sb;\n                break;\n            }\n            // iff failed, it may indicate some index error elsewhere\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_s_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].s[sb][sblock] += enn;\n                gfc.thm[chn].s[sb][sblock] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder.SBMAX_s; ++sb) {\n            gfc.en[chn].s[sb][sblock] = 0;\n            gfc.thm[chn].s[sb][sblock] = 0;\n        }\n    }\n\n    /**\n     * longblock threshold calculation (part 2)\n     */\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder.SBMAX_l; ++b, ++sb) {\n            var bo_l_sb = gfc.bo_l[sb];\n            var npart_l = gfc.npart_l;\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\n            while (b < b_lim) {\n                // iff failed, it may indicate some index error elsewhere\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].l[sb] = enn;\n            gfc.thm[chn].l[sb] = thmm;\n\n            if (b >= npart_l) {\n                ++sb;\n                break;\n            }\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_l_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].l[sb] += enn;\n                gfc.thm[chn].l[sb] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder.SBMAX_l; ++sb) {\n            gfc.en[chn].l[sb] = 0;\n            gfc.thm[chn].l[sb] = 0;\n        }\n    }\n\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var j, b;\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (var i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n        }\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var ecb = gfc.s3_ss[j++] * eb[kk];\n            ++kk;\n            while (kk <= gfc.s3ind_s[b][1]) {\n                ecb += gfc.s3_ss[j] * eb[kk];\n                ++j;\n                ++kk;\n            }\n\n            { /* limit calculated threshold by previous granule */\n                var x = rpelev_s * gfc.nb_s1[chn][b];\n                thr[b] = Math.min(ecb, x);\n            }\n            if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE) {\n                /* limit calculated threshold by even older granule */\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\n                var y = thr[b];\n                thr[b] = Math.min(x, y);\n            }\n\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n        }\n        for (; b <= Encoder.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            blocktype[chn] = Encoder.NORM_TYPE;\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed)\n                uselongblock[chn] = 1;\n            if (gfp.short_blocks == ShortBlock.short_block_forced)\n                uselongblock[chn] = 0;\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\n                    blocktype[chn] = Encoder.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype[chn] = Encoder.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype[chn];\n            // save for next call to l3psy_anal\n        }\n    }\n\n    function NS_INTERP(x, y, r) {\n        /* was pow((x),(r))*pow((y),1-(r)) */\n        if (r >= 1.0) {\n            /* 99.7% of the time */\n            return x;\n        }\n        if (r <= 0.0)\n            return y;\n        if (y > 0.0) {\n            /* rest of the time */\n            return (Math.pow(x / y, r) * y);\n        }\n        /* never happens */\n        return 0.0;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\n        /* 255.8 */\n    ];\n\n    function pecalc_s(mr, masking_lower) {\n        var pe_s = 1236.28 / 4;\n        for (var sb = 0; sb < Encoder.SBMAX_s - 1; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thm = mr.thm.s[sb][sblock];\n                if (thm > 0.0) {\n                    var x = thm * masking_lower;\n                    var en = mr.en.s[sb][sblock];\n                    if (en > x) {\n                        if (en > x * 1e10) {\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\n                        } else {\n                            pe_s += regcoef_s[sb] * Util.FAST_LOG10(en / x);\n                        }\n                    }\n                }\n            }\n        }\n\n        return pe_s;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\n        60.7, 73.9, 85.7, 93.4, 126.1,\n        /* 241.3 */\n    ];\n\n    function pecalc_l(mr, masking_lower) {\n        var pe_l = 1124.23 / 4;\n        for (var sb = 0; sb < Encoder.SBMAX_l - 1; sb++) {\n            var thm = mr.thm.l[sb];\n            if (thm > 0.0) {\n                var x = thm * masking_lower;\n                var en = mr.en.l[sb];\n                if (en > x) {\n                    if (en > x * 1e10) {\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\n                    } else {\n                        pe_l += regcoef_l[sb] * Util.FAST_LOG10(en / x);\n                    }\n                }\n            }\n        }\n        return pe_l;\n    }\n\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\n        var b, j;\n\n        for (b = j = 0; b < gfc.npart_l; ++b) {\n            var ebb = 0, m = 0;\n            var i;\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\n                var el = fftenergy[j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb * gfc.rnumlines_l[b];\n        }\n    }\n\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_l - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\n                    + gfc.numlines_l[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n\n        a = avg[b - 1] + avg[b];\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n    }\n\n    var fircoef = [\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\n        -5.52212e-17 * 2, -0.313819 * 2\n    ];\n\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        /*\n         * to get a good cache performance, one has to think about the sequence,\n         * in which the variables are used.\n         */\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\n\n        /* convolution */\n        var eb_l = new_float(Encoder.CBANDS + 1);\n        var eb_s = new_float(Encoder.CBANDS + 1);\n        var thr = new_float(Encoder.CBANDS + 2);\n\n        /* block type */\n        var blocktype = new_int(2), uselongblock = new_int(2);\n\n        /* usual variables like loop indices, etc.. */\n        var numchn, chn;\n        var b, i, j, k;\n        var sb, sblock;\n\n        /* variables used for --nspsytune */\n        var ns_hpfsmpl = new_float_n([2, 576]);\n        var pcfact;\n        var mask_idx_l = new_int(Encoder.CBANDS + 2), mask_idx_s = new_int(Encoder.CBANDS + 2);\n\n        Arrays.fill(mask_idx_s, 0);\n\n        numchn = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\n            numchn = 4;\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\n            / gfc.ResvMax * 0.5;\n        else if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh\n            || gfp.VBR == VbrMode.vbr_mt) {\n            pcfact = 0.6;\n        } else\n            pcfact = 1.0;\n\n        /**********************************************************************\n         * Apply HPF of fs/4 to the input signal. This is used for attack\n         * detection / handling.\n         **********************************************************************/\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (chn = 0; chn < gfc.channels_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            var firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            for (i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (numchn > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n\n        for (chn = 0; chn < numchn; chn++) {\n            var wsamp_l;\n            var wsamp_s;\n            var en_subshort = new_float(12);\n            var en_short = [0, 0, 0, 0];\n            var attack_intensity = new_float(12);\n            var ns_uselongblock = 1;\n            var attackThreshold;\n            var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\n            var ns_attacks = [0, 0, 0, 0];\n            var fftenergy = new_float(Encoder.HBLKSIZE);\n            var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\n\n            /*\n             * rh 20040301: the following loops do access one off the limits so\n             * I increase the array dimensions by one and initialize the\n             * accessed values to zero\n             */\n\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            if (chn == 2) {\n                for (i = 0; i < 576; i++) {\n                    var l, r;\n                    l = ns_hpfsmpl[0][i];\n                    r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            {\n                var pf = ns_hpfsmpl[chn & 1];\n                var pfPos = 0;\n                for (i = 0; i < 9; i++) {\n                    var pfe = pfPos + 576 / 9;\n                    var p = 1.;\n                    for (; pfPos < pfe; pfPos++)\n                        if (p < Math.abs(pf[pfPos]))\n                            p = Math.abs(pf[pfPos]);\n\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                    en_short[1 + i / 3] += p;\n                    if (p > en_subshort[i + 3 - 2]) {\n                        p = p / en_subshort[i + 3 - 2];\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\n                    } else\n                        p = 0.0;\n                    attack_intensity[i + 3] = p;\n                }\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (i = 1; i < 12; i++)\n                    if (x < attack_intensity[i])\n                        x = attack_intensity[i];\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            for (i = 0; i < 12; i++)\n                if (0 == ns_attacks[i / 3]\n                    && attack_intensity[i] > attackThreshold)\n                    ns_attacks[i / 3] = (i % 3) + 1;\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            for (i = 1; i < 4; i++) {\n                var ratio;\n                if (en_short[i - 1] > en_short[i]) {\n                    ratio = en_short[i - 1] / en_short[i];\n                } else {\n                    ratio = en_short[i] / en_short[i - 1];\n                }\n                if (ratio < 1.7) {\n                    ns_attacks[i] = 0;\n                    if (i == 1)\n                        ns_attacks[0] = 0;\n                }\n            }\n\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\n                ns_attacks[0] = 0;\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\n                    ns_attacks[1] = 0;\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\n                    ns_attacks[2] = 0;\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\n                    ns_attacks[3] = 0;\n            }\n\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n\n            /*********************************************************************\n             * compute FFTs\n             *********************************************************************/\n            wsamp_s = wsamp_S;\n            wsamp_l = wsamp_L;\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\n\n            /*********************************************************************\n             * Calculate the energy and the tonality of each partition.\n             *********************************************************************/\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\n            /* compute masking thresholds for short blocks */\n            for (sblock = 0; sblock < 3; sblock++) {\n                var enn, thmm;\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\n                /**** short block pre-echo control ****/\n                for (sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    thmm = gfc.thm[chn].s[sb][sblock];\n\n                    thmm *= NS_PREECHO_ATT0;\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT1 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    if (ns_attacks[sblock] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    /* pulse like signal detection for fatboy.wav and so on */\n                    enn = en_subshort[sblock * 3 + 3]\n                        + en_subshort[sblock * 3 + 4]\n                        + en_subshort[sblock * 3 + 5];\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\n                        thmm *= 0.5;\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\n                            thmm *= 0.5;\n                    }\n\n                    gfc.thm[chn].s[sb][sblock] = thmm;\n                }\n            }\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\n\n            /*********************************************************************\n             * convolve the partitioned energy and unpredictability with the\n             * spreading function, s3_l[b][k]\n             ********************************************************************/\n            k = 0;\n            {\n                for (b = 0; b < gfc.npart_l; b++) {\n                    /*\n                     * convolve the partitioned energy with the spreading\n                     * function\n                     */\n                    var kk = gfc.s3ind[b][0];\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                    var ecb = gfc.s3_ll[k++] * eb2;\n                    while (++kk <= gfc.s3ind[b][1]) {\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\n                            gfc, 0);\n                    }\n                    ecb *= 0.158489319246111;\n                    /* pow(10,-0.8) */\n\n                    /**** long block pre-echo control ****/\n                    /**\n                     * <PRE>\n                     * dont use long block pre-echo control if previous granule was\n                     * a short block.  This is to avoid the situation:\n                     * frame0:  quiet (very low masking)\n                     * frame1:  surge  (triggers short blocks)\n                     * frame2:  regular frame.  looks like pre-echo when compared to\n                     *          frame0, but all pre-echo was in frame1.\n                     * </PRE>\n                     */\n                    /*\n                     * chn=0,1 L and R channels\n                     *\n                     * chn=2,3 S and M channels.\n                     */\n\n                    if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE)\n                        thr[b] = ecb;\n                    else\n                        thr[b] = NS_INTERP(\n                            Math.min(ecb, Math.min(rpelev\n                                * gfc.nb_1[chn][b], rpelev2\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\n\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n                    gfc.nb_1[chn][b] = ecb;\n                }\n            }\n            for (; b <= Encoder.CBANDS; ++b) {\n                eb_l[b] = 0;\n                thr[b] = 0;\n            }\n            /* compute masking thresholds for long blocks */\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\n        }\n        /* end loop over chn */\n\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\n            if (gfp.interChRatio > 0.0) {\n                calc_interchannel_masking(gfp, gfp.interChRatio);\n            }\n        }\n\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            var msfix;\n            msfix1(gfc);\n            msfix = gfp.msfix;\n            if (Math.abs(msfix) > 0.0)\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (chn = 0; chn < numchn; chn++) {\n            var ppe;\n            var ppePos = 0;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder.NORM_TYPE;\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\n                    type = Encoder.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder.SHORT_TYPE)\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            else\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n\n            if (gfp.analysis)\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n\n        }\n        return 0;\n    }\n\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n        } else if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 - j];\n            var im = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 + j];\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n    }\n\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\n        var gfc = gfp.internal_flags;\n\n        if (sblock == 0 && chn < 2) {\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\n        for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 - j];\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 + j];\n            fftenergy_s[sblock][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n    }\n\n    /**\n     * compute loudness approximation (used for ATH auto-level adjustment)\n     */\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\n        var gfc = gfp.internal_flags;\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    var fircoef_ = [-8.65163e-18 * 2,\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\n\n    /**\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\n     * / handling.\n     */\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\n        var ns_hpfsmpl = new_float_n([2, 576]);\n        var gfc = gfp.internal_flags;\n        var n_chn_out = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (var chn = 0; chn < n_chn_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            for (var i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef_[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef_[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (n_chn_psy > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var attack_intensity = new_float(12);\n            var en_subshort = new_float(12);\n            var en_short = [0, 0, 0, 0];\n            var pf = ns_hpfsmpl[chn & 1];\n            var pfPos = 0;\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            var ns_uselongblock = 1;\n\n            if (chn == 2) {\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\n                    var l = ns_hpfsmpl[0][i];\n                    var r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (var i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            for (var i = 0; i < 9; i++) {\n                var pfe = pfPos + 576 / 9;\n                var p = 1.;\n                for (; pfPos < pfe; pfPos++)\n                    if (p < Math.abs(pf[pfPos]))\n                        p = Math.abs(pf[pfPos]);\n\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                en_short[1 + i / 3] += p;\n                if (p > en_subshort[i + 3 - 2]) {\n                    p = p / en_subshort[i + 3 - 2];\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\n                } else {\n                    p = 0.0;\n                }\n                attack_intensity[i + 3] = p;\n            }\n            /* pulse like signal detection for fatboy.wav and so on */\n            for (var i = 0; i < 3; ++i) {\n                var enn = en_subshort[i * 3 + 3]\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\n                var factor = 1.;\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\n                    factor *= 0.5;\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\n                        factor *= 0.5;\n                    }\n                }\n                sub_short_factor[chn][i] = factor;\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (var i = 1; i < 12; i++) {\n                    if (x < attack_intensity[i]) {\n                        x = attack_intensity[i];\n                    }\n                }\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            for (var i = 0; i < 12; i++) {\n                if (0 == ns_attacks[chn][i / 3]\n                    && attack_intensity[i] > attackThreshold) {\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\n                }\n            }\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            /* Good samples to show the effect are Trumpet test songs */\n            /*\n             * GB: tuned (1) to avoid too many short blocks for test sample\n             * TRUMPET\n             */\n            /*\n             * RH: tuned (2) to let enough short blocks through for test sample\n             * FSOL and SNAPS\n             */\n            for (var i = 1; i < 4; i++) {\n                var u = en_short[i - 1];\n                var v = en_short[i];\n                var m = Math.max(u, v);\n                if (m < 40000) { /* (2) */\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\n                            ns_attacks[chn][0] = 0;\n                        }\n                        ns_attacks[chn][i] = 0;\n                    }\n                }\n            }\n\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\n                ns_attacks[chn][0] = 0;\n            }\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\n                    ns_attacks[chn][1] = 0;\n                }\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\n                    ns_attacks[chn][2] = 0;\n                }\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\n                    ns_attacks[chn][3] = 0;\n                }\n            }\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n        }\n    }\n\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\n        if (sblock == 0) {\n            for (var b = 0; b < gfc.npart_s; b++) {\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n                gfc.nb_s1[chn][b] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_skip_masking_l(gfc, chn) {\n        for (var b = 0; b < gfc.npart_l; b++) {\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = 0;\n        }\n    }\n\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_s - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\n                    + gfc.numlines_s[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n\n        a = avg[b - 1] + avg[b];\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var max = new float[Encoder.CBANDS], avg = new_float(Encoder.CBANDS);\n        var i, j, b;\n        var mask_idx_s = new int[Encoder.CBANDS];\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb / n;\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            max[b] = 0;\n            avg[b] = 0;\n        }\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var last = gfc.s3ind_s[b][1];\n            var dd, dd_n;\n            var x, ecb, avg_mask;\n            dd = mask_idx_s[kk];\n            dd_n = 1;\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n            ++j;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_s[kk];\n                dd_n += 1;\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\n                ++j;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n            thr[b] = ecb;\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_s[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb[b]) {\n                thr[b] = eb[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\n        var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\n        var mask_idx_l = new_int(Encoder.CBANDS + 2);\n        var b;\n\n        /*********************************************************************\n         * Calculate the energy and the tonality of each partition.\n         *********************************************************************/\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\n\n        /*********************************************************************\n         * convolve the partitioned energy and unpredictability with the\n         * spreading function, s3_l[b][k]\n         ********************************************************************/\n        var k = 0;\n        for (b = 0; b < gfc.npart_l; b++) {\n            var x, ecb, avg_mask, t;\n            /* convolve the partitioned energy with the spreading function */\n            var kk = gfc.s3ind[b][0];\n            var last = gfc.s3ind[b][1];\n            var dd = 0, dd_n = 0;\n            dd = mask_idx_l[kk];\n            dd_n += 1;\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n            ++k;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_l[kk];\n                dd_n += 1;\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n                t = vbrpsy_mask_add(ecb, x, kk - b);\n                ecb = t;\n                ++k;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n\n            /**** long block pre-echo control ****/\n            /**\n             * <PRE>\n             * dont use long block pre-echo control if previous granule was\n             * a short block.  This is to avoid the situation:\n             * frame0:  quiet (very low masking)\n             * frame1:  surge  (triggers short blocks)\n             * frame2:  regular frame.  looks like pre-echo when compared to\n             *          frame0, but all pre-echo was in frame1.\n             * </PRE>\n             */\n            /*\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\n             */\n            if (gfc.blocktype_old[chn & 0x01] == Encoder.SHORT_TYPE) {\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\n                if (ecb_limit > 0) {\n                    thr[b] = Math.min(ecb, ecb_limit);\n                } else {\n                    /**\n                     * <PRE>\n                     * Robert 071209:\n                     * Because we don't calculate long block psy when we know a granule\n                     * should be of short blocks, we don't have any clue how the granule\n                     * before would have looked like as a long block. So we have to guess\n                     * a little bit for this END_TYPE block.\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\n                     * The speed increase is worth it.\n                     * </PRE>\n                     */\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\n                }\n            } else {\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\n                var ecb_limit;\n                if (ecb_limit_2 <= 0) {\n                    ecb_limit_2 = ecb;\n                }\n                if (ecb_limit_1 <= 0) {\n                    ecb_limit_1 = ecb;\n                }\n                if (gfc.blocktype_old[chn & 0x01] == Encoder.NORM_TYPE) {\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\n                } else {\n                    ecb_limit = ecb_limit_1;\n                }\n                thr[b] = Math.min(ecb, ecb_limit);\n            }\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_l[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb_l[b]) {\n                thr[b] = eb_l[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            eb_l[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed) {\n                uselongblock[chn] = 1;\n            }\n            if (gfp.short_blocks == ShortBlock.short_block_forced) {\n                uselongblock[chn] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            var blocktype = Encoder.NORM_TYPE;\n            /* disable short blocks */\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\n                    blocktype = Encoder.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype = Encoder.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype;\n            // save for next call to l3psy_anal\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\n        var msfix2 = msfix * 2;\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\n        var rside, rmid;\n        for (var b = 0; b < n; ++b) {\n            var ebM = eb[2][b];\n            var ebS = eb[3][b];\n            var thmL = thr[0][b];\n            var thmR = thr[1][b];\n            var thmM = thr[2][b];\n            var thmS = thr[3][b];\n\n            /* use this fix if L & R masking differs by 2db or less */\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\n                var mld_m = cb_mld[b] * ebS;\n                var mld_s = cb_mld[b] * ebM;\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\n            } else {\n                rmid = thmM;\n                rside = thmS;\n            }\n            if (msfix > 0) {\n                /***************************************************************/\n                /* Adjust M/S maskings if user set \"msfix\" */\n                /***************************************************************/\n                /* Naoki Shibata 2000 */\n                var thmLR, thmMS;\n                var ath = ath_cb[b] * athlower;\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\n                thmM = Math.max(rmid, ath);\n                thmS = Math.max(rside, ath);\n                thmMS = thmM + thmS;\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\n                    var f = thmLR * msfix2 / thmMS;\n                    thmM *= f;\n                    thmS *= f;\n                }\n                rmid = Math.min(thmM, rmid);\n                rside = Math.min(thmS, rside);\n            }\n            if (rmid > ebM) {\n                rmid = ebM;\n            }\n            if (rside > ebS) {\n                rside = ebS;\n            }\n            thr[2][b] = rmid;\n            thr[3][b] = rside;\n        }\n    }\n\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_l;\n        var wsamp_s;\n        var fftenergy = new_float(Encoder.HBLKSIZE);\n        var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\n        var eb = new_float_n([4, Encoder.CBANDS]), thr = new_float_n([4, Encoder.CBANDS]);\n        var sub_short_factor = new_float_n([4, 3]);\n        var pcfact = 0.6;\n\n        /* block type */\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n            [0, 0, 0, 0]];\n        var uselongblock = new_int(2);\n\n        /* usual variables like loop indices, etc.. */\n\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\n            : gfc.channels_out;\n\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\n            uselongblock);\n\n        vbrpsy_compute_block_type(gfp, uselongblock);\n\n        /* LONG BLOCK CASE */\n        {\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                wsamp_l = wsamp_L;\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\n                    fftenergy, wsamp_l, ch01);\n\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\n                    fftenergy);\n\n                if (uselongblock[ch01] != 0) {\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\n                        chn);\n                } else {\n                    vbrpsy_skip_masking_l(gfc, chn);\n                }\n            }\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\n                /* M/S channel */\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\n                        gfp.msfix, gfc.npart_l);\n                }\n            }\n            /* TODO: apply adaptive ATH masking here ?? */\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                if (uselongblock[ch01] != 0) {\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\n                }\n            }\n        }\n\n        /* SHORT BLOCKS CASE */\n        {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n\n                    if (uselongblock[ch01] != 0) {\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\n                    } else {\n                        /* compute masking thresholds for short blocks */\n                        wsamp_s = wsamp_S;\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\n                            fftenergy_s, wsamp_s, ch01);\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\n                            thr[chn], chn, sblock);\n                    }\n                }\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\n                    /* M/S channel */\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\n                            gfp.msfix, gfc.npart_s);\n                    }\n                    /* L/R channel */\n                }\n                /* TODO: apply adaptive ATH masking here ?? */\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n                    if (0 == uselongblock[ch01]) {\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\n                            chn, sblock);\n                    }\n                }\n            }\n\n            /**** short block pre-echo control ****/\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n\n                if (uselongblock[ch01] != 0) {\n                    continue;\n                }\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    var new_thmm = new_float(3);\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        var thmm = gfc.thm[chn].s[sb][sblock];\n                        thmm *= NS_PREECHO_ATT0;\n\n                        if (ns_attacks[chn][sblock] >= 2\n                            || ns_attacks[chn][sblock + 1] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT1 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if (ns_attacks[chn][sblock] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        }\n\n                        /* pulse like signal detection for fatboy.wav and so on */\n                        thmm *= sub_short_factor[chn][sblock];\n\n                        new_thmm[sblock] = thmm;\n                    }\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\n                    }\n                }\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var ppe;\n            var ppePos;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder.NORM_TYPE;\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\n                    type = Encoder.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder.SHORT_TYPE) {\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            } else {\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n            }\n\n            if (gfp.analysis) {\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n            }\n        }\n        return 0;\n    }\n\n    function s3_func_x(bark, hf_slope) {\n        var tempx = bark, tempy;\n\n        if (tempx >= 0) {\n            tempy = -tempx * 27;\n        } else {\n            tempy = tempx * hf_slope;\n        }\n        if (tempy <= -72.0) {\n            return 0;\n        }\n        return Math.exp(tempy * LN_TO_LOG10);\n    }\n\n    function norm_s3_func_x(hf_slope) {\n        var lim_a = 0, lim_b = 0;\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\n                ;\n            l = x;\n            h = 0;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    h = x;\n                } else {\n                    l = x;\n                }\n            }\n            lim_a = l;\n        }\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\n                ;\n            l = 0;\n            h = x;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    l = x;\n                } else {\n                    h = x;\n                }\n            }\n            lim_b = h;\n        }\n        {\n            var sum = 0;\n            var m = 1000;\n            var i;\n            for (i = 0; i <= m; ++i) {\n                var x = lim_a + i * (lim_b - lim_a) / m;\n                var y = s3_func_x(x, hf_slope);\n                sum += y;\n            }\n            {\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\n                /* printf( \"norm = %lf\\n\",norm); */\n                return norm;\n            }\n        }\n    }\n\n    /**\n     *   The spreading function.  Values returned in units of energy\n     */\n    function s3_func(bark) {\n        var tempx, x, tempy, temp;\n        tempx = bark;\n        if (tempx >= 0)\n            tempx *= 3;\n        else\n            tempx *= 1.5;\n\n        if (tempx >= 0.5 && tempx <= 2.5) {\n            temp = tempx - 0.5;\n            x = 8.0 * (temp * temp - 2.0 * temp);\n        } else\n            x = 0.0;\n        tempx += 0.474;\n        tempy = 15.811389 + 7.5 * tempx - 17.5\n            * Math.sqrt(1.0 + tempx * tempx);\n\n        if (tempy <= -60.0)\n            return 0.0;\n\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\n\n        /**\n         * <PRE>\n         * Normalization.  The spreading function should be normalized so that:\n         * +inf\n         * /\n         * |  s3 [ bark ]  d(bark)   =  1\n         * /\n         * -inf\n         * </PRE>\n         */\n        tempx /= .6609193;\n        return tempx;\n    }\n\n    /**\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\n     */\n    function freq2bark(freq) {\n        /* input: freq in hz output: barks */\n        if (freq < 0)\n            freq = 0;\n        freq = freq * 0.001;\n        return 13.0 * Math.atan(.76 * freq) + 3.5\n            * Math.atan(freq * freq / (7.5 * 7.5));\n    }\n\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\n        var b_frq = new_float(Encoder.CBANDS + 1);\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\n        var partition = new_int(Encoder.HBLKSIZE);\n        var i;\n        sfreq /= blksize;\n        var j = 0;\n        var ni = 0;\n        /* compute numlines, the number of spectral lines in each partition band */\n        /* each partition band should be about DELBARK wide. */\n        for (i = 0; i < Encoder.CBANDS; i++) {\n            var bark1;\n            var j2;\n            bark1 = freq2bark(sfreq * j);\n\n            b_frq[i] = sfreq * j;\n\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\n            && j2 <= blksize / 2; j2++)\n                ;\n\n            numlines[i] = j2 - j;\n            ni = i + 1;\n\n            while (j < j2) {\n                partition[j++] = i;\n            }\n            if (j > blksize / 2) {\n                j = blksize / 2;\n                ++i;\n                break;\n            }\n        }\n        b_frq[i] = sfreq * j;\n\n        for (var sfb = 0; sfb < sbmax; sfb++) {\n            var i1, i2, start, end;\n            var arg;\n            start = scalepos[sfb];\n            end = scalepos[sfb + 1];\n\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\n            if (i1 < 0)\n                i1 = 0;\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\n\n            if (i2 > blksize / 2)\n                i2 = blksize / 2;\n\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\n            bo[sfb] = partition[i2];\n            var f_tmp = sample_freq_frac * end;\n            /*\n             * calculate how much of this band belongs to current scalefactor\n             * band\n             */\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\n            if (bo_w[sfb] < 0) {\n                bo_w[sfb] = 0;\n            } else {\n                if (bo_w[sfb] > 1) {\n                    bo_w[sfb] = 1;\n                }\n            }\n            /* setup stereo demasking thresholds */\n            /* formula reverse enginerred from plot in paper */\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\n            arg = ( Math.min(arg, 15.5) / 15.5);\n\n            mld[sfb] = Math.pow(10.0,\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n        }\n\n        /* compute bark values of each critical band */\n        j = 0;\n        for (var k = 0; k < ni; k++) {\n            var w = numlines[k];\n            var bark1, bark2;\n\n            bark1 = freq2bark(sfreq * (j));\n            bark2 = freq2bark(sfreq * (j + w - 1));\n            bval[k] = .5 * (bark1 + bark2);\n\n            bark1 = freq2bark(sfreq * (j - .5));\n            bark2 = freq2bark(sfreq * (j + w - .5));\n            bval_width[k] = bark2 - bark1;\n            j += w;\n        }\n\n        return ni;\n    }\n\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\n        var s3 = new_float_n([Encoder.CBANDS, Encoder.CBANDS]);\n        /*\n         * The s3 array is not linear in the bark scale.\n         *\n         * bval[x] should be used to get the bark value.\n         */\n        var j;\n        var numberOfNoneZero = 0;\n\n        /**\n         * <PRE>\n         * s[i][j], the value of the spreading function,\n         * centered at band j (masker), for band i (maskee)\n         *\n         * i.e.: sum over j to spread into signal barkval=i\n         * NOTE: i and j are used opposite as in the ISO docs\n         * </PRE>\n         */\n        if (use_old_s3) {\n            for (var i = 0; i < npart; i++) {\n                for (j = 0; j < npart; j++) {\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        } else {\n            for (j = 0; j < npart; j++) {\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\n                var s3_x_norm = norm_s3_func_x(hf_slope);\n                for (var i = 0; i < npart; i++) {\n                    var v = s3_x_norm\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\n                        * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        }\n        for (var i = 0; i < npart; i++) {\n            for (j = 0; j < npart; j++) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][0] = j;\n\n            for (j = npart - 1; j > 0; j--) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][1] = j;\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\n        }\n\n        var p = new_float(numberOfNoneZero);\n        var k = 0;\n        for (var i = 0; i < npart; i++)\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\n                p[k++] = s3[i][j];\n\n        return p;\n    }\n\n    function stereo_demask(f) {\n        /* setup stereo demasking thresholds */\n        /* formula reverse enginerred from plot in paper */\n        var arg = freq2bark(f);\n        arg = (Math.min(arg, 15.5) / 15.5);\n\n        return Math.pow(10.0,\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n    }\n\n    /**\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\n     * does not use this feature. (Robert 071216)\n     */\n    this.psymodel_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var i;\n        var useOldS3 = true;\n        var bvl_a = 13, bvl_b = 24;\n        var snr_l_a = 0, snr_l_b = 0;\n        var snr_s_a = -8.25, snr_s_b = -4.5;\n        var bval = new_float(Encoder.CBANDS);\n        var bval_width = new_float(Encoder.CBANDS);\n        var norm = new_float(Encoder.CBANDS);\n        var sfreq = gfp.out_samplerate;\n\n        switch (gfp.experimentalZ) {\n            default:\n            case 0:\n                useOldS3 = true;\n                break;\n            case 1:\n                useOldS3 = (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) ? false\n                    : true;\n                break;\n            case 2:\n                useOldS3 = false;\n                break;\n            case 3:\n                bvl_a = 8;\n                snr_l_a = -1.75;\n                snr_l_b = -0.0125;\n                snr_s_a = -8.25;\n                snr_s_b = -2.25;\n                break;\n        }\n        gfc.ms_ener_ratio_old = .25;\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder.NORM_TYPE;\n        // the vbr header is long blocks\n\n        for (i = 0; i < 4; ++i) {\n            for (var j = 0; j < Encoder.CBANDS; ++j) {\n                gfc.nb_1[i][j] = 1e20;\n                gfc.nb_2[i][j] = 1e20;\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\n            }\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n                gfc.en[i].l[sb] = 1e20;\n                gfc.thm[i].l[sb] = 1e20;\n            }\n            for (var j = 0; j < 3; ++j) {\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    gfc.en[i].s[sb][j] = 1e20;\n                    gfc.thm[i].s[sb][j] = 1e20;\n                }\n                gfc.nsPsy.lastAttacks[i] = 0;\n            }\n            for (var j = 0; j < 9; j++)\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\n        }\n\n        /* init. for loudness approx. -jd 2001 mar 27 */\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\n\n        /*************************************************************************\n         * now compute the psychoacoustic model specific constants\n         ************************************************************************/\n        /* compute numlines, bo, bm, bval, bval_width, mld */\n\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\n            Encoder.BLKSIZE, gfc.scalefac_band.l, Encoder.BLKSIZE\n            / (2.0 * 576), Encoder.SBMAX_l);\n        /* compute the spreading function */\n        for (i = 0; i < gfc.npart_l; i++) {\n            var snr = snr_l_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n            if (gfc.numlines_l[i] > 0) {\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\n            } else {\n                gfc.rnumlines_l[i] = 0;\n            }\n        }\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\n            norm, useOldS3);\n\n        /* compute long block specific values, ATH and MINVAL */\n        var j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var x;\n\n            /* ATH */\n            x = Float.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE);\n                var level;\n                /*\n                 * ATH below 100 Hz constant, not further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_l[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_l[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            /*\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\n             * TODO: Further refinement of the shape of this hack.\n             */\n            x = -20 + bval[i] * 20 / 10;\n            if (x > 6) {\n                x = 100;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8.;\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\n        }\n\n        /************************************************************************\n         * do the same things for short blocks\n         ************************************************************************/\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\n            Encoder.BLKSIZE_s, gfc.scalefac_band.s, Encoder.BLKSIZE_s\n            / (2.0 * 192), Encoder.SBMAX_s);\n\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var x;\n            var snr = snr_s_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n\n            /* ATH */\n            x = Float.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE_s);\n                var level;\n                /* freq = Min(.1,freq); */\n                /*\n                 * ATH below 100 Hz constant, not\n                 * further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_s[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_s[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\n            if (bval[i] > 12) {\n                x *= 1 + Math.log(1 + x) * 3.1;\n            }\n            if (bval[i] < 12) {\n                x *= 1 + Math.log(1 - x) * 2.3;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8;\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\n                * gfc.numlines_s[i];\n        }\n\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\n            norm, useOldS3);\n\n        init_mask_add_max_values();\n        fft.init_fft(gfc);\n\n        /* setup temporal masking */\n        gfc.decay = Math.exp(-1.0 * LOG10\n            / (temporalmask_sustain_sec * sfreq / 192.0));\n\n        {\n            var msfix;\n            msfix = NS_MSFIX;\n            if ((gfp.exp_nspsytune & 2) != 0)\n                msfix = 1.0;\n            if (Math.abs(gfp.msfix) > 0.0)\n                msfix = gfp.msfix;\n            gfp.msfix = msfix;\n\n            /*\n             * spread only from npart_l bands. Normally, we use the spreading\n             * function to convolve from npart_l down to npart_l bands\n             */\n            for (var b = 0; b < gfc.npart_l; b++)\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\n        }\n\n        /*\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\n         * per second\n         */\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\n        gfc.ATH.adjust = 0.01;\n        /* minimum, for leading low loudness */\n        gfc.ATH.adjustLimit = 1.0;\n        /* on lead, allow adjust up to maximum */\n\n\n        if (gfp.ATHtype != -1) {\n            /* compute equal loudness weights (eql_w) */\n            var freq;\n            var freq_inc = gfp.out_samplerate\n                / (Encoder.BLKSIZE);\n            var eql_balance = 0.0;\n            freq = 0.0;\n            for (i = 0; i < Encoder.BLKSIZE / 2; ++i) {\n                /* convert ATH dB to relative power (not dB) */\n                /* to determine eql_w */\n                freq += freq_inc;\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\n                eql_balance += gfc.ATH.eql_w[i];\n            }\n            eql_balance = 1.0 / eql_balance;\n            for (i = Encoder.BLKSIZE / 2; --i >= 0;) { /* scale weights */\n                gfc.ATH.eql_w[i] *= eql_balance;\n            }\n        }\n        {\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\n                    ++j;\n                }\n            }\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\n                    ++j;\n                }\n            }\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder.BLKSIZE);\n            gfc.mld_cb_l[i] = stereo_demask(freq);\n            j += gfc.numlines_l[i];\n        }\n        for (; i < Encoder.CBANDS; ++i) {\n            gfc.mld_cb_l[i] = 1;\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder.BLKSIZE_s);\n            gfc.mld_cb_s[i] = stereo_demask(freq);\n            j += gfc.numlines_s[i];\n        }\n        for (; i < Encoder.CBANDS; ++i) {\n            gfc.mld_cb_s[i] = 1;\n        }\n        return 0;\n    }\n\n    /**\n     * Those ATH formulas are returning their minimum value for input = -1\n     */\n    function ATHformula_GB(f, value) {\n        /**\n         * <PRE>\n         *  from Painter & Spanias\n         *           modified by Gabriel Bouvigne to better fit the reality\n         *           ath =    3.640 * pow(f,-0.8)\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\n         *           + 0.6* 0.001 * pow(f,4.0);\n         *\n         *\n         *           In the past LAME was using the Painter &Spanias formula.\n         *           But we had some recurrent problems with HF content.\n         *           We measured real ATH values, and found the older formula\n         *           to be inaccurate in the higher part. So we made this new\n         *           formula and this solved most of HF problematic test cases.\n         *           The tradeoff is that in VBR mode it increases a lot the\n         *           bitrate.\n         * </PRE>\n         */\n\n        /*\n         * This curve can be adjusted according to the VBR scale: it adjusts\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\n         * formula for V0. This way the VBR bitrate is more balanced according\n         * to the -V value.\n         */\n\n        // the following Hack allows to ask for the lowest value\n        if (f < -.3)\n            f = 3410;\n\n        // convert to khz\n        f /= 1000;\n        f = Math.max(0.1, f);\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\n        return ath;\n    }\n\n    this.ATHformula = function (f, gfp) {\n        var ath;\n        switch (gfp.ATHtype) {\n            case 0:\n                ath = ATHformula_GB(f, 9);\n                break;\n            case 1:\n                // over sensitive, should probably be removed\n                ath = ATHformula_GB(f, -1);\n                break;\n            case 2:\n                ath = ATHformula_GB(f, 0);\n                break;\n            case 3:\n                // modification of GB formula by Roel\n                ath = ATHformula_GB(f, 1) + 6;\n                break;\n            case 4:\n                ath = ATHformula_GB(f, gfp.ATHcurve);\n                break;\n            default:\n                ath = ATHformula_GB(f, 0);\n                break;\n        }\n        return ath;\n    }\n\n}\n\n\n\nfunction Lame() {\n    var self = this;\n    var LAME_MAXALBUMART = (128 * 1024);\n\n    Lame.V9 = 410;\n    Lame.V8 = 420;\n    Lame.V7 = 430;\n    Lame.V6 = 440;\n    Lame.V5 = 450;\n    Lame.V4 = 460;\n    Lame.V3 = 470;\n    Lame.V2 = 480;\n    Lame.V1 = 490;\n    Lame.V0 = 500;\n\n    /* still there for compatibility */\n\n    Lame.R3MIX = 1000;\n    Lame.STANDARD = 1001;\n    Lame.EXTREME = 1002;\n    Lame.INSANE = 1003;\n    Lame.STANDARD_FAST = 1004;\n    Lame.EXTREME_FAST = 1005;\n    Lame.MEDIUM = 1006;\n    Lame.MEDIUM_FAST = 1007;\n\n    /**\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\n     * (LAME_MAXMP3BUFFER is now obsolete)\n     */\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\n    Lame.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\n\n    var ga;\n    var bs;\n    var p;\n    var qupvt;\n    var qu;\n    var psy = new PsyModel();\n    var vbr;\n    var ver;\n    var id3;\n    var mpglib;\n    this.enc = new Encoder();\n\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\n        ga = _ga;\n        bs = _bs;\n        p = _p;\n        qupvt = _qupvt;\n        qu = _qu;\n        vbr = _vbr;\n        ver = _ver;\n        id3 = _id3;\n        mpglib = _mpglib;\n        this.enc.setModules(bs, psy, qupvt, vbr);\n    }\n\n    /**\n     * PSY Model related stuff\n     */\n    function PSY() {\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust = 0.;\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust_short = 0.;\n        /* at transition from one scalefactor band to next */\n        /**\n         * Band weight long scalefactor bands.\n         */\n        this.bo_l_weight = new_float(Encoder.SBMAX_l);\n        /**\n         * Band weight short scalefactor bands.\n         */\n        this.bo_s_weight = new_float(Encoder.SBMAX_s);\n    }\n\n    function LowPassHighPass() {\n        this.lowerlimit = 0.;\n    }\n\n    function BandPass(bitrate, lPass) {\n        this.lowpass = lPass;\n    }\n\n    var LAME_ID = 0xFFF88E3B;\n\n    function lame_init_old(gfp) {\n        var gfc;\n\n        gfp.class_id = LAME_ID;\n\n        gfc = gfp.internal_flags = new LameInternalFlags();\n\n        /* Global flags. set defaults here for non-zero values */\n        /* see lame.h for description */\n        /*\n         * set integer values to -1 to mean that LAME will compute the best\n         * value, UNLESS the calling program as set it (and the value is no\n         * longer -1)\n         */\n\n        gfp.mode = MPEGMode.NOT_SET;\n        gfp.original = 1;\n        gfp.in_samplerate = 44100;\n        gfp.num_channels = 2;\n        gfp.num_samples = -1;\n\n        gfp.bWriteVbrTag = true;\n        gfp.quality = -1;\n        gfp.short_blocks = null;\n        gfc.subblock_gain = -1;\n\n        gfp.lowpassfreq = 0;\n        gfp.highpassfreq = 0;\n        gfp.lowpasswidth = -1;\n        gfp.highpasswidth = -1;\n\n        gfp.VBR = VbrMode.vbr_off;\n        gfp.VBR_q = 4;\n        gfp.ATHcurve = -1;\n        gfp.VBR_mean_bitrate_kbps = 128;\n        gfp.VBR_min_bitrate_kbps = 0;\n        gfp.VBR_max_bitrate_kbps = 0;\n        gfp.VBR_hard_min = 0;\n        gfc.VBR_min_bitrate = 1;\n        /* not 0 ????? */\n        gfc.VBR_max_bitrate = 13;\n        /* not 14 ????? */\n\n        gfp.quant_comp = -1;\n        gfp.quant_comp_short = -1;\n\n        gfp.msfix = -1;\n\n        gfc.resample_ratio = 1;\n\n        gfc.OldValue[0] = 180;\n        gfc.OldValue[1] = 180;\n        gfc.CurrentStep[0] = 4;\n        gfc.CurrentStep[1] = 4;\n        gfc.masking_lower = 1;\n        gfc.nsPsy.attackthre = -1;\n        gfc.nsPsy.attackthre_s = -1;\n\n        gfp.scale = -1;\n\n        gfp.athaa_type = -1;\n        gfp.ATHtype = -1;\n        /* default = -1 = set in lame_init_params */\n        gfp.athaa_loudapprox = -1;\n        /* 1 = flat loudness approx. (total energy) */\n        /* 2 = equal loudness curve */\n        gfp.athaa_sensitivity = 0.0;\n        /* no offset */\n        gfp.useTemporal = null;\n        gfp.interChRatio = -1;\n\n        /*\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\n         * ENCDELAY = internal encoder delay. And then we have to add\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\n         * this granule we need the previous granule for the first 288 samples\n         * (no problem), and the next granule for the next 288 samples (not\n         * possible if this is last granule). So we need to pad with 288 samples\n         * to make sure we can encode the 576 samples we are interested in.\n         */\n        gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\n        gfp.encoder_padding = 0;\n        gfc.mf_size = Encoder.ENCDELAY - Encoder.MDCTDELAY;\n        /*\n         * we pad input with this many 0's\n         */\n\n        gfp.findReplayGain = false;\n        gfp.decode_on_the_fly = false;\n\n        gfc.decode_on_the_fly = false;\n        gfc.findReplayGain = false;\n        gfc.findPeakSample = false;\n\n        gfc.RadioGain = 0;\n        gfc.AudiophileGain = 0;\n        gfc.noclipGainChange = 0;\n        gfc.noclipScale = -1.0;\n\n        gfp.preset = 0;\n\n        gfp.write_id3tag_automatic = true;\n        return 0;\n    }\n\n    this.lame_init = function () {\n        var gfp = new LameGlobalFlags();\n\n        var ret = lame_init_old(gfp);\n        if (ret != 0) {\n            return null;\n        }\n\n        gfp.lame_allocated_gfp = 1;\n        return gfp;\n    }\n\n    function filter_coef(x) {\n        if (x > 1.0)\n            return 0.0;\n        if (x <= 0.0)\n            return 1.0;\n\n        return Math.cos(Math.PI / 2 * x);\n    }\n\n    this.nearestBitrateFullIndex = function (bitrate) {\n        /* borrowed from DM abr presets */\n\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\n            96, 112, 128, 160, 192, 224, 256, 320];\n\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\n\n        /* We assume specified bitrate will be 320kbps */\n        upper_range_kbps = full_bitrate_table[16];\n        upper_range = 16;\n        lower_range_kbps = full_bitrate_table[16];\n        lower_range = 16;\n\n        /*\n         * Determine which significant bitrates the value specified falls\n         * between, if loop ends without breaking then we were correct above\n         * that the value was 320\n         */\n        for (var b = 0; b < 16; b++) {\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\n                upper_range_kbps = full_bitrate_table[b + 1];\n                upper_range = b + 1;\n                lower_range_kbps = full_bitrate_table[b];\n                lower_range = (b);\n                break;\n                /* We found upper range */\n            }\n        }\n\n        /* Determine which range the value specified is closer to */\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\n            return lower_range;\n        }\n        return upper_range;\n    }\n\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\n        /*\n         * Rules:\n         *\n         * - if possible, sfb21 should NOT be used\n         */\n        var suggested_samplefreq = 44100;\n\n        if (input_samplefreq >= 48000)\n            suggested_samplefreq = 48000;\n        else if (input_samplefreq >= 44100)\n            suggested_samplefreq = 44100;\n        else if (input_samplefreq >= 32000)\n            suggested_samplefreq = 32000;\n        else if (input_samplefreq >= 24000)\n            suggested_samplefreq = 24000;\n        else if (input_samplefreq >= 22050)\n            suggested_samplefreq = 22050;\n        else if (input_samplefreq >= 16000)\n            suggested_samplefreq = 16000;\n        else if (input_samplefreq >= 12000)\n            suggested_samplefreq = 12000;\n        else if (input_samplefreq >= 11025)\n            suggested_samplefreq = 11025;\n        else if (input_samplefreq >= 8000)\n            suggested_samplefreq = 8000;\n\n        if (lowpassfreq == -1)\n            return suggested_samplefreq;\n\n        if (lowpassfreq <= 15960)\n            suggested_samplefreq = 44100;\n        if (lowpassfreq <= 15250)\n            suggested_samplefreq = 32000;\n        if (lowpassfreq <= 11220)\n            suggested_samplefreq = 24000;\n        if (lowpassfreq <= 9970)\n            suggested_samplefreq = 22050;\n        if (lowpassfreq <= 7230)\n            suggested_samplefreq = 16000;\n        if (lowpassfreq <= 5420)\n            suggested_samplefreq = 12000;\n        if (lowpassfreq <= 4510)\n            suggested_samplefreq = 11025;\n        if (lowpassfreq <= 3970)\n            suggested_samplefreq = 8000;\n\n        if (input_samplefreq < suggested_samplefreq) {\n            /*\n             * choose a valid MPEG sample frequency above the input sample\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\n             */\n            if (input_samplefreq > 44100) {\n                return 48000;\n            }\n            if (input_samplefreq > 32000) {\n                return 44100;\n            }\n            if (input_samplefreq > 24000) {\n                return 32000;\n            }\n            if (input_samplefreq > 22050) {\n                return 24000;\n            }\n            if (input_samplefreq > 16000) {\n                return 22050;\n            }\n            if (input_samplefreq > 12000) {\n                return 16000;\n            }\n            if (input_samplefreq > 11025) {\n                return 12000;\n            }\n            if (input_samplefreq > 8000) {\n                return 11025;\n            }\n            return 8000;\n        }\n        return suggested_samplefreq;\n    }\n\n    /**\n     * convert samp freq in Hz to index\n     */\n    function SmpFrqIndex(sample_freq, gpf) {\n        switch (sample_freq) {\n            case 44100:\n                gpf.version = 1;\n                return 0;\n            case 48000:\n                gpf.version = 1;\n                return 1;\n            case 32000:\n                gpf.version = 1;\n                return 2;\n            case 22050:\n                gpf.version = 0;\n                return 0;\n            case 24000:\n                gpf.version = 0;\n                return 1;\n            case 16000:\n                gpf.version = 0;\n                return 2;\n            case 11025:\n                gpf.version = 0;\n                return 0;\n            case 12000:\n                gpf.version = 0;\n                return 1;\n            case 8000:\n                gpf.version = 0;\n                return 2;\n            default:\n                gpf.version = 0;\n                return -1;\n        }\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 8 to 320\n     */\n    function FindNearestBitrate(bRate, version, samplerate) {\n        /* MPEG-1 or MPEG-2 LSF */\n        if (samplerate < 16000)\n            version = 2;\n\n        var bitrate = Tables.bitrate_table[version][1];\n\n        for (var i = 2; i <= 14; i++) {\n            if (Tables.bitrate_table[version][i] > 0) {\n                if (Math.abs(Tables.bitrate_table[version][i] - bRate) < Math\n                        .abs(bitrate - bRate))\n                    bitrate = Tables.bitrate_table[version][i];\n            }\n        }\n        return bitrate;\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 32 to 448 kbps\n     * @param version\n     *            MPEG-1 or MPEG-2/2.5 LSF\n     */\n    function BitrateIndex(bRate, version, samplerate) {\n        /* convert bitrate in kbps to index */\n        if (samplerate < 16000)\n            version = 2;\n        for (var i = 0; i <= 14; i++) {\n            if (Tables.bitrate_table[version][i] > 0) {\n                if (Tables.bitrate_table[version][i] == bRate) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function optimum_bandwidth(lh, bitrate) {\n        /**\n         * <PRE>\n         *  Input:\n         *      bitrate     total bitrate in kbps\n         *\n         *   Output:\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\n         *      upperlimit: best highpass frequency limit for input filter in Hz\n         * </PRE>\n         */\n        var freq_map = [new BandPass(8, 2000),\n            new BandPass(16, 3700), new BandPass(24, 3900),\n            new BandPass(32, 5500), new BandPass(40, 7000),\n            new BandPass(48, 7500), new BandPass(56, 10000),\n            new BandPass(64, 11000), new BandPass(80, 13500),\n            new BandPass(96, 15100), new BandPass(112, 15600),\n            new BandPass(128, 17000), new BandPass(160, 17500),\n            new BandPass(192, 18600), new BandPass(224, 19400),\n            new BandPass(256, 19700), new BandPass(320, 20500)];\n\n        var table_index = self.nearestBitrateFullIndex(bitrate);\n        lh.lowerlimit = freq_map[table_index].lowpass;\n    }\n\n    function lame_init_params_ppflt(gfp) {\n        var gfc = gfp.internal_flags;\n        /***************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /***************************************************************/\n\n        var lowpass_band = 32;\n        var highpass_band = -1;\n\n        if (gfc.lowpass1 > 0) {\n            var minband = 999;\n            for (var band = 0; band <= 31; band++) {\n                var freq = (band / 31.0);\n                /* this band and above will be zeroed: */\n                if (freq >= gfc.lowpass2) {\n                    lowpass_band = Math.min(lowpass_band, band);\n                }\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\n                    minband = Math.min(minband, band);\n                }\n            }\n\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            if (minband == 999) {\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\n            } else {\n                gfc.lowpass1 = (minband - .75) / 31.0;\n            }\n            gfc.lowpass2 = lowpass_band / 31.0;\n        }\n\n        /*\n         * make sure highpass filter is within 90% of what the effective\n         * highpass frequency will be\n         */\n        if (gfc.highpass2 > 0) {\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\n                gfc.highpass1 = 0;\n                gfc.highpass2 = 0;\n                System.err.println(\"Warning: highpass filter disabled.  \"\n                    + \"highpass frequency too small\\n\");\n            }\n        }\n\n        if (gfc.highpass2 > 0) {\n            var maxband = -1;\n            for (var band = 0; band <= 31; band++) {\n                var freq = band / 31.0;\n                /* this band and below will be zereod */\n                if (freq <= gfc.highpass1) {\n                    highpass_band = Math.max(highpass_band, band);\n                }\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\n                    maxband = Math.max(maxband, band);\n                }\n            }\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            gfc.highpass1 = highpass_band / 31.0;\n            if (maxband == -1) {\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\n            } else {\n                gfc.highpass2 = (maxband + .75) / 31.0;\n            }\n        }\n\n        for (var band = 0; band < 32; band++) {\n            var fc1, fc2;\n            var freq = band / 31.0;\n            if (gfc.highpass2 > gfc.highpass1) {\n                fc1 = filter_coef((gfc.highpass2 - freq)\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\n            } else {\n                fc1 = 1.0;\n            }\n            if (gfc.lowpass2 > gfc.lowpass1) {\n                fc2 = filter_coef((freq - gfc.lowpass1)\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\n            } else {\n                fc2 = 1.0;\n            }\n            gfc.amp_filter[band] = (fc1 * fc2);\n        }\n    }\n\n    function lame_init_qval(gfp) {\n        var gfc = gfp.internal_flags;\n\n        switch (gfp.quality) {\n            default:\n            case 9: /* no psymodel, no noise shaping */\n                gfc.psymodel = 0;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 8:\n                gfp.quality = 7;\n            //$FALL-THROUGH$\n            case 7:\n                /*\n                 * use psymodel (for short block and m/s switching), but no noise\n                 * shapping\n                 */\n                gfc.psymodel = 1;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 6:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 5:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 4:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 3:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 2:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /* inner loop */\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 1:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 0:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /*\n                 * type 2 disabled because of it slowness, in favor of full outer\n                 * loop search\n                 */\n                gfc.full_outer_loop = 0;\n                /*\n                 * full outer loop search disabled because of audible distortions it\n                 * may generate rh 060629\n                 */\n                break;\n        }\n\n    }\n\n    function lame_init_bitstream(gfp) {\n        var gfc = gfp.internal_flags;\n        gfp.frameNum = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            id3.id3tag_write_v2(gfp);\n        }\n        /* initialize histogram data optionally used by frontend */\n\n        gfc.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\n        gfc.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\n\n        gfc.PeakSample = 0.0;\n\n        /* Write initial VBR Header to bitstream and init VBR data */\n        if (gfp.bWriteVbrTag)\n            vbr.InitVbrTag(gfp);\n    }\n\n    /********************************************************************\n     * initialize internal params based on data in gf (globalflags struct filled\n     * in by calling program)\n     *\n     * OUTLINE:\n     *\n     * We first have some complex code to determine bitrate, output samplerate\n     * and mode. It is complicated by the fact that we allow the user to set\n     * some or all of these parameters, and need to determine best possible\n     * values for the rest of them:\n     *\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\n     * set compression ratio user may have set a bitrate user may have set a\n     * output samplerate 4. set some options which depend on output samplerate\n     * 5. compute the actual compression ratio 6. set mode based on compression\n     * ratio\n     *\n     * The remaining code is much simpler - it just sets options based on the\n     * mode & compression ratio:\n     *\n     * set allow_diff_short based on mode select lowpass filter based on\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\n     * VBR modes disable VBR tag if it is not appropriate initialize the\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\n     * frames (based on a lot of data)\n     *\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\n     * code\n     *\n     * Finally, we set the algorithm flags based on the gfp.quality value\n     * lame_init_qval(gfp);\n     *\n     ********************************************************************/\n    this.lame_init_params = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        gfc.Class_ID = 0;\n        if (gfc.ATH == null)\n            gfc.ATH = new ATH();\n        if (gfc.PSY == null)\n            gfc.PSY = new PSY();\n        if (gfc.rgdata == null)\n            gfc.rgdata = new ReplayGain();\n\n        gfc.channels_in = gfp.num_channels;\n        if (gfc.channels_in == 1)\n            gfp.mode = MPEGMode.MONO;\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\n        gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n        if (gfp.mode == MPEGMode.MONO)\n            gfp.force_ms = false;\n        /*\n         * don't allow forced mid/side stereo for mono output\n         */\n\n        if (gfp.VBR == VbrMode.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\n            && gfp.brate == 0)\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\n\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_mtrh\n            || gfp.VBR == VbrMode.vbr_mt) {\n            /* these modes can handle free format condition */\n        } else {\n            gfp.free_format = false;\n            /* mode can't be mixed with free format */\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off && gfp.brate == 0) {\n            /* no bitrate or compression ratio specified, use 11.025 */\n            if (BitStream.EQ(gfp.compression_ratio, 0))\n                gfp.compression_ratio = 11.025;\n            /*\n             * rate to compress a CD down to exactly 128000 bps\n             */\n        }\n\n        /* find bitrate if user specify a compression ratio */\n        if (gfp.VBR == VbrMode.vbr_off && gfp.compression_ratio > 0) {\n\n            if (gfp.out_samplerate == 0)\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\n            /*\n             * round up with a margin of 3 %\n             */\n\n            /*\n             * choose a bitrate for the output samplerate which achieves\n             * specified compression ratio\n             */\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\n\n            /* we need the version for the bitrate table look up */\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n\n            if (!gfp.free_format) /*\n             * for non Free Format find the nearest allowed\n             * bitrate\n             */\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n        }\n\n        if (gfp.out_samplerate != 0) {\n            if (gfp.out_samplerate < 16000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    64);\n            } else if (gfp.out_samplerate < 32000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    160);\n            } else {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    32);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    320);\n            }\n        }\n\n        /****************************************************************/\n        /* if a filter has not been enabled, see if we should add one: */\n        /****************************************************************/\n        if (gfp.lowpassfreq == 0) {\n            var lowpass = 16000.;\n\n            switch (gfp.VBR) {\n                case VbrMode.vbr_off:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.brate);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode.vbr_abr:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode.vbr_rh:\n                {\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\n                        15600, 14900, 12500, 10000, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                    break;\n                }\n                default:\n                {\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\n                        15500, 14500, 12500, 9500, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                }\n            }\n            if (gfp.mode == MPEGMode.MONO\n                && (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr))\n                lowpass *= 1.5;\n\n            gfp.lowpassfreq = lowpass | 0;\n        }\n\n        if (gfp.out_samplerate == 0) {\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\n            }\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\n                gfp.in_samplerate);\n        }\n\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\n\n        if (gfp.VBR == VbrMode.vbr_off) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.brate);\n        }\n        if (gfp.VBR == VbrMode.vbr_abr) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /*\n         * do not compute ReplayGain values and do not find the peak sample if\n         * we can't store them\n         */\n        if (!gfp.bWriteVbrTag) {\n            gfp.findReplayGain = false;\n            gfp.decode_on_the_fly = false;\n            gfc.findPeakSample = false;\n        }\n        gfc.findReplayGain = gfp.findReplayGain;\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\n\n        if (gfc.decode_on_the_fly)\n            gfc.findPeakSample = true;\n\n        if (gfc.findReplayGain) {\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\n                gfp.internal_flags = null;\n                return -6;\n            }\n        }\n\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\n            if (gfc.hip != null) {\n                mpglib.hip_decode_exit(gfc.hip);\n            }\n            gfc.hip = mpglib.hip_decode_init();\n        }\n\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\n        /*\n         * Number of granules per frame\n         */\n        gfp.framesize = 576 * gfc.mode_gr;\n        gfp.encoder_delay = Encoder.ENCDELAY;\n\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\n\n        /**\n         * <PRE>\n         *  sample freq       bitrate     compression ratio\n         *     [kHz]      [kbps/channel]   for 16 bit input\n         *     44.1            56               12.6\n         *     44.1            64               11.025\n         *     44.1            80                8.82\n         *     22.05           24               14.7\n         *     22.05           32               11.025\n         *     22.05           40                8.82\n         *     16              16               16.0\n         *     16              24               10.667\n         * </PRE>\n         */\n        /**\n         * <PRE>\n         *  For VBR, take a guess at the compression_ratio.\n         *  For example:\n         *\n         *    VBR_q    compression     like\n         *     -        4.4         320 kbps/44 kHz\n         *   0...1      5.5         256 kbps/44 kHz\n         *     2        7.3         192 kbps/44 kHz\n         *     4        8.8         160 kbps/44 kHz\n         *     6       11           128 kbps/44 kHz\n         *     9       14.7          96 kbps\n         *\n         *  for lower bitrates, downsample with --resample\n         * </PRE>\n         */\n        switch (gfp.VBR) {\n            case VbrMode.vbr_mt:\n            case VbrMode.vbr_rh:\n            case VbrMode.vbr_mtrh:\n            {\n                /* numbers are a bit strange, but they determine the lowpass value */\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\n                    15, 16.5];\n                gfp.compression_ratio = cmp[gfp.VBR_q];\n            }\n                break;\n            case VbrMode.vbr_abr:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n                break;\n            default:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.brate);\n                break;\n        }\n\n        /*\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\n         * channel). If mode has not been set, then select J-STEREO\n         */\n        if (gfp.mode == MPEGMode.NOT_SET) {\n            gfp.mode = MPEGMode.JOINT_STEREO;\n        }\n\n        /* apply user driven high pass filter */\n        if (gfp.highpassfreq > 0) {\n            gfc.highpass1 = 2. * gfp.highpassfreq;\n\n            if (gfp.highpasswidth >= 0)\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\n            else\n            /* 0% above on default */\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\n\n            gfc.highpass1 /= gfp.out_samplerate;\n            gfc.highpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.highpass1 = 0;\n            gfc.highpass2 = 0;\n        }\n        /* apply user driven low pass filter */\n        if (gfp.lowpassfreq > 0) {\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\n            if (gfp.lowpasswidth >= 0) {\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\n                    gfc.lowpass1 = 0;\n            } else { /* 0% below on default */\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\n            }\n            gfc.lowpass1 /= gfp.out_samplerate;\n            gfc.lowpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.lowpass1 = 0;\n            gfc.lowpass2 = 0;\n        }\n\n        /**********************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /**********************************************************************/\n        lame_init_params_ppflt(gfp);\n        /*******************************************************\n         * samplerate and bitrate index\n         *******************************************************/\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n        if (gfc.samplerate_index < 0) {\n            gfp.internal_flags = null;\n            return -1;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off) {\n            if (gfp.free_format) {\n                gfc.bitrate_index = 0;\n            } else {\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                if (gfc.bitrate_index <= 0) {\n                    gfp.internal_flags = null;\n                    return -1;\n                }\n            }\n        } else {\n            gfc.bitrate_index = 1;\n        }\n\n        /* for CBR, we will write an \"info\" tag. */\n\n        if (gfp.analysis)\n            gfp.bWriteVbrTag = false;\n\n        /* some file options not allowed if output is: not specified or stdout */\n        if (gfc.pinfo != null)\n            gfp.bWriteVbrTag = false;\n        /* disable Xing VBR tag */\n\n        bs.init_bit_stream_w(gfc);\n\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\n        for (var i = 0; i < Encoder.SBMAX_l + 1; i++)\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\n\n        for (var i = 0; i < Encoder.PSFB21 + 1; i++) {\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\n                / Encoder.PSFB21;\n            var start = gfc.scalefac_band.l[21] + i * size;\n            gfc.scalefac_band.psfb21[i] = start;\n        }\n        gfc.scalefac_band.psfb21[Encoder.PSFB21] = 576;\n\n        for (var i = 0; i < Encoder.SBMAX_s + 1; i++)\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\n\n        for (var i = 0; i < Encoder.PSFB12 + 1; i++) {\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                / Encoder.PSFB12;\n            var start = gfc.scalefac_band.s[12] + i * size;\n            gfc.scalefac_band.psfb12[i] = start;\n        }\n        gfc.scalefac_band.psfb12[Encoder.PSFB12] = 192;\n        /* determine the mean bitrate for main data */\n        if (gfp.version == 1) /* MPEG 1 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\n        else\n        /* MPEG 2 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\n\n        if (gfp.error_protection)\n            gfc.sideinfo_len += 2;\n\n        lame_init_bitstream(gfp);\n\n        gfc.Class_ID = LAME_ID;\n\n        {\n            var k;\n\n            for (k = 0; k < 19; k++)\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\n\n            if (gfp.ATHtype == -1)\n                gfp.ATHtype = 4;\n        }\n\n        switch (gfp.VBR) {\n\n            case VbrMode.vbr_mt:\n                gfp.VBR = VbrMode.vbr_mtrh;\n            //$FALL-THROUGH$\n            case VbrMode.vbr_mtrh:\n            {\n                if (gfp.useTemporal == null) {\n                    gfp.useTemporal = false;\n                    /* off by default for this VBR mode */\n                }\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n                /**\n                 * <PRE>\n                 *   The newer VBR code supports only a limited\n                 *     subset of quality levels:\n                 *     9-5=5 are the same, uses x^3/4 quantization\n                 *   4-0=0 are the same  5 plus best huffman divide code\n                 * </PRE>\n                 */\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n                if (gfp.quality < 5)\n                    gfp.quality = 0;\n                if (gfp.quality > 5)\n                    gfp.quality = 5;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\n                break;\n\n            }\n            case VbrMode.vbr_rh:\n            {\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                /*\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\n                 * that by setting a minimum quality level, actually level 6 does\n                 * it. down to level 6\n                 */\n                if (gfp.quality > 6)\n                    gfp.quality = 6;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\n                break;\n            }\n\n            default: /* cbr/abr */\n            {\n                var vbrmode;\n\n                /*\n                 * no sfb21 extra with CBR code\n                 */\n                gfc.sfb21_extra = false;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                vbrmode = gfp.VBR;\n                if (vbrmode == VbrMode.vbr_off)\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\n                /* second, set parameters depending on bitrate */\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\n                gfp.VBR = vbrmode;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                if (vbrmode == VbrMode.vbr_off) {\n                    gfc.iteration_loop = new CBRNewIterationLoop(qu);\n                } else {\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\n                }\n                break;\n            }\n        }\n        /* initialize default values common for all modes */\n\n        if (gfp.VBR != VbrMode.vbr_off) { /* choose a min/max bitrate for VBR */\n            /* if the user didn't specify VBR_max_bitrate: */\n            gfc.VBR_min_bitrate = 1;\n            /*\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\n             */\n            gfc.VBR_max_bitrate = 14;\n            /*\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\n             */\n            if (gfp.out_samplerate < 16000)\n                gfc.VBR_max_bitrate = 8;\n            /* default: allow 64 kbps (MPEG-2.5) */\n            if (gfp.VBR_min_bitrate_kbps != 0) {\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_min_bitrate < 0)\n                    return -1;\n            }\n            if (gfp.VBR_max_bitrate_kbps != 0) {\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_max_bitrate < 0)\n                    return -1;\n            }\n            gfp.VBR_min_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\n            gfp.VBR_max_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\n            gfp.VBR_mean_bitrate_kbps = Math.min(\n                Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n            gfp.VBR_mean_bitrate_kbps = Math.max(\n                Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /* just another daily changing developer switch */\n        if (gfp.tune) {\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\n        }\n\n        /* initialize internal qval settings */\n        lame_init_qval(gfp);\n        /*\n         * automatic ATH adjustment on\n         */\n        if (gfp.athaa_type < 0)\n            gfc.ATH.useAdjust = 3;\n        else\n            gfc.ATH.useAdjust = gfp.athaa_type;\n\n        /* initialize internal adaptive ATH settings -jd */\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\n            / -10.0);\n\n        if (gfp.short_blocks == null) {\n            gfp.short_blocks = ShortBlock.short_block_allowed;\n        }\n\n        /*\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\n         * regular stereo mode unless they are coupled (same type in both\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\n         * use uncoupled short blocks, so lets turn them off until we decide how\n         * to handle this. No other encoders allow uncoupled short blocks, even\n         * though it is in the standard.\n         */\n        /*\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\n         */\n        if (gfp.short_blocks == ShortBlock.short_block_allowed\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\n            gfp.short_blocks = ShortBlock.short_block_coupled;\n        }\n\n        if (gfp.quant_comp < 0)\n            gfp.quant_comp = 1;\n        if (gfp.quant_comp_short < 0)\n            gfp.quant_comp_short = 0;\n\n        if (gfp.msfix < 0)\n            gfp.msfix = 0;\n\n        /* select psychoacoustic model */\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\n\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\n            gfp.internal_flags.nsPsy.attackthre = PsyModel.NSATTACKTHRE;\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel.NSATTACKTHRE_S;\n\n\n        if (gfp.scale < 0)\n            gfp.scale = 1;\n\n        if (gfp.ATHtype < 0)\n            gfp.ATHtype = 4;\n\n        if (gfp.ATHcurve < 0)\n            gfp.ATHcurve = 4;\n\n        if (gfp.athaa_loudapprox < 0)\n            gfp.athaa_loudapprox = 2;\n\n        if (gfp.interChRatio < 0)\n            gfp.interChRatio = 0;\n\n        if (gfp.useTemporal == null)\n            gfp.useTemporal = true;\n        /* on by default */\n\n        /*\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\n         * Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         */\n        gfc.slot_lag = gfc.frac_SpF = 0;\n        if (gfp.VBR == VbrMode.vbr_off)\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\n\n        qupvt.iteration_init(gfp);\n        psy.psymodel_init(gfp);\n        return 0;\n    }\n\n    function update_inbuffer_size(gfc, nsamples) {\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\n            gfc.in_buffer_0 = new_float(nsamples);\n            gfc.in_buffer_1 = new_float(nsamples);\n            gfc.in_buffer_nsamples = nsamples;\n        }\n    }\n\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\n        var gfc = gfp.internal_flags;\n        var buffer = new_short_n([2, 1152]);\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\n\n        /*\n         * we always add POSTDELAY=288 padding to make sure granule with real\n         * data can be complety decoded (because of 50% overlap with next\n         * granule\n         */\n        var end_padding;\n        var frames_left;\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder.POSTDELAY;\n        var mf_needed = calcNeeded(gfp);\n\n        /* Was flush already called? */\n        if (gfc.mf_samples_to_encode < 1) {\n            return 0;\n        }\n        mp3count = 0;\n\n        if (gfp.in_samplerate != gfp.out_samplerate) {\n            /*\n             * delay due to resampling; needs to be fixed, if resampling code\n             * gets changed\n             */\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\n        }\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\n        if (end_padding < 576)\n            end_padding += gfp.framesize;\n        gfp.encoder_padding = end_padding;\n\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\n\n        /*\n         * send in a frame of 0 padding until all internal sample buffers are\n         * flushed\n         */\n        while (frames_left > 0 && imp3 >= 0) {\n            var bunch = mf_needed - gfc.mf_size;\n            var frame_num = gfp.frameNum;\n\n            bunch *= gfp.in_samplerate;\n            bunch /= gfp.out_samplerate;\n            if (bunch > 1152)\n                bunch = 1152;\n            if (bunch < 1)\n                bunch = 1;\n\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\n\n            /* if user specifed buffer size = 0, dont check size */\n            if (mp3buffer_size == 0)\n                mp3buffer_size_remaining = 0;\n\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\n\n            mp3bufferPos += imp3;\n            mp3count += imp3;\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\n        }\n        /*\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\n         * calling it more than once in a row.\n         */\n        gfc.mf_samples_to_encode = 0;\n\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\n        bs.flush_bitstream(gfp);\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n            mp3buffer_size_remaining, 1);\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n        mp3bufferPos += imp3;\n        mp3count += imp3;\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            /* write a id3 tag to the bitstream */\n            id3.id3tag_write_v1(gfp);\n\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n                mp3buffer_size_remaining, 0);\n\n            if (imp3 < 0) {\n                return imp3;\n            }\n            mp3count += imp3;\n        }\n        return mp3count;\n    };\n\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        update_inbuffer_size(gfc, nsamples);\n\n        in_buffer[0] = gfc.in_buffer_0;\n        in_buffer[1] = gfc.in_buffer_1;\n\n        /* make a copy of input buffer, changing type to sample_t */\n        for (var i = 0; i < nsamples; i++) {\n            in_buffer[0][i] = buffer_l[i];\n            if (gfc.channels_in > 1)\n                in_buffer[1][i] = buffer_r[i];\n        }\n\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\n    }\n\n    function calcNeeded(gfp) {\n        var mf_needed = Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET;\n        /*\n         * amount needed for FFT\n         */\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\n\n        return mf_needed;\n    }\n\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var mp3size = 0, ret, i, ch, mf_needed;\n        var mp3out;\n        var mfbuf = [null, null];\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        /* copy out any tags that may have been written into bitstream */\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\n        if (mp3out < 0)\n            return mp3out;\n        /* not enough buffer space */\n        mp3bufPos += mp3out;\n        mp3size += mp3out;\n\n        in_buffer[0] = buffer_l;\n        in_buffer[1] = buffer_r;\n\n        /* Apply user defined re-scaling */\n\n        /* user selected scaling of the samples */\n        if (BitStream.NEQ(gfp.scale, 0) && BitStream.NEQ(gfp.scale, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale;\n                if (gfc.channels_out == 2)\n                    in_buffer[1][i] *= gfp.scale;\n            }\n        }\n\n        /* user selected scaling of the channel 0 (left) samples */\n        if (BitStream.NEQ(gfp.scale_left, 0)\n            && BitStream.NEQ(gfp.scale_left, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale_left;\n            }\n        }\n\n        /* user selected scaling of the channel 1 (right) samples */\n        if (BitStream.NEQ(gfp.scale_right, 0)\n            && BitStream.NEQ(gfp.scale_right, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[1][i] *= gfp.scale_right;\n            }\n        }\n\n        /* Downsample to Mono if 2 channels in and 1 channel out */\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\n                in_buffer[1][i] = 0.0;\n            }\n        }\n\n        mf_needed = calcNeeded(gfp);\n\n        mfbuf[0] = gfc.mfbuf[0];\n        mfbuf[1] = gfc.mfbuf[1];\n\n        var in_bufferPos = 0;\n        while (nsamples > 0) {\n            var in_buffer_ptr = [null, null];\n            var n_in = 0;\n            /* number of input samples processed with fill_buffer */\n            var n_out = 0;\n            /* number of samples output with fill_buffer */\n            /* n_in <> n_out if we are resampling */\n\n            in_buffer_ptr[0] = in_buffer[0];\n            in_buffer_ptr[1] = in_buffer[1];\n            /* copy in new samples into mfbuf, with resampling */\n            var inOut = new InOut();\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\n                inOut);\n            n_in = inOut.n_in;\n            n_out = inOut.n_out;\n\n            /* compute ReplayGain of resampled input if requested */\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                    return -6;\n\n            /* update in_buffer counters */\n            nsamples -= n_in;\n            in_bufferPos += n_in;\n            if (gfc.channels_out == 2)\n                ;// in_bufferPos += n_in;\n\n            /* update mfbuf[] counters */\n            gfc.mf_size += n_out;\n\n            /*\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\n             * have to reinitialize it here when that happened.\n             */\n            if (gfc.mf_samples_to_encode < 1) {\n                gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\n            }\n            gfc.mf_samples_to_encode += n_out;\n\n            if (gfc.mf_size >= mf_needed) {\n                /* encode the frame. */\n                /* mp3buf = pointer to current location in buffer */\n                /* mp3buf_size = size of original mp3 output buffer */\n                /* = 0 if we should not worry about the */\n                /* buffer size because calling program is */\n                /* to lazy to compute it */\n                /* mp3size = size of data written to buffer so far */\n                /* mp3buf_size-mp3size = amount of space avalable */\n\n                var buf_size = mp3buf_size - mp3size;\n                if (mp3buf_size == 0)\n                    buf_size = 0;\n\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\n                    mp3bufPos, buf_size);\n\n                if (ret < 0)\n                    return ret;\n                mp3bufPos += ret;\n                mp3size += ret;\n\n                /* shift out old samples */\n                gfc.mf_size -= gfp.framesize;\n                gfc.mf_samples_to_encode -= gfp.framesize;\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    for (i = 0; i < gfc.mf_size; i++)\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\n            }\n        }\n\n        return mp3size;\n    }\n\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\n            mp3bufPos, mp3buf_size);\n        gfp.frameNum++;\n        return ret;\n    }\n\n    function InOut() {\n        this.n_in = 0;\n        this.n_out = 0;\n    }\n\n\n    function NumUsed() {\n        this.num_used = 0;\n    }\n\n    /**\n     * Greatest common divisor.\n     * <p>\n     * Joint work of Euclid and M. Hendry\n     */\n    function gcd(i, j) {\n        return j != 0 ? gcd(j, i % j) : i;\n    }\n\n    /**\n     * Resampling via FIR filter, blackman window.\n     */\n    function blackman(x, fcn, l) {\n        /*\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\n         */\n        var wcn = (Math.PI * fcn);\n\n        x /= l;\n        if (x < 0)\n            x = 0;\n        if (x > 1)\n            x = 1;\n        var x2 = x - .5;\n\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\n        if (Math.abs(x2) < 1e-9)\n            return (wcn / Math.PI);\n        else\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\n    }\n\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\n        var gfc = gfp.internal_flags;\n        var i, j = 0, k;\n        /* number of convolution functions to pre-compute */\n        var bpc = gfp.out_samplerate\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\n        if (bpc > LameInternalFlags.BPC)\n            bpc = LameInternalFlags.BPC;\n\n        var intratio = (Math.abs(gfc.resample_ratio\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\n        var fcn = 1.00 / gfc.resample_ratio;\n        if (fcn > 1.00)\n            fcn = 1.00;\n        var filter_l = 31;\n        if (0 == filter_l % 2)\n            --filter_l;\n        /* must be odd */\n        filter_l += intratio;\n        /* unless resample_ratio=int, it must be even */\n\n        var BLACKSIZE = filter_l + 1;\n        /* size of data needed for FIR */\n\n        if (gfc.fill_buffer_resample_init == 0) {\n            gfc.inbuf_old[0] = new_float(BLACKSIZE);\n            gfc.inbuf_old[1] = new_float(BLACKSIZE);\n            for (i = 0; i <= 2 * bpc; ++i)\n                gfc.blackfilt[i] = new_float(BLACKSIZE);\n\n            gfc.itime[0] = 0;\n            gfc.itime[1] = 0;\n\n            /* precompute blackman filter coefficients */\n            for (j = 0; j <= 2 * bpc; j++) {\n                var sum = 0.;\n                var offset = (j - bpc) / (2. * bpc);\n                for (i = 0; i <= filter_l; i++)\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\n                        filter_l);\n                for (i = 0; i <= filter_l; i++)\n                    gfc.blackfilt[j][i] /= sum;\n            }\n            gfc.fill_buffer_resample_init = 1;\n        }\n\n        var inbuf_old = gfc.inbuf_old[ch];\n\n        /* time of j'th element in inbuf = itime + j/ifreq; */\n        /* time of k'th element in outbuf = j/ofreq */\n        for (k = 0; k < desired_len; k++) {\n            var time0;\n            var joff;\n\n            time0 = k * gfc.resample_ratio;\n            /* time of k'th output sample */\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\n\n            /* check if we need more input data */\n            if ((filter_l + j - filter_l / 2) >= len)\n                break;\n\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\n            /* but we want a window centered at time0. */\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\n\n            /* find the closest precomputed window for this offset: */\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\n            var xvalue = 0.;\n            for (i = 0; i <= filter_l; ++i) {\n                var j2 = i + j - filter_l / 2;\n                var y;\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\n                + j2];\n                xvalue += y * gfc.blackfilt[joff][i];\n            }\n            outbuf[outbufPos + k] = xvalue;\n        }\n\n        /* k = number of samples added to outbuf */\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\n\n        /* how many samples of input data were used: */\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\n\n        /*\n         * adjust our input time counter. Incriment by the number of samples\n         * used, then normalize so that next output sample is at time 0, next\n         * input buffer is at time itime[ch]\n         */\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\n\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\n        if (num_used.num_used >= BLACKSIZE) {\n            for (i = 0; i < BLACKSIZE; i++)\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\n                - BLACKSIZE];\n        } else {\n            /* shift in num_used.num_used samples into inbuf_old */\n            var n_shift = BLACKSIZE - num_used.num_used;\n            /*\n             * number of samples to\n             * shift\n             */\n\n            /*\n             * shift n_shift samples by num_used.num_used, to make room for the\n             * num_used new samples\n             */\n            for (i = 0; i < n_shift; ++i)\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\n\n            /* shift in the num_used.num_used samples */\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\n                inbuf_old[i] = inbuf[in_bufferPos + j];\n\n        }\n        return k;\n        /* return the number samples created at the new samplerate */\n    }\n\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\n        var gfc = gfp.internal_flags;\n\n        /* copy in new samples into mfbuf, with resampling if necessary */\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var numUsed = new NumUsed();\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\n                    numUsed, ch);\n                io.n_in = numUsed.num_used;\n            }\n        } else {\n            io.n_out = Math.min(gfp.framesize, nsamples);\n            io.n_in = io.n_out;\n            for (var i = 0; i < io.n_out; ++i) {\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\n                if (gfc.channels_out == 2)\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\n            }\n        }\n    }\n\n}\n\n\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    }\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    }\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    }\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag();\n    var ver = new Version();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.out_samplerate = samplerate;//fix by xiangyuecn 2018-12-6 01:48:12 64kbps以下可能无声音，手动控制输出码率\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\n//fix 精简\nL3Side.SFBMAX = (Encoder.SBMAX_s * 3);\n//testFullLength();\nlamejs.Mp3Encoder = Mp3Encoder;\n}\n//fs=require('fs');\nlamejs();\n\n\nRecorder.lamejs=lamejs;\n\n//end3 ****结束copy lamejs*****\n})();","/*\n录音\nhttps://github.com/xiangyuecn/Recorder\n*/\n(function(factory){\n\tfactory(window);\n\t//umd returnExports.js\n\tif(typeof(define)=='function' && define.amd){\n\t\tdefine(function(){\n\t\t\treturn Recorder;\n\t\t});\n\t};\n\tif(typeof(module)=='object' && module.exports){\n\t\tmodule.exports=Recorder;\n\t};\n}(function(window){\n\"use strict\";\n\n//兼容环境\nvar LM=\"2020-5-17 08:21:54\";\nvar NOOP=function(){};\n//end 兼容环境 ****从以下开始copy源码*****\n\nvar Recorder=function(set){\n\treturn new initFn(set);\n};\n//是否已经打开了录音，所有工作都已经准备好了，就等接收音频数据了\nRecorder.IsOpen=function(){\n\tvar stream=Recorder.Stream;\n\tif(stream){\n\t\tvar tracks=stream.getTracks&&stream.getTracks()||stream.audioTracks||[];\n\t\tvar track=tracks[0];\n\t\tif(track){\n\t\t\tvar state=track.readyState;\n\t\t\treturn state==\"live\"||state==track.LIVE;\n\t\t};\n\t};\n\treturn false;\n};\n/*H5录音时的AudioContext缓冲大小。会影响H5录音时的onProcess调用速率，相对于AudioContext.sampleRate=48000时，4096接近12帧/s，调节此参数可生成比较流畅的回调动画。\n\t取值256, 512, 1024, 2048, 4096, 8192, or 16384\n\t注意，取值不能过低，2048开始不同浏览器可能回调速率跟不上造成音质问题。\n\t一般无需调整，调整后需要先close掉已打开的录音，再open时才会生效。\n*/\nRecorder.BufferSize=4096;\n//销毁已持有的所有全局资源，当要彻底移除Recorder时需要显式的调用此方法\nRecorder.Destroy=function(){\n\tconsole.log(\"Recorder Destroy\");\n\tfor(var k in DestroyList){\n\t\tDestroyList[k]();\n\t};\n};\nvar DestroyList={};\n//登记一个需要销毁全局资源的处理方法\nRecorder.BindDestroy=function(key,call){\n\tDestroyList[key]=call;\n};\n//判断浏览器是否支持录音，随时可以调用。注意：仅仅是检测浏览器支持情况，不会判断和调起用户授权，不会判断是否支持特定格式录音。\nRecorder.Support=function(){\n\tvar AC=window.AudioContext;\n\tif(!AC){\n\t\tAC=window.webkitAudioContext;\n\t};\n\tif(!AC){\n\t\treturn false;\n\t};\n\tvar scope=navigator.mediaDevices||{};\n\tif(!scope.getUserMedia){\n\t\tscope=navigator;\n\t\tscope.getUserMedia||(scope.getUserMedia=scope.webkitGetUserMedia||scope.mozGetUserMedia||scope.msGetUserMedia);\n\t};\n\tif(!scope.getUserMedia){\n\t\treturn false;\n\t};\n\t\n\tRecorder.Scope=scope;\n\tif(!Recorder.Ctx||Recorder.Ctx.state==\"closed\"){\n\t\t//不能反复构造，低版本number of hardware contexts reached maximum (6)\n\t\tRecorder.Ctx=new AC();\n\t\t\n\t\tRecorder.BindDestroy(\"Ctx\",function(){\n\t\t\tvar ctx=Recorder.Ctx;\n\t\t\tctx&&ctx.close&&ctx.close();\n\t\t});\n\t};\n\treturn true;\n};\n/*初始化H5音频采集连接，因为Stream是全局的，Safari上断开后就无法再次进行连接使用，表现为静音，因此使用全部使用全局处理避免调用到disconnect；全局处理也有利于屏蔽底层细节，start时无需再调用底层接口，提升兼容、可靠性。*/\nvar Connect=function(){\n\tvar ctx=Recorder.Ctx,stream=Recorder.Stream;\n\tvar media=stream._m=ctx.createMediaStreamSource(stream);\n\tvar process=stream._p=(ctx.createScriptProcessor||ctx.createJavaScriptNode).call(ctx,Recorder.BufferSize,1,1);//单声道，省的数据处理复杂\n\t\n\tmedia.connect(process);\n\tprocess.connect(ctx.destination);\n\t\n\tvar calls=stream._call;\n\tprocess.onaudioprocess=function(e){\n\t\tfor(var k0 in calls){//has item\n\t\t\tvar o=e.inputBuffer.getChannelData(0);//块是共享的，必须复制出来\n\t\t\tvar size=o.length;\n\t\t\t\n\t\t\tvar pcm=new Int16Array(size);\n\t\t\tvar sum=0;\n\t\t\tfor(var j=0;j<size;j++){//floatTo16BitPCM \n\t\t\t\tvar s=Math.max(-1,Math.min(1,o[j]));\n\t\t\t\ts=s<0?s*0x8000:s*0x7FFF;\n\t\t\t\tpcm[j]=s;\n\t\t\t\tsum+=Math.abs(s);\n\t\t\t};\n\t\t\t\n\t\t\tfor(var k in calls){\n\t\t\t\tcalls[k](pcm,sum);\n\t\t\t};\n\t\t\t\n\t\t\treturn;\n\t\t};\n\t};\n};\nvar Disconnect=function(){\n\tvar stream=Recorder.Stream;\n\tif(stream._m){\n\t\tstream._m.disconnect();\n\t\tstream._p.disconnect();\n\t\tstream._p.onaudioprocess=stream._p=stream._m=null;\n\t};\n};\n\n/*对pcm数据的采样率进行转换\npcmDatas: [[Int16,...]] pcm片段列表\npcmSampleRate:48000 pcm数据的采样率\nnewSampleRate:16000 需要转换成的采样率，newSampleRate>=pcmSampleRate时不会进行任何处理，小于时会进行重新采样\nprevChunkInfo:{} 可选，上次调用时的返回值，用于连续转换，本次调用将从上次结束位置开始进行处理。或可自行定义一个ChunkInfo从pcmDatas指定的位置开始进行转换\noption:{ 可选，配置项\n\t\tframeSize:123456 帧大小，每帧的PCM Int16的数量，采样率转换后的pcm长度为frameSize的整数倍，用于连续转换。目前仅在mp3格式时才有用，frameSize取值为1152，这样编码出来的mp3时长和pcm的时长完全一致，否则会因为mp3最后一帧录音不够填满时添加填充数据导致mp3的时长变长。\n\t\tframeType:\"\" 帧类型，一般为rec.set.type，提供此参数时无需提供frameSize，会自动使用最佳的值给frameSize赋值，目前仅支持mp3=1152(MPEG1 Layer3的每帧采采样数)，其他类型=1。\n\t\t\t以上两个参数用于连续转换时使用，最多使用一个，不提供时不进行帧的特殊处理，提供时必须同时提供prevChunkInfo才有作用。最后一段数据处理时无需提供帧大小以便输出最后一丁点残留数据。\n\t}\n\n返回ChunkInfo:{\n\t//可定义，从指定位置开始转换到结尾\n\tindex:0 pcmDatas已处理到的索引\n\toffset:0.0 已处理到的index对应的pcm中的偏移的下一个位置\n\t\n\t//仅作为返回值\n\tframeNext:null||[Int16,...] 下一帧的部分数据，frameSize设置了的时候才可能会有\n\tsampleRate:16000 结果的采样率，<=newSampleRate\n\tdata:[Int16,...] 转换后的PCM结果；如果是连续转换，并且pcmDatas中并没有新数据时，data的长度可能为0\n}\n*/\nRecorder.SampleData=function(pcmDatas,pcmSampleRate,newSampleRate,prevChunkInfo,option){\n\tprevChunkInfo||(prevChunkInfo={});\n\tvar index=prevChunkInfo.index||0;\n\tvar offset=prevChunkInfo.offset||0;\n\t\n\tvar frameNext=prevChunkInfo.frameNext||[];\n\toption||(option={});\n\tvar frameSize=option.frameSize||1;\n\tif(option.frameType){\n\t\tframeSize=option.frameType==\"mp3\"?1152:1;\n\t};\n\t\n\tvar size=0;\n\tfor(var i=index;i<pcmDatas.length;i++){\n\t\tsize+=pcmDatas[i].length;\n\t};\n\tsize=Math.max(0,size-Math.floor(offset));\n\t\n\t//采样 https://www.cnblogs.com/blqw/p/3782420.html\n\tvar step=pcmSampleRate/newSampleRate;\n\tif(step>1){//新采样高于录音采样不处理，省去了插值处理，直接抽样\n\t\tsize=Math.floor(size/step);\n\t}else{\n\t\tstep=1;\n\t\tnewSampleRate=pcmSampleRate;\n\t};\n\t\n\tsize+=frameNext.length;\n\tvar res=new Int16Array(size);\n\tvar idx=0;\n\t//添加上一次不够一帧的剩余数据\n\tfor(var i=0;i<frameNext.length;i++){\n\t\tres[idx]=frameNext[i];\n\t\tidx++;\n\t};\n\t//处理数据\n\tfor (var nl=pcmDatas.length;index<nl;index++) {\n\t\tvar o=pcmDatas[index];\n\t\tvar i=offset,il=o.length;\n\t\twhile(i<il){\n\t\t\t//res[idx]=o[Math.round(i)]; 直接简单抽样\n\t\t\t\n\t\t\t//https://www.cnblogs.com/xiaoqi/p/6993912.html\n\t\t\t//当前点=当前点+到后面一个点之间的增量，音质比直接简单抽样好些\n\t\t\tvar before = Math.floor(i);\n\t\t\tvar after = Math.ceil(i);\n\t\t\tvar atPoint = i - before;\n\t\t\tres[idx]=o[before]+(o[after]-o[before])*atPoint;\n\t\t\t\n\t\t\tidx++;\n\t\t\ti+=step;//抽样\n\t\t};\n\t\toffset=i-il;\n\t};\n\t//帧处理\n\tframeNext=null;\n\tvar frameNextSize=res.length%frameSize;\n\tif(frameNextSize>0){\n\t\tvar u8Pos=(res.length-frameNextSize)*2;\n\t\tframeNext=new Int16Array(res.buffer.slice(u8Pos));\n\t\tres=new Int16Array(res.buffer.slice(0,u8Pos));\n\t};\n\t\n\treturn {\n\t\tindex:index\n\t\t,offset:offset\n\t\t\n\t\t,frameNext:frameNext\n\t\t,sampleRate:newSampleRate\n\t\t,data:res\n\t};\n};\n\n\n/*计算音量百分比的一个方法\npcmAbsSum: pcm Int16所有采样的绝对值的和\npcmLength: pcm长度\n返回值：0-100，主要当做百分比用\n注意：这个不是分贝，因此没用volume当做名称*/\nRecorder.PowerLevel=function(pcmAbsSum,pcmLength){\n\t/*计算音量 https://blog.csdn.net/jody1989/article/details/73480259\n\t更高灵敏度算法:\n\t\t限定最大感应值10000\n\t\t\t线性曲线：低音量不友好\n\t\t\t\tpower/10000*100 \n\t\t\t对数曲线：低音量友好，但需限定最低感应值\n\t\t\t\t(1+Math.log10(power/10000))*100\n\t*/\n\tvar power=(pcmAbsSum/pcmLength) || 0;//NaN\n\tvar level;\n\tif(power<1251){//1250的结果10%，更小的音量采用线性取值\n\t\tlevel=Math.round(power/1250*10);\n\t}else{\n\t\tlevel=Math.round(Math.min(100,Math.max(0,(1+Math.log(power/10000)/Math.log(10))*100)));\n\t};\n\treturn level;\n};\n\n\nvar ID=0;\nfunction initFn(set){\n\tthis.id=++ID;\n\t\n\t//如果开启了流量统计，这里将发送一个图片请求\n\tRecorder.Traffic&&Recorder.Traffic();\n\t\n\t\n\tvar o={\n\t\ttype:\"mp3\" //输出类型：mp3,wav，wav输出文件尺寸超大不推荐使用，但mp3编码支持会导致js文件超大，如果不需支持mp3可以使js文件大幅减小\n\t\t,bitRate:16 //比特率 wav:16或8位，MP3：8kbps 1k/s，8kbps 2k/s 录音文件很小\n\t\t\n\t\t,sampleRate:16000 //采样率，wav格式大小=sampleRate*时间；mp3此项对低比特率有影响，高比特率几乎无影响。\n\t\t\t\t\t//wav任意值，mp3取值范围：48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000\n\t\t\t\t\t//采样率参考https://www.cnblogs.com/devin87/p/mp3-recorder.html\n\t\t\n\t\t,onProcess:NOOP //fn(buffers,powerLevel,bufferDuration,bufferSampleRate,newBufferIdx,asyncEnd) buffers=[[Int16,...],...]：缓冲的PCM数据，为从开始录音到现在的所有pcm片段；powerLevel：当前缓冲的音量级别0-100，bufferDuration：已缓冲时长，bufferSampleRate：缓冲使用的采样率（当type支持边录边转码(Worker)时，此采样率和设置的采样率相同，否则不一定相同）；newBufferIdx:本次回调新增的buffer起始索引；asyncEnd:fn() 如果onProcess是异步的(返回值为true时)，处理完成时需要调用此回调，如果不是异步的请忽略此参数，此方法回调时必须是真异步（不能真异步时需用setTimeout包裹）。onProcess返回值：如果返回true代表开启异步模式，在某些大量运算的场合异步是必须的，必须在异步处理完成时调用asyncEnd(不能真异步时需用setTimeout包裹)，在onProcess执行后新增的buffer会全部替换成空数组，因此本回调开头应立即将newBufferIdx到本次回调结尾位置的buffer全部保存到另外一个数组内，处理完成后写回buffers中本次回调的结尾位置。\n\t\t\n\t\t//*******高级设置******\n\t\t//,disableEnvInFix:false 内部参数，禁用设备卡顿时音频输入丢失补偿功能\n\t\t\n\t\t//,takeoffEncodeChunk:NOOP //fn(chunkBytes) chunkBytes=[Uint8,...]：实时编码环境下接管编码器输出，当编码器实时编码出一块有效的二进制音频数据时实时回调此方法；参数为二进制的Uint8Array，就是编码出来的音频数据片段，所有的chunkBytes拼接在一起即为完整音频。本实现的想法最初由QQ2543775048提出\n\t\t\t\t//当提供此回调方法时，将接管编码器的数据输出，编码器内部将放弃存储生成的音频数据；环境要求比较苛刻：如果当前环境不支持实时编码处理，将在open时直接走fail逻辑\n\t\t\t\t//因此提供此回调后调用stop方法将无法获得有效的音频数据，因为编码器内没有音频数据，因此stop时返回的blob将是一个字节长度为0的blob\n\t\t\t\t//目前只有mp3格式实现了实时编码，在支持实时处理的环境中将会实时的将编码出来的mp3片段通过此方法回调，所有的chunkBytes拼接到一起即为完整的mp3，此种拼接的结果比mock方法实时生成的音质更加，因为天然避免了首尾的静默\n\t\t\t\t//目前除mp3外其他格式不可以提供此回调，提供了将在open时直接走fail逻辑\n\t};\n\t\n\tfor(var k in set){\n\t\to[k]=set[k];\n\t};\n\tthis.set=o;\n\t\n\tthis._S=9;//stop同步锁，stop可以阻止open过程中还未运行的start\n};\n//同步锁，控制对Stream的竞争；用于close时中断异步的open；一个对象open如果变化了都要阻止close，Stream的控制权交个新的对象\nRecorder.Sync={/*open*/O:9,/*close*/C:9};\n\nRecorder.prototype=initFn.prototype={\n\t//打开录音资源True(),False(msg,isUserNotAllow)，需要调用close。注意：此方法是异步的；一般使用时打开，用完立即关闭；可重复调用，可用来测试是否能录音\n\topen:function(True,False){\n\t\tvar This=this;\n\t\tTrue=True||NOOP;\n\t\tFalse=False||NOOP;\n\t\t\n\t\tvar ok=function(){\n\t\t\tTrue();\n\t\t\t\n\t\t\tThis._SO=0;//解除stop对open中的start调用的阻止\n\t\t};\n\t\tvar codeFail=function(code,msg){\n\t\t\tif(/Permission|Allow/i.test(code)){\n\t\t\t\tFalse(\"用户拒绝了录音权限\",true);\n\t\t\t}else if(window.isSecureContext===false){\n\t\t\t\tFalse(\"无权录音(需https)\");\n\t\t\t}else if(/Found/i.test(code)){//可能是非安全环境导致的没有设备\n\t\t\t\tFalse(msg+\"，无可用麦克风\");\n\t\t\t}else{\n\t\t\t\tFalse(msg);\n\t\t\t};\n\t\t};\n\t\t\n\t\t//同步锁\n\t\tvar Lock=Recorder.Sync;\n\t\tvar lockOpen=++Lock.O,lockClose=Lock.C;\n\t\tThis._O=This._O_=lockOpen;//记住当前的open，如果变化了要阻止close，这里假定了新对象已取代当前对象并且不再使用\n\t\tThis._SO=This._S;//记住open过程中的stop，中途任何stop调用后都不能继续open中的start\n\t\tvar lockFail=function(){\n\t\t\t//允许多次open，但不允许任何一次close，或者自身已经调用了关闭\n\t\t\tif(lockClose!=Lock.C || !This._O){\n\t\t\t\tvar err=\"open被取消\";\n\t\t\t\tif(lockOpen==Lock.O){\n\t\t\t\t\t//无新的open，已经调用了close进行取消，此处应让上次的close明确生效\n\t\t\t\t\tThis.close();\n\t\t\t\t}else{\n\t\t\t\t\terr=\"open被中断\";\n\t\t\t\t};\n\t\t\t\tFalse(err);\n\t\t\t\treturn true;\n\t\t\t};\n\t\t};\n\t\t\n\t\t\n\t\t//如果已打开就不要再打开了\n\t\tif(Recorder.IsOpen()){\n\t\t\tok();\n\t\t\treturn;\n\t\t};\n\t\tif(!Recorder.Support()){\n\t\t\tcodeFail(\"\",\"此浏览器不支持录音\");\n\t\t\treturn;\n\t\t};\n\t\t\n\t\t//环境配置检查\n\t\tvar checkMsg=This.envCheck({envName:\"H5\",canProcess:true});\n\t\tif(checkMsg){\n\t\t\tFalse(\"不能录音：\"+checkMsg);\n\t\t\treturn;\n\t\t};\n\t\t\n\t\t//请求权限，如果从未授权，一般浏览器会弹出权限请求弹框\n\t\tvar f1=function(stream){\n\t\t\tRecorder.Stream=stream;\n\t\t\tstream._call={};//此时is open，但并未connect，是允许绑定接收数据的\n\t\t\tif(lockFail())return;\n\t\t\t\n\t\t\t//https://github.com/xiangyuecn/Recorder/issues/14 获取到的track.readyState!=\"live\"，刚刚回调时可能是正常的，但过一下可能就被关掉了，原因不明。延迟一下保证真异步。对正常浏览器不影响\n\t\t\tsetTimeout(function(){\n\t\t\t\tif(lockFail())return;\n\t\t\t\t\n\t\t\t\tif(Recorder.IsOpen()){\n\t\t\t\t\tConnect();\n\t\t\t\t\tok();\n\t\t\t\t}else{\n\t\t\t\t\tFalse(\"录音功能无效：无音频流\");\n\t\t\t\t};\n\t\t\t},100);\n\t\t};\n\t\tvar f2=function(e){\n\t\t\tvar code=e.name||e.message||e.code+\":\"+e;\n\t\t\tconsole.error(e);\n\t\t\t\n\t\t\tcodeFail(code,\"无法录音：\"+code);\n\t\t};\n\t\tvar pro=Recorder.Scope.getUserMedia({audio:true},f1,f2);\n\t\tif(pro&&pro.then){\n\t\t\tpro.then(f1)[True&&\"catch\"](f2); //fix 关键字，保证catch压缩时保持字符串形式\n\t\t};\n\t}\n\t//关闭释放录音资源\n\t,close:function(call){\n\t\tcall=call||NOOP;\n\t\t\n\t\tvar This=this;\n\t\tThis._stop();\n\t\t\n\t\tvar Lock=Recorder.Sync;\n\t\tThis._O=0;\n\t\tif(This._O_!=Lock.O){\n\t\t\t//唯一资源Stream的控制权已交给新对象，这里不能关闭。此处在每次都弹权限的浏览器内可能存在泄漏，新对象被拒绝权限可能不会调用close，忽略这种不处理\n\t\t\tconsole.warn(\"close被忽略\");\n\t\t\tcall();\n\t\t\treturn;\n\t\t};\n\t\tLock.C++;//获得控制权\n\t\t\n\t\tvar stream=Recorder.Stream;\n\t\tif(stream){\n\t\t\tDisconnect();\n\t\t\t\n\t\t\tvar tracks=stream.getTracks&&stream.getTracks()||stream.audioTracks||[];\n\t\t\tfor(var i=0;i<tracks.length;i++){\n\t\t\t\tvar track=tracks[i];\n\t\t\t\ttrack.stop&&track.stop();\n\t\t\t};\n\t\t\tstream.stop&&stream.stop();\n\t\t};\n\t\t\n\t\tRecorder.Stream=0;\n\t\tcall();\n\t}\n\t\n\t\n\t\n\t\n\t\n\t/*模拟一段录音数据，后面可以调用stop进行编码，需提供pcm数据[1,2,3...]，pcm的采样率*/\n\t,mock:function(pcmData,pcmSampleRate){\n\t\tvar This=this;\n\t\tThis._stop();//清理掉已有的资源\n\t\t\n\t\tThis.isMock=1;\n\t\tThis.mockEnvInfo=null;\n\t\tThis.buffers=[pcmData];\n\t\tThis.recSize=pcmData.length;\n\t\tThis.srcSampleRate=pcmSampleRate;\n\t\treturn This;\n\t}\n\t,envCheck:function(envInfo){//平台环境下的可用性检查，任何时候都可以调用检查，返回errMsg:\"\"正常，\"失败原因\"\n\t\t//envInfo={envName:\"H5\",canProcess:true}\n\t\tvar errMsg,This=this,set=This.set;\n\t\t\n\t\t//编码器检查环境下配置是否可用\n\t\tif(!errMsg){\n\t\t\tif(This[set.type+\"_envCheck\"]){//编码器已实现环境检查\n\t\t\t\terrMsg=This[set.type+\"_envCheck\"](envInfo,set);\n\t\t\t}else{//未实现检查的手动检查配置是否有效\n\t\t\t\tif(set.takeoffEncodeChunk){\n\t\t\t\t\terrMsg=set.type+\"类型不支持设置takeoffEncodeChunk\";\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\t\n\t\treturn errMsg||\"\";\n\t}\n\t,envStart:function(mockEnvInfo,sampleRate){//平台环境相关的start调用\n\t\tvar This=this,set=This.set;\n\t\tThis.isMock=mockEnvInfo?1:0;//非H5环境需要启用mock，并提供envCheck需要的环境信息\n\t\tThis.mockEnvInfo=mockEnvInfo;\n\t\tThis.buffers=[];//数据缓冲\n\t\tThis.recSize=0;//数据大小\n\t\t\n\t\tThis.envInLast=0;//envIn接收到最后录音内容的时间\n\t\tThis.envInFirst=0;//envIn接收到的首个录音内容的录制时间\n\t\tThis.envInFix=0;//补偿的总时间\n\t\tThis.envInFixTs=[];//补偿计数列表\n\t\t\n\t\tset.sampleRate=Math.min(sampleRate,set.sampleRate);//engineCtx需要提前确定最终的采样率\n\t\tThis.srcSampleRate=sampleRate;\n\t\t\n\t\tThis.engineCtx=0;\n\t\t//此类型有边录边转码(Worker)支持\n\t\tif(This[set.type+\"_start\"]){\n\t\t\tvar engineCtx=This.engineCtx=This[set.type+\"_start\"](set);\n\t\t\tif(engineCtx){\n\t\t\t\tengineCtx.pcmDatas=[];\n\t\t\t\tengineCtx.pcmSize=0;\n\t\t\t};\n\t\t};\n\t}\n\t,envResume:function(){//和平台环境无关的恢复录音\n\t\t//重新开始计数\n\t\tthis.envInFixTs=[];\n\t}\n\t,envIn:function(pcm,sum){//和平台环境无关的pcm[Int16]输入\n\t\tvar This=this,set=This.set,engineCtx=This.engineCtx;\n\t\tvar bufferSampleRate=This.srcSampleRate;\n\t\tvar size=pcm.length;\n\t\tvar powerLevel=Recorder.PowerLevel(sum,size);\n\t\t\n\t\tvar buffers=This.buffers;\n\t\tvar bufferFirstIdx=buffers.length;//之前的buffer都是经过onProcess处理好的，不允许再修改\n\t\tbuffers.push(pcm);\n\t\t\n\t\t//有engineCtx时会被覆盖，这里保存一份\n\t\tvar buffersThis=buffers;\n\t\tvar bufferFirstIdxThis=bufferFirstIdx;\n\t\t\n\t\t//卡顿丢失补偿：因为设备很卡的时候导致H5接收到的数据量不够造成播放时候变速，结果比实际的时长要短，此处保证了不会变短，但不能修复丢失的音频数据造成音质变差。当前算法采用输入时间侦测下一帧是否需要添加补偿帧，需要(6次输入||超过1秒)以上才会开始侦测，如果滑动窗口内丢失超过1/3就会进行补偿\n\t\tvar now=Date.now();\n\t\tvar pcmTime=Math.round(size/bufferSampleRate*1000);\n\t\tThis.envInLast=now;\n\t\tif(This.buffers.length==1){//记下首个录音数据的录制时间\n\t\t\tThis.envInFirst=now-pcmTime;\n\t\t};\n\t\tvar envInFixTs=This.envInFixTs;\n\t\tenvInFixTs.splice(0,0,{t:now,d:pcmTime});\n\t\t//保留3秒的计数滑动窗口，另外超过3秒的停顿不补偿\n\t\tvar tsInStart=now,tsPcm=0;\n\t\tfor(var i=0;i<envInFixTs.length;i++){\n\t\t\tvar o=envInFixTs[i];\n\t\t\tif(now-o.t>3000){\n\t\t\t\tenvInFixTs.length=i;\n\t\t\t\tbreak;\n\t\t\t};\n\t\t\ttsInStart=o.t;\n\t\t\ttsPcm+=o.d;\n\t\t};\n\t\t//达到需要的数据量，开始侦测是否需要补偿\n\t\tvar tsInPrev=envInFixTs[1];\n\t\tvar tsIn=now-tsInStart;\n\t\tvar lost=tsIn-tsPcm;\n\t\tif( lost>tsIn/3 && (tsInPrev&&tsIn>1000 || envInFixTs.length>=6) ){\n\t\t\t//丢失过多，开始执行补偿\n\t\t\tvar addTime=now-tsInPrev.t-pcmTime;//距离上次输入丢失这么多ms\n\t\t\tif(addTime>pcmTime/5){//丢失超过本帧的1/5\n\t\t\t\tvar fixOpen=!set.disableEnvInFix;\n\t\t\t\tconsole.warn(\"[\"+now+\"]\"+(fixOpen?\"\":\"未\")+\"补偿\"+addTime+\"ms\");\n\t\t\t\tThis.envInFix+=addTime;\n\t\t\t\t\n\t\t\t\t//用静默进行补偿\n\t\t\t\tif(fixOpen){\n\t\t\t\t\tvar addPcm=new Int16Array(addTime*bufferSampleRate/1000);\n\t\t\t\t\tsize+=addPcm.length;\n\t\t\t\t\tbuffers.push(addPcm);\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\t\n\t\t\n\t\tvar sizeOld=This.recSize,addSize=size;\n\t\tvar bufferSize=sizeOld+addSize;\n\t\tThis.recSize=bufferSize;//此值在onProcess后需要修正，可能新数据被修改\n\t\t\n\t\t\n\t\t//此类型有边录边转码(Worker)支持，开启实时转码\n\t\tif(engineCtx){\n\t\t\t//转换成set的采样率\n\t\t\tvar chunkInfo=Recorder.SampleData(buffers,bufferSampleRate,set.sampleRate,engineCtx.chunkInfo);\n\t\t\tengineCtx.chunkInfo=chunkInfo;\n\t\t\t\n\t\t\tsizeOld=engineCtx.pcmSize;\n\t\t\taddSize=chunkInfo.data.length;\n\t\t\tbufferSize=sizeOld+addSize;\n\t\t\tengineCtx.pcmSize=bufferSize;//此值在onProcess后需要修正，可能新数据被修改\n\t\t\t\n\t\t\tbuffers=engineCtx.pcmDatas;\n\t\t\tbufferFirstIdx=buffers.length;\n\t\t\tbuffers.push(chunkInfo.data);\n\t\t\tbufferSampleRate=chunkInfo.sampleRate;\n\t\t};\n\t\t\n\t\tvar duration=Math.round(bufferSize/bufferSampleRate*1000);\n\t\tvar bufferNextIdx=buffers.length;\n\t\tvar bufferNextIdxThis=buffersThis.length;\n\t\t\n\t\t//允许异步处理buffer数据\n\t\tvar asyncEnd=function(){\n\t\t\t//重新计算size，异步的早已减去添加的，同步的需去掉本次添加的然后重新计算\n\t\t\tvar num=asyncBegin?0:-addSize;\n\t\t\tvar hasClear=buffers[0]==null;\n\t\t\tfor(var i=bufferFirstIdx;i<bufferNextIdx;i++){\n\t\t\t\tvar buffer=buffers[i];\n\t\t\t\tif(buffer==null){//已被主动释放内存，比如长时间实时传输录音时\n\t\t\t\t\thasClear=1;\n\t\t\t\t}else{\n\t\t\t\t\tnum+=buffer.length;\n\t\t\t\t\t\n\t\t\t\t\t//推入后台边录边转码\n\t\t\t\t\tif(engineCtx&&buffer.length){\n\t\t\t\t\t\tThis[set.type+\"_encode\"](engineCtx,buffer);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\t//同步清理This.buffers，不管buffers到底清了多少个，buffersThis是使用不到的进行全清\n\t\t\tif(hasClear && engineCtx){\n\t\t\t\tvar i=bufferFirstIdxThis;\n\t\t\t\tif(buffersThis[0]){\n\t\t\t\t\ti=0;\n\t\t\t\t};\n\t\t\t\tfor(;i<bufferNextIdxThis;i++){\n\t\t\t\t\tbuffersThis[i]=null;\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\t//统计修改后的size，如果异步发生clear要原样加回来，同步的无需操作\n\t\t\tif(hasClear){\n\t\t\t\tnum=asyncBegin?addSize:0;\n\t\t\t\t\n\t\t\t\tbuffers[0]=null;//彻底被清理\n\t\t\t};\n\t\t\tif(engineCtx){\n\t\t\t\tengineCtx.pcmSize+=num;\n\t\t\t}else{\n\t\t\t\tThis.recSize+=num;\n\t\t\t};\n\t\t};\n\t\t//实时回调处理数据，允许修改或替换上次回调以来新增的数据 ，但是不允许修改已处理过的，不允许增删第一维数组 ，允许将第二维数组任意修改替换成空数组也可以\n\t\tvar asyncBegin=set.onProcess(buffers,powerLevel,duration,bufferSampleRate,bufferFirstIdx,asyncEnd);\n\t\t\n\t\tif(asyncBegin===true){\n\t\t\t//开启了异步模式，onProcess已接管buffers新数据，立即清空，避免出现未处理的数据\n\t\t\tvar hasClear=0;\n\t\t\tfor(var i=bufferFirstIdx;i<bufferNextIdx;i++){\n\t\t\t\tif(buffers[i]==null){//已被主动释放内存，比如长时间实时传输录音时 ，但又要开启异步模式，此种情况是非法的\n\t\t\t\t\thasClear=1;\n\t\t\t\t}else{\n\t\t\t\t\tbuffers[i]=new Int16Array(0);\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tif(hasClear){\n\t\t\t\tconsole.warn(\"未进入异步前不能清除buffers\");\n\t\t\t}else{\n\t\t\t\t//还原size，异步结束后再统计仅修改后的size，如果发生clear要原样加回来\n\t\t\t\tif(engineCtx){\n\t\t\t\t\tengineCtx.pcmSize-=addSize;\n\t\t\t\t}else{\n\t\t\t\t\tThis.recSize-=addSize;\n\t\t\t\t};\n\t\t\t};\n\t\t}else{\n\t\t\tasyncEnd();\n\t\t};\n\t}\n\t\n\t\n\t\n\t\n\t//开始录音，需先调用open；只要open成功时，调用此方法是安全的，如果未open强行调用导致的内部错误将不会有任何提示，stop时自然能得到错误\n\t,start:function(){\n\t\tif(!Recorder.IsOpen()){\n\t\t\tconsole.error(\"未open\");\n\t\t\treturn;\n\t\t};\n\t\tconsole.log(\"[\"+Date.now()+\"]Start\");\n\t\t\n\t\tvar This=this,set=This.set,ctx=Recorder.Ctx;\n\t\tThis._stop();\n\t\tThis.state=0;\n\t\tThis.envStart(null,ctx.sampleRate);\n\t\t\n\t\t//检查open过程中stop是否已经调用过\n\t\tif(This._SO&&This._SO+1!=This._S){//上面调用过一次 _stop\n\t\t\t//open未完成就调用了stop，此种情况终止start。也应尽量避免出现此情况\n\t\t\tconsole.warn(\"start被中断\");\n\t\t\treturn;\n\t\t};\n\t\tThis._SO=0;\n\t\t\n\t\tvar end=function(){\n\t\t\tThis.state=1;\n\t\t\tThis.resume();\n\t\t};\n\t\tif(ctx.state==\"suspended\"){\n\t\t\tctx.resume().then(function(){\n\t\t\t\tconsole.log(\"ctx resume\");\n\t\t\t\tend();\n\t\t\t});\n\t\t}else{\n\t\t\tend();\n\t\t};\n\t}\n\t/*暂停录音*/\n\t,pause:function(){\n\t\tvar This=this;\n\t\tif(This.state){\n\t\t\tThis.state=2;\n\t\t\tdelete Recorder.Stream._call[This.id];\n\t\t};\n\t}\n\t/*恢复录音*/\n\t,resume:function(){\n\t\tvar This=this;\n\t\tif(This.state){\n\t\t\tThis.state=1;\n\t\t\tThis.envResume();\n\t\t\t\n\t\t\tRecorder.Stream._call[This.id]=function(pcm,sum){\n\t\t\t\tif(This.state==1){\n\t\t\t\t\tThis.envIn(pcm,sum);\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n\t\n\t\n\t\n\t\n\t,_stop:function(keepEngine){\n\t\tvar This=this,set=This.set;\n\t\tif(!This.isMock){\n\t\t\tThis._S++;\n\t\t};\n\t\tif(This.state){\n\t\t\tThis.pause();\n\t\t\tThis.state=0;\n\t\t};\n\t\tif(!keepEngine && This[set.type+\"_stop\"]){\n\t\t\tThis[set.type+\"_stop\"](This.engineCtx);\n\t\t\tThis.engineCtx=0;\n\t\t};\n\t}\n\t/*\n\t结束录音并返回录音数据blob对象\n\t\tTrue(blob,duration) blob：录音数据audio/mp3|wav格式\n\t\t\t\t\t\t\tduration：录音时长，单位毫秒\n\t\tFalse(msg)\n\t\tautoClose:false 可选，是否自动调用close，默认为false\n\t*/\n\t,stop:function(True,False,autoClose){\n\t\tvar This=this,set=This.set,t1;\n\t\tconsole.log(\"[\"+Date.now()+\"]Stop \"+(This.envInLast?This.envInLast-This.envInFirst+\"ms 补\"+This.envInFix+\"ms\":\"-\"));\n\t\t\n\t\tvar end=function(){\n\t\t\tThis._stop();//彻底关掉engineCtx\n\t\t\tif(autoClose){\n\t\t\t\tThis.close();\n\t\t\t};\n\t\t};\n\t\tvar err=function(msg){\n\t\t\tFalse&&False(msg);\n\t\t\tend();\n\t\t};\n\t\tvar ok=function(blob,duration){\n\t\t\tconsole.log(\"[\"+Date.now()+\"]结束 编码\"+(Date.now()-t1)+\"ms 音频\"+duration+\"ms/\"+blob.size+\"b\");\n\t\t\tif(set.takeoffEncodeChunk){//接管了输出，此时blob长度为0\n\t\t\t\tconsole.warn(\"启用takeoffEncodeChunk后stop返回的blob长度为0不提供音频数据\");\n\t\t\t}else if(blob.size<Math.max(100,duration/2)){//1秒小于0.5k？\n\t\t\t\terr(\"生成的\"+set.type+\"无效\");\n\t\t\t\treturn;\n\t\t\t};\n\t\t\tTrue&&True(blob,duration);\n\t\t\tend();\n\t\t};\n\t\tif(!This.isMock){\n\t\t\tif(!This.state){\n\t\t\t\terr(\"未开始录音\");\n\t\t\t\treturn;\n\t\t\t};\n\t\t\tThis._stop(true);\n\t\t};\n\t\tvar size=This.recSize;\n\t\tif(!size){\n\t\t\terr(\"未采集到录音\");\n\t\t\treturn;\n\t\t};\n\t\tif(!This.buffers[0]){\n\t\t\terr(\"音频被释放\");\n\t\t\treturn;\n\t\t};\n\t\tif(!This[set.type]){\n\t\t\terr(\"未加载\"+set.type+\"编码器\");\n\t\t\treturn;\n\t\t};\n\t\t\n\t\t//环境配置检查，此处仅针对mock调用，因为open已经检查过了\n\t\tif(This.isMock){\n\t\t\tvar checkMsg=This.envCheck(This.mockEnvInfo||{envName:\"mock\",canProcess:false});//没有提供环境信息的mock时没有onProcess回调\n\t\t\tif(checkMsg){\n\t\t\t\terr(\"录音错误：\"+checkMsg);\n\t\t\t\treturn;\n\t\t\t};\n\t\t};\n\t\t\n\t\t//此类型有边录边转码(Worker)支持\n\t\tvar engineCtx=This.engineCtx;\n\t\tif(This[set.type+\"_complete\"]&&engineCtx){\n\t\t\tvar duration=Math.round(engineCtx.pcmSize/set.sampleRate*1000);//采用后的数据长度和buffers的长度可能微小的不一致，是采样率连续转换的精度问题\n\t\t\t\n\t\t\tt1=Date.now();\n\t\t\tThis[set.type+\"_complete\"](engineCtx,function(blob){\n\t\t\t\tok(blob,duration);\n\t\t\t},err);\n\t\t\treturn;\n\t\t};\n\t\t\n\t\t//标准UI线程转码，调整采样率\n\t\tt1=Date.now();\n\t\tvar chunk=Recorder.SampleData(This.buffers,This.srcSampleRate,set.sampleRate);\n\t\t\n\t\tset.sampleRate=chunk.sampleRate;\n\t\tvar res=chunk.data;\n\t\tvar duration=Math.round(res.length/set.sampleRate*1000);\n\t\t\n\t\tconsole.log(\"采样\"+size+\"->\"+res.length+\" 花:\"+(Date.now()-t1)+\"ms\");\n\t\t\n\t\tsetTimeout(function(){\n\t\t\tt1=Date.now();\n\t\t\tThis[set.type](res,function(blob){\n\t\t\t\tok(blob,duration);\n\t\t\t},function(msg){\n\t\t\t\terr(msg);\n\t\t\t});\n\t\t});\n\t}\n\n};\n\nif(window.Recorder){\n\twindow.Recorder.Destroy();\n};\nwindow.Recorder=Recorder;\n\n//end ****copy源码结束*****\nRecorder.LM=LM;\n\n//流量统计用1像素图片地址，设置为空将不参与统计\nRecorder.TrafficImgUrl=\"//ia.51.la/go1?id=20469973&pvFlag=1\";\nRecorder.Traffic=function(){\n\tvar imgUrl=Recorder.TrafficImgUrl;\n\tif(imgUrl){\n\t\tvar data=Recorder.Traffic;\n\t\tvar idf=location.href.replace(/#.*/,\"\");\n\t\t\n\t\tif(imgUrl.indexOf(\"//\")==0){\n\t\t\t//给url加上http前缀，如果是file协议下，不加前缀没法用\n\t\t\tif(/^https:/i.test(idf)){\n\t\t\t\timgUrl=\"https:\"+imgUrl;\n\t\t\t}else{\n\t\t\t\timgUrl=\"http:\"+imgUrl;\n\t\t\t};\n\t\t};\n\t\t\n\t\tif(!data[idf]){\n\t\t\tdata[idf]=1;\n\t\t\t\n\t\t\tvar img=new Image();\n\t\t\timg.src=imgUrl;\n\t\t\tconsole.log(\"Traffic Analysis Image: Recorder.TrafficImgUrl=\"+Recorder.TrafficImgUrl);\n\t\t};\n\t};\n};\n\n}));"],"sourceRoot":""}